{
  "stats": {
    "suites": 200,
    "tests": 2400,
    "passes": 2400,
    "pending": 0,
    "failures": 0,
    "start": "2020-11-05T15:01:10.599Z",
    "end": "2020-11-05T15:01:48.987Z",
    "duration": 38388,
    "testsRegistered": 2400,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9e1bcfed-c118-418e-9170-6c10b8db6838",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6638935d-6b2f-45f1-910a-079381af02af",
          "title": "Test 10Lines game: 10, 25 -  0",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 260,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "50870ccc-15ef-430c-b149-251e36db8d00",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "06a9994e-c1f0-4f2c-8c1e-c787b6f3f61a",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "16a3ee09-e7bb-471d-9754-b89c5b7f2924",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "d4c38476-25b3-4db8-acca-e94a7842c9b5",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "3fe10d6c-7d33-4761-90aa-dfd7ff728d5f",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "17d8bce6-3536-41ee-95b2-2d9e7622ba1b",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "fbc1427e-7628-42fc-a645-7721f43fe16c",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "271ebacd-04b8-4fa5-97e0-8410233fa5a6",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 check correct add count of FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "dd95d2c7-7241-4b48-99c4-8b02f601487c",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "0d2d76b6-6264-4cc5-9986-b302c7c99078",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "313a9494-bd48-4348-acd2-662b66d67317",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 check rest FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8b8f3216-5546-4d83-b375-2e0a2cea0f6d",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "47b038a2-5e2d-4b33-9e5b-7af47771a658",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "bd0540bb-10cf-46c5-aa8e-c4a4b81f78b2",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "afa27688-42bf-4ce7-94fa-73a3c3a7e135",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "0ff77410-634d-4d40-bd42-deb15423cbfa",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "f395cbc2-e1f3-4e49-9053-cff5716a748d",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  0 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "84176274-bba7-4324-9031-cf10d6b88188",
              "parentUUID": "6638935d-6b2f-45f1-910a-079381af02af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16a3ee09-e7bb-471d-9754-b89c5b7f2924",
            "d4c38476-25b3-4db8-acca-e94a7842c9b5",
            "3fe10d6c-7d33-4761-90aa-dfd7ff728d5f",
            "17d8bce6-3536-41ee-95b2-2d9e7622ba1b",
            "fbc1427e-7628-42fc-a645-7721f43fe16c",
            "271ebacd-04b8-4fa5-97e0-8410233fa5a6",
            "dd95d2c7-7241-4b48-99c4-8b02f601487c",
            "0d2d76b6-6264-4cc5-9986-b302c7c99078",
            "313a9494-bd48-4348-acd2-662b66d67317",
            "8b8f3216-5546-4d83-b375-2e0a2cea0f6d",
            "47b038a2-5e2d-4b33-9e5b-7af47771a658",
            "bd0540bb-10cf-46c5-aa8e-c4a4b81f78b2",
            "afa27688-42bf-4ce7-94fa-73a3c3a7e135",
            "0ff77410-634d-4d40-bd42-deb15423cbfa",
            "f395cbc2-e1f3-4e49-9053-cff5716a748d",
            "84176274-bba7-4324-9031-cf10d6b88188"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
          "title": "Test 10Lines game: 10, 25 -  1",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 325,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "95db0a8e-cbeb-4ad0-9fbd-c917aa639ab9",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "325b4784-ae4c-4269-9151-fd5a997d5d3d",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "5fd845b2-f120-465c-9652-fb1b866306f5",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "34082021-a5f5-4ed3-a265-6c2b6e1a888a",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "c317ff8c-bda4-45e8-8495-3d14667d51b9",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "529b0591-de87-47bf-aa9b-5167a0199e33",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "5530ab74-9d43-45d7-a9c2-cc63071b70d6",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "8cd42824-efda-4d7c-a3de-6d2b8c765881",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c8e68eb4-ea2f-4669-b250-f88757846aaa",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "7560d5b5-86ee-435d-a74c-3361287f23b4",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7ebf2a52-7731-46c5-833c-ccbab6267b71",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "74b93f28-8c3b-4f40-aa53-89abd04e2758",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "b4a9b160-dd76-47a9-8522-93f512bb2061",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "2b1a1a3e-ae55-4c62-abdc-6216310a542d",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "6283fa07-ba98-472a-a87f-ed67032446b8",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "b0f25fde-dab7-4eff-a298-dd97ece74367",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e7d20791-e0b9-4db9-a3a2-510b9252a5d4",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  1 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "196079af-e3d4-438e-8d85-1907a83cd51a",
              "parentUUID": "2f4f917b-3f1c-4c0e-b693-d7f4b8067838",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fd845b2-f120-465c-9652-fb1b866306f5",
            "34082021-a5f5-4ed3-a265-6c2b6e1a888a",
            "c317ff8c-bda4-45e8-8495-3d14667d51b9",
            "529b0591-de87-47bf-aa9b-5167a0199e33",
            "5530ab74-9d43-45d7-a9c2-cc63071b70d6",
            "8cd42824-efda-4d7c-a3de-6d2b8c765881",
            "c8e68eb4-ea2f-4669-b250-f88757846aaa",
            "7560d5b5-86ee-435d-a74c-3361287f23b4",
            "7ebf2a52-7731-46c5-833c-ccbab6267b71",
            "74b93f28-8c3b-4f40-aa53-89abd04e2758",
            "b4a9b160-dd76-47a9-8522-93f512bb2061",
            "2b1a1a3e-ae55-4c62-abdc-6216310a542d",
            "6283fa07-ba98-472a-a87f-ed67032446b8",
            "b0f25fde-dab7-4eff-a298-dd97ece74367",
            "e7d20791-e0b9-4db9-a3a2-510b9252a5d4",
            "196079af-e3d4-438e-8d85-1907a83cd51a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
          "title": "Test 10Lines game: 10, 25 -  2",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1323,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4b55457a-32e2-43fc-9326-24fe54754fb2",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "440b7862-ceec-4146-84ae-49f0b7bb3270",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a29f512c-3469-4833-9240-686e6e341d9e",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "fcb9bf39-8447-450b-b15e-68ef5f3638e7",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "e32cf41e-1b3b-4843-9186-c185343d5e80",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "fbbf61ac-6c52-4e81-9631-08a7120d4886",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "e99fa7c4-8a31-41f0-b293-d0724e68a054",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "09676f8c-5b4d-4371-a55e-c80dd0fe60a3",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c287eee5-3847-4dbb-be1e-94b8f075163a",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "65e862e7-a992-4f11-8e7a-18e31822e79b",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d64c93e8-ce44-4324-8ad2-50c85debc4b2",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "24f22978-c2e4-4976-a056-71535ee0090e",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "1487b6aa-4f40-4a43-8a8b-d5031510c95e",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "83f74b00-2b7b-4495-83c3-4987be5d2fe3",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "fcb227c3-04b4-4441-a557-f4449528cb8c",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "4dd6dae1-a192-4858-8c15-0ae239ec3586",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "dac1f810-9cec-4931-9f8b-32acedd0501b",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  2 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "d8a9966b-0466-4c83-877a-505b47a4fa00",
              "parentUUID": "576b9215-d2d4-4490-b4ed-f2fb69e8d76e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a29f512c-3469-4833-9240-686e6e341d9e",
            "fcb9bf39-8447-450b-b15e-68ef5f3638e7",
            "e32cf41e-1b3b-4843-9186-c185343d5e80",
            "fbbf61ac-6c52-4e81-9631-08a7120d4886",
            "e99fa7c4-8a31-41f0-b293-d0724e68a054",
            "09676f8c-5b4d-4371-a55e-c80dd0fe60a3",
            "c287eee5-3847-4dbb-be1e-94b8f075163a",
            "65e862e7-a992-4f11-8e7a-18e31822e79b",
            "d64c93e8-ce44-4324-8ad2-50c85debc4b2",
            "24f22978-c2e4-4976-a056-71535ee0090e",
            "1487b6aa-4f40-4a43-8a8b-d5031510c95e",
            "83f74b00-2b7b-4495-83c3-4987be5d2fe3",
            "fcb227c3-04b4-4441-a557-f4449528cb8c",
            "4dd6dae1-a192-4858-8c15-0ae239ec3586",
            "dac1f810-9cec-4931-9f8b-32acedd0501b",
            "d8a9966b-0466-4c83-877a-505b47a4fa00"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "04c66063-4639-49fe-90a7-ab5de524f13f",
          "title": "Test 10Lines game: 10, 25 -  3",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 311,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4b2a0514-a605-4424-8ed2-058794c99a2b",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "5be3957e-4c3f-463d-94f5-5f73c7b029c6",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "6b8e29f8-0273-4086-ad58-586421cae8e3",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "3cd1652a-d2ea-4161-8c2d-dd437dcba072",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "4209b6d8-5130-46dd-8040-9b49fd9b1ab3",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "466a9e22-33a8-4970-9c9e-ae2295466ac8",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "8bd438b1-a181-4c5c-a566-ddfaeb35199f",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "689ad159-18ba-407a-9766-77823d4979da",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "dca87053-7f7b-49bc-a424-09c8a38dae8f",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "88fc6132-9adb-45ab-a071-a58aef3b0961",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ef2b4c2c-6ba1-437b-aa8c-b35578bb1006",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "18c1616c-c26e-4ad7-8d8c-239cf7387e02",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "d56c12f2-e32f-4fd4-af74-316a5f3c8a48",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "9c78e226-36e7-4b23-9a8a-c09b5f59bf80",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "91241729-1c28-4ea2-b89c-eb6698e29195",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "3a3fccc0-bef5-46b8-82b4-67c857ec697d",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "c906837a-43fa-4663-aef3-de69335cd6bc",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  3 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6e8129a0-87e3-4269-85fd-7d51161d5399",
              "parentUUID": "04c66063-4639-49fe-90a7-ab5de524f13f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b8e29f8-0273-4086-ad58-586421cae8e3",
            "3cd1652a-d2ea-4161-8c2d-dd437dcba072",
            "4209b6d8-5130-46dd-8040-9b49fd9b1ab3",
            "466a9e22-33a8-4970-9c9e-ae2295466ac8",
            "8bd438b1-a181-4c5c-a566-ddfaeb35199f",
            "689ad159-18ba-407a-9766-77823d4979da",
            "dca87053-7f7b-49bc-a424-09c8a38dae8f",
            "88fc6132-9adb-45ab-a071-a58aef3b0961",
            "ef2b4c2c-6ba1-437b-aa8c-b35578bb1006",
            "18c1616c-c26e-4ad7-8d8c-239cf7387e02",
            "d56c12f2-e32f-4fd4-af74-316a5f3c8a48",
            "9c78e226-36e7-4b23-9a8a-c09b5f59bf80",
            "91241729-1c28-4ea2-b89c-eb6698e29195",
            "3a3fccc0-bef5-46b8-82b4-67c857ec697d",
            "c906837a-43fa-4663-aef3-de69335cd6bc",
            "6e8129a0-87e3-4269-85fd-7d51161d5399"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
          "title": "Test 10Lines game: 10, 25 -  4",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 302,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9becfb53-ba2e-4f1c-b9de-1ea3c95fc60e",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "00ee5855-10bc-4e10-b19d-a175d2b4822f",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "307d9ec2-ffd4-4f46-b686-bb70585cebac",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "ad890666-ceb5-4f9c-907e-950165b9d373",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ade960bd-0119-49a1-98a4-42da4f968139",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "89014e41-8bab-4167-85e7-298b7045a3ed",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "fe895a8d-3fb9-46a5-a41f-73f9d48adca9",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f5ed1501-e4c4-49ef-b24a-1935d25aa5cc",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cd66d6af-c677-4314-857d-444db1161084",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "e78a58c2-dde8-448a-8289-c7bb02a50376",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "25c624e2-c3d1-4ffe-a7c8-1b80f4bc0e12",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "07a06e24-670c-4ea6-88ad-daeaee3fcf7b",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "796c0f0a-7046-4ecc-a582-5156c3a56787",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "151d5078-d454-4f8f-a057-b8ed024e7d39",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "cee07dde-8e48-4a34-a6a3-51daa2a8b0f6",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "111e960a-ddca-4347-9fa0-e8ab77419f9f",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "fc137ff4-93f4-4500-a91b-df0d70f714f4",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  4 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "d746edf6-66a6-49a6-b1a2-0f0043bc999c",
              "parentUUID": "18ea3d9e-94ed-4a54-92d8-87cb8c14e344",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "307d9ec2-ffd4-4f46-b686-bb70585cebac",
            "ad890666-ceb5-4f9c-907e-950165b9d373",
            "ade960bd-0119-49a1-98a4-42da4f968139",
            "89014e41-8bab-4167-85e7-298b7045a3ed",
            "fe895a8d-3fb9-46a5-a41f-73f9d48adca9",
            "f5ed1501-e4c4-49ef-b24a-1935d25aa5cc",
            "cd66d6af-c677-4314-857d-444db1161084",
            "e78a58c2-dde8-448a-8289-c7bb02a50376",
            "25c624e2-c3d1-4ffe-a7c8-1b80f4bc0e12",
            "07a06e24-670c-4ea6-88ad-daeaee3fcf7b",
            "796c0f0a-7046-4ecc-a582-5156c3a56787",
            "151d5078-d454-4f8f-a057-b8ed024e7d39",
            "cee07dde-8e48-4a34-a6a3-51daa2a8b0f6",
            "111e960a-ddca-4347-9fa0-e8ab77419f9f",
            "fc137ff4-93f4-4500-a91b-df0d70f714f4",
            "d746edf6-66a6-49a6-b1a2-0f0043bc999c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "30d16664-6ad1-4914-8b8f-5d957570270f",
          "title": "Test 10Lines game: 10, 25 -  5",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 355,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "18281ce4-2327-4235-b62c-bdedf5f2f9e0",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "7fe72715-d6ac-4d18-997e-41b78d2502f1",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "b6537ce9-1c61-4d64-8ec2-e017aadc9e29",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "727b1c55-fb2a-44f1-b7df-062735ed1687",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "c86f5c78-72c1-46a7-919a-dc59f27d22eb",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "03352461-803d-4f84-bb8d-c3c7ad411031",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "367d453e-18e9-4b1a-b377-54e5e7440f48",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "8fb0be8e-781a-471f-ad4d-df0f1b28fd40",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d67ff7d5-4efe-44ef-93af-ef014bb7ea9b",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "2442778e-fe73-4732-bc73-a71a6ff55257",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0daf58ef-6392-4781-8cff-a0a12ed72818",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "74fb3511-b7ca-450c-b1f3-b90d97a966f9",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "1c39ffd3-74a0-4b2f-b4f5-09dab156d319",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a45f3500-e74b-4d93-8e83-cf06e6e0900b",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "0e633021-e19f-42ab-957e-0ec24ce559b2",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "f1975b9f-ad5e-4800-87dc-7a69dfd24d38",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "ceb8eb3c-5286-4b2f-bf75-644ac185bd76",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  5 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "22da9abb-2ae8-4b2c-96c7-a039ce631ca7",
              "parentUUID": "30d16664-6ad1-4914-8b8f-5d957570270f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6537ce9-1c61-4d64-8ec2-e017aadc9e29",
            "727b1c55-fb2a-44f1-b7df-062735ed1687",
            "c86f5c78-72c1-46a7-919a-dc59f27d22eb",
            "03352461-803d-4f84-bb8d-c3c7ad411031",
            "367d453e-18e9-4b1a-b377-54e5e7440f48",
            "8fb0be8e-781a-471f-ad4d-df0f1b28fd40",
            "d67ff7d5-4efe-44ef-93af-ef014bb7ea9b",
            "2442778e-fe73-4732-bc73-a71a6ff55257",
            "0daf58ef-6392-4781-8cff-a0a12ed72818",
            "74fb3511-b7ca-450c-b1f3-b90d97a966f9",
            "1c39ffd3-74a0-4b2f-b4f5-09dab156d319",
            "a45f3500-e74b-4d93-8e83-cf06e6e0900b",
            "0e633021-e19f-42ab-957e-0ec24ce559b2",
            "f1975b9f-ad5e-4800-87dc-7a69dfd24d38",
            "ceb8eb3c-5286-4b2f-bf75-644ac185bd76",
            "22da9abb-2ae8-4b2c-96c7-a039ce631ca7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4b287151-9078-478b-a76c-60c96b303b1f",
          "title": "Test 10Lines game: 10, 25 -  6",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 332,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f54a2579-2b70-44f4-b7ec-cda9bfba182f",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "ebe90a22-ddc1-4383-a9a5-c503579985ea",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "937f63b7-0749-47f3-aa13-cd19eeec4878",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "0980f59c-295f-484b-b3e8-501cdc45512d",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "8eb9bd7b-4de8-4be9-9faa-7caee9679395",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "8d0cf675-408a-4c60-a498-6880ceb22b8b",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "e2d97797-7236-4185-8c25-ef822a435337",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "fe710262-b90d-440c-8dce-43f3024aea5f",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "76c78f6c-f0d9-4f7f-81a5-8bd96205bc34",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "78029258-4712-433e-974f-013fe66199b9",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4f617033-ba1e-4824-b77b-9c309e1225bb",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6035cab2-25e0-4540-8492-52e878dd79e0",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "af9e6bde-cd80-4527-a1f3-d17a550beedd",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a812cf3c-c0cd-45ae-a4ef-2400714357a4",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "09e71030-ea4e-4c9d-a048-3d203ffb028a",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "8d73616f-b9d7-4848-bdd6-3b7a395de0cb",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "76e7c825-0ff4-4450-b37c-c5f4d17ba82e",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  6 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "425a8233-b77c-444d-92c3-ef9288aef791",
              "parentUUID": "4b287151-9078-478b-a76c-60c96b303b1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "937f63b7-0749-47f3-aa13-cd19eeec4878",
            "0980f59c-295f-484b-b3e8-501cdc45512d",
            "8eb9bd7b-4de8-4be9-9faa-7caee9679395",
            "8d0cf675-408a-4c60-a498-6880ceb22b8b",
            "e2d97797-7236-4185-8c25-ef822a435337",
            "fe710262-b90d-440c-8dce-43f3024aea5f",
            "76c78f6c-f0d9-4f7f-81a5-8bd96205bc34",
            "78029258-4712-433e-974f-013fe66199b9",
            "4f617033-ba1e-4824-b77b-9c309e1225bb",
            "6035cab2-25e0-4540-8492-52e878dd79e0",
            "af9e6bde-cd80-4527-a1f3-d17a550beedd",
            "a812cf3c-c0cd-45ae-a4ef-2400714357a4",
            "09e71030-ea4e-4c9d-a048-3d203ffb028a",
            "8d73616f-b9d7-4848-bdd6-3b7a395de0cb",
            "76e7c825-0ff4-4450-b37c-c5f4d17ba82e",
            "425a8233-b77c-444d-92c3-ef9288aef791"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "19209128-5849-477a-80e6-5f4e5248737c",
          "title": "Test 10Lines game: 10, 25 -  7",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 289,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0e815d86-9c3f-4f81-9f56-4f574b955881",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "f04ae712-027f-400d-981e-35f060ac0b3c",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "f2e24347-d23a-49f9-b838-971b8069cc6f",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "d5305810-b0a0-40b7-a70b-8ded4c03f2fc",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "12f633ce-bfe8-4f34-b25f-eefffae56d1a",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "e1cd8e69-91d6-42f2-8080-0364a9568c0b",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "5ad15b60-657d-454d-9522-dd76594aff3d",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "9e14c297-005c-4157-88d5-c6daf3c22fbc",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "337a485c-f977-4053-9b79-c6f06c8da8ad",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "fd928150-aed0-4536-acdb-9aa3f0776098",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "62ac8736-a4a9-4538-9de4-8c7450fff351",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f35ec6dd-0f85-4f93-959a-043b256f43fe",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "3b567a97-e848-4abc-984d-47a4418a6b17",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "73e89b84-9dbb-493d-8691-37123f1dc559",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "9bcee55a-4c40-4f87-9c73-614dcc16260b",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "cf94c007-fad7-42b2-a824-13296efc4d05",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "026a14fb-eea4-4cf3-a1a2-8090f50773b6",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  7 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "08255261-8ec1-41dd-8e54-fd22f227c768",
              "parentUUID": "19209128-5849-477a-80e6-5f4e5248737c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2e24347-d23a-49f9-b838-971b8069cc6f",
            "d5305810-b0a0-40b7-a70b-8ded4c03f2fc",
            "12f633ce-bfe8-4f34-b25f-eefffae56d1a",
            "e1cd8e69-91d6-42f2-8080-0364a9568c0b",
            "5ad15b60-657d-454d-9522-dd76594aff3d",
            "9e14c297-005c-4157-88d5-c6daf3c22fbc",
            "337a485c-f977-4053-9b79-c6f06c8da8ad",
            "fd928150-aed0-4536-acdb-9aa3f0776098",
            "62ac8736-a4a9-4538-9de4-8c7450fff351",
            "f35ec6dd-0f85-4f93-959a-043b256f43fe",
            "3b567a97-e848-4abc-984d-47a4418a6b17",
            "73e89b84-9dbb-493d-8691-37123f1dc559",
            "9bcee55a-4c40-4f87-9c73-614dcc16260b",
            "cf94c007-fad7-42b2-a824-13296efc4d05",
            "026a14fb-eea4-4cf3-a1a2-8090f50773b6",
            "08255261-8ec1-41dd-8e54-fd22f227c768"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
          "title": "Test 10Lines game: 10, 25 -  8",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 330,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "978479cc-d5fe-42b7-b787-c0aeb512c590",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "febbefce-5d24-4745-811a-f35db3794bdb",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "c49aaa2e-a444-4eb2-8f5d-ea64663ef0ab",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "3158eb7d-83b2-4ecb-8c4f-c230b9e660ec",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "7a4b1404-c4f6-4f7c-a58c-7cad07136eb9",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "8204fd47-b1f2-4067-9a46-317a5e5e67d1",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "a044949a-ca87-4341-9bc1-9ef2625cc71e",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a8bb4553-3519-431e-a931-6b623973be10",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "50ffdcd5-8bb7-4437-8eb4-21f242093242",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "e17b8b86-86db-4874-98e6-091ce987928a",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "44699334-701e-4a76-ad8c-12be37773207",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "92ea4096-4117-4c6d-b9bd-6361fc6e5f1b",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "8dd2a8df-5814-4615-ab07-70da4a6bdafc",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "dfc35c1b-a0cc-41e3-80e3-46f66d352fe4",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "4e09caea-5605-4ea2-9e86-e89608dc53d4",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "520088a6-f3d6-43f9-8e79-4e296f855f4f",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "d3122cdb-2d76-439e-82fc-80025f3837cb",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  8 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "9b2d3731-dbbe-44b3-ace5-a7f3a13c14f0",
              "parentUUID": "2a9cdfd8-0600-4e95-9be1-a7609997b26e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c49aaa2e-a444-4eb2-8f5d-ea64663ef0ab",
            "3158eb7d-83b2-4ecb-8c4f-c230b9e660ec",
            "7a4b1404-c4f6-4f7c-a58c-7cad07136eb9",
            "8204fd47-b1f2-4067-9a46-317a5e5e67d1",
            "a044949a-ca87-4341-9bc1-9ef2625cc71e",
            "a8bb4553-3519-431e-a931-6b623973be10",
            "50ffdcd5-8bb7-4437-8eb4-21f242093242",
            "e17b8b86-86db-4874-98e6-091ce987928a",
            "44699334-701e-4a76-ad8c-12be37773207",
            "92ea4096-4117-4c6d-b9bd-6361fc6e5f1b",
            "8dd2a8df-5814-4615-ab07-70da4a6bdafc",
            "dfc35c1b-a0cc-41e3-80e3-46f66d352fe4",
            "4e09caea-5605-4ea2-9e86-e89608dc53d4",
            "520088a6-f3d6-43f9-8e79-4e296f855f4f",
            "d3122cdb-2d76-439e-82fc-80025f3837cb",
            "9b2d3731-dbbe-44b3-ace5-a7f3a13c14f0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
          "title": "Test 10Lines game: 10, 25 -  9",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 322,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7b7dddc5-9f41-4ce1-bfa7-4b28f8331be5",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "245031c5-3737-47fd-ad91-44c69b84a8af",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "6ff1e5a9-91f6-478f-a33b-19053dc12db4",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "e659ec8e-3dd0-468d-a3e5-92e1d67456f3",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "8ef41a4b-00d2-4498-a854-68afba8c2604",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "79b54f8e-f2d8-4a33-bbe1-d5ee0193dc9f",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "62922db7-0009-4e27-918d-f545cf88ffcb",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "c516f268-bf63-4587-840c-81c2960be6dc",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2e1808eb-ea4f-44da-9497-d4acd2cbc29b",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "59daa66f-7fbb-4b0c-94ba-c577fce3707a",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cf6f2297-9f27-4f2d-8266-79989c0e9f95",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "23e5c0e3-b318-4dd3-b4ca-682ddee00e9f",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "0795260e-0d17-4ef2-a93a-8b74e4778acc",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "8b3fb87e-d0ef-4afc-b78b-7ada92f70840",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ef5d5f52-4bab-4391-94ec-31d6fd88a746",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "c7ad5ba2-9396-4b88-9225-82036ad7348e",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "8ab9c0d7-9740-48b0-a03e-2a1a4d5abbea",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  9 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "2a889208-6568-4a6a-b91a-51d5122627b9",
              "parentUUID": "608ecfbf-37ae-492a-b156-7e65a1fdb099",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ff1e5a9-91f6-478f-a33b-19053dc12db4",
            "e659ec8e-3dd0-468d-a3e5-92e1d67456f3",
            "8ef41a4b-00d2-4498-a854-68afba8c2604",
            "79b54f8e-f2d8-4a33-bbe1-d5ee0193dc9f",
            "62922db7-0009-4e27-918d-f545cf88ffcb",
            "c516f268-bf63-4587-840c-81c2960be6dc",
            "2e1808eb-ea4f-44da-9497-d4acd2cbc29b",
            "59daa66f-7fbb-4b0c-94ba-c577fce3707a",
            "cf6f2297-9f27-4f2d-8266-79989c0e9f95",
            "23e5c0e3-b318-4dd3-b4ca-682ddee00e9f",
            "0795260e-0d17-4ef2-a93a-8b74e4778acc",
            "8b3fb87e-d0ef-4afc-b78b-7ada92f70840",
            "ef5d5f52-4bab-4391-94ec-31d6fd88a746",
            "c7ad5ba2-9396-4b88-9225-82036ad7348e",
            "8ab9c0d7-9740-48b0-a03e-2a1a4d5abbea",
            "2a889208-6568-4a6a-b91a-51d5122627b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
          "title": "Test 10Lines game: 10, 25 -  10",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 442,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "419dc9fa-7768-4bb9-8ef2-9e527df89f4b",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "3eaf529f-eb48-46ea-bf8c-7d1236bf4f18",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "00b4ab00-bbe4-4c96-9d56-017fb1f3879e",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "fb32734d-7e16-4000-ab9d-201c6a868298",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "2c55ac89-e629-490e-a9b7-295be26b0a0f",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "58a9d600-97dc-4986-9b60-e4de7dc25807",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "5ef0ff33-05f1-4609-92b1-af866cee06ea",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "5c706d03-d3b6-4000-be0a-cd7e7e9690ea",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2273ac1e-f2f7-444f-bf71-2d8b6a36b07f",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "051d485b-353b-4066-8f0a-ba537c585a3b",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "82414a81-fb06-43a6-b203-59989d8f0fe2",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f11b5161-36bc-4157-9f23-f6993f11f1f2",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "86528ee3-cdc3-4650-837d-998ec63ea856",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "ad0106e6-0fe9-446e-9d18-3c1f37e7679e",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "097de4b8-7c4c-47f5-a391-6a988929f43f",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "ab1baf3d-206d-4c75-af30-8cd4de66ff43",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "49ed5cf0-7e1e-4d1c-84f3-ed55e306015c",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  10 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f52216db-ce6b-49ad-86a1-0bb344a21730",
              "parentUUID": "c5a0df18-3ced-4599-ad5c-46e01fc4ff31",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00b4ab00-bbe4-4c96-9d56-017fb1f3879e",
            "fb32734d-7e16-4000-ab9d-201c6a868298",
            "2c55ac89-e629-490e-a9b7-295be26b0a0f",
            "58a9d600-97dc-4986-9b60-e4de7dc25807",
            "5ef0ff33-05f1-4609-92b1-af866cee06ea",
            "5c706d03-d3b6-4000-be0a-cd7e7e9690ea",
            "2273ac1e-f2f7-444f-bf71-2d8b6a36b07f",
            "051d485b-353b-4066-8f0a-ba537c585a3b",
            "82414a81-fb06-43a6-b203-59989d8f0fe2",
            "f11b5161-36bc-4157-9f23-f6993f11f1f2",
            "86528ee3-cdc3-4650-837d-998ec63ea856",
            "ad0106e6-0fe9-446e-9d18-3c1f37e7679e",
            "097de4b8-7c4c-47f5-a391-6a988929f43f",
            "ab1baf3d-206d-4c75-af30-8cd4de66ff43",
            "49ed5cf0-7e1e-4d1c-84f3-ed55e306015c",
            "f52216db-ce6b-49ad-86a1-0bb344a21730"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
          "title": "Test 10Lines game: 10, 25 -  11",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 292,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "35d30e89-e8c0-42a3-a32d-e7290c446f61",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "0e915a79-3ee1-4db1-976a-968138c0053f",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "3a20c49c-de85-4570-aace-f8ac469af0c8",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "53c4caba-e580-419f-aad7-07a8b7e820b8",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "411da7b9-7331-43ab-9d45-c52f7effb939",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "a1795d03-9729-4bb0-97d1-b4f9c37425ae",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "02c32c1c-aa25-4ea1-b274-eb6d1ab1743e",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "c8197f35-3327-44f8-9524-4f1b1e119097",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5bfacd8c-165a-45ed-9247-b6fab38a85a4",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "c5157fd0-c7c4-466d-83df-65adec22cc83",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b851ac9b-8c9a-4731-bcda-adbae33a1f3e",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "71158ece-edc5-47fb-9266-5e9ab026519d",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "260d5d5f-1a59-4bfd-84e5-255365c28f3a",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "db3b87b8-7119-4981-83c2-a107354c8f29",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "22655efb-0f8f-47a3-b32a-feabf2af1e47",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "95e94c0f-2802-4941-8b6d-963d1d09417a",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "45382e4b-221c-46e7-9f46-2001d694d727",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  11 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "db751f25-29a1-4959-88dc-693c5c820f33",
              "parentUUID": "4627b9ea-288c-4a3e-af8e-2c80dfcde46b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a20c49c-de85-4570-aace-f8ac469af0c8",
            "53c4caba-e580-419f-aad7-07a8b7e820b8",
            "411da7b9-7331-43ab-9d45-c52f7effb939",
            "a1795d03-9729-4bb0-97d1-b4f9c37425ae",
            "02c32c1c-aa25-4ea1-b274-eb6d1ab1743e",
            "c8197f35-3327-44f8-9524-4f1b1e119097",
            "5bfacd8c-165a-45ed-9247-b6fab38a85a4",
            "c5157fd0-c7c4-466d-83df-65adec22cc83",
            "b851ac9b-8c9a-4731-bcda-adbae33a1f3e",
            "71158ece-edc5-47fb-9266-5e9ab026519d",
            "260d5d5f-1a59-4bfd-84e5-255365c28f3a",
            "db3b87b8-7119-4981-83c2-a107354c8f29",
            "22655efb-0f8f-47a3-b32a-feabf2af1e47",
            "95e94c0f-2802-4941-8b6d-963d1d09417a",
            "45382e4b-221c-46e7-9f46-2001d694d727",
            "db751f25-29a1-4959-88dc-693c5c820f33"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "097cdef0-f617-4888-a4fd-71156aab1389",
          "title": "Test 10Lines game: 10, 25 -  12",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 339,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "227b6470-5c64-4b2b-9b08-f2c54a6a1a43",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "71fbb560-6460-4f9e-a366-cd1f7ed53ed3",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "033be5b8-6f28-4383-b589-1c05dfbbe739",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "ca33e289-5c21-451e-92a8-24df88eb9bcd",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "375fbd76-b1ba-4d2c-8ad0-46ea026d4103",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "f5d7cae0-74ed-4672-9a8a-8b1f7d350682",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 check correct accrual of winnings",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "a89f76b9-ba5f-4443-b5b3-4ee8b796ad8d",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "5570b01f-9d89-4738-8a5a-083b3f1d537b",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "05241a13-b4ac-4cff-95d3-201cc87a0d22",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "ef9dabc8-d7c5-4275-ba6c-c66e635a0dc5",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a2387797-0883-418c-8dc0-398d0a7ece66",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a8ba9a8f-ef96-47bf-b18c-19ba6cd48ec5",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "4ce6280f-ec74-437f-91bd-625f68c6a886",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "fcbb517d-9eb3-40fb-81c5-b6c482403670",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "0156df77-67df-4ee1-9da5-ab80fc4d4529",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "bcb3e0ee-9448-4997-9fe6-ed4ff523fb65",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e834f7d0-13db-4e32-9436-451683825987",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  12 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e32ed717-bb06-4459-b463-64ac0a97c30e",
              "parentUUID": "097cdef0-f617-4888-a4fd-71156aab1389",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "033be5b8-6f28-4383-b589-1c05dfbbe739",
            "ca33e289-5c21-451e-92a8-24df88eb9bcd",
            "375fbd76-b1ba-4d2c-8ad0-46ea026d4103",
            "f5d7cae0-74ed-4672-9a8a-8b1f7d350682",
            "a89f76b9-ba5f-4443-b5b3-4ee8b796ad8d",
            "5570b01f-9d89-4738-8a5a-083b3f1d537b",
            "05241a13-b4ac-4cff-95d3-201cc87a0d22",
            "ef9dabc8-d7c5-4275-ba6c-c66e635a0dc5",
            "a2387797-0883-418c-8dc0-398d0a7ece66",
            "a8ba9a8f-ef96-47bf-b18c-19ba6cd48ec5",
            "4ce6280f-ec74-437f-91bd-625f68c6a886",
            "fcbb517d-9eb3-40fb-81c5-b6c482403670",
            "0156df77-67df-4ee1-9da5-ab80fc4d4529",
            "bcb3e0ee-9448-4997-9fe6-ed4ff523fb65",
            "e834f7d0-13db-4e32-9436-451683825987",
            "e32ed717-bb06-4459-b463-64ac0a97c30e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "99eb2a73-498b-4a25-9b64-ee22191d0348",
          "title": "Test 10Lines game: 10, 25 -  13",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 286,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5fcd5d63-9d26-44b4-be3c-8b547fee4e8e",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "c3f77535-039c-4b77-b786-ab8821af8592",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "90fb1afd-59e0-4d19-93c6-ba96f09a8c94",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "24e1c8fa-b852-43e5-8d90-72dfae155905",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "09c88a76-741f-4d24-974f-71afef22f4a4",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d7fb545e-a4cf-40b8-a72e-acdc74f0b231",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "eb222d8c-6398-4c07-9682-7d1181ad9347",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "20d19c88-0da3-4745-932b-62454331bf8f",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6cf22766-7311-4ac2-96bd-38bb1010d579",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "68147989-668d-4783-85e3-4fded9fbf49d",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6f3291f8-8409-4547-93cb-d068177ac08b",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "efbd72be-28cb-40dd-9dee-af6a277ddf62",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "86ab058d-e66c-4c4a-8dd5-d8c5126bf343",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "f759d07d-a4a4-4570-8999-7ef34bfd617c",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "3b3127b4-578e-49dd-a5a1-328affc24353",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "8c8d7579-6a5a-4ca4-b45a-fd28ad8cabe0",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "16a0c142-c6de-4fdc-b45f-8b7d6e34136c",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  13 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "2ab12b96-a559-4abf-8288-aacf41dadc16",
              "parentUUID": "99eb2a73-498b-4a25-9b64-ee22191d0348",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90fb1afd-59e0-4d19-93c6-ba96f09a8c94",
            "24e1c8fa-b852-43e5-8d90-72dfae155905",
            "09c88a76-741f-4d24-974f-71afef22f4a4",
            "d7fb545e-a4cf-40b8-a72e-acdc74f0b231",
            "eb222d8c-6398-4c07-9682-7d1181ad9347",
            "20d19c88-0da3-4745-932b-62454331bf8f",
            "6cf22766-7311-4ac2-96bd-38bb1010d579",
            "68147989-668d-4783-85e3-4fded9fbf49d",
            "6f3291f8-8409-4547-93cb-d068177ac08b",
            "efbd72be-28cb-40dd-9dee-af6a277ddf62",
            "86ab058d-e66c-4c4a-8dd5-d8c5126bf343",
            "f759d07d-a4a4-4570-8999-7ef34bfd617c",
            "3b3127b4-578e-49dd-a5a1-328affc24353",
            "8c8d7579-6a5a-4ca4-b45a-fd28ad8cabe0",
            "16a0c142-c6de-4fdc-b45f-8b7d6e34136c",
            "2ab12b96-a559-4abf-8288-aacf41dadc16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
          "title": "Test 10Lines game: 10, 25 -  14",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 292,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d0503313-2986-4140-b369-f1a6c80fc8cf",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "03205b3e-845e-4a05-a183-9430d7e9a38d",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "273a1a30-c2be-473f-ac1d-4364d1dd226c",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "33774fdb-11f1-4ea9-a02b-327f2589720f",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "1b1d42ab-53c0-4bb4-a319-7880e475e9c1",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "152d7c84-af50-4dde-bb9f-7826f4e100f7",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "1f517044-e730-4eb5-9a3f-5d9acbc91312",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "5d2d7bb2-994d-4a08-8334-7b1923299cf3",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4d22d52f-d3a0-4b75-90f7-d5cb3db4e7f3",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "da143f83-164f-4062-9085-ec51841189f7",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f541b624-7f4e-41c5-8028-4a6efab4a2de",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a19a3c5e-04c3-429d-be00-4544feec128d",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "4a7d938d-a0db-40b1-be48-0ac7ed54bad2",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "548a064f-e702-47ca-90ae-127469273db5",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "24b5ab8c-8996-4543-b647-064210398527",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e74c29fd-f955-441e-95e6-e0692a104e27",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "2309ea00-eed1-45b6-8841-69f0189237a8",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  14 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "46e62756-f63e-4c62-822b-4abff4beec40",
              "parentUUID": "8c3250c7-b017-40fa-b44a-8a1038f7504b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "273a1a30-c2be-473f-ac1d-4364d1dd226c",
            "33774fdb-11f1-4ea9-a02b-327f2589720f",
            "1b1d42ab-53c0-4bb4-a319-7880e475e9c1",
            "152d7c84-af50-4dde-bb9f-7826f4e100f7",
            "1f517044-e730-4eb5-9a3f-5d9acbc91312",
            "5d2d7bb2-994d-4a08-8334-7b1923299cf3",
            "4d22d52f-d3a0-4b75-90f7-d5cb3db4e7f3",
            "da143f83-164f-4062-9085-ec51841189f7",
            "f541b624-7f4e-41c5-8028-4a6efab4a2de",
            "a19a3c5e-04c3-429d-be00-4544feec128d",
            "4a7d938d-a0db-40b1-be48-0ac7ed54bad2",
            "548a064f-e702-47ca-90ae-127469273db5",
            "24b5ab8c-8996-4543-b647-064210398527",
            "e74c29fd-f955-441e-95e6-e0692a104e27",
            "2309ea00-eed1-45b6-8841-69f0189237a8",
            "46e62756-f63e-4c62-822b-4abff4beec40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
          "title": "Test 10Lines game: 10, 25 -  15",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 438,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9f6555de-aa11-4add-99a4-2c99c340169a",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "42f77459-d225-41cc-931a-32ab34fff790",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "4e793417-6072-466f-9203-512df7de7fb4",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "70ff96f5-1f6d-499b-9882-182aa505eb31",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "567c280b-23f6-4041-9b4e-338d65afce83",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "cb1421ce-a76f-4567-b8ee-43135b1eeafc",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "8938f5f6-b7ea-46ab-a9ee-5d38b994c6ac",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "c6cbe887-ac47-4c2b-a2af-c80198b82688",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "339d752c-9778-4374-9356-7bf0b78f452a",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "4bf50b05-dd7d-4404-977c-88075bb21ac6",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 Check the number of free spins",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ac723dbf-a8e3-428c-ae6d-3c9be025691f",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ff4e499f-18a3-4649-a205-c65853492461",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "eac91ced-08cf-4ad0-aab5-386e90c8d28f",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "ec03391e-7187-42da-b37e-73d022f982da",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ed461303-c72c-4b46-b480-adcbfe38957d",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "f1a8bdab-6029-4e6e-9b7c-ba756e3d613f",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "b76b47b9-6b79-4958-93db-b36b8cdbea51",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  15 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6b59777f-eb05-4af3-8c2c-bac93a30e7b3",
              "parentUUID": "2b7fea43-90b3-43b0-91a3-dba961c1aef5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e793417-6072-466f-9203-512df7de7fb4",
            "70ff96f5-1f6d-499b-9882-182aa505eb31",
            "567c280b-23f6-4041-9b4e-338d65afce83",
            "cb1421ce-a76f-4567-b8ee-43135b1eeafc",
            "8938f5f6-b7ea-46ab-a9ee-5d38b994c6ac",
            "c6cbe887-ac47-4c2b-a2af-c80198b82688",
            "339d752c-9778-4374-9356-7bf0b78f452a",
            "4bf50b05-dd7d-4404-977c-88075bb21ac6",
            "ac723dbf-a8e3-428c-ae6d-3c9be025691f",
            "ff4e499f-18a3-4649-a205-c65853492461",
            "eac91ced-08cf-4ad0-aab5-386e90c8d28f",
            "ec03391e-7187-42da-b37e-73d022f982da",
            "ed461303-c72c-4b46-b480-adcbfe38957d",
            "f1a8bdab-6029-4e6e-9b7c-ba756e3d613f",
            "b76b47b9-6b79-4958-93db-b36b8cdbea51",
            "6b59777f-eb05-4af3-8c2c-bac93a30e7b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b469b15c-69a7-421d-9bf7-d18fd929684d",
          "title": "Test 10Lines game: 10, 25 -  16",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 294,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "863533fc-6252-4204-a814-b3becc302905",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "cc016bca-68bd-4f9c-b350-bc5d734914a0",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "c7b638a9-fda6-4657-bb7d-4bb236d27da0",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "f730afae-dba6-4d11-9ca4-e7b15fd8c11e",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "6e24ca0e-dce1-49dc-8127-cbeeb11ca56c",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d9d191dd-684e-4586-891c-d28b2b8999e0",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "a76f5710-f232-4beb-babd-e75edf473779",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "48e2f211-9104-4420-ba4f-cbde4bb5a3c2",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 check correct add count of FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0c4c1518-8326-4ff8-bb32-60258046794f",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "77287e20-57bf-4b78-abbb-0bd76223ff51",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "64f3d0a5-b27b-4d1e-b3f7-3f0f147592d8",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "53e1c8a5-d0de-4943-b963-ac7a0eeeb3aa",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "70b0d37b-cdb8-47f8-abed-ec7ce7e57984",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "76d929ac-eedc-4bf7-9b65-27db4ff97728",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "5a589d3c-7d23-4f86-8b10-855a9e6601ae",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "52080dc4-ed84-4af7-84a1-f1394ee4504c",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0ba09978-11ad-40f9-88fc-654081298fb5",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  16 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "eefbde03-05e9-4e19-b95a-13727028b74e",
              "parentUUID": "b469b15c-69a7-421d-9bf7-d18fd929684d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7b638a9-fda6-4657-bb7d-4bb236d27da0",
            "f730afae-dba6-4d11-9ca4-e7b15fd8c11e",
            "6e24ca0e-dce1-49dc-8127-cbeeb11ca56c",
            "d9d191dd-684e-4586-891c-d28b2b8999e0",
            "a76f5710-f232-4beb-babd-e75edf473779",
            "48e2f211-9104-4420-ba4f-cbde4bb5a3c2",
            "0c4c1518-8326-4ff8-bb32-60258046794f",
            "77287e20-57bf-4b78-abbb-0bd76223ff51",
            "64f3d0a5-b27b-4d1e-b3f7-3f0f147592d8",
            "53e1c8a5-d0de-4943-b963-ac7a0eeeb3aa",
            "70b0d37b-cdb8-47f8-abed-ec7ce7e57984",
            "76d929ac-eedc-4bf7-9b65-27db4ff97728",
            "5a589d3c-7d23-4f86-8b10-855a9e6601ae",
            "52080dc4-ed84-4af7-84a1-f1394ee4504c",
            "0ba09978-11ad-40f9-88fc-654081298fb5",
            "eefbde03-05e9-4e19-b95a-13727028b74e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
          "title": "Test 10Lines game: 10, 25 -  17",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1303,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "477075af-233b-4c2e-a99b-843abd5e39a7",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "90c827a2-cac2-4ded-bf3d-170bddd34f8e",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e7aeb671-65e5-4c70-a48d-c7e21c3f383f",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "8299a153-287b-4d13-b991-0c807b98fa3e",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "e1023c6c-3b71-4664-a7a4-96e1f16c1f43",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "a1d3b0a8-22a1-4aba-b9ce-ca2f46b39235",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "c40edaf3-183c-4cfd-852d-ff01ce617d1c",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d0a7f616-c7a2-4f00-a913-f6fe7cee49cf",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3c3a221b-879b-4493-a42e-86faa7e2eeee",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "18a46755-af2a-4671-b337-e6ac768dabd2",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ed0f6b82-93ef-4dc5-9e5a-d3be1407f849",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "19bab4f8-1b62-4c07-a497-5dfe221170bf",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "d0730925-5158-4083-804a-e4e26a765170",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "67394c79-dd53-4dae-919c-c17a3f6a1dfa",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "663170f2-7eff-4883-bb14-d0a9e9f2ebda",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "37178364-7bbf-4aaf-bd59-9b1653b30a13",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "596b7d6d-75c9-4ebd-8bcf-c67e8529d31e",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  17 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "05f77cdc-92e5-4616-af77-51e0ab97cd47",
              "parentUUID": "bd3f5d48-9196-40b8-bb72-cdc2a6566c21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7aeb671-65e5-4c70-a48d-c7e21c3f383f",
            "8299a153-287b-4d13-b991-0c807b98fa3e",
            "e1023c6c-3b71-4664-a7a4-96e1f16c1f43",
            "a1d3b0a8-22a1-4aba-b9ce-ca2f46b39235",
            "c40edaf3-183c-4cfd-852d-ff01ce617d1c",
            "d0a7f616-c7a2-4f00-a913-f6fe7cee49cf",
            "3c3a221b-879b-4493-a42e-86faa7e2eeee",
            "18a46755-af2a-4671-b337-e6ac768dabd2",
            "ed0f6b82-93ef-4dc5-9e5a-d3be1407f849",
            "19bab4f8-1b62-4c07-a497-5dfe221170bf",
            "d0730925-5158-4083-804a-e4e26a765170",
            "67394c79-dd53-4dae-919c-c17a3f6a1dfa",
            "663170f2-7eff-4883-bb14-d0a9e9f2ebda",
            "37178364-7bbf-4aaf-bd59-9b1653b30a13",
            "596b7d6d-75c9-4ebd-8bcf-c67e8529d31e",
            "05f77cdc-92e5-4616-af77-51e0ab97cd47"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
          "title": "Test 10Lines game: 10, 25 -  18",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 379,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "cd8b71e4-e839-4745-84d1-cfe8a0db7d88",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "25d3b7ec-3113-4427-8fd3-a36b5d05b767",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "b1ebf37c-b6da-4e10-802a-72ded4e677e9",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "e3ee2fa6-335c-40ab-a027-8f6dd1529a2d",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "0669217e-23d4-4945-b342-39325870188e",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "91d3c64a-b1e8-4f4f-8ec3-a6c6ab99467a",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "4c949cde-19d7-43de-8b69-067b3f070a44",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "800e9dc4-95ae-4ca9-83ae-7463a5e1e14e",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "805e3aee-523a-43ff-8827-d31a56d98bac",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "4667e852-1d49-4af1-a0d1-a5326d85ed55",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c0399fbd-417f-4d59-b361-189eb637b65f",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9f24c2a2-6e5f-495c-a219-370d095ead90",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "fc257bf4-a075-4038-af41-bf34601ed20c",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "7f402401-9d2b-425d-a8ef-ea415236fe08",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "b17ba7a6-567e-4d5d-bf8d-81b8fe7a4646",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "784767fc-ea6f-428a-8044-400851e6c31e",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "6b0f686e-845a-47ab-8201-4e20123b482c",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  18 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a2aefef6-ff4f-4de3-a56a-3c83090892ed",
              "parentUUID": "3d8592b6-96a2-40f7-a659-b879c9a3d122",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1ebf37c-b6da-4e10-802a-72ded4e677e9",
            "e3ee2fa6-335c-40ab-a027-8f6dd1529a2d",
            "0669217e-23d4-4945-b342-39325870188e",
            "91d3c64a-b1e8-4f4f-8ec3-a6c6ab99467a",
            "4c949cde-19d7-43de-8b69-067b3f070a44",
            "800e9dc4-95ae-4ca9-83ae-7463a5e1e14e",
            "805e3aee-523a-43ff-8827-d31a56d98bac",
            "4667e852-1d49-4af1-a0d1-a5326d85ed55",
            "c0399fbd-417f-4d59-b361-189eb637b65f",
            "9f24c2a2-6e5f-495c-a219-370d095ead90",
            "fc257bf4-a075-4038-af41-bf34601ed20c",
            "7f402401-9d2b-425d-a8ef-ea415236fe08",
            "b17ba7a6-567e-4d5d-bf8d-81b8fe7a4646",
            "784767fc-ea6f-428a-8044-400851e6c31e",
            "6b0f686e-845a-47ab-8201-4e20123b482c",
            "a2aefef6-ff4f-4de3-a56a-3c83090892ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a86fe593-7247-48e6-9433-36f2ecdd8364",
          "title": "Test 10Lines game: 10, 25 -  19",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 325,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "13058f23-0f57-44b8-ae20-d4415d6d72b6",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "76ccb31c-3c0e-4fa1-9756-807818c96a8b",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a02996bc-d46c-40f0-89da-6ef1cbb2ec20",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "838c48f2-e3df-4389-b52b-4ed3fa7d347a",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 check correct position Scatter",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ec0b3ae7-4852-4438-8a3f-7df6afc9d6ae",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "39ffd0c9-6240-4f5f-ad33-a41ced829224",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "7af84c2e-b63e-47e6-88cb-cc056e553420",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "978dc51e-3eb1-43df-8c07-9b71bd5a0c21",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6f6fae6d-52ed-4730-bbb2-a72f02a7843e",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "89931377-acc1-4f30-99cb-cc025bf7d5c2",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 Check the number of free spins",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8617e6ef-7036-447c-9433-b95497764d85",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "fc23cca5-5d1f-4ea2-83e2-8b25211a8702",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "dac9cd86-7036-4f74-8bfe-d4b032bd3c83",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "8445dade-4cd1-4107-961f-31dedc2e8255",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "04bc4a98-6996-463d-858f-0a2f1e2a1295",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "356d9e9a-860f-4c30-8bae-834e17cd4c4c",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e2a9e8d7-53e2-4aaf-aecb-6beb0882c831",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  19 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "eac33423-90c0-418c-9b23-1b11f616e61f",
              "parentUUID": "a86fe593-7247-48e6-9433-36f2ecdd8364",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a02996bc-d46c-40f0-89da-6ef1cbb2ec20",
            "838c48f2-e3df-4389-b52b-4ed3fa7d347a",
            "ec0b3ae7-4852-4438-8a3f-7df6afc9d6ae",
            "39ffd0c9-6240-4f5f-ad33-a41ced829224",
            "7af84c2e-b63e-47e6-88cb-cc056e553420",
            "978dc51e-3eb1-43df-8c07-9b71bd5a0c21",
            "6f6fae6d-52ed-4730-bbb2-a72f02a7843e",
            "89931377-acc1-4f30-99cb-cc025bf7d5c2",
            "8617e6ef-7036-447c-9433-b95497764d85",
            "fc23cca5-5d1f-4ea2-83e2-8b25211a8702",
            "dac9cd86-7036-4f74-8bfe-d4b032bd3c83",
            "8445dade-4cd1-4107-961f-31dedc2e8255",
            "04bc4a98-6996-463d-858f-0a2f1e2a1295",
            "356d9e9a-860f-4c30-8bae-834e17cd4c4c",
            "e2a9e8d7-53e2-4aaf-aecb-6beb0882c831",
            "eac33423-90c0-418c-9b23-1b11f616e61f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
          "title": "Test 10Lines game: 10, 25 -  20",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 175,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "affbfbed-337a-4da5-95d9-0e347e3bfe12",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "d50570af-0965-4c03-b7c4-5e45d504906d",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "7623d50e-3347-4870-8156-d9e23b153e9a",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "d816827b-cc96-4a7c-a831-f04b1e48e8bf",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "f1f7c351-f786-4686-beff-da6e5dbc7aad",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "5cc404b7-34c5-4fc3-a8b3-dfa5f7a92b44",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "23de7c8b-6169-49e8-96bf-1845fc87b687",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "75735a70-8863-4a47-9cb2-9e959b1f9eaa",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a29f9dff-23f5-4df9-9b32-6949a57f7706",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 check correct total FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "b96855ec-c8c6-455a-820e-29f15d371ae6",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1ae714ea-3994-49fb-90cc-e64343061e0f",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8e7a4878-f1da-41cb-9fa9-ba2fa332b42d",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "24580e45-151a-4144-bb74-3eb0431ae731",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "c85ddef1-d84c-47b1-8393-1a47137d701f",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "4b5eec61-193c-4642-b759-5ae542db5f05",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 check type of win Lines",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e1ecc94a-314d-4db7-a37e-6074ceef6aaa",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "08425d9e-c01b-48f7-ae52-688f477c56c8",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  20 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "fc66b59a-1727-437e-bacb-16ce55d877ab",
              "parentUUID": "a87c3416-d6eb-4c48-8746-0bc5c4834dc9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7623d50e-3347-4870-8156-d9e23b153e9a",
            "d816827b-cc96-4a7c-a831-f04b1e48e8bf",
            "f1f7c351-f786-4686-beff-da6e5dbc7aad",
            "5cc404b7-34c5-4fc3-a8b3-dfa5f7a92b44",
            "23de7c8b-6169-49e8-96bf-1845fc87b687",
            "75735a70-8863-4a47-9cb2-9e959b1f9eaa",
            "a29f9dff-23f5-4df9-9b32-6949a57f7706",
            "b96855ec-c8c6-455a-820e-29f15d371ae6",
            "1ae714ea-3994-49fb-90cc-e64343061e0f",
            "8e7a4878-f1da-41cb-9fa9-ba2fa332b42d",
            "24580e45-151a-4144-bb74-3eb0431ae731",
            "c85ddef1-d84c-47b1-8393-1a47137d701f",
            "4b5eec61-193c-4642-b759-5ae542db5f05",
            "e1ecc94a-314d-4db7-a37e-6074ceef6aaa",
            "08425d9e-c01b-48f7-ae52-688f477c56c8",
            "fc66b59a-1727-437e-bacb-16ce55d877ab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
          "title": "Test 10Lines game: 10, 25 -  21",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 210,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8218a382-8139-411a-8739-363a7a0e194b",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "b0d8d6be-8405-4dcb-b609-188935c91695",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "9ee6aa94-854f-42ba-b212-5a115b97abbc",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "e683e480-60ad-4dae-b7a8-59e04fcc1133",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "6a4645a5-8d4b-45b5-ab96-1ec180832ebf",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "8f7d9cfb-c1db-4d6b-9e99-2691d0f3e034",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "30505e4a-917f-4928-86d7-f98eef943939",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a25f31cf-12c8-4a96-a75c-20b8ef7ddcb3",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b02c26b7-d4c1-42f9-85ae-0ba53876b0e9",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "ba240dfb-e243-4586-8f39-f1d952865ce1",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ced11dc1-9c71-4327-ba7d-e1c3e3b5a684",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "fb830a7e-8e6c-4bb6-aa1b-30bdd60a48bb",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "54a3e7a9-d038-4731-972d-76d0f599871a",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "b8e9b77a-da88-4abe-90fd-8752950187eb",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "bdbbc8dc-b660-4ca8-bcfe-b1c07c894617",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "2c8af8d7-aec4-4649-a0ce-b6025d885830",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "ab07e55a-d5b8-430c-925e-313d3380b5de",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  21 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ce521b14-e61c-4d1e-8208-3832a64b78e7",
              "parentUUID": "97eb1ac6-7a98-429f-9e9e-37f85cd462ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ee6aa94-854f-42ba-b212-5a115b97abbc",
            "e683e480-60ad-4dae-b7a8-59e04fcc1133",
            "6a4645a5-8d4b-45b5-ab96-1ec180832ebf",
            "8f7d9cfb-c1db-4d6b-9e99-2691d0f3e034",
            "30505e4a-917f-4928-86d7-f98eef943939",
            "a25f31cf-12c8-4a96-a75c-20b8ef7ddcb3",
            "b02c26b7-d4c1-42f9-85ae-0ba53876b0e9",
            "ba240dfb-e243-4586-8f39-f1d952865ce1",
            "ced11dc1-9c71-4327-ba7d-e1c3e3b5a684",
            "fb830a7e-8e6c-4bb6-aa1b-30bdd60a48bb",
            "54a3e7a9-d038-4731-972d-76d0f599871a",
            "b8e9b77a-da88-4abe-90fd-8752950187eb",
            "bdbbc8dc-b660-4ca8-bcfe-b1c07c894617",
            "2c8af8d7-aec4-4649-a0ce-b6025d885830",
            "ab07e55a-d5b8-430c-925e-313d3380b5de",
            "ce521b14-e61c-4d1e-8208-3832a64b78e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
          "title": "Test 10Lines game: 10, 25 -  22",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 179,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "622925ee-f9cf-4ec7-b9f1-53e53915b4cb",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "b0c76329-2cb6-4864-aa19-754989bad345",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d82139da-0b93-4ccf-9ca7-e57c32ccbe37",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "4f529ea2-a3ff-4a8d-b1e0-3b9670fdfd2c",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "8be60716-d5eb-4980-80a6-5bf18eb3bc5b",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "cec8732b-39b1-4982-bb48-b5306c71fb87",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "c2617848-c1b0-4b84-aa53-0b5ca635a93f",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "2647afa0-cea7-4b83-a983-6d3ede59da86",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 check correct add count of FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "984ec793-4d07-4dbe-8cad-24709a5ceb76",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "bf71fe3f-c0c2-41d2-bcd0-2cc351808996",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e8d058f7-1184-4fe5-883a-ba76827aaaf6",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "dc61d549-cb3c-4bdf-bdee-0079055cf4a6",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "5a2a2dce-1043-4290-99c4-024032178320",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "7f64f3f5-ebec-426e-ab05-4a234744e120",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "bc4db9e5-e6b9-40c5-ac94-82b767bdd5c9",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "84fbee62-6fe2-47e3-b424-5cbddea561f0",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "d5f67aa0-2490-44ee-8e31-181bed250b6f",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  22 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "2ffec3e9-7167-40f2-93f3-6a92186ba677",
              "parentUUID": "c5557bc5-8e5e-433b-85e3-ceb03b16c3be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d82139da-0b93-4ccf-9ca7-e57c32ccbe37",
            "4f529ea2-a3ff-4a8d-b1e0-3b9670fdfd2c",
            "8be60716-d5eb-4980-80a6-5bf18eb3bc5b",
            "cec8732b-39b1-4982-bb48-b5306c71fb87",
            "c2617848-c1b0-4b84-aa53-0b5ca635a93f",
            "2647afa0-cea7-4b83-a983-6d3ede59da86",
            "984ec793-4d07-4dbe-8cad-24709a5ceb76",
            "bf71fe3f-c0c2-41d2-bcd0-2cc351808996",
            "e8d058f7-1184-4fe5-883a-ba76827aaaf6",
            "dc61d549-cb3c-4bdf-bdee-0079055cf4a6",
            "5a2a2dce-1043-4290-99c4-024032178320",
            "7f64f3f5-ebec-426e-ab05-4a234744e120",
            "bc4db9e5-e6b9-40c5-ac94-82b767bdd5c9",
            "84fbee62-6fe2-47e3-b424-5cbddea561f0",
            "d5f67aa0-2490-44ee-8e31-181bed250b6f",
            "2ffec3e9-7167-40f2-93f3-6a92186ba677"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
          "title": "Test 10Lines game: 10, 25 -  23",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 182,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "33c1caf3-b457-41dc-92d2-fbc23ede6cae",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "508a5d60-409e-4e02-97d6-59aad79d2b95",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "6b5998c6-6a94-4256-b7f9-0b0ae4e8fbb5",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "31d6306d-15c8-4e6d-94eb-28270e37e75f",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "2e94b4d5-72fb-479a-9a2a-3742ac459a97",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "a9865425-6bbc-451e-9b86-b5eff8d18b38",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "1a5a0104-7e02-4054-8dbd-f65a9e710ca2",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d34c4847-8d3e-4fac-be69-9aed29e21cc0",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "05c22eb1-a428-4c3f-af50-fc874d24362f",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 check correct total FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "275d9bc2-f60b-4396-a041-b418bf5e1161",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "dd9c8962-eeb8-45c5-b2d9-247e0692570e",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f3b1a79f-9839-4c5b-8ff7-34ccd3490461",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "0c2a1239-10e8-486c-8901-adffea4b3e2c",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "ff8cc4c1-68b7-4046-8705-fb4301abb6d2",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "da956e5d-e755-4149-a9e6-3a277e40f0a4",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "b6957b01-6d16-4e49-8a27-5ac923588d71",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "9b8b5738-5902-423f-98fe-a49e7968db37",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  23 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "200cd2e5-1300-4b9f-9ff1-a738ec3e9fbc",
              "parentUUID": "2442cc6c-f1fa-4a1e-9f8e-1f80c86a7734",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b5998c6-6a94-4256-b7f9-0b0ae4e8fbb5",
            "31d6306d-15c8-4e6d-94eb-28270e37e75f",
            "2e94b4d5-72fb-479a-9a2a-3742ac459a97",
            "a9865425-6bbc-451e-9b86-b5eff8d18b38",
            "1a5a0104-7e02-4054-8dbd-f65a9e710ca2",
            "d34c4847-8d3e-4fac-be69-9aed29e21cc0",
            "05c22eb1-a428-4c3f-af50-fc874d24362f",
            "275d9bc2-f60b-4396-a041-b418bf5e1161",
            "dd9c8962-eeb8-45c5-b2d9-247e0692570e",
            "f3b1a79f-9839-4c5b-8ff7-34ccd3490461",
            "0c2a1239-10e8-486c-8901-adffea4b3e2c",
            "ff8cc4c1-68b7-4046-8705-fb4301abb6d2",
            "da956e5d-e755-4149-a9e6-3a277e40f0a4",
            "b6957b01-6d16-4e49-8a27-5ac923588d71",
            "9b8b5738-5902-423f-98fe-a49e7968db37",
            "200cd2e5-1300-4b9f-9ff1-a738ec3e9fbc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d67c1f66-bd6d-4590-bd93-b5189690915d",
          "title": "Test 10Lines game: 10, 25 -  24",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 177,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a260c1ca-1637-4349-b320-570bafaff636",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "371765c2-2a13-487c-ad3b-d042c96db671",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "f4ebb99a-a873-4094-ac8d-6678be93971d",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "b2c6d1d0-937e-4a36-bbe6-c551fbb3267d",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "c6ed51a3-0e37-41bb-8fa1-399621dfbe88",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "118aa8db-4e66-4ba5-83b6-1d904a1ea5bd",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "f5e02a5e-84e4-400e-91f6-f847328cf849",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "84c0418f-b304-45ab-8a56-05ce416e4071",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 check correct add count of FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "46adb89d-f212-4005-9144-573fad9baefd",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "d9cfb8d5-31ae-4065-8d88-85f90654a445",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 Check the number of free spins",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ee645e43-2718-4884-ae59-a5a0b36854b6",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3cfb61e8-b357-4c85-aa2a-1e42ea42c610",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "4d2a006a-c957-4617-bec6-229b2154e9ac",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "b7b58020-9e16-48e8-b5bb-63647b732189",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "1e4a1a0e-f11b-4cd7-ac11-243e0d3ef9ce",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "50b6964e-30ae-409e-a536-b5521ba72a06",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "cf5ca103-cc3c-470e-b5a8-d62afda57938",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  24 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "105f4f4e-5ede-4af0-9d8f-abf121d40b95",
              "parentUUID": "d67c1f66-bd6d-4590-bd93-b5189690915d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4ebb99a-a873-4094-ac8d-6678be93971d",
            "b2c6d1d0-937e-4a36-bbe6-c551fbb3267d",
            "c6ed51a3-0e37-41bb-8fa1-399621dfbe88",
            "118aa8db-4e66-4ba5-83b6-1d904a1ea5bd",
            "f5e02a5e-84e4-400e-91f6-f847328cf849",
            "84c0418f-b304-45ab-8a56-05ce416e4071",
            "46adb89d-f212-4005-9144-573fad9baefd",
            "d9cfb8d5-31ae-4065-8d88-85f90654a445",
            "ee645e43-2718-4884-ae59-a5a0b36854b6",
            "3cfb61e8-b357-4c85-aa2a-1e42ea42c610",
            "4d2a006a-c957-4617-bec6-229b2154e9ac",
            "b7b58020-9e16-48e8-b5bb-63647b732189",
            "1e4a1a0e-f11b-4cd7-ac11-243e0d3ef9ce",
            "50b6964e-30ae-409e-a536-b5521ba72a06",
            "cf5ca103-cc3c-470e-b5a8-d62afda57938",
            "105f4f4e-5ede-4af0-9d8f-abf121d40b95"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "750cb728-ee01-46eb-a7ef-456657431689",
          "title": "Test 10Lines game: 10, 25 -  25",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 186,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6a8abae2-f0d8-4d1c-b5da-5af191f94825",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "958fd1af-687f-4139-a64d-a5e1ba58d1df",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "18593b92-6cd9-4359-b9f9-ea8f21ae2913",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "9cfb63ad-4e13-41a3-8c9a-54bd9bf2c6be",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "90ce8137-e034-4b04-bc4f-47021b29be34",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "9d4ab762-a03d-456c-9409-d46b5046e411",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "4a48b816-07c9-451a-98f3-4af0945d6dee",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "723e0a13-c6ce-437c-afb1-ffc606d00928",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9bd5d884-8158-4a31-9073-06ebad93cd12",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "f4420e3b-5152-4875-9e65-d01a18c6e02f",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9b9942a8-56e2-4f4b-8701-78a80df2e52e",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7a5416de-b810-4d3f-90ea-f6ceea0eb9db",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 balance is not change",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "bb8f0ec7-6e32-4e4c-b1ae-197adcab4a4a",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "1e7fbf57-87f7-4425-9723-252f92728ebe",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "4da3f2ec-75a2-46c0-9841-0948a252cec0",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "18409c12-05af-478c-ab96-6f975a655243",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "2338d469-7b21-447a-b4d1-61b741d86ab6",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  25 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "5b1ab64d-edce-4884-a5f3-f62ce2725bfa",
              "parentUUID": "750cb728-ee01-46eb-a7ef-456657431689",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18593b92-6cd9-4359-b9f9-ea8f21ae2913",
            "9cfb63ad-4e13-41a3-8c9a-54bd9bf2c6be",
            "90ce8137-e034-4b04-bc4f-47021b29be34",
            "9d4ab762-a03d-456c-9409-d46b5046e411",
            "4a48b816-07c9-451a-98f3-4af0945d6dee",
            "723e0a13-c6ce-437c-afb1-ffc606d00928",
            "9bd5d884-8158-4a31-9073-06ebad93cd12",
            "f4420e3b-5152-4875-9e65-d01a18c6e02f",
            "9b9942a8-56e2-4f4b-8701-78a80df2e52e",
            "7a5416de-b810-4d3f-90ea-f6ceea0eb9db",
            "bb8f0ec7-6e32-4e4c-b1ae-197adcab4a4a",
            "1e7fbf57-87f7-4425-9723-252f92728ebe",
            "4da3f2ec-75a2-46c0-9841-0948a252cec0",
            "18409c12-05af-478c-ab96-6f975a655243",
            "2338d469-7b21-447a-b4d1-61b741d86ab6",
            "5b1ab64d-edce-4884-a5f3-f62ce2725bfa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d1585bf9-f903-4655-bb91-7995465e7cef",
          "title": "Test 10Lines game: 10, 25 -  26",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 171,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d7ff133d-5052-4a70-8990-57c48ef437cd",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "0271eee3-8aca-435a-a52b-8a59b50a9bf0",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "eecbd6d5-0917-47a1-b7de-3f381913c918",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "201b1a79-1651-4983-9a4d-f0f6a199bf09",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ed438ae0-819b-41bc-b284-c4ae8a9a5e67",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "3196c8b5-32bb-4530-bff7-05a638e7b4dd",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "5df57721-00c3-4c66-8957-90c5484729ae",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "e1b3d9aa-621f-45ca-9565-813f8b2001a8",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 check correct add count of FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "25cd4609-1d4a-4a13-9668-534fd491a07c",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "b90f9ea2-2a3e-43e8-8f31-1333949fea4a",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "43419eab-981e-4a94-a22a-cc55daf70955",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2bbe104c-eb2e-4341-8939-92e30a5c9a71",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "1aac47ff-014d-4f31-8771-4379abf41b49",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "ef598e0c-416f-43ed-9747-efec662d1d5f",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "60623c51-1973-4de0-bfed-7c80d30637c5",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "dc0dead8-2f37-4657-b1de-8b179a291e4b",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "4612546f-e76b-45c3-8856-012f3d7c87ac",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  26 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "fcf24e7d-84fd-4fbf-9011-62fe85cce561",
              "parentUUID": "d1585bf9-f903-4655-bb91-7995465e7cef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eecbd6d5-0917-47a1-b7de-3f381913c918",
            "201b1a79-1651-4983-9a4d-f0f6a199bf09",
            "ed438ae0-819b-41bc-b284-c4ae8a9a5e67",
            "3196c8b5-32bb-4530-bff7-05a638e7b4dd",
            "5df57721-00c3-4c66-8957-90c5484729ae",
            "e1b3d9aa-621f-45ca-9565-813f8b2001a8",
            "25cd4609-1d4a-4a13-9668-534fd491a07c",
            "b90f9ea2-2a3e-43e8-8f31-1333949fea4a",
            "43419eab-981e-4a94-a22a-cc55daf70955",
            "2bbe104c-eb2e-4341-8939-92e30a5c9a71",
            "1aac47ff-014d-4f31-8771-4379abf41b49",
            "ef598e0c-416f-43ed-9747-efec662d1d5f",
            "60623c51-1973-4de0-bfed-7c80d30637c5",
            "dc0dead8-2f37-4657-b1de-8b179a291e4b",
            "4612546f-e76b-45c3-8856-012f3d7c87ac",
            "fcf24e7d-84fd-4fbf-9011-62fe85cce561"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
          "title": "Test 10Lines game: 10, 25 -  27",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 179,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "43560fc0-17c1-41d7-a63d-43a58d8cf2a3",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "f35fe001-2f64-4706-bc0a-b41670848e5c",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a6e16ded-bb6f-4b70-87d6-5ecf56b511ce",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "79d77585-a2ce-4999-baa3-c877aa56a5e1",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "1fae910d-bd1a-48c9-a8d2-15fc0dd6c9fc",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6a56d122-1136-4925-96e7-a5e06f69803c",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "b6b4e08a-d9e8-4913-98d1-77e06156a867",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "2712c2f9-e151-4958-9365-0310364fa105",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3a36b8c2-6c43-4f05-aae4-471afb759ffc",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "5b02a220-d964-4380-9d6f-2f547759f156",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "92b3a425-4f8c-451e-b3ac-2356e35c2500",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f9deaf35-cb53-411b-8bb8-10002c31f2ea",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 balance is not change",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "4f31d8a9-a646-4abd-9637-055209ef1bc2",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5e1313e9-b0e4-4981-8af7-59706c4db766",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "0aa70ea8-b89e-4f82-979e-9068d668db9a",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "2e6fd35a-554f-44c8-8348-90771534fc3d",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "a993a4c4-faa0-4428-add1-2292acf39021",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  27 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "523ffc42-8acf-4c67-93fa-6ea3708c8b4e",
              "parentUUID": "c0d5e24f-07bb-4f6c-be6e-752611e23589",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6e16ded-bb6f-4b70-87d6-5ecf56b511ce",
            "79d77585-a2ce-4999-baa3-c877aa56a5e1",
            "1fae910d-bd1a-48c9-a8d2-15fc0dd6c9fc",
            "6a56d122-1136-4925-96e7-a5e06f69803c",
            "b6b4e08a-d9e8-4913-98d1-77e06156a867",
            "2712c2f9-e151-4958-9365-0310364fa105",
            "3a36b8c2-6c43-4f05-aae4-471afb759ffc",
            "5b02a220-d964-4380-9d6f-2f547759f156",
            "92b3a425-4f8c-451e-b3ac-2356e35c2500",
            "f9deaf35-cb53-411b-8bb8-10002c31f2ea",
            "4f31d8a9-a646-4abd-9637-055209ef1bc2",
            "5e1313e9-b0e4-4981-8af7-59706c4db766",
            "0aa70ea8-b89e-4f82-979e-9068d668db9a",
            "2e6fd35a-554f-44c8-8348-90771534fc3d",
            "a993a4c4-faa0-4428-add1-2292acf39021",
            "523ffc42-8acf-4c67-93fa-6ea3708c8b4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "da65eba6-b612-4a4c-8e5e-5138100ead05",
          "title": "Test 10Lines game: 10, 25 -  28",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 174,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "16437427-8ff5-482f-af85-b2ea872062ff",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "ff55e54d-768a-4c60-a890-35b2ea7b186c",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "b8d3762b-860b-45ae-9b11-81a215261547",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "9d0b227d-869f-4c1c-b7ce-6b6cc49ccac6",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "2f438199-4cf6-451b-bc0c-09c40fc8b10c",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "7dc7ce04-8e5a-4cdb-b34d-91358a80a6fa",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "a2a616f0-dae8-4810-8d63-64f8c289b731",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "5f30d887-5df1-4b1a-850b-367a59ea82df",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 check correct add count of FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4a8c3ba4-4cdf-4718-ae3c-a0ee6a7f9f47",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "e7eae528-d93e-4e40-8d38-ba7ec661f8cc",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "fd0e4851-b3bf-4904-a9ee-274ea33f8ced",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d3fc9a84-bcc2-4f97-adaa-c94e8f75e91d",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "f74e322b-6380-409d-9c2b-31d66ce5ecea",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "6fcd9eda-e9bb-4e6e-820d-4cec8f46d505",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "87941b58-de07-46c0-bb34-2b85a03f2c54",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "af05f7db-d3ce-4ba6-b55f-6ff59d759a6f",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "ac368581-0caf-4c99-a655-f2df2c463c02",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  28 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c88ea2f5-f357-4bb9-9f2f-ace764051f3b",
              "parentUUID": "da65eba6-b612-4a4c-8e5e-5138100ead05",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8d3762b-860b-45ae-9b11-81a215261547",
            "9d0b227d-869f-4c1c-b7ce-6b6cc49ccac6",
            "2f438199-4cf6-451b-bc0c-09c40fc8b10c",
            "7dc7ce04-8e5a-4cdb-b34d-91358a80a6fa",
            "a2a616f0-dae8-4810-8d63-64f8c289b731",
            "5f30d887-5df1-4b1a-850b-367a59ea82df",
            "4a8c3ba4-4cdf-4718-ae3c-a0ee6a7f9f47",
            "e7eae528-d93e-4e40-8d38-ba7ec661f8cc",
            "fd0e4851-b3bf-4904-a9ee-274ea33f8ced",
            "d3fc9a84-bcc2-4f97-adaa-c94e8f75e91d",
            "f74e322b-6380-409d-9c2b-31d66ce5ecea",
            "6fcd9eda-e9bb-4e6e-820d-4cec8f46d505",
            "87941b58-de07-46c0-bb34-2b85a03f2c54",
            "af05f7db-d3ce-4ba6-b55f-6ff59d759a6f",
            "ac368581-0caf-4c99-a655-f2df2c463c02",
            "c88ea2f5-f357-4bb9-9f2f-ace764051f3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "020e5b9f-d189-4170-a539-ba647511fcc8",
          "title": "Test 10Lines game: 10, 25 -  29",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 298,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "37d7c470-773b-44fc-8a9b-f0e1500e7894",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "19a1c553-ae4f-4718-8278-381151731888",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "bf210134-adcb-4df5-b001-60bbe4a2e66c",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "07819740-93f5-44c7-a945-58a8333751d8",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "01405a88-5dbd-4daf-86f2-2a2b63f4d282",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "3f1f6e75-b998-4c5a-819b-e030d6a732b3",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "ce146d86-ab3c-4223-b6b3-8385d2ca6dc5",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "4c8dd509-edb0-41f0-a78f-14846ecebb8a",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 check correct add count of FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "83c33443-f039-4ff4-b052-c81b41897430",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "fbd0ba35-3b6a-4ef8-b877-1fe37172acfd",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6d12410b-5f6e-4c8e-bd93-3a4ec3592856",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "33485198-c8db-4c93-bd64-968740cba849",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "670047ff-960c-421f-9c36-22f39c8b4d2d",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "9884c89b-599c-4ae0-b9b4-6ddff35b9af9",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "95e936d0-4998-4080-a9ab-3de12d4aeab4",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "665626c6-9940-4a52-a6ee-db6bc2a179a3",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "fb7ed443-dce8-47b6-abf7-dfe4b53c0071",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  29 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "5bc59c9e-0a9e-4a38-b240-e1806f9d0d70",
              "parentUUID": "020e5b9f-d189-4170-a539-ba647511fcc8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf210134-adcb-4df5-b001-60bbe4a2e66c",
            "07819740-93f5-44c7-a945-58a8333751d8",
            "01405a88-5dbd-4daf-86f2-2a2b63f4d282",
            "3f1f6e75-b998-4c5a-819b-e030d6a732b3",
            "ce146d86-ab3c-4223-b6b3-8385d2ca6dc5",
            "4c8dd509-edb0-41f0-a78f-14846ecebb8a",
            "83c33443-f039-4ff4-b052-c81b41897430",
            "fbd0ba35-3b6a-4ef8-b877-1fe37172acfd",
            "6d12410b-5f6e-4c8e-bd93-3a4ec3592856",
            "33485198-c8db-4c93-bd64-968740cba849",
            "670047ff-960c-421f-9c36-22f39c8b4d2d",
            "9884c89b-599c-4ae0-b9b4-6ddff35b9af9",
            "95e936d0-4998-4080-a9ab-3de12d4aeab4",
            "665626c6-9940-4a52-a6ee-db6bc2a179a3",
            "fb7ed443-dce8-47b6-abf7-dfe4b53c0071",
            "5bc59c9e-0a9e-4a38-b240-e1806f9d0d70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b49e6422-cf16-446f-aaac-f25d54db1dad",
          "title": "Test 10Lines game: 10, 25 -  30",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 331,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4833467f-d525-4612-9e43-80159e17f79b",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "137f97a6-5f78-40ae-befc-bfc90f96814d",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "fa91790d-927b-4719-89f6-9686e5993ffb",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "869ff889-5b7d-4bf1-b378-5fc194af700b",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "eb9d59d1-ad6c-4ea5-83d9-41af962d1469",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d515a4f4-a4ed-4806-9e2b-5b62949b5e42",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "306c9e0e-1d72-4d4d-91f8-e9eb6a1bdd03",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "61d957d4-f781-4804-b0b4-02b248f08053",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "82fbd507-0830-4a71-9708-94f1435af9bc",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 check correct total FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "762ffb57-7473-4d72-9ebf-80f88116fe68",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c0f19247-7679-4018-9a05-bac91b90db48",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7178b52a-3acb-4585-8048-a8c07998a02c",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "bc9a15b1-a299-4c73-9d9a-b64dd684b49f",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "168147f6-f900-4173-afa0-fa4cd046de96",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "7799a2cd-27d7-414e-893c-0604504246a1",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "267d6245-e6fa-431e-a9aa-68ac79fdd84d",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e6d70ad1-f1c6-43af-94b4-b382e48e9f73",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  30 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f28bbf0c-e097-4f3f-ab1e-dd6661537a5f",
              "parentUUID": "b49e6422-cf16-446f-aaac-f25d54db1dad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa91790d-927b-4719-89f6-9686e5993ffb",
            "869ff889-5b7d-4bf1-b378-5fc194af700b",
            "eb9d59d1-ad6c-4ea5-83d9-41af962d1469",
            "d515a4f4-a4ed-4806-9e2b-5b62949b5e42",
            "306c9e0e-1d72-4d4d-91f8-e9eb6a1bdd03",
            "61d957d4-f781-4804-b0b4-02b248f08053",
            "82fbd507-0830-4a71-9708-94f1435af9bc",
            "762ffb57-7473-4d72-9ebf-80f88116fe68",
            "c0f19247-7679-4018-9a05-bac91b90db48",
            "7178b52a-3acb-4585-8048-a8c07998a02c",
            "bc9a15b1-a299-4c73-9d9a-b64dd684b49f",
            "168147f6-f900-4173-afa0-fa4cd046de96",
            "7799a2cd-27d7-414e-893c-0604504246a1",
            "267d6245-e6fa-431e-a9aa-68ac79fdd84d",
            "e6d70ad1-f1c6-43af-94b4-b382e48e9f73",
            "f28bbf0c-e097-4f3f-ab1e-dd6661537a5f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "71795ca5-cabe-4da1-996b-f2598ad00298",
          "title": "Test 10Lines game: 10, 25 -  31",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 335,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "fa3cf745-87dd-40bd-b162-8dd5d093ce3f",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "20f6ee4f-e21a-4984-a941-7694757159b2",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "54d259d0-2faa-487a-bac6-866c409baf7b",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "6301849d-f2cd-45fe-9d8a-9a41856129ae",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "2a1c5d97-e1ea-4624-9ec4-f36f07fa9125",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d6f6b857-4bd1-4948-bc72-85161483e7a4",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "eb79a1dd-7b81-4000-a140-074f887a4354",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "3bae8be0-f4eb-41f2-ac65-6b6581e716f5",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "98e9940c-8bdc-4802-b25e-62cfd1041b6e",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "b2d3d9cb-cb90-43e6-b1f6-189107e6d748",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "be507de2-31bd-4cb5-9686-839a70f89db5",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6ea91cfb-7815-4e3d-b986-d62bb6bdee3a",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "c89e2b40-964d-4b6e-a513-e62d1e3efc02",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "d0095058-69c7-4717-9db0-9a183e0d51ca",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "568148ef-afbc-42d0-8d71-1a1692f4363e",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "8ca4f484-6594-4232-85d8-f503f556ca94",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "bf42c544-69f6-48ac-b397-10e9c6baa30e",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  31 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "0571e603-92f5-4424-a493-6220a57f8600",
              "parentUUID": "71795ca5-cabe-4da1-996b-f2598ad00298",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54d259d0-2faa-487a-bac6-866c409baf7b",
            "6301849d-f2cd-45fe-9d8a-9a41856129ae",
            "2a1c5d97-e1ea-4624-9ec4-f36f07fa9125",
            "d6f6b857-4bd1-4948-bc72-85161483e7a4",
            "eb79a1dd-7b81-4000-a140-074f887a4354",
            "3bae8be0-f4eb-41f2-ac65-6b6581e716f5",
            "98e9940c-8bdc-4802-b25e-62cfd1041b6e",
            "b2d3d9cb-cb90-43e6-b1f6-189107e6d748",
            "be507de2-31bd-4cb5-9686-839a70f89db5",
            "6ea91cfb-7815-4e3d-b986-d62bb6bdee3a",
            "c89e2b40-964d-4b6e-a513-e62d1e3efc02",
            "d0095058-69c7-4717-9db0-9a183e0d51ca",
            "568148ef-afbc-42d0-8d71-1a1692f4363e",
            "8ca4f484-6594-4232-85d8-f503f556ca94",
            "bf42c544-69f6-48ac-b397-10e9c6baa30e",
            "0571e603-92f5-4424-a493-6220a57f8600"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "fa9ed867-4d14-40ee-b994-55e8a348476d",
          "title": "Test 10Lines game: 10, 25 -  32",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 473,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b79e431c-1403-4599-ac02-890e36406558",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "538f04bb-31e3-45c4-b445-a38318f33d57",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "4f1f8071-2e5b-4722-8eda-561f773e94cc",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "cf4fa337-15c0-4d97-b478-6f4ec3342d64",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "c8a46b52-c1b8-4385-940d-146ef7a5f735",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 check correct position of winning symbol",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "b2be8c12-b348-46c4-b12d-53c074215b01",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 check correct accrual of winnings",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "6ff3898e-b471-4bbd-90bd-0f550fee724a",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "ade0ff6e-542b-4294-95cb-b2ab7cc0d81a",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a36dfd08-2824-40e9-a134-dd03ac846082",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "35f687c9-d2fb-4201-b278-2132dea83c20",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "372997ff-3fd7-4af1-8c13-14384b36b95e",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e9704097-9c2b-4567-ae4c-ff6461536cc6",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "ee2ffd0f-59b3-46cb-80e1-133d15350f32",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5df5e2d7-c9fc-46e9-86d7-acdad6882054",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "4b760d49-c1e9-41fd-aad9-85a106512b28",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 check type of win Lines",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "f2f68de0-ce6d-4ed8-8b85-b9fa7643ed6a",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e8939ee5-12b0-4cd1-a134-fbfbf1a27245",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  32 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c8f54601-3a4c-4711-b857-f6a58b4c97ed",
              "parentUUID": "fa9ed867-4d14-40ee-b994-55e8a348476d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f1f8071-2e5b-4722-8eda-561f773e94cc",
            "cf4fa337-15c0-4d97-b478-6f4ec3342d64",
            "c8a46b52-c1b8-4385-940d-146ef7a5f735",
            "b2be8c12-b348-46c4-b12d-53c074215b01",
            "6ff3898e-b471-4bbd-90bd-0f550fee724a",
            "ade0ff6e-542b-4294-95cb-b2ab7cc0d81a",
            "a36dfd08-2824-40e9-a134-dd03ac846082",
            "35f687c9-d2fb-4201-b278-2132dea83c20",
            "372997ff-3fd7-4af1-8c13-14384b36b95e",
            "e9704097-9c2b-4567-ae4c-ff6461536cc6",
            "ee2ffd0f-59b3-46cb-80e1-133d15350f32",
            "5df5e2d7-c9fc-46e9-86d7-acdad6882054",
            "4b760d49-c1e9-41fd-aad9-85a106512b28",
            "f2f68de0-ce6d-4ed8-8b85-b9fa7643ed6a",
            "e8939ee5-12b0-4cd1-a134-fbfbf1a27245",
            "c8f54601-3a4c-4711-b857-f6a58b4c97ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
          "title": "Test 10Lines game: 10, 25 -  33",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 322,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "3552d03c-bf9e-482f-ab2e-155903add009",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "7d49d497-5cd2-4d97-96cd-9234d4b4c2cf",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "f9767826-c4bb-4f22-8f1c-2f9db34551c2",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "706489a5-b3b5-48d6-a727-a97f17466221",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "e87b0294-7477-4ff8-8ef3-6e8bfe593c15",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "2ba644ce-3cff-4abc-82ca-31ef366425fb",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "e2cf7588-4c68-4c9f-9bf5-61fd6d4c7ab6",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "ec9fa534-718e-46ea-b850-893d8c60b296",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ae7926f7-96ed-4c37-8b49-9237e6b8b3ab",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "9a37bc56-350e-4f61-81da-14af1a75446b",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ce5308e0-c5d3-4bcb-b3bf-f659edb9e9fa",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3995a160-5674-4a0c-a4f0-4444b4a2387e",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "c1440d1f-30d3-4e91-b6e4-fcdcbb3f1c7d",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5135c67f-eea6-4f25-871d-f659bbb76a88",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "894e3e1f-35ce-4201-80a9-cf55f08333bf",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "a435923c-0176-4eea-8e38-917e33ac8e12",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "b72a1715-a5f7-4267-adfb-561da05ff45a",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  33 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e28d0ddb-9882-407f-b839-2dc338604117",
              "parentUUID": "689d5fb7-0429-48f5-b1f9-3c9416367b59",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9767826-c4bb-4f22-8f1c-2f9db34551c2",
            "706489a5-b3b5-48d6-a727-a97f17466221",
            "e87b0294-7477-4ff8-8ef3-6e8bfe593c15",
            "2ba644ce-3cff-4abc-82ca-31ef366425fb",
            "e2cf7588-4c68-4c9f-9bf5-61fd6d4c7ab6",
            "ec9fa534-718e-46ea-b850-893d8c60b296",
            "ae7926f7-96ed-4c37-8b49-9237e6b8b3ab",
            "9a37bc56-350e-4f61-81da-14af1a75446b",
            "ce5308e0-c5d3-4bcb-b3bf-f659edb9e9fa",
            "3995a160-5674-4a0c-a4f0-4444b4a2387e",
            "c1440d1f-30d3-4e91-b6e4-fcdcbb3f1c7d",
            "5135c67f-eea6-4f25-871d-f659bbb76a88",
            "894e3e1f-35ce-4201-80a9-cf55f08333bf",
            "a435923c-0176-4eea-8e38-917e33ac8e12",
            "b72a1715-a5f7-4267-adfb-561da05ff45a",
            "e28d0ddb-9882-407f-b839-2dc338604117"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
          "title": "Test 10Lines game: 10, 25 -  34",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 328,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "11298f7e-19b8-4067-8a64-7001a6f7af9e",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "829da3d1-106a-4bac-a891-abcb5e7fae2b",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "6d4bb747-afba-4dd8-b8d1-30d517d0f833",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "883870dd-932c-40f8-900d-a554442bc706",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "b965f26b-db9b-4f5c-8bfe-cc1f8f34e3e0",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "b6dd9dbf-000c-4a65-8b17-31818959b0a4",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "fab7d7bf-e629-45ad-8ec2-da4441f92514",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d6022177-3bb0-42ae-a894-1767af09eaeb",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c3e7093e-d521-460c-9447-fa77c7bd6cdf",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "4c059f18-d89a-417b-a47a-e15020677dfe",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ccc24d73-dddc-474f-b6b5-1e81b6048245",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "76ccb14a-0e62-42c4-ab6d-8a6971e44b40",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "c2e772ce-2977-493a-8c1a-96c030171282",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0180bdc1-8b5d-49c5-aa6e-11f9fc9b6715",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "10b182d8-9a57-4a35-bab8-30eb496521ef",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "a60e4051-ae39-4590-9e90-cbdf20957746",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "43e33813-bc9e-42ce-a7a4-62a6d1356031",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  34 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b73e3347-040f-4731-bf01-1abfce5e7a4e",
              "parentUUID": "82e6858d-471c-486d-bf53-6d0da9d6eb35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d4bb747-afba-4dd8-b8d1-30d517d0f833",
            "883870dd-932c-40f8-900d-a554442bc706",
            "b965f26b-db9b-4f5c-8bfe-cc1f8f34e3e0",
            "b6dd9dbf-000c-4a65-8b17-31818959b0a4",
            "fab7d7bf-e629-45ad-8ec2-da4441f92514",
            "d6022177-3bb0-42ae-a894-1767af09eaeb",
            "c3e7093e-d521-460c-9447-fa77c7bd6cdf",
            "4c059f18-d89a-417b-a47a-e15020677dfe",
            "ccc24d73-dddc-474f-b6b5-1e81b6048245",
            "76ccb14a-0e62-42c4-ab6d-8a6971e44b40",
            "c2e772ce-2977-493a-8c1a-96c030171282",
            "0180bdc1-8b5d-49c5-aa6e-11f9fc9b6715",
            "10b182d8-9a57-4a35-bab8-30eb496521ef",
            "a60e4051-ae39-4590-9e90-cbdf20957746",
            "43e33813-bc9e-42ce-a7a4-62a6d1356031",
            "b73e3347-040f-4731-bf01-1abfce5e7a4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "da74a8cd-6fde-445e-9409-5665111ea958",
          "title": "Test 10Lines game: 10, 25 -  35",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 282,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "71a7beaa-2770-4e2a-9021-86efdffc267f",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "87d2c008-3e67-414f-aed9-c89dab621c4e",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "bd9808d6-39a7-46be-ac3b-0608195d70dd",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "9c5cff6c-356f-4f44-a3cd-5ad7cc114d00",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "a33e8d95-cdca-4df0-afe3-46a52f909542",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "2bd8c812-7f2f-4b93-8881-05fa4a1881e3",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "4a55807e-2573-4251-bd9a-4a903fe25d46",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "50207fcc-2d92-49fc-b030-10885bbfe27b",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4bcc684a-a0a8-47d2-8576-666e01b0903c",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "de639c2e-46d0-4140-90b2-b2d5d5f5e418",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3e07569c-d0e1-4397-ad61-1dd5474488e3",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1e9bf560-6c89-4d18-9ef5-71b7f939d8db",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "9de4b7a8-6453-4560-a323-854465171d9a",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "e2aba868-3737-4c83-b8d8-ec57b6075bf5",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "8d56fb4d-4ebe-4487-b8cb-eaa84775b56c",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "bae4e49e-efae-44db-8c14-b5b7cc89f37a",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "aac38242-da5c-4f8e-b0c7-7b92f7d079de",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  35 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f05ee915-2067-43a4-8411-9af12f17686c",
              "parentUUID": "da74a8cd-6fde-445e-9409-5665111ea958",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd9808d6-39a7-46be-ac3b-0608195d70dd",
            "9c5cff6c-356f-4f44-a3cd-5ad7cc114d00",
            "a33e8d95-cdca-4df0-afe3-46a52f909542",
            "2bd8c812-7f2f-4b93-8881-05fa4a1881e3",
            "4a55807e-2573-4251-bd9a-4a903fe25d46",
            "50207fcc-2d92-49fc-b030-10885bbfe27b",
            "4bcc684a-a0a8-47d2-8576-666e01b0903c",
            "de639c2e-46d0-4140-90b2-b2d5d5f5e418",
            "3e07569c-d0e1-4397-ad61-1dd5474488e3",
            "1e9bf560-6c89-4d18-9ef5-71b7f939d8db",
            "9de4b7a8-6453-4560-a323-854465171d9a",
            "e2aba868-3737-4c83-b8d8-ec57b6075bf5",
            "8d56fb4d-4ebe-4487-b8cb-eaa84775b56c",
            "bae4e49e-efae-44db-8c14-b5b7cc89f37a",
            "aac38242-da5c-4f8e-b0c7-7b92f7d079de",
            "f05ee915-2067-43a4-8411-9af12f17686c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
          "title": "Test 10Lines game: 10, 25 -  36",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 296,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "84038661-7f36-40f6-95c7-3d808db1c56f",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "5e57dcd6-2f5e-4188-9911-d4a4a5e045cb",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "de562ac9-04d0-45f5-8ec8-01e65a99436f",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "d6b1abea-7209-43de-abb7-7c1544184b0b",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "277c82ea-4738-43ed-8d6b-76e2be597a18",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "ac502069-133e-44da-a75d-16eeb461e568",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "40a47c19-eccc-460a-86a5-a1cf29e30eb4",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "ae22a27b-2ce1-4309-b108-ff288a07418e",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d7bf20bc-8861-42f0-8781-dbd6cbed2011",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "86d6e7a3-74f8-446d-8995-06a64b48ced4",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cef32ec1-b38e-4492-94f8-ed5921034c61",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5b22ff5e-4e86-4cea-a59a-35310078bc9d",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "b6e1efc3-984d-4d4d-902c-9b8da35eec91",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a0664441-f6da-4bcd-9080-2ad4ebc18d76",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "3fc96b4f-6bd8-4059-b6fe-ca347416f380",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "27c1e425-f39a-4480-a446-3987062c2f33",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "8c07c596-243f-46b9-acdd-14151ca18790",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  36 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "4c998855-b3af-4943-ab2f-004f0b0abb80",
              "parentUUID": "d14d1f8e-56cc-45be-b453-8ab9ca0fbc14",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de562ac9-04d0-45f5-8ec8-01e65a99436f",
            "d6b1abea-7209-43de-abb7-7c1544184b0b",
            "277c82ea-4738-43ed-8d6b-76e2be597a18",
            "ac502069-133e-44da-a75d-16eeb461e568",
            "40a47c19-eccc-460a-86a5-a1cf29e30eb4",
            "ae22a27b-2ce1-4309-b108-ff288a07418e",
            "d7bf20bc-8861-42f0-8781-dbd6cbed2011",
            "86d6e7a3-74f8-446d-8995-06a64b48ced4",
            "cef32ec1-b38e-4492-94f8-ed5921034c61",
            "5b22ff5e-4e86-4cea-a59a-35310078bc9d",
            "b6e1efc3-984d-4d4d-902c-9b8da35eec91",
            "a0664441-f6da-4bcd-9080-2ad4ebc18d76",
            "3fc96b4f-6bd8-4059-b6fe-ca347416f380",
            "27c1e425-f39a-4480-a446-3987062c2f33",
            "8c07c596-243f-46b9-acdd-14151ca18790",
            "4c998855-b3af-4943-ab2f-004f0b0abb80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
          "title": "Test 10Lines game: 10, 25 -  37",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 351,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "378cea0e-8d8d-4012-8d6a-e761d7ca7552",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "475ce406-00a8-4a29-ad19-64fce7628902",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "4a629cba-cd20-4698-b6f0-440c5c34710d",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "a621afbe-1ed1-458d-aab2-cc9193e5b8b5",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "0e518736-efff-4977-b1e3-10c5faef4e08",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "e282bc6d-89cd-47ca-99ec-c39595a23314",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "7efadd9a-c458-4f47-b7f1-f760c4a42811",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "b192804b-3aa5-4c3d-a32c-5a7667dc98be",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9aa45656-cbce-4d72-bec2-ddd510b9f6ad",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 check correct total FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "4174f84c-8ccf-4e1f-af27-a4bdd9a102e7",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8da6b29f-b41a-4adc-9e67-e58b52d59b8a",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0493db01-5049-4015-aedc-2cc729146152",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "0dcef352-4d69-4e44-8509-3d7078498003",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "c5475d16-7130-459d-a504-c4ecc17744e7",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "0f7e713f-8ca1-4ace-8341-5b7cf501bb0a",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "69e5f435-1b1d-4f8b-aa0d-f1704d91851a",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "1b5766eb-7138-456b-9374-4508a5fd6977",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  37 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "90f03486-1464-4a1f-8408-ca8710a0f8d8",
              "parentUUID": "2e427a2a-2f29-4f9d-aebd-ae828576e6b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a629cba-cd20-4698-b6f0-440c5c34710d",
            "a621afbe-1ed1-458d-aab2-cc9193e5b8b5",
            "0e518736-efff-4977-b1e3-10c5faef4e08",
            "e282bc6d-89cd-47ca-99ec-c39595a23314",
            "7efadd9a-c458-4f47-b7f1-f760c4a42811",
            "b192804b-3aa5-4c3d-a32c-5a7667dc98be",
            "9aa45656-cbce-4d72-bec2-ddd510b9f6ad",
            "4174f84c-8ccf-4e1f-af27-a4bdd9a102e7",
            "8da6b29f-b41a-4adc-9e67-e58b52d59b8a",
            "0493db01-5049-4015-aedc-2cc729146152",
            "0dcef352-4d69-4e44-8509-3d7078498003",
            "c5475d16-7130-459d-a504-c4ecc17744e7",
            "0f7e713f-8ca1-4ace-8341-5b7cf501bb0a",
            "69e5f435-1b1d-4f8b-aa0d-f1704d91851a",
            "1b5766eb-7138-456b-9374-4508a5fd6977",
            "90f03486-1464-4a1f-8408-ca8710a0f8d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3214bf66-ec06-4cb1-8130-73961128c7cf",
          "title": "Test 10Lines game: 10, 25 -  38",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 342,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ae6b5b74-3b0f-4a47-9b12-ee0621e0b2d0",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "02c2d44b-4693-4cb3-a647-dd7d44aa8428",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "218bda04-0127-417c-ba07-8ed56a83be32",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "fad630c3-3814-48f7-b839-4040d2914502",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "4555f07e-0a4b-425e-801c-04a46402d4fc",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "cdbaf46a-fe01-4053-9e6f-d854ae16e9ce",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "2bae9e48-75d3-47b8-bd88-06a72a4577fa",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "2ee2a47e-1687-4251-814c-cc50b9439ec9",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f89632cf-7396-4dea-8ea0-583a361040a7",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "3bbb50b6-8390-4c9f-ba03-b496b73e8f18",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a066acb7-cfd7-48f4-8248-d8adb224803d",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "94292b74-7139-4bf7-af31-196756a59aaa",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "28d18ed9-6143-4cc7-89e3-fa83d232ce94",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "d28dff11-7480-485f-84e0-57361d10cd6b",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "42a38cff-26cc-43cd-84a2-617f8909df9d",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "d29ee346-14c9-4094-a892-376e543da26d",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "55eee561-e397-427e-bd20-8c60b0f67b00",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  38 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "25ac05df-ff77-4ac6-8854-f71d06c1212b",
              "parentUUID": "3214bf66-ec06-4cb1-8130-73961128c7cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "218bda04-0127-417c-ba07-8ed56a83be32",
            "fad630c3-3814-48f7-b839-4040d2914502",
            "4555f07e-0a4b-425e-801c-04a46402d4fc",
            "cdbaf46a-fe01-4053-9e6f-d854ae16e9ce",
            "2bae9e48-75d3-47b8-bd88-06a72a4577fa",
            "2ee2a47e-1687-4251-814c-cc50b9439ec9",
            "f89632cf-7396-4dea-8ea0-583a361040a7",
            "3bbb50b6-8390-4c9f-ba03-b496b73e8f18",
            "a066acb7-cfd7-48f4-8248-d8adb224803d",
            "94292b74-7139-4bf7-af31-196756a59aaa",
            "28d18ed9-6143-4cc7-89e3-fa83d232ce94",
            "d28dff11-7480-485f-84e0-57361d10cd6b",
            "42a38cff-26cc-43cd-84a2-617f8909df9d",
            "d29ee346-14c9-4094-a892-376e543da26d",
            "55eee561-e397-427e-bd20-8c60b0f67b00",
            "25ac05df-ff77-4ac6-8854-f71d06c1212b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d332878b-8b18-4936-a6ae-86f71a56f00d",
          "title": "Test 10Lines game: 10, 25 -  39",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 312,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0ff41976-ba66-4e1b-ad2a-f2f662f3c03b",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "834f38b2-648c-44ce-8165-252b2754b690",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "640550d8-a4bb-4640-8ec9-16289c70a26d",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "6427c3d1-4890-48ac-ba97-c4d9c0737a84",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "6d0778c8-47b9-4435-b6d2-3f92940c94f2",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "dc17d599-2cdb-4535-a0cd-99cf3332e8a6",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "bd157c08-fffc-4125-ab9b-278d4d773f4b",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a35805e3-293d-45aa-9569-5fca7b4fa764",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4e8b3056-c7d4-4dbc-9422-c9aaf6e9d6e1",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "0808178d-3271-4854-ae4a-cfb2c218b0c4",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "92171659-8d04-4806-981e-9ce913e1d4b3",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ed4a38f5-d17e-4a87-92cf-b49ae83de5c0",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "7cfdb6a5-d31d-4d43-8362-a10ad1c265a6",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0d86f165-cd0c-446c-8ba3-6ea1a4229afe",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "c27e53df-3b37-431d-95ee-d7c2a1b6807b",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "016c7f9b-3c12-4b82-8fff-683d064076fc",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "50a12204-4687-4e82-a103-21afc4bf91bb",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  39 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3e14f9d1-550f-4c6f-a598-d1457e581cab",
              "parentUUID": "d332878b-8b18-4936-a6ae-86f71a56f00d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "640550d8-a4bb-4640-8ec9-16289c70a26d",
            "6427c3d1-4890-48ac-ba97-c4d9c0737a84",
            "6d0778c8-47b9-4435-b6d2-3f92940c94f2",
            "dc17d599-2cdb-4535-a0cd-99cf3332e8a6",
            "bd157c08-fffc-4125-ab9b-278d4d773f4b",
            "a35805e3-293d-45aa-9569-5fca7b4fa764",
            "4e8b3056-c7d4-4dbc-9422-c9aaf6e9d6e1",
            "0808178d-3271-4854-ae4a-cfb2c218b0c4",
            "92171659-8d04-4806-981e-9ce913e1d4b3",
            "ed4a38f5-d17e-4a87-92cf-b49ae83de5c0",
            "7cfdb6a5-d31d-4d43-8362-a10ad1c265a6",
            "0d86f165-cd0c-446c-8ba3-6ea1a4229afe",
            "c27e53df-3b37-431d-95ee-d7c2a1b6807b",
            "016c7f9b-3c12-4b82-8fff-683d064076fc",
            "50a12204-4687-4e82-a103-21afc4bf91bb",
            "3e14f9d1-550f-4c6f-a598-d1457e581cab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
          "title": "Test 10Lines game: 10, 25 -  40",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 354,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9afd4022-386d-448e-a320-7f119402328f",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "1a735a00-5736-4386-8853-bc5df206f031",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "1b52cedc-4941-4c66-866a-ede05963e53a",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "15345dbf-87f6-4286-9e0f-805bcf62043a",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "16412efa-5e7e-4e2d-8a8a-4def6d1943de",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "1acf3ff2-8146-44a9-9c26-3b7f2d2be64a",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "04f60276-8199-479c-b24e-f00604bf96f1",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "3e25c5ca-0d46-4a16-a1f2-b4b5a26f07be",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c26f387c-9ea7-4494-90b4-3d735c070d8a",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "1d418111-81ca-4edf-95a0-e1b03d6abbbe",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "72fa38ef-143d-410e-bd1a-b23631c91c14",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d04533a9-9017-4d86-84a0-8a7bd2197fbd",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "d3ca72f7-53fa-4991-97a2-ead21a58d33a",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "790077ab-054a-4607-80fc-fa141a791a82",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "eed11cbb-fc08-4ae3-85b0-894ee1ee653c",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "0ab8e738-a2ac-49c2-a70c-f145b9b5992c",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "50eef487-97a2-412d-aa8d-3abb95d170e2",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  40 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "0691f5c3-ab31-46b5-abaa-fb6d5830a1cd",
              "parentUUID": "25b7bbae-eca1-4c1f-85c6-9adaf539c413",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b52cedc-4941-4c66-866a-ede05963e53a",
            "15345dbf-87f6-4286-9e0f-805bcf62043a",
            "16412efa-5e7e-4e2d-8a8a-4def6d1943de",
            "1acf3ff2-8146-44a9-9c26-3b7f2d2be64a",
            "04f60276-8199-479c-b24e-f00604bf96f1",
            "3e25c5ca-0d46-4a16-a1f2-b4b5a26f07be",
            "c26f387c-9ea7-4494-90b4-3d735c070d8a",
            "1d418111-81ca-4edf-95a0-e1b03d6abbbe",
            "72fa38ef-143d-410e-bd1a-b23631c91c14",
            "d04533a9-9017-4d86-84a0-8a7bd2197fbd",
            "d3ca72f7-53fa-4991-97a2-ead21a58d33a",
            "790077ab-054a-4607-80fc-fa141a791a82",
            "eed11cbb-fc08-4ae3-85b0-894ee1ee653c",
            "0ab8e738-a2ac-49c2-a70c-f145b9b5992c",
            "50eef487-97a2-412d-aa8d-3abb95d170e2",
            "0691f5c3-ab31-46b5-abaa-fb6d5830a1cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
          "title": "Test 10Lines game: 10, 25 -  41",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 321,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4e889ced-646c-402d-922a-8713921309cd",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "21384483-5e9f-4d8a-af1e-fff47b42d576",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d5c76c72-a189-4bbd-a47a-e1081265638b",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "9d972ecf-bdf6-4760-b38a-f99d6a6f082b",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "dc4b35c8-8417-4107-8c57-1ba017a1ef5e",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "fb549981-7dd2-41ee-ae94-7cfa1f21beb5",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "6213fd15-9499-4bfc-a4b7-ce31279fbe82",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "295bb2d3-d776-4e6c-83df-786d30489db8",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b8180f0a-5956-4721-b281-2a61e6318b3e",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "59481d79-e39f-47d5-b1b2-9a4a24cfd4c3",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "aed54746-8655-462c-a5ae-ec31e7ed8fee",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a350a6e0-8c2a-4be4-93ff-08bc60ef833b",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "34bddc72-c2f8-4f11-a8cb-d0c0a3584ae8",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "2152761b-5d9d-4a0b-abc0-b1f445eeeb49",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "964ab1ef-a00c-4e84-b753-22d57a74eeda",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "10ba6c5f-5468-4c64-b90d-28ee07e15cf1",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "a11efa32-5403-4be9-991d-72b68a163b76",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  41 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "571eb266-9aab-4c9d-b7e0-4ce36737a16e",
              "parentUUID": "7bae6c1a-6f27-43e3-a625-58906f9a4bbf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5c76c72-a189-4bbd-a47a-e1081265638b",
            "9d972ecf-bdf6-4760-b38a-f99d6a6f082b",
            "dc4b35c8-8417-4107-8c57-1ba017a1ef5e",
            "fb549981-7dd2-41ee-ae94-7cfa1f21beb5",
            "6213fd15-9499-4bfc-a4b7-ce31279fbe82",
            "295bb2d3-d776-4e6c-83df-786d30489db8",
            "b8180f0a-5956-4721-b281-2a61e6318b3e",
            "59481d79-e39f-47d5-b1b2-9a4a24cfd4c3",
            "aed54746-8655-462c-a5ae-ec31e7ed8fee",
            "a350a6e0-8c2a-4be4-93ff-08bc60ef833b",
            "34bddc72-c2f8-4f11-a8cb-d0c0a3584ae8",
            "2152761b-5d9d-4a0b-abc0-b1f445eeeb49",
            "964ab1ef-a00c-4e84-b753-22d57a74eeda",
            "10ba6c5f-5468-4c64-b90d-28ee07e15cf1",
            "a11efa32-5403-4be9-991d-72b68a163b76",
            "571eb266-9aab-4c9d-b7e0-4ce36737a16e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
          "title": "Test 10Lines game: 10, 25 -  42",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 342,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "cb325871-50cb-4f3b-afb5-f5b0d4338d13",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "b0e5b18e-8af2-40ea-998f-2b6b1ecebd94",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d36739cc-f945-44b4-9d7d-10451a2b3ca0",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "d4b03a23-2229-4bdd-85d9-0ddc56667c13",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "8bc0405e-78b2-4053-bc84-8691ed4c37ce",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "fe918bf0-9ca7-4922-8e48-3606bfef7bfd",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "1b516389-678d-4dce-b0dc-662c15df1d9d",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "ad49a79a-dc63-4ff6-9d2f-b84fd0430031",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "65c35693-2db4-40e6-8ea1-c62061335ad1",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "1e9224d1-ae3d-4f60-9a11-e4c4cceaf1e0",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ad66e61f-d255-4318-8abf-5fa0a04d0be9",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "536085c5-8fd4-488d-aa9f-c04bc51d61ee",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "519ff5ad-3e14-40b6-9d7c-805d08aa1ce8",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5ff8af1c-68bd-4ef9-9ff6-0d8b418e35c5",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ab198946-3d3a-4ed2-811f-6a36ad831cd3",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "34dae908-4c25-478e-be28-931bbc80512b",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "256d3a95-d555-40e7-a88f-caf12eb39913",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  42 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "0ba08224-c7bf-44c9-863f-d46b829c51a9",
              "parentUUID": "2c19d9cd-f87d-49b6-8b9b-0ddd4b733299",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d36739cc-f945-44b4-9d7d-10451a2b3ca0",
            "d4b03a23-2229-4bdd-85d9-0ddc56667c13",
            "8bc0405e-78b2-4053-bc84-8691ed4c37ce",
            "fe918bf0-9ca7-4922-8e48-3606bfef7bfd",
            "1b516389-678d-4dce-b0dc-662c15df1d9d",
            "ad49a79a-dc63-4ff6-9d2f-b84fd0430031",
            "65c35693-2db4-40e6-8ea1-c62061335ad1",
            "1e9224d1-ae3d-4f60-9a11-e4c4cceaf1e0",
            "ad66e61f-d255-4318-8abf-5fa0a04d0be9",
            "536085c5-8fd4-488d-aa9f-c04bc51d61ee",
            "519ff5ad-3e14-40b6-9d7c-805d08aa1ce8",
            "5ff8af1c-68bd-4ef9-9ff6-0d8b418e35c5",
            "ab198946-3d3a-4ed2-811f-6a36ad831cd3",
            "34dae908-4c25-478e-be28-931bbc80512b",
            "256d3a95-d555-40e7-a88f-caf12eb39913",
            "0ba08224-c7bf-44c9-863f-d46b829c51a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "727bee99-fe1c-4215-b381-707b648b22b4",
          "title": "Test 10Lines game: 10, 25 -  43",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 322,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e1ced7ab-9da4-4398-ba96-872771e72fa8",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "1426599a-a246-4530-ba49-88b0ed9f6909",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "beebc274-84b0-4e45-b147-50266a77e708",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "c489ffd9-065c-4d0b-92b5-6dbf86ceeeb7",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "359ba782-d5c2-4767-a7bc-1a5efd3b294a",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "7a4c21f6-dd72-48f7-ae4f-a05000bbf187",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "145cb45d-c3c2-4753-ad98-26f433c17245",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "838f6b44-b885-4c95-a69c-769d489eb781",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9fc51730-436e-44ed-bca3-32e84f28574d",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "9245843f-ec7f-43e7-a7b7-e800989899ac",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2aef7fa4-487e-48db-9f91-f007527a478d",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "da93afeb-f872-40ef-bca1-7948b7e0a54d",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "a5cd9af1-65ed-4de5-a240-fdcd6f9571e7",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "9bcd1ca2-ebed-4d13-90f1-269d222ece78",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "7c95451c-87c2-4e77-aa4d-17b1fea3c982",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "394b7bad-d50d-4956-b2a4-a7defff3f596",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "7e73273d-f251-4969-8171-afb9e10907a9",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  43 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "24c51cbb-4f51-4c6c-b666-6253a81b460d",
              "parentUUID": "727bee99-fe1c-4215-b381-707b648b22b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "beebc274-84b0-4e45-b147-50266a77e708",
            "c489ffd9-065c-4d0b-92b5-6dbf86ceeeb7",
            "359ba782-d5c2-4767-a7bc-1a5efd3b294a",
            "7a4c21f6-dd72-48f7-ae4f-a05000bbf187",
            "145cb45d-c3c2-4753-ad98-26f433c17245",
            "838f6b44-b885-4c95-a69c-769d489eb781",
            "9fc51730-436e-44ed-bca3-32e84f28574d",
            "9245843f-ec7f-43e7-a7b7-e800989899ac",
            "2aef7fa4-487e-48db-9f91-f007527a478d",
            "da93afeb-f872-40ef-bca1-7948b7e0a54d",
            "a5cd9af1-65ed-4de5-a240-fdcd6f9571e7",
            "9bcd1ca2-ebed-4d13-90f1-269d222ece78",
            "7c95451c-87c2-4e77-aa4d-17b1fea3c982",
            "394b7bad-d50d-4956-b2a4-a7defff3f596",
            "7e73273d-f251-4969-8171-afb9e10907a9",
            "24c51cbb-4f51-4c6c-b666-6253a81b460d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
          "title": "Test 10Lines game: 10, 25 -  44",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 329,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "38ecfbd9-6ce9-4a5a-8107-4fab221c80e6",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "a594155b-28f1-414d-8ba7-85a019439b87",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "33eb7b35-c567-488d-b6f0-6e3f8c921fdd",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "7bd94a5e-2936-4b3a-a2af-36ff832a3355",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "01f3d4f3-0e0e-4424-bdd2-6cae4107ad51",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "95c26317-9e06-4270-b22e-e7c8780d99e5",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "0e0d23ce-b750-42f5-812d-9f388ec5dd39",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "62251bc0-1ead-450f-8c1b-42a1a9676c27",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0e8eb07c-d22a-468e-aaa2-65fa1ee7904d",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "6ef25718-4189-4fcc-93a0-c244dbea93dc",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4deb82dc-2e41-456a-a0dc-84b2f2f139ba",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1dbb302c-2156-4b4f-889b-50d6a429fefa",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "5de02414-5968-4c6a-af6b-d3ef464c4976",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a354b954-0568-49b6-a108-79aea46a6caf",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "22f8a572-63ef-4725-b5b4-73a2e6ae8375",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "7b32266b-412e-4951-82f9-b7c14f50e13a",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "5b70309c-d0ed-4999-a2ab-54fa272bebeb",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  44 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "efaebf3f-7111-440a-812c-07626bedddb9",
              "parentUUID": "ebaffdd0-ba72-44d7-9811-7e01e9147f2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33eb7b35-c567-488d-b6f0-6e3f8c921fdd",
            "7bd94a5e-2936-4b3a-a2af-36ff832a3355",
            "01f3d4f3-0e0e-4424-bdd2-6cae4107ad51",
            "95c26317-9e06-4270-b22e-e7c8780d99e5",
            "0e0d23ce-b750-42f5-812d-9f388ec5dd39",
            "62251bc0-1ead-450f-8c1b-42a1a9676c27",
            "0e8eb07c-d22a-468e-aaa2-65fa1ee7904d",
            "6ef25718-4189-4fcc-93a0-c244dbea93dc",
            "4deb82dc-2e41-456a-a0dc-84b2f2f139ba",
            "1dbb302c-2156-4b4f-889b-50d6a429fefa",
            "5de02414-5968-4c6a-af6b-d3ef464c4976",
            "a354b954-0568-49b6-a108-79aea46a6caf",
            "22f8a572-63ef-4725-b5b4-73a2e6ae8375",
            "7b32266b-412e-4951-82f9-b7c14f50e13a",
            "5b70309c-d0ed-4999-a2ab-54fa272bebeb",
            "efaebf3f-7111-440a-812c-07626bedddb9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
          "title": "Test 10Lines game: 10, 25 -  45",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 766,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a1e54260-36b8-4960-a3cc-19fb6bc76dea",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "9701a8ff-94b5-4f07-a619-f4ad82e23563",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "2cde5e19-0e59-47c4-9992-d0aaa2d410e3",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "3a6b843f-a60d-481d-8ca9-c6ff553cdc6a",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "adf931a6-64bd-4e8d-9c99-ed1b42696794",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "7c2515bc-9218-4743-9663-dbff9b77891a",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "f964c658-cb44-4738-a043-31e366b53cd1",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "19e41af2-a8cb-4359-9ad6-320f7cf9a0cb",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "860267e7-f4ea-4865-8509-e32e4104d3d6",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "a0f20e0a-5cdf-4def-b4d1-0a5b2f644ff6",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "66ec3214-f663-49ea-9261-2752efaa6031",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2c4f3fbe-9cc1-448f-b64d-9d5327839e20",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "5f10bf84-d756-4efd-92e5-f0c55b77d827",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "945e5587-1506-4cf0-8c96-db03901c12f1",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "b779c6a1-76ec-4c7f-b0d5-3fd2384a40b8",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "7a3802b1-d4e1-4876-adad-2e1a05af27a0",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "ae348143-da6c-4ade-aced-af2cd043198e",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  45 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "53c75a02-3147-4715-9f7b-130505bad3e7",
              "parentUUID": "70dfa02b-28b8-48e1-8bdc-7d734e42a31c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2cde5e19-0e59-47c4-9992-d0aaa2d410e3",
            "3a6b843f-a60d-481d-8ca9-c6ff553cdc6a",
            "adf931a6-64bd-4e8d-9c99-ed1b42696794",
            "7c2515bc-9218-4743-9663-dbff9b77891a",
            "f964c658-cb44-4738-a043-31e366b53cd1",
            "19e41af2-a8cb-4359-9ad6-320f7cf9a0cb",
            "860267e7-f4ea-4865-8509-e32e4104d3d6",
            "a0f20e0a-5cdf-4def-b4d1-0a5b2f644ff6",
            "66ec3214-f663-49ea-9261-2752efaa6031",
            "2c4f3fbe-9cc1-448f-b64d-9d5327839e20",
            "5f10bf84-d756-4efd-92e5-f0c55b77d827",
            "945e5587-1506-4cf0-8c96-db03901c12f1",
            "b779c6a1-76ec-4c7f-b0d5-3fd2384a40b8",
            "7a3802b1-d4e1-4876-adad-2e1a05af27a0",
            "ae348143-da6c-4ade-aced-af2cd043198e",
            "53c75a02-3147-4715-9f7b-130505bad3e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3298ccca-41e0-4b3b-8451-1661fa784343",
          "title": "Test 10Lines game: 10, 25 -  46",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 311,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4ee45d51-17f0-43cd-b4be-5d00ea84e18a",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "2497215f-8a78-40fe-b6c0-58c38ca1a416",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e94e3a76-e9a6-42df-912c-a23451b90745",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "19cf58cb-ad0e-4900-a3f1-37f1bfa743e2",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "a54c4ae7-2f67-4bf2-b236-654639121e2d",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "885908e0-f6ce-448f-8f91-50d04e317c8b",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "b82a24c1-8f4a-45fe-b805-3fda7d76eb23",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "5e624aa6-def6-4623-9493-786d6617fe38",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0f560a07-5ee7-4dd5-90e1-66cad21511c0",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "d24ab1e1-23f9-4c11-aad2-0eb629e89e37",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d485d700-4ded-4130-b123-b3df4b5b741a",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "14a383f4-cf7e-48a7-9f8b-01d11b88df61",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "041c295e-72a8-48c4-a1e1-60d03997bc0a",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "d02cf735-3a85-46cb-a6ba-91980ff1f3fc",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "d0deeb55-474c-4c80-8107-c982129ebb76",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "952123c6-3619-4c27-9338-1bd796a5e027",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "88a563c1-d9ed-4a0c-bae2-44ce1c4bc717",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  46 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "98f2e78a-dc9f-478c-989c-6c34eaa65f54",
              "parentUUID": "3298ccca-41e0-4b3b-8451-1661fa784343",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e94e3a76-e9a6-42df-912c-a23451b90745",
            "19cf58cb-ad0e-4900-a3f1-37f1bfa743e2",
            "a54c4ae7-2f67-4bf2-b236-654639121e2d",
            "885908e0-f6ce-448f-8f91-50d04e317c8b",
            "b82a24c1-8f4a-45fe-b805-3fda7d76eb23",
            "5e624aa6-def6-4623-9493-786d6617fe38",
            "0f560a07-5ee7-4dd5-90e1-66cad21511c0",
            "d24ab1e1-23f9-4c11-aad2-0eb629e89e37",
            "d485d700-4ded-4130-b123-b3df4b5b741a",
            "14a383f4-cf7e-48a7-9f8b-01d11b88df61",
            "041c295e-72a8-48c4-a1e1-60d03997bc0a",
            "d02cf735-3a85-46cb-a6ba-91980ff1f3fc",
            "d0deeb55-474c-4c80-8107-c982129ebb76",
            "952123c6-3619-4c27-9338-1bd796a5e027",
            "88a563c1-d9ed-4a0c-bae2-44ce1c4bc717",
            "98f2e78a-dc9f-478c-989c-6c34eaa65f54"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "dcec8da3-82a1-47c6-b1d8-a61643014124",
          "title": "Test 10Lines game: 10, 25 -  47",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 332,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1fa22feb-7de7-4320-bf44-7bb7bbc0b230",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "346deb8b-208c-4dc1-bfe3-adf25f879fdb",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a7b61b78-0493-4fb3-9862-41bac8d69436",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "ddbd3706-b41b-42d9-a28b-a4e8ebcd7c06",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "39edf76c-679c-449e-b68a-163135259740",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "5832df01-079a-4824-a1c7-8fa7cfff206a",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "19c68782-28f3-466f-a405-d02070ece18c",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "7140e518-485f-426f-8bfb-365c0c4cf79e",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bb43c8fa-7470-4388-9bc7-3e3885699ff4",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "508a9b93-d576-4374-a63a-77b7c7a1ec38",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b5f27486-61da-4f7b-a13f-a874ff3d89b4",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e0db5278-59ea-4648-affc-fe405fffb27c",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "976ea409-c941-4b65-8283-81f3e92b95b3",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "03105a14-0ec4-47f6-bcbf-da731424fa29",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "f47c3c67-c032-4bdc-8d30-7f0002d9329a",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "26613a7b-d905-4b75-b475-479b8eb69e34",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "c9ce1694-e1d2-4fc6-98ee-8457abc2b202",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  47 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "47c3091f-a859-4f65-bb51-0827b69d0010",
              "parentUUID": "dcec8da3-82a1-47c6-b1d8-a61643014124",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7b61b78-0493-4fb3-9862-41bac8d69436",
            "ddbd3706-b41b-42d9-a28b-a4e8ebcd7c06",
            "39edf76c-679c-449e-b68a-163135259740",
            "5832df01-079a-4824-a1c7-8fa7cfff206a",
            "19c68782-28f3-466f-a405-d02070ece18c",
            "7140e518-485f-426f-8bfb-365c0c4cf79e",
            "bb43c8fa-7470-4388-9bc7-3e3885699ff4",
            "508a9b93-d576-4374-a63a-77b7c7a1ec38",
            "b5f27486-61da-4f7b-a13f-a874ff3d89b4",
            "e0db5278-59ea-4648-affc-fe405fffb27c",
            "976ea409-c941-4b65-8283-81f3e92b95b3",
            "03105a14-0ec4-47f6-bcbf-da731424fa29",
            "f47c3c67-c032-4bdc-8d30-7f0002d9329a",
            "26613a7b-d905-4b75-b475-479b8eb69e34",
            "c9ce1694-e1d2-4fc6-98ee-8457abc2b202",
            "47c3091f-a859-4f65-bb51-0827b69d0010"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
          "title": "Test 10Lines game: 10, 25 -  48",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1290,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "172a14c5-129d-43f8-a2ab-98fdb908b63e",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "24c68e2f-c3da-4a82-bc33-45e0234e1f9b",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "f7513db4-67b5-4bf1-8766-edecc97aeffe",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "a69751aa-bb32-4df2-a169-4242108c4157",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "b062a312-d293-4e29-a18b-14472333ef75",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "277f71fa-9c62-4bd1-bad4-6418ef864c48",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "f8e015f9-03b1-48b2-bdc5-80989ba27596",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f84ad2fa-7c58-4b29-bd7c-a58011eec854",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c5a4764e-152e-40f6-a317-ed720f29b54d",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "5a354332-b988-4b17-8180-bcd51d8ccaeb",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4203c9c3-f40d-438e-80af-0c1683a169c0",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c634e793-ae1b-47a8-bf32-0ac2440299e2",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "e6a48167-67d1-4728-88e5-a256226aeb23",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a6d23134-701e-4074-8a24-4013b39bffad",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "85e960d3-62ea-4d2a-91f5-bd7420794035",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "ee12df64-9e40-44f1-a9d0-482eada1f3fb",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "fec294c1-30c6-4056-aca0-1caeae625905",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  48 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6a9b8dae-7d65-4bca-b3f8-04dc2e42d6dd",
              "parentUUID": "99ed27be-d0ca-4dd6-976a-c5e22eadc4a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7513db4-67b5-4bf1-8766-edecc97aeffe",
            "a69751aa-bb32-4df2-a169-4242108c4157",
            "b062a312-d293-4e29-a18b-14472333ef75",
            "277f71fa-9c62-4bd1-bad4-6418ef864c48",
            "f8e015f9-03b1-48b2-bdc5-80989ba27596",
            "f84ad2fa-7c58-4b29-bd7c-a58011eec854",
            "c5a4764e-152e-40f6-a317-ed720f29b54d",
            "5a354332-b988-4b17-8180-bcd51d8ccaeb",
            "4203c9c3-f40d-438e-80af-0c1683a169c0",
            "c634e793-ae1b-47a8-bf32-0ac2440299e2",
            "e6a48167-67d1-4728-88e5-a256226aeb23",
            "a6d23134-701e-4074-8a24-4013b39bffad",
            "85e960d3-62ea-4d2a-91f5-bd7420794035",
            "ee12df64-9e40-44f1-a9d0-482eada1f3fb",
            "fec294c1-30c6-4056-aca0-1caeae625905",
            "6a9b8dae-7d65-4bca-b3f8-04dc2e42d6dd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
          "title": "Test 10Lines game: 10, 25 -  49",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 324,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8f5d3cdd-cc8c-40ab-82e9-9714860a8b87",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "fc0ef685-faf2-425a-a700-42fec53959af",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e80b807a-69aa-4ac5-b903-e7b1b979622d",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "65a8712a-2f61-4a8b-bfc2-289846009032",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "f1ba7951-021e-4441-8f15-3ecf77bf3a8c",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "8c3f8a99-1d57-4b09-a979-e73925d190ee",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "c3e3cf4a-3516-449c-9c71-fc32078c091a",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f87460f5-c7fe-49c2-b2d2-70d841373888",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e64905ff-4fe4-438f-a81e-ebd30c547fb5",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "fb67e83f-80cc-4817-afc7-dfaac56e2555",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8eadd253-8df2-4724-9f73-faefc092b5a0",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7fbda5ca-2567-47dd-be98-19a986ba9a9f",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "2989bb92-9f35-49b5-ab92-aff481ada73e",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "f3588561-8b47-441f-8b61-004174a936bb",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "86ccf824-8166-4303-a330-3c600f5f323d",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "30aa61fd-5c8f-4308-ba89-1840ef705796",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "2a8704da-7218-4482-8868-85666d3118a4",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  49 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "5f810cd3-5870-4215-b246-5d17b76b1867",
              "parentUUID": "87acd81c-1c2b-40bb-9f66-8a4dea95632a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e80b807a-69aa-4ac5-b903-e7b1b979622d",
            "65a8712a-2f61-4a8b-bfc2-289846009032",
            "f1ba7951-021e-4441-8f15-3ecf77bf3a8c",
            "8c3f8a99-1d57-4b09-a979-e73925d190ee",
            "c3e3cf4a-3516-449c-9c71-fc32078c091a",
            "f87460f5-c7fe-49c2-b2d2-70d841373888",
            "e64905ff-4fe4-438f-a81e-ebd30c547fb5",
            "fb67e83f-80cc-4817-afc7-dfaac56e2555",
            "8eadd253-8df2-4724-9f73-faefc092b5a0",
            "7fbda5ca-2567-47dd-be98-19a986ba9a9f",
            "2989bb92-9f35-49b5-ab92-aff481ada73e",
            "f3588561-8b47-441f-8b61-004174a936bb",
            "86ccf824-8166-4303-a330-3c600f5f323d",
            "30aa61fd-5c8f-4308-ba89-1840ef705796",
            "2a8704da-7218-4482-8868-85666d3118a4",
            "5f810cd3-5870-4215-b246-5d17b76b1867"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
          "title": "Test 10Lines game: 10, 25 -  50",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 287,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7cb614ce-c7e9-4b3e-af96-fc0a338bd6c8",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "8a411342-2211-4476-aff8-c0fb46a431fc",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "c0daa9ff-b417-4b77-a561-84a6e3dd8b04",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "51cc7087-92c3-42fc-bc35-6609d79a1687",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ddea53e8-89a5-4654-bd61-8cab52ddd684",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "2a1adf76-3444-4361-9941-5e8cdfdd43f9",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "77d52fc5-4592-4fd1-8e36-12ca7c7b3b61",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d9468d5f-980f-4148-bae2-c3ebd3bf255d",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c120b88d-d453-43e7-b17a-f76d05008dbf",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "59c0b25e-4014-4e5b-ad6a-3a68a4702730",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1f512113-e0e7-4d88-9dd8-fda557e131f9",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "fe1be505-8f9a-4dff-9c68-331ef0bb8a21",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "97e97828-9986-4db2-a0b1-6c00c059387b",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "b6008d96-56d0-40d4-8aab-b0e4496ec587",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "d28ae115-d056-431b-8fea-8b1c1dc176cb",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "8a758dd8-03f4-4bb4-be27-1260fe7d432c",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "a22d36a5-80e9-4421-8d12-1fc84d6e01f4",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  50 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6043d489-59e6-4304-8c5d-3dcaa23c0d36",
              "parentUUID": "b8ca8ed4-cb50-4dda-a0b8-963b7f7ab928",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0daa9ff-b417-4b77-a561-84a6e3dd8b04",
            "51cc7087-92c3-42fc-bc35-6609d79a1687",
            "ddea53e8-89a5-4654-bd61-8cab52ddd684",
            "2a1adf76-3444-4361-9941-5e8cdfdd43f9",
            "77d52fc5-4592-4fd1-8e36-12ca7c7b3b61",
            "d9468d5f-980f-4148-bae2-c3ebd3bf255d",
            "c120b88d-d453-43e7-b17a-f76d05008dbf",
            "59c0b25e-4014-4e5b-ad6a-3a68a4702730",
            "1f512113-e0e7-4d88-9dd8-fda557e131f9",
            "fe1be505-8f9a-4dff-9c68-331ef0bb8a21",
            "97e97828-9986-4db2-a0b1-6c00c059387b",
            "b6008d96-56d0-40d4-8aab-b0e4496ec587",
            "d28ae115-d056-431b-8fea-8b1c1dc176cb",
            "8a758dd8-03f4-4bb4-be27-1260fe7d432c",
            "a22d36a5-80e9-4421-8d12-1fc84d6e01f4",
            "6043d489-59e6-4304-8c5d-3dcaa23c0d36"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "242e6187-209e-44ac-be8e-7d032379000c",
          "title": "Test 10Lines game: 10, 25 -  51",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 280,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "cf51af44-67bb-4a8d-930c-9d492c24de15",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "3d358984-2363-4d99-9208-12af7da3d03f",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a09e20fe-4bc9-49ed-981b-7e566d0151a7",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "23bcd001-a34f-40ab-b186-fe85a586588a",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "a7e98cae-d886-4372-9d66-dfa6c0e113f9",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6107cee6-eea6-4e12-ad6e-c4c3c3f4f1b6",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "09d0f1ea-52a8-4664-8b88-631f362848ec",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "e5214fcd-08e4-46f3-95fb-e4ec9c8cffb9",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ec6b6378-8878-40fd-9d3f-cca8401a12c3",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "fcef76af-6c97-4d59-a882-f58ca60afc39",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3910345b-8099-44f5-a912-55f7e5e2f470",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "488c23cb-b548-4a12-ba45-bb57abd87d85",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "c639eb55-b793-4581-a3d8-c823f85f31d2",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "1d22e136-2bbe-4103-b771-8fc843d4d7ad",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "4e02395a-ca5d-4ab1-9663-cd6c51610d7c",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "0225c828-3248-443d-8ab8-87adf87b2bf6",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "de3589d0-409f-4d07-98b6-62c02eb429ed",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  51 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "33d532bd-0255-407f-8a1b-8f7b75f86bdd",
              "parentUUID": "242e6187-209e-44ac-be8e-7d032379000c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a09e20fe-4bc9-49ed-981b-7e566d0151a7",
            "23bcd001-a34f-40ab-b186-fe85a586588a",
            "a7e98cae-d886-4372-9d66-dfa6c0e113f9",
            "6107cee6-eea6-4e12-ad6e-c4c3c3f4f1b6",
            "09d0f1ea-52a8-4664-8b88-631f362848ec",
            "e5214fcd-08e4-46f3-95fb-e4ec9c8cffb9",
            "ec6b6378-8878-40fd-9d3f-cca8401a12c3",
            "fcef76af-6c97-4d59-a882-f58ca60afc39",
            "3910345b-8099-44f5-a912-55f7e5e2f470",
            "488c23cb-b548-4a12-ba45-bb57abd87d85",
            "c639eb55-b793-4581-a3d8-c823f85f31d2",
            "1d22e136-2bbe-4103-b771-8fc843d4d7ad",
            "4e02395a-ca5d-4ab1-9663-cd6c51610d7c",
            "0225c828-3248-443d-8ab8-87adf87b2bf6",
            "de3589d0-409f-4d07-98b6-62c02eb429ed",
            "33d532bd-0255-407f-8a1b-8f7b75f86bdd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5ef95355-7916-44a7-b513-4d3a768b284e",
          "title": "Test 10Lines game: 10, 25 -  52",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 293,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "18c582cb-8b6c-4317-87fd-30aa8dff4a61",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "2d5269f7-8c64-429d-9e21-2e30575d128f",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "8016f247-53d0-4b80-a85d-f089635e3e95",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "8e2cac39-7421-47df-a401-c0a74f690e5b",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "abc85483-c816-4e0d-83cf-e6bb85538be4",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "28f3cdc5-83f4-4e32-b7e4-fd3c0af9b583",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "5557008e-4350-478f-aa35-47631598105d",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "6ba78548-8c8d-4afc-a0c6-40fbb4c30db1",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4b90895a-6003-461e-b7c4-ffbf4c261349",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "918474da-c234-441f-b461-afe0e20d9fe8",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c6736381-da04-43ce-b9c8-baa4a26f43a9",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c43bb249-81cb-48ff-9763-b8970954bc96",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "16c0d464-d8d6-49bd-af68-65aa580b25eb",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "ec2a4b65-8d56-4c2e-b870-bcfc6da486b2",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "c0afe017-7bef-4a3c-bd34-a7bc28f86328",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "fdb7104e-13e0-44a3-9379-44c22b8b8d3b",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "5ce47e05-0de0-43e4-86ed-699f64877cb0",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  52 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e8ca050a-c472-4fe5-b292-93432d0e84d4",
              "parentUUID": "5ef95355-7916-44a7-b513-4d3a768b284e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8016f247-53d0-4b80-a85d-f089635e3e95",
            "8e2cac39-7421-47df-a401-c0a74f690e5b",
            "abc85483-c816-4e0d-83cf-e6bb85538be4",
            "28f3cdc5-83f4-4e32-b7e4-fd3c0af9b583",
            "5557008e-4350-478f-aa35-47631598105d",
            "6ba78548-8c8d-4afc-a0c6-40fbb4c30db1",
            "4b90895a-6003-461e-b7c4-ffbf4c261349",
            "918474da-c234-441f-b461-afe0e20d9fe8",
            "c6736381-da04-43ce-b9c8-baa4a26f43a9",
            "c43bb249-81cb-48ff-9763-b8970954bc96",
            "16c0d464-d8d6-49bd-af68-65aa580b25eb",
            "ec2a4b65-8d56-4c2e-b870-bcfc6da486b2",
            "c0afe017-7bef-4a3c-bd34-a7bc28f86328",
            "fdb7104e-13e0-44a3-9379-44c22b8b8d3b",
            "5ce47e05-0de0-43e4-86ed-699f64877cb0",
            "e8ca050a-c472-4fe5-b292-93432d0e84d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
          "title": "Test 10Lines game: 10, 25 -  53",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 293,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "14552153-591c-41ec-b124-dfd37ee3800d",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "ead41cb6-f80c-4f0e-a631-94ddb18b07fc",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "1888cf9e-ea71-474a-bd17-6ee0be5ee575",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 check correct accrual Scatter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "9867529e-7b9d-4afd-b3ea-6a95cea307e6",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "00eaedfb-39aa-45b4-b2d3-3275f72d3e19",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "5b050ce6-c178-4b64-8dbf-71a422fe80c0",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "af5bcbb5-88f2-4353-b6cd-b2a1b248e1c8",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f541b62d-53ae-47a9-9e9f-5a55a0f0e4e5",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3e9c7545-7af2-4340-b294-0d19c61501dd",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "f6183adf-c448-44b5-a945-275d0d2218c4",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0bbcda7a-4731-47ea-a8ed-d6269c4e947b",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "442bfc15-36ae-445b-a9ad-671657f30b8f",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "faf02f24-721f-4b77-9655-55207091343e",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "57cf97b9-23ad-4706-a5b6-0d1c2d017e6f",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "6de075ab-1248-4969-b203-c19e6c82182e",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "02a29168-d401-4b33-acbb-fe2f5d189a91",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "f0b24e74-8d99-413b-ab62-fbd37b7a1270",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  53 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "32d45ced-5b01-446e-9eff-94b4b3de23ff",
              "parentUUID": "6b9374ef-e690-4b3c-88b0-edeccc758a68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1888cf9e-ea71-474a-bd17-6ee0be5ee575",
            "9867529e-7b9d-4afd-b3ea-6a95cea307e6",
            "00eaedfb-39aa-45b4-b2d3-3275f72d3e19",
            "5b050ce6-c178-4b64-8dbf-71a422fe80c0",
            "af5bcbb5-88f2-4353-b6cd-b2a1b248e1c8",
            "f541b62d-53ae-47a9-9e9f-5a55a0f0e4e5",
            "3e9c7545-7af2-4340-b294-0d19c61501dd",
            "f6183adf-c448-44b5-a945-275d0d2218c4",
            "0bbcda7a-4731-47ea-a8ed-d6269c4e947b",
            "442bfc15-36ae-445b-a9ad-671657f30b8f",
            "faf02f24-721f-4b77-9655-55207091343e",
            "57cf97b9-23ad-4706-a5b6-0d1c2d017e6f",
            "6de075ab-1248-4969-b203-c19e6c82182e",
            "02a29168-d401-4b33-acbb-fe2f5d189a91",
            "f0b24e74-8d99-413b-ab62-fbd37b7a1270",
            "32d45ced-5b01-446e-9eff-94b4b3de23ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
          "title": "Test 10Lines game: 10, 25 -  54",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 305,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0a0aec21-a581-4526-bbcc-0264827ac775",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "e70d5c30-4df9-4626-b221-c52b14340898",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "73f9a38d-0351-471d-95d5-7a7c1614e509",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "f6026bf3-d3e1-4a43-a14d-426f867b4e11",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "fbfe62e7-f7e8-4d5d-a94e-3ae3c12cd09a",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d8f8fc11-f5d7-459d-a668-7ad810cdbedb",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "8ad8554b-ce96-49f7-b738-3fbaab70a54a",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "82297f89-34e6-4900-97f9-8577260bae18",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4058706d-4cd3-4fb1-ac18-fa2708e23c56",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "7ad1d6d6-472e-4c9e-8b79-69601e769642",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6b8be7be-2098-47e3-b5c0-195677f0e18b",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "99469914-3e61-426b-8f63-bee9168eb28e",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 balance is not change",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "4fe00d83-bea0-4df2-a4ce-8f18da575449",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "559de1ac-e547-44ec-8425-80aa1dae6f9d",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "7f0af44a-4579-47be-b651-749f1221f117",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "7be21d28-9381-46bc-8712-59d099fd824b",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "3d097279-de9a-47ff-9c3b-31b50538ad8d",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  54 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3f708010-be17-48af-a6df-5b07420a4db5",
              "parentUUID": "0a4a1ae9-70b7-4f50-a1db-822fa3a8b5ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73f9a38d-0351-471d-95d5-7a7c1614e509",
            "f6026bf3-d3e1-4a43-a14d-426f867b4e11",
            "fbfe62e7-f7e8-4d5d-a94e-3ae3c12cd09a",
            "d8f8fc11-f5d7-459d-a668-7ad810cdbedb",
            "8ad8554b-ce96-49f7-b738-3fbaab70a54a",
            "82297f89-34e6-4900-97f9-8577260bae18",
            "4058706d-4cd3-4fb1-ac18-fa2708e23c56",
            "7ad1d6d6-472e-4c9e-8b79-69601e769642",
            "6b8be7be-2098-47e3-b5c0-195677f0e18b",
            "99469914-3e61-426b-8f63-bee9168eb28e",
            "4fe00d83-bea0-4df2-a4ce-8f18da575449",
            "559de1ac-e547-44ec-8425-80aa1dae6f9d",
            "7f0af44a-4579-47be-b651-749f1221f117",
            "7be21d28-9381-46bc-8712-59d099fd824b",
            "3d097279-de9a-47ff-9c3b-31b50538ad8d",
            "3f708010-be17-48af-a6df-5b07420a4db5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "227a0d2b-079b-44db-a30f-2d0b21236058",
          "title": "Test 10Lines game: 10, 25 -  55",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 277,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "2929ac40-200c-44a7-8f23-9c1bf023f2aa",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "f1cd7c9b-157e-4a6f-87f5-cca64088d153",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "b97c32fc-3303-44db-9fbc-a9d50a515061",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "252d9360-efc0-4fbb-998e-613512cece62",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "21161ab6-e871-43cf-80cd-d2b66bd66786",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "e0fbc91a-d03d-4612-80ef-01bb8de7f3bc",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "ae840579-9436-4efe-a7d1-32dff1b0bacb",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f1ee73de-f0e6-40af-979f-3109304049e5",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "87aef832-f733-43e4-99d6-61745a4d7e07",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "92d1fbb2-b667-412b-84ac-32994d72c800",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6568be9a-0093-4cae-bba0-32802bfb250d",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "040f883c-ff1a-4a17-a8c2-194c2587ffb4",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "632f2e58-cf84-414e-a5e7-ebe31d44d4ac",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "472af73f-51cb-4423-8e6a-f1af3fb8e6fa",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "a2d5b067-3785-474f-820c-7388ed51616e",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "024aeb73-53c7-40dc-bd59-98653d8101fb",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "13cee6d5-2759-4b36-b23d-6d4f1b834f34",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  55 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "0edcee1e-141f-43f3-8b85-ce6d64f0b9bf",
              "parentUUID": "227a0d2b-079b-44db-a30f-2d0b21236058",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b97c32fc-3303-44db-9fbc-a9d50a515061",
            "252d9360-efc0-4fbb-998e-613512cece62",
            "21161ab6-e871-43cf-80cd-d2b66bd66786",
            "e0fbc91a-d03d-4612-80ef-01bb8de7f3bc",
            "ae840579-9436-4efe-a7d1-32dff1b0bacb",
            "f1ee73de-f0e6-40af-979f-3109304049e5",
            "87aef832-f733-43e4-99d6-61745a4d7e07",
            "92d1fbb2-b667-412b-84ac-32994d72c800",
            "6568be9a-0093-4cae-bba0-32802bfb250d",
            "040f883c-ff1a-4a17-a8c2-194c2587ffb4",
            "632f2e58-cf84-414e-a5e7-ebe31d44d4ac",
            "472af73f-51cb-4423-8e6a-f1af3fb8e6fa",
            "a2d5b067-3785-474f-820c-7388ed51616e",
            "024aeb73-53c7-40dc-bd59-98653d8101fb",
            "13cee6d5-2759-4b36-b23d-6d4f1b834f34",
            "0edcee1e-141f-43f3-8b85-ce6d64f0b9bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "6a17c180-dee4-41bf-84c0-c71255838957",
          "title": "Test 10Lines game: 10, 25 -  56",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 281,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "37d8ab22-8559-4161-b9d0-f7f4d10268c0",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "735a43b8-4f59-4e88-8f3a-aec3fa9a35e5",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "b676fe18-1498-451b-92c0-eebcd97604c0",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "45c31d2c-0986-4b30-b9f0-546455316fd3",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "703cac19-8d49-4ae4-9609-7c7128e4e85f",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "aebd93aa-a5ee-4ca9-a935-8675293ba794",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "d6ee8c6a-338e-4933-a50b-98628c3f98b4",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "171ff448-aa97-415c-8e32-a78064a94360",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a8dd1e69-c734-449a-b25b-6b3510a349f4",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "089872e6-bd58-401b-8054-896d869130a2",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4b43d341-6c67-4b18-a22c-62cde2e0bb7d",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "95741b95-4cc7-4d78-b515-d81bb735abce",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "5af34b63-0c40-4ec7-9eb3-7fd7ef20a559",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "fd26bb89-48a1-4997-b3ac-676ff4882f39",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "2a749ea7-7a70-4893-a9a8-0f7472efd9dd",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "571a87d7-3079-455e-a17c-931968c2b8fc",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "55aef277-ee18-4b44-8057-77522df60d9c",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  56 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "352a1e31-4b28-4d7e-8ede-18b857a4e67f",
              "parentUUID": "6a17c180-dee4-41bf-84c0-c71255838957",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b676fe18-1498-451b-92c0-eebcd97604c0",
            "45c31d2c-0986-4b30-b9f0-546455316fd3",
            "703cac19-8d49-4ae4-9609-7c7128e4e85f",
            "aebd93aa-a5ee-4ca9-a935-8675293ba794",
            "d6ee8c6a-338e-4933-a50b-98628c3f98b4",
            "171ff448-aa97-415c-8e32-a78064a94360",
            "a8dd1e69-c734-449a-b25b-6b3510a349f4",
            "089872e6-bd58-401b-8054-896d869130a2",
            "4b43d341-6c67-4b18-a22c-62cde2e0bb7d",
            "95741b95-4cc7-4d78-b515-d81bb735abce",
            "5af34b63-0c40-4ec7-9eb3-7fd7ef20a559",
            "fd26bb89-48a1-4997-b3ac-676ff4882f39",
            "2a749ea7-7a70-4893-a9a8-0f7472efd9dd",
            "571a87d7-3079-455e-a17c-931968c2b8fc",
            "55aef277-ee18-4b44-8057-77522df60d9c",
            "352a1e31-4b28-4d7e-8ede-18b857a4e67f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
          "title": "Test 10Lines game: 10, 25 -  57",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 288,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "aa0a69c9-eb39-45ca-b54c-c667fcf4dfce",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "9980d830-ea5e-42b9-b378-a01778f28fba",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "7d16d7bf-fdd9-4620-9d48-01ed25756a62",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "d43454ea-06e6-4920-a923-03b7f10ff3f4",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "a18485b6-8a7f-4185-aac6-02fe416b12dd",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "1cc99f7b-dcad-4d7c-987b-7bb134d902c4",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "7d1686a9-ca52-4b90-b8b6-9151cd520649",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "1bfa4d15-d013-4738-9baa-888bcffb857c",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8ba30ce8-225c-48b7-8a2d-b2799d00db88",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 check correct total FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "686a727b-a781-40ea-b86d-c88b60a082ee",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "dbce5dc9-0168-47b8-95af-374ca1d23f97",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2e14eb28-b344-4ea4-b849-59b6befe2c66",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "430772a5-5fcc-4315-9475-5981d3592d6f",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "70c15b8a-c205-4e7b-b0ca-e24fdb52e1b6",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "68e78c59-a0a4-4f8f-9472-0e2c282d5859",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "4ea1d8ca-7d7d-4e20-a7fb-9b47c08ef9e8",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "88415d69-3e3e-460e-9186-cb00da541baf",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  57 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "424a998a-798d-4eb8-970c-673af4e39f52",
              "parentUUID": "a7eafa9f-aa52-46ef-90da-af7a37e7ec29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d16d7bf-fdd9-4620-9d48-01ed25756a62",
            "d43454ea-06e6-4920-a923-03b7f10ff3f4",
            "a18485b6-8a7f-4185-aac6-02fe416b12dd",
            "1cc99f7b-dcad-4d7c-987b-7bb134d902c4",
            "7d1686a9-ca52-4b90-b8b6-9151cd520649",
            "1bfa4d15-d013-4738-9baa-888bcffb857c",
            "8ba30ce8-225c-48b7-8a2d-b2799d00db88",
            "686a727b-a781-40ea-b86d-c88b60a082ee",
            "dbce5dc9-0168-47b8-95af-374ca1d23f97",
            "2e14eb28-b344-4ea4-b849-59b6befe2c66",
            "430772a5-5fcc-4315-9475-5981d3592d6f",
            "70c15b8a-c205-4e7b-b0ca-e24fdb52e1b6",
            "68e78c59-a0a4-4f8f-9472-0e2c282d5859",
            "4ea1d8ca-7d7d-4e20-a7fb-9b47c08ef9e8",
            "88415d69-3e3e-460e-9186-cb00da541baf",
            "424a998a-798d-4eb8-970c-673af4e39f52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "63381410-48d1-449d-bbf0-4eefed71886d",
          "title": "Test 10Lines game: 10, 25 -  58",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 543,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "da1cc1ac-4a08-4eaa-9116-a2d00567bd8c",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "801b3c15-10fb-4d9a-9bda-d0ab81f1b988",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "cdea0359-9517-48bf-908a-3ba5c2619741",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "0f36318d-754d-4b92-870b-cbc5920d18c4",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "edd3f85f-25d4-4903-a482-93ad81bd500c",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "261f9a1e-eb06-4c7e-b05a-55e6a9db86a7",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "feb445c0-374d-4278-92a3-1e647631b607",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "0aac302b-0704-468d-82e2-de615fd29c1b",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8f8dfe5d-2245-413e-8de0-3e1858546074",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "7c8f2d4e-e380-47cb-b84e-45b2aca43b68",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6361909f-7486-46f8-90a6-93b1497e54da",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "115a2873-c5ac-41f0-aa0a-eaa98889bd81",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "c52e94f9-612e-4160-bdb7-f27393e385a5",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "472e750a-3656-42cc-a0f4-fad631c56650",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "061c5c8f-3e79-4a27-9c45-84cb2a4f41dd",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "df853857-cd6b-49d6-a014-7d3c706bb42a",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "af7d83e6-f68b-4f8a-878c-f057713f5b74",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  58 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "97273a3c-4a15-4a39-abf6-43a53f457cb6",
              "parentUUID": "63381410-48d1-449d-bbf0-4eefed71886d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cdea0359-9517-48bf-908a-3ba5c2619741",
            "0f36318d-754d-4b92-870b-cbc5920d18c4",
            "edd3f85f-25d4-4903-a482-93ad81bd500c",
            "261f9a1e-eb06-4c7e-b05a-55e6a9db86a7",
            "feb445c0-374d-4278-92a3-1e647631b607",
            "0aac302b-0704-468d-82e2-de615fd29c1b",
            "8f8dfe5d-2245-413e-8de0-3e1858546074",
            "7c8f2d4e-e380-47cb-b84e-45b2aca43b68",
            "6361909f-7486-46f8-90a6-93b1497e54da",
            "115a2873-c5ac-41f0-aa0a-eaa98889bd81",
            "c52e94f9-612e-4160-bdb7-f27393e385a5",
            "472e750a-3656-42cc-a0f4-fad631c56650",
            "061c5c8f-3e79-4a27-9c45-84cb2a4f41dd",
            "df853857-cd6b-49d6-a014-7d3c706bb42a",
            "af7d83e6-f68b-4f8a-878c-f057713f5b74",
            "97273a3c-4a15-4a39-abf6-43a53f457cb6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "516e323f-a92f-43d5-908b-5c0a595f1b26",
          "title": "Test 10Lines game: 10, 25 -  59",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 315,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0b3a326f-f0d3-48bd-bc51-63be95109fc3",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "96cc9bf2-8791-4a90-bf7e-799cdc6b08e8",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "c3e286bd-e286-4dd7-b24e-b514d21dd7ae",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "bb3f549f-408e-409f-bc92-fed3be8ab7eb",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "a2a562de-907f-4df7-a3ad-395311c5f2a6",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "ee6b29a9-326d-4472-a187-4f1d11b612ae",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 check correct accrual of winnings",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "4feac690-84c6-4333-8014-8f12cb236614",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "61fb6c21-38f1-4752-8033-2f2259316d78",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0975ec94-4aa6-4960-92bf-c1a90fcd86cd",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "c55fb027-9a0a-42fa-a632-c92ab3d9281a",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5f9ca757-3f9c-4f50-bccb-64a6c4eb8d1f",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "052a00f8-5795-4430-a051-b8e8691761cf",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "dd1c2a49-d388-4635-b67b-c388e0746cc2",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "da47c7ac-5bda-4eac-a81d-1dc8a2fb867a",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "224ac5dd-4c98-432d-891c-bdae310de8f0",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "bc98db5c-0d91-42f9-9be0-0eaba7388cd2",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "4888a8ea-1d5c-47d7-8972-bba8e8083934",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  59 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f9bbdf9e-bacc-4db1-8e16-1d46c46757f6",
              "parentUUID": "516e323f-a92f-43d5-908b-5c0a595f1b26",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3e286bd-e286-4dd7-b24e-b514d21dd7ae",
            "bb3f549f-408e-409f-bc92-fed3be8ab7eb",
            "a2a562de-907f-4df7-a3ad-395311c5f2a6",
            "ee6b29a9-326d-4472-a187-4f1d11b612ae",
            "4feac690-84c6-4333-8014-8f12cb236614",
            "61fb6c21-38f1-4752-8033-2f2259316d78",
            "0975ec94-4aa6-4960-92bf-c1a90fcd86cd",
            "c55fb027-9a0a-42fa-a632-c92ab3d9281a",
            "5f9ca757-3f9c-4f50-bccb-64a6c4eb8d1f",
            "052a00f8-5795-4430-a051-b8e8691761cf",
            "dd1c2a49-d388-4635-b67b-c388e0746cc2",
            "da47c7ac-5bda-4eac-a81d-1dc8a2fb867a",
            "224ac5dd-4c98-432d-891c-bdae310de8f0",
            "bc98db5c-0d91-42f9-9be0-0eaba7388cd2",
            "4888a8ea-1d5c-47d7-8972-bba8e8083934",
            "f9bbdf9e-bacc-4db1-8e16-1d46c46757f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "34e1d14c-a885-4d8c-95b0-142a59137637",
          "title": "Test 10Lines game: 10, 25 -  60",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 313,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7b218398-2248-4164-9e7b-5be5fef11ef9",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "05b8f610-11e4-4117-85c6-0582581a6c3f",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "4f14dffe-a6cf-4b15-b652-7869508b48f9",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "71b53cdc-2762-4639-ad97-1854af1029db",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "80d83f51-52c2-4fe1-9e43-920d973b742e",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "8022dee6-b656-4795-bef9-7fd031a5abb7",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "19229da0-4055-4a86-8d31-bfc6fadd6e6b",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a2351868-fdde-4656-b83d-f7f881d447b9",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "54288858-028a-4df3-919c-2dcfe880a90f",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "3c8f9765-7e75-4478-a179-7e667222b2d0",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c26e1e15-388d-4e2e-b53b-36f346900350",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "97c8f912-1a5a-492c-a21e-238bcf668ea6",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "a542f74a-d49e-42d6-ab08-b73050e2e380",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "2f549106-4396-4ae6-af5e-2b2a6f557f2c",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ab87f9f2-f6a7-475e-a041-1c4bf7093b0b",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "ce911203-5f78-4e1f-a84f-35b8988feef2",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "70f5c532-eae4-4a82-bfc0-dd993278ecf3",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  60 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "02a1747b-2c65-43ed-a371-11dbccde4cba",
              "parentUUID": "34e1d14c-a885-4d8c-95b0-142a59137637",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f14dffe-a6cf-4b15-b652-7869508b48f9",
            "71b53cdc-2762-4639-ad97-1854af1029db",
            "80d83f51-52c2-4fe1-9e43-920d973b742e",
            "8022dee6-b656-4795-bef9-7fd031a5abb7",
            "19229da0-4055-4a86-8d31-bfc6fadd6e6b",
            "a2351868-fdde-4656-b83d-f7f881d447b9",
            "54288858-028a-4df3-919c-2dcfe880a90f",
            "3c8f9765-7e75-4478-a179-7e667222b2d0",
            "c26e1e15-388d-4e2e-b53b-36f346900350",
            "97c8f912-1a5a-492c-a21e-238bcf668ea6",
            "a542f74a-d49e-42d6-ab08-b73050e2e380",
            "2f549106-4396-4ae6-af5e-2b2a6f557f2c",
            "ab87f9f2-f6a7-475e-a041-1c4bf7093b0b",
            "ce911203-5f78-4e1f-a84f-35b8988feef2",
            "70f5c532-eae4-4a82-bfc0-dd993278ecf3",
            "02a1747b-2c65-43ed-a371-11dbccde4cba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
          "title": "Test 10Lines game: 10, 25 -  61",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 325,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f84584f6-a2ea-45e3-80b1-578665945cf3",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "e08f07f4-f4df-49e2-884e-72b136aa5450",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "05eec6f4-3423-4c11-a3e5-a77d2d61f559",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "e9faa6c3-f95c-4f09-8f66-f2b2cf71d69b",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "bef1d1dc-d777-4d9d-a252-fa529abf628d",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "a065430a-f68f-438b-b78c-06ce664f0e89",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "b258b3ad-2943-4a66-8f76-660a1c981ca9",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "dffc0427-ec4b-413c-9d98-ce3827cf2fde",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ea1f8190-2481-4990-b265-910c5ca0879c",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "6bccce3d-b271-4186-8842-ed41cef0f5fa",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1c102344-d522-4975-b537-98c4531038dd",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8d3aa2ad-eda8-486c-8fbb-d235ea4328f7",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "bd1b780d-89c2-435e-bdf1-d2355d2cede2",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "962711e4-eb63-47dc-be70-a3bb16176f6e",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "0a21c4db-1937-4315-a90c-5bcbb0ceb295",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "10674a94-b591-4a28-91f7-b0a77a364154",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "17011e0b-093e-4216-9b80-30954f3cf54a",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  61 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "4f4c0161-e1f4-4e2f-ab04-e9152ca4701d",
              "parentUUID": "ae058868-6214-4d4a-8ecf-1ca352f31e82",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05eec6f4-3423-4c11-a3e5-a77d2d61f559",
            "e9faa6c3-f95c-4f09-8f66-f2b2cf71d69b",
            "bef1d1dc-d777-4d9d-a252-fa529abf628d",
            "a065430a-f68f-438b-b78c-06ce664f0e89",
            "b258b3ad-2943-4a66-8f76-660a1c981ca9",
            "dffc0427-ec4b-413c-9d98-ce3827cf2fde",
            "ea1f8190-2481-4990-b265-910c5ca0879c",
            "6bccce3d-b271-4186-8842-ed41cef0f5fa",
            "1c102344-d522-4975-b537-98c4531038dd",
            "8d3aa2ad-eda8-486c-8fbb-d235ea4328f7",
            "bd1b780d-89c2-435e-bdf1-d2355d2cede2",
            "962711e4-eb63-47dc-be70-a3bb16176f6e",
            "0a21c4db-1937-4315-a90c-5bcbb0ceb295",
            "10674a94-b591-4a28-91f7-b0a77a364154",
            "17011e0b-093e-4216-9b80-30954f3cf54a",
            "4f4c0161-e1f4-4e2f-ab04-e9152ca4701d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "fd70393d-4303-4416-a039-f20f08c5b728",
          "title": "Test 10Lines game: 10, 25 -  62",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 302,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "24cf52c1-7839-4b37-b541-b12a39e74f03",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "11635df5-0b94-4d9f-b4e9-9e55fb2582e9",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "3d9e0712-a4c7-4a03-99db-f40b0b050359",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "33d539ff-efdc-46af-ab3a-1993a4157b13",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "5ee3c120-26bb-4de6-8400-b503ebc675d2",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "a881324f-a4b5-4926-964e-aaafdbfd4ed0",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "e1992d25-b794-452e-b01a-59eda5e004b5",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "0464fd6e-cd1c-4a08-845f-76beb9e3663c",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d9cc0ee4-1f9f-4b53-8cea-d5b36ec4d870",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "76343735-5523-4360-932e-8ef8bfd40910",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5b929c43-5398-4e54-8677-6dfd4de6ab70",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f2a5e381-7575-4417-be3f-741b7146a958",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "64413ae2-68e9-48fe-9e46-a2715ad0cc2e",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "89c6e120-b338-43b6-bde9-3a4b4b716e85",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "eb0babab-8612-430f-8ff3-c208f87ea77c",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "bc5edefc-cd2a-4679-b8eb-11b7b765b26b",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "39373998-7e3f-4453-9653-2dafd0eb19ce",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  62 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "4a05171a-e7b9-4b12-b0b1-05f28f7e44af",
              "parentUUID": "fd70393d-4303-4416-a039-f20f08c5b728",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d9e0712-a4c7-4a03-99db-f40b0b050359",
            "33d539ff-efdc-46af-ab3a-1993a4157b13",
            "5ee3c120-26bb-4de6-8400-b503ebc675d2",
            "a881324f-a4b5-4926-964e-aaafdbfd4ed0",
            "e1992d25-b794-452e-b01a-59eda5e004b5",
            "0464fd6e-cd1c-4a08-845f-76beb9e3663c",
            "d9cc0ee4-1f9f-4b53-8cea-d5b36ec4d870",
            "76343735-5523-4360-932e-8ef8bfd40910",
            "5b929c43-5398-4e54-8677-6dfd4de6ab70",
            "f2a5e381-7575-4417-be3f-741b7146a958",
            "64413ae2-68e9-48fe-9e46-a2715ad0cc2e",
            "89c6e120-b338-43b6-bde9-3a4b4b716e85",
            "eb0babab-8612-430f-8ff3-c208f87ea77c",
            "bc5edefc-cd2a-4679-b8eb-11b7b765b26b",
            "39373998-7e3f-4453-9653-2dafd0eb19ce",
            "4a05171a-e7b9-4b12-b0b1-05f28f7e44af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
          "title": "Test 10Lines game: 10, 25 -  63",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 325,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d89a9b59-2772-4f67-ba2a-a8f305308d60",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "4dde794b-5ae3-42a6-9e7c-74aaad5b6037",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "5345fc4a-b6cb-4b3b-858f-1cb1ae12340b",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "741ee55b-6db6-4e21-8cad-3182eedca6cc",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ffd2920d-3f86-4c01-bf17-5c551143615a",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "209940ff-c73e-4144-9b2b-9ec4b0779698",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "0feaef43-2eb7-4676-9765-67d01224afe2",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "b91deab6-b8fe-4224-8544-fb29b90877af",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "17c5ab6e-436f-4b97-b945-ce1c12f7b892",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "5d2f1a3d-2e4a-4d89-87f3-953e13932d45",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "62eb20c6-4686-43d3-8725-b18041604264",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bde96629-9438-4ab3-8860-85d67597869a",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "18c862b7-d2e6-4293-b705-f0b380ae826a",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a424a078-2b0f-4132-9f4d-22745c02ca89",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "64408a56-ca83-4abd-bd1f-41baebab38d5",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "08030e6f-3774-4ff9-bc02-cf82ebd2a420",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "8c927cc7-2632-4cf8-8c7c-21529fb5c9f4",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  63 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "5c57ed68-04c7-49cf-9446-c33a5db1dc35",
              "parentUUID": "4bbb703c-037b-4bad-aa9a-5294bbbc6235",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5345fc4a-b6cb-4b3b-858f-1cb1ae12340b",
            "741ee55b-6db6-4e21-8cad-3182eedca6cc",
            "ffd2920d-3f86-4c01-bf17-5c551143615a",
            "209940ff-c73e-4144-9b2b-9ec4b0779698",
            "0feaef43-2eb7-4676-9765-67d01224afe2",
            "b91deab6-b8fe-4224-8544-fb29b90877af",
            "17c5ab6e-436f-4b97-b945-ce1c12f7b892",
            "5d2f1a3d-2e4a-4d89-87f3-953e13932d45",
            "62eb20c6-4686-43d3-8725-b18041604264",
            "bde96629-9438-4ab3-8860-85d67597869a",
            "18c862b7-d2e6-4293-b705-f0b380ae826a",
            "a424a078-2b0f-4132-9f4d-22745c02ca89",
            "64408a56-ca83-4abd-bd1f-41baebab38d5",
            "08030e6f-3774-4ff9-bc02-cf82ebd2a420",
            "8c927cc7-2632-4cf8-8c7c-21529fb5c9f4",
            "5c57ed68-04c7-49cf-9446-c33a5db1dc35"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
          "title": "Test 10Lines game: 10, 25 -  64",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 308,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9ab823e8-b3bf-4e38-8be1-1b100136fdc0",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "e49afeea-fc0c-4668-a67b-4de2c6f40421",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "1e0207c0-79c2-47f2-84dd-ed7b7f453432",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "5cfbcd4c-ecae-462b-9596-79cdaaffbc54",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "7df55c41-4279-4152-976a-fd0bea16a779",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "34c220a8-d7fb-4dde-ab71-7616c1fcf707",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "c24b33ac-c09f-4591-a150-e779031b2d7c",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "4c5febeb-0ef8-437b-bc0f-1096235a1a4e",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bd9b8e56-413a-4d6b-a363-21114b6cddcc",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "67004621-5e0e-42e0-a77b-1865205b98ba",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "90212cc7-ac5d-477f-8b99-3304dd6f42c8",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "aed322e9-c15e-4b0e-853a-1c2163170044",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "7ea8d976-02f5-4c94-8946-c1c3c7511145",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "1a7d3ba8-1ff0-4f79-ba34-106d1b1b0ecd",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ba933d84-2a15-4249-ba5d-230387cfddf2",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "2641461c-0e16-4d13-bb3f-5cd741f0b49e",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "fe1bcda7-1ab4-4865-b3d7-6265197f4f24",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  64 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "015c4780-11af-4fc5-a724-ff417965da3c",
              "parentUUID": "b720c65b-9cce-4940-bf7e-faeac670f5ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e0207c0-79c2-47f2-84dd-ed7b7f453432",
            "5cfbcd4c-ecae-462b-9596-79cdaaffbc54",
            "7df55c41-4279-4152-976a-fd0bea16a779",
            "34c220a8-d7fb-4dde-ab71-7616c1fcf707",
            "c24b33ac-c09f-4591-a150-e779031b2d7c",
            "4c5febeb-0ef8-437b-bc0f-1096235a1a4e",
            "bd9b8e56-413a-4d6b-a363-21114b6cddcc",
            "67004621-5e0e-42e0-a77b-1865205b98ba",
            "90212cc7-ac5d-477f-8b99-3304dd6f42c8",
            "aed322e9-c15e-4b0e-853a-1c2163170044",
            "7ea8d976-02f5-4c94-8946-c1c3c7511145",
            "1a7d3ba8-1ff0-4f79-ba34-106d1b1b0ecd",
            "ba933d84-2a15-4249-ba5d-230387cfddf2",
            "2641461c-0e16-4d13-bb3f-5cd741f0b49e",
            "fe1bcda7-1ab4-4865-b3d7-6265197f4f24",
            "015c4780-11af-4fc5-a724-ff417965da3c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
          "title": "Test 10Lines game: 10, 25 -  65",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 287,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "af90da49-06dc-4ab1-bb4c-86d3b4615e58",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "962e673d-948a-4fa3-8228-6e78bbba93fb",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "46a90e4c-2ee2-4ed1-a871-946b3fe7200b",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "b4b35781-0c77-4270-a690-cdbe1d663e8c",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "8e423a83-d7af-4b5c-a7b0-6be0280d8854",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "0d0a13aa-5fb9-4cfd-a77a-3e5b5b48cc11",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "9011ac7f-9834-48c0-98b6-7d04b933ec37",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "5bef869b-3e45-411d-8a5f-8c25eee55bb4",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2f6f8619-f005-4d6b-b67f-4c3ec97b6784",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "88c8a575-73b0-4082-b541-07f2dd4eff56",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "748d6e11-8609-4309-ac61-1db26278c850",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4e8f7e22-1ca6-41d3-ada4-ecfc7496589c",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "9c47dc54-e1d2-47ad-b834-dc15fd590e06",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "bc693bcc-a389-45a6-ac4f-dcbe1d2f59a1",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "dd1530b5-be9b-41c5-ad89-428ab361e601",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e9f283b3-59cb-49fc-bd9a-4996d09b5a91",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "aa9e4407-8064-4ae6-8408-dba0dad3c0a8",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  65 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "1c68f7ff-e251-475c-9ba4-9f0bbfb015b7",
              "parentUUID": "7c91ea02-49f4-4789-83bc-9a1bef60c601",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46a90e4c-2ee2-4ed1-a871-946b3fe7200b",
            "b4b35781-0c77-4270-a690-cdbe1d663e8c",
            "8e423a83-d7af-4b5c-a7b0-6be0280d8854",
            "0d0a13aa-5fb9-4cfd-a77a-3e5b5b48cc11",
            "9011ac7f-9834-48c0-98b6-7d04b933ec37",
            "5bef869b-3e45-411d-8a5f-8c25eee55bb4",
            "2f6f8619-f005-4d6b-b67f-4c3ec97b6784",
            "88c8a575-73b0-4082-b541-07f2dd4eff56",
            "748d6e11-8609-4309-ac61-1db26278c850",
            "4e8f7e22-1ca6-41d3-ada4-ecfc7496589c",
            "9c47dc54-e1d2-47ad-b834-dc15fd590e06",
            "bc693bcc-a389-45a6-ac4f-dcbe1d2f59a1",
            "dd1530b5-be9b-41c5-ad89-428ab361e601",
            "e9f283b3-59cb-49fc-bd9a-4996d09b5a91",
            "aa9e4407-8064-4ae6-8408-dba0dad3c0a8",
            "1c68f7ff-e251-475c-9ba4-9f0bbfb015b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
          "title": "Test 10Lines game: 10, 25 -  66",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 279,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f4bbbf4b-0896-4043-8192-d41c26eb591b",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "977e92f7-0f02-4dbe-89c8-16221b11ac42",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "dffa6147-a2b1-4107-99a4-95f58bc38ff2",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "3eda1cdb-75a4-47bc-b182-658b35180b64",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 check correct position Scatter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "1d20af5b-b0c1-4f66-9739-7f5ce06e3cc7",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "11e6d8dd-957c-4a4f-ba1a-23078c9e95b5",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "3bfb3883-1f18-4c0d-aa49-28ca17493ecd",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "55382720-127d-4ccc-b15a-d105fb40dd53",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "85543f5f-0e5d-4dd9-8fcf-8eb8b2fe7bb1",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "14f004b7-d231-4152-bd68-078af906fa09",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6ddc7761-0249-4516-b5cc-ff0014d90bc5",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c7995d05-e409-4dd7-a348-bd4c8fa61f15",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "cc25fa1e-dfda-4875-a41f-7d4bb8954cc4",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "c54aaed0-5f1b-43b9-94f1-b9874bad9731",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "d74d9a13-8c73-4dc1-88d9-fb8ee63f03ea",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "b63dd692-da1a-4961-b4e7-bbdc70c0894e",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "8c6f923d-13f1-43a3-9b1c-a1ff69f14143",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  66 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "dbd7fd88-eafa-4e38-819b-799ab4d0320a",
              "parentUUID": "9da5bc31-47a7-4bc6-90ee-0c1397d1f948",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dffa6147-a2b1-4107-99a4-95f58bc38ff2",
            "3eda1cdb-75a4-47bc-b182-658b35180b64",
            "1d20af5b-b0c1-4f66-9739-7f5ce06e3cc7",
            "11e6d8dd-957c-4a4f-ba1a-23078c9e95b5",
            "3bfb3883-1f18-4c0d-aa49-28ca17493ecd",
            "55382720-127d-4ccc-b15a-d105fb40dd53",
            "85543f5f-0e5d-4dd9-8fcf-8eb8b2fe7bb1",
            "14f004b7-d231-4152-bd68-078af906fa09",
            "6ddc7761-0249-4516-b5cc-ff0014d90bc5",
            "c7995d05-e409-4dd7-a348-bd4c8fa61f15",
            "cc25fa1e-dfda-4875-a41f-7d4bb8954cc4",
            "c54aaed0-5f1b-43b9-94f1-b9874bad9731",
            "d74d9a13-8c73-4dc1-88d9-fb8ee63f03ea",
            "b63dd692-da1a-4961-b4e7-bbdc70c0894e",
            "8c6f923d-13f1-43a3-9b1c-a1ff69f14143",
            "dbd7fd88-eafa-4e38-819b-799ab4d0320a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "16f3c42b-9601-4bf0-90dd-066482b6b713",
          "title": "Test 10Lines game: 10, 25 -  67",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 298,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4254cce3-ae94-4e07-924d-68eb2d8ca97d",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "1485dadd-bd78-4234-89d7-3241490ad02f",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "565354d6-1067-47e8-a550-f9b66a3fae08",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "714bd57d-3bf4-4d45-b3fb-4bf6b1e910ec",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "1b92b5b6-66bc-43fe-b4d4-96ee780d7d31",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "3fcbcf8a-c2b9-46cb-9954-0cde7d8530bb",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "aab30345-d410-4a73-98cf-fbcbed4ae483",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "2c49591a-9ede-4301-9b33-4e11d2d817bf",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "acde5c4b-1301-402e-b053-06ae8ac20014",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "9cc1f2a1-75a9-4aa1-bbc7-c6b395cd1a9f",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "41fe7d01-f1f6-441d-aa37-fd8091d3e09d",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bd3044e1-2df2-4c61-b9dd-10558ef855c9",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "c0f5a984-10aa-4141-803a-33ae25496c46",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "1249c44d-381e-4d0a-bf4e-9068ff3f82af",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "7baff1b8-dafd-4a2c-ba97-f8e920761233",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "3142d151-714f-450d-b1ee-b9ce92919081",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "2d4ef307-a45a-414e-a895-92d8f22c3469",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  67 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "0cb5ff80-32b4-4d37-b6f8-8f3bd56ef929",
              "parentUUID": "16f3c42b-9601-4bf0-90dd-066482b6b713",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "565354d6-1067-47e8-a550-f9b66a3fae08",
            "714bd57d-3bf4-4d45-b3fb-4bf6b1e910ec",
            "1b92b5b6-66bc-43fe-b4d4-96ee780d7d31",
            "3fcbcf8a-c2b9-46cb-9954-0cde7d8530bb",
            "aab30345-d410-4a73-98cf-fbcbed4ae483",
            "2c49591a-9ede-4301-9b33-4e11d2d817bf",
            "acde5c4b-1301-402e-b053-06ae8ac20014",
            "9cc1f2a1-75a9-4aa1-bbc7-c6b395cd1a9f",
            "41fe7d01-f1f6-441d-aa37-fd8091d3e09d",
            "bd3044e1-2df2-4c61-b9dd-10558ef855c9",
            "c0f5a984-10aa-4141-803a-33ae25496c46",
            "1249c44d-381e-4d0a-bf4e-9068ff3f82af",
            "7baff1b8-dafd-4a2c-ba97-f8e920761233",
            "3142d151-714f-450d-b1ee-b9ce92919081",
            "2d4ef307-a45a-414e-a895-92d8f22c3469",
            "0cb5ff80-32b4-4d37-b6f8-8f3bd56ef929"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
          "title": "Test 10Lines game: 10, 25 -  68",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 283,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b77799b7-a002-4485-8d68-c3af5020f666",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "618693e0-5e9a-45b5-b1b4-562dbbb7da4d",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "57ae8ec7-833f-444a-9881-f4c929f93c02",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "c966c16b-e462-4b83-87b1-13429913d207",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "f5780d3f-5cf5-461c-998e-1adb4cb09886",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "b63dc6fc-0627-4405-a2fa-1c2cbb534370",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "a0150d8a-d306-4fc3-bfbf-d44d4c2f0e2d",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "6c4dde2e-ee0c-4c2b-9d2d-44fa7b28a800",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "975db7ad-3f1b-404f-b234-b7e1bdc14c90",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "f4ec9c5e-2e4e-490f-954b-2dde9d48a5a4",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "48a42171-8ec5-4a04-b191-d9dcfb73fc5b",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "397a90be-779c-47b0-a6f5-796632558e26",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "f7582b1c-cd87-40ad-8e13-640e8819d017",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "96e1592e-0130-455e-be66-942410e65be7",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "636cb30c-a1f3-47be-8d59-dc9e39be877a",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e55153ad-fcec-40b9-b479-d377a0137ea4",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "67203db2-2907-403e-a2ed-fab41f984949",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  68 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "277287ec-d05c-403f-abb3-d399186ba499",
              "parentUUID": "2564d1e4-f8f1-496d-8fa1-d4685700e117",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57ae8ec7-833f-444a-9881-f4c929f93c02",
            "c966c16b-e462-4b83-87b1-13429913d207",
            "f5780d3f-5cf5-461c-998e-1adb4cb09886",
            "b63dc6fc-0627-4405-a2fa-1c2cbb534370",
            "a0150d8a-d306-4fc3-bfbf-d44d4c2f0e2d",
            "6c4dde2e-ee0c-4c2b-9d2d-44fa7b28a800",
            "975db7ad-3f1b-404f-b234-b7e1bdc14c90",
            "f4ec9c5e-2e4e-490f-954b-2dde9d48a5a4",
            "48a42171-8ec5-4a04-b191-d9dcfb73fc5b",
            "397a90be-779c-47b0-a6f5-796632558e26",
            "f7582b1c-cd87-40ad-8e13-640e8819d017",
            "96e1592e-0130-455e-be66-942410e65be7",
            "636cb30c-a1f3-47be-8d59-dc9e39be877a",
            "e55153ad-fcec-40b9-b479-d377a0137ea4",
            "67203db2-2907-403e-a2ed-fab41f984949",
            "277287ec-d05c-403f-abb3-d399186ba499"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4303f878-03ed-43e5-9056-66ee457ec173",
          "title": "Test 10Lines game: 10, 25 -  69",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 281,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "84420073-caa0-483f-bbb1-c504686be74b",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "ea10ba8e-508f-411c-9989-6dcb1dbdd465",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "dbf6a6d0-e7b4-4f11-a063-e471f7481c53",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "a9d6fea6-4b43-4f8e-9e32-17d088f88cbe",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ffe41edd-753e-43f0-a132-b4a774990200",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "b3d2952d-14dd-4530-be33-66edf0320dcd",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "56a2f996-e3de-4170-93ce-e550df22bc1e",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "8e84a470-9058-41e3-900e-47f877f23421",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f142ad4f-63a1-48eb-8afb-8f78d8d083ac",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "a30a9aa1-cc88-4eed-8a3d-6174898c40cd",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "538bb128-5fc9-48f4-a512-b0d442efba8f",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9004e0c3-8eb0-4162-90f4-ccbd26c3f469",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "d1089972-96ea-4808-a804-12806d8aef1a",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "62e680b7-cfdf-47a6-858c-33b4a93724ec",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "8af683c2-3d9a-4793-ac32-52945c738980",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "8ef2fad3-6152-494c-af44-0ee8b8aa2acd",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "28f64b25-b267-4387-928d-7110a5301e15",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  69 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a650d55e-a6f0-475e-b52c-c9d945422598",
              "parentUUID": "4303f878-03ed-43e5-9056-66ee457ec173",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dbf6a6d0-e7b4-4f11-a063-e471f7481c53",
            "a9d6fea6-4b43-4f8e-9e32-17d088f88cbe",
            "ffe41edd-753e-43f0-a132-b4a774990200",
            "b3d2952d-14dd-4530-be33-66edf0320dcd",
            "56a2f996-e3de-4170-93ce-e550df22bc1e",
            "8e84a470-9058-41e3-900e-47f877f23421",
            "f142ad4f-63a1-48eb-8afb-8f78d8d083ac",
            "a30a9aa1-cc88-4eed-8a3d-6174898c40cd",
            "538bb128-5fc9-48f4-a512-b0d442efba8f",
            "9004e0c3-8eb0-4162-90f4-ccbd26c3f469",
            "d1089972-96ea-4808-a804-12806d8aef1a",
            "62e680b7-cfdf-47a6-858c-33b4a93724ec",
            "8af683c2-3d9a-4793-ac32-52945c738980",
            "8ef2fad3-6152-494c-af44-0ee8b8aa2acd",
            "28f64b25-b267-4387-928d-7110a5301e15",
            "a650d55e-a6f0-475e-b52c-c9d945422598"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "493426df-03de-422c-a0ed-5238aa2e9299",
          "title": "Test 10Lines game: 10, 25 -  70",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 280,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6007716b-fcb8-477f-9637-34ee5691118e",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "0830d5a8-546c-4a59-bd5e-4432dd54649a",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "3613399f-bf4e-45e3-bc72-f2f915ae66d8",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "4db7a486-b3b5-4ffe-9634-8a7bb831cb71",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "3caadb26-44df-48ce-8970-f00184a8ab74",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "3159d809-1b4d-4455-b5db-c7254f1377b5",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "149d3097-1d26-404c-be58-181fcc737caf",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "4d34a609-cd80-42a9-ac62-810daaab55a0",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e6e01e5c-b0ec-498d-95ed-c2fa8189470b",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "51efc1e3-8c8e-4f0e-b671-fa9ff012fe5f",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "092fecae-6b59-4235-92c7-041d74e6fa25",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6729f349-422d-44f1-a493-2dcc14e811e2",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "77b2543c-5bbd-4a7c-b62d-26eda2cc61f1",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "3aa30272-81ed-4c4d-99be-d8b1120e6fa5",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "26de3685-3be2-4f65-8a11-a986434f77bb",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "222d265a-fb39-43f8-a951-588f0cb045ce",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "d09c5b23-a894-4e9a-9ed9-578edd427468",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  70 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f1418d4c-863f-42c3-8af8-9354d956c0d8",
              "parentUUID": "493426df-03de-422c-a0ed-5238aa2e9299",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3613399f-bf4e-45e3-bc72-f2f915ae66d8",
            "4db7a486-b3b5-4ffe-9634-8a7bb831cb71",
            "3caadb26-44df-48ce-8970-f00184a8ab74",
            "3159d809-1b4d-4455-b5db-c7254f1377b5",
            "149d3097-1d26-404c-be58-181fcc737caf",
            "4d34a609-cd80-42a9-ac62-810daaab55a0",
            "e6e01e5c-b0ec-498d-95ed-c2fa8189470b",
            "51efc1e3-8c8e-4f0e-b671-fa9ff012fe5f",
            "092fecae-6b59-4235-92c7-041d74e6fa25",
            "6729f349-422d-44f1-a493-2dcc14e811e2",
            "77b2543c-5bbd-4a7c-b62d-26eda2cc61f1",
            "3aa30272-81ed-4c4d-99be-d8b1120e6fa5",
            "26de3685-3be2-4f65-8a11-a986434f77bb",
            "222d265a-fb39-43f8-a951-588f0cb045ce",
            "d09c5b23-a894-4e9a-9ed9-578edd427468",
            "f1418d4c-863f-42c3-8af8-9354d956c0d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
          "title": "Test 10Lines game: 10, 25 -  71",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 286,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b5e242f2-b6cc-421d-af93-93de240b05d6",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "8bbe374c-37e4-4f36-bb54-697f4d861008",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a7552300-290e-459c-b363-2c3549517f55",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "23fc8aa0-be27-409c-8e6f-8ee4b81c34f2",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ed227cef-3936-4765-bd72-11720f2cff7c",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "b2d29a05-eb1b-436f-8411-54c6cb12580a",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "c4410fda-de61-4fa3-92f3-988f44e801e4",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d33195e2-fa49-4c5b-8419-b589b667d6aa",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "be409c2b-4093-4c8a-8782-45d9c69d8886",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "ca51620e-c397-4f27-b778-0d79557855c8",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b500a3fc-60c7-4614-b4e2-52de6e21c3b7",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5dae0dee-5b96-4607-8c82-603bff2a906c",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "5173465f-5098-4818-8742-c3d7ab3b7ab7",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "822136f8-e4b2-4f4f-af42-67a8379754b4",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "821b5e4d-b4dd-42b6-8ac3-c4e3d67db384",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "1c8aa1a5-b4d5-49ab-a9f0-d80b5b570fb8",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "c0f49c23-7bdd-42aa-abea-0fd695288ddb",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  71 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c6a7c148-fa4f-4652-b7ca-1ecc53fda855",
              "parentUUID": "de4f3e1a-7b4b-4361-b76f-1a1f2a4d374c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7552300-290e-459c-b363-2c3549517f55",
            "23fc8aa0-be27-409c-8e6f-8ee4b81c34f2",
            "ed227cef-3936-4765-bd72-11720f2cff7c",
            "b2d29a05-eb1b-436f-8411-54c6cb12580a",
            "c4410fda-de61-4fa3-92f3-988f44e801e4",
            "d33195e2-fa49-4c5b-8419-b589b667d6aa",
            "be409c2b-4093-4c8a-8782-45d9c69d8886",
            "ca51620e-c397-4f27-b778-0d79557855c8",
            "b500a3fc-60c7-4614-b4e2-52de6e21c3b7",
            "5dae0dee-5b96-4607-8c82-603bff2a906c",
            "5173465f-5098-4818-8742-c3d7ab3b7ab7",
            "822136f8-e4b2-4f4f-af42-67a8379754b4",
            "821b5e4d-b4dd-42b6-8ac3-c4e3d67db384",
            "1c8aa1a5-b4d5-49ab-a9f0-d80b5b570fb8",
            "c0f49c23-7bdd-42aa-abea-0fd695288ddb",
            "c6a7c148-fa4f-4652-b7ca-1ecc53fda855"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
          "title": "Test 10Lines game: 10, 25 -  72",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 328,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ae514389-0cf5-4b70-81aa-ad87586fcc81",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "97ab37a4-b14c-40ec-8ab9-39ab37b00370",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d11e393e-76c7-4464-b576-d09b36912c30",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "ca0ba27f-0c0e-492e-a372-481a58cf7f6c",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ce5cd05e-d94c-4d6b-a7d4-5373678acfc3",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "5234128c-e451-4765-bcda-aea3e4b674a8",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "d919861f-5f23-4938-8063-5d3b06ff9286",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a7dc208a-8617-4398-9f25-2e01764a40b8",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "02c9b2ed-d26f-4d06-87ee-e35b8602a0f3",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "ac90e825-59b5-437a-8632-0651e0ff2bad",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "832d2f30-3798-4b20-9704-4f8a4da59ebc",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c3c2a1a0-7c6f-488e-933e-fd02468a3c4b",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "3c7afdd1-1fa0-4c92-83a4-36f3ac3adc76",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "587f4ce2-3ca7-4e75-8b14-cc1247537508",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "22668c4a-6abe-4993-a36c-c33c5b4c63e9",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 check type of win Lines",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "4adf7c91-ef37-4a8b-84b4-9fcf5e6bbcec",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "aadea4ab-fbb0-44db-8554-39f9d4551a81",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  72 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b96fdca1-0895-4245-8b3f-76e0a2b7ee42",
              "parentUUID": "1cf5b5bc-ea4a-48f3-80e3-3fe22b70bcab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d11e393e-76c7-4464-b576-d09b36912c30",
            "ca0ba27f-0c0e-492e-a372-481a58cf7f6c",
            "ce5cd05e-d94c-4d6b-a7d4-5373678acfc3",
            "5234128c-e451-4765-bcda-aea3e4b674a8",
            "d919861f-5f23-4938-8063-5d3b06ff9286",
            "a7dc208a-8617-4398-9f25-2e01764a40b8",
            "02c9b2ed-d26f-4d06-87ee-e35b8602a0f3",
            "ac90e825-59b5-437a-8632-0651e0ff2bad",
            "832d2f30-3798-4b20-9704-4f8a4da59ebc",
            "c3c2a1a0-7c6f-488e-933e-fd02468a3c4b",
            "3c7afdd1-1fa0-4c92-83a4-36f3ac3adc76",
            "587f4ce2-3ca7-4e75-8b14-cc1247537508",
            "22668c4a-6abe-4993-a36c-c33c5b4c63e9",
            "4adf7c91-ef37-4a8b-84b4-9fcf5e6bbcec",
            "aadea4ab-fbb0-44db-8554-39f9d4551a81",
            "b96fdca1-0895-4245-8b3f-76e0a2b7ee42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "58476468-7b8b-456f-9776-ab37d4ad8be9",
          "title": "Test 10Lines game: 10, 25 -  73",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 293,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "023872d9-141e-465d-961d-06a9dd553f45",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "96bffbd0-4757-4aae-85f0-734e85223f51",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "669f6162-e75b-4d6d-9239-d467645c1bbf",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "4045559d-6b13-4d5c-a011-55e318e167f8",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "400e19c6-de65-46a5-9fda-50e46de7f41c",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "92915c70-ddcc-43ca-91ea-36dcb3711be6",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "2a9b37b1-8f69-4a1d-8939-739bf11b1954",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "e68aee95-79e0-4666-9ced-271daff0d4b9",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6129d028-87c3-4566-888d-53d90f4ff0ba",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "1a489849-60c6-42e6-b6cf-f72f0277aecd",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ac7aaa2b-1fd4-481d-8255-8a99762fb5f3",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e5660969-7e74-4b1c-8a5c-783bbd12fb53",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "a04f2321-9fab-4efd-9098-fa3a095d119a",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "8f3f6c35-5e8a-4cb9-890b-85835c83d262",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "2692b5ef-c09d-49bf-be13-f91801618f0e",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "b7a5ab1a-2bc0-4450-b261-ea903de6c6fa",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "bf9f14b4-77d5-4833-a2d6-a21dc63941fa",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  73 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "1dbe4796-a856-48a9-bb2a-29d294006304",
              "parentUUID": "58476468-7b8b-456f-9776-ab37d4ad8be9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "669f6162-e75b-4d6d-9239-d467645c1bbf",
            "4045559d-6b13-4d5c-a011-55e318e167f8",
            "400e19c6-de65-46a5-9fda-50e46de7f41c",
            "92915c70-ddcc-43ca-91ea-36dcb3711be6",
            "2a9b37b1-8f69-4a1d-8939-739bf11b1954",
            "e68aee95-79e0-4666-9ced-271daff0d4b9",
            "6129d028-87c3-4566-888d-53d90f4ff0ba",
            "1a489849-60c6-42e6-b6cf-f72f0277aecd",
            "ac7aaa2b-1fd4-481d-8255-8a99762fb5f3",
            "e5660969-7e74-4b1c-8a5c-783bbd12fb53",
            "a04f2321-9fab-4efd-9098-fa3a095d119a",
            "8f3f6c35-5e8a-4cb9-890b-85835c83d262",
            "2692b5ef-c09d-49bf-be13-f91801618f0e",
            "b7a5ab1a-2bc0-4450-b261-ea903de6c6fa",
            "bf9f14b4-77d5-4833-a2d6-a21dc63941fa",
            "1dbe4796-a856-48a9-bb2a-29d294006304"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7c3d0c2f-13bb-4a34-a571-023032caae82",
          "title": "Test 10Lines game: 10, 25 -  74",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 327,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c639de32-51d6-4bf6-b4f7-e9e9e6044cb1",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "d55c4111-7f42-496d-9f51-151ac0b53555",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "1e49b205-289e-4e20-ad38-90f4b73fd90f",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "284d3730-4c81-4aca-a2c4-e0eb0bdf5aef",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "310d38a7-4afe-4e68-9007-b5fe9b308668",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d7fc98a9-ab30-45e1-9445-f6fa2b39945a",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "e2ed9aec-8fcf-4295-96a9-fb96b0fcfbb8",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "1d937810-55de-4828-8d24-d332e5a6dc0e",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2a34c23c-de8d-4c38-be15-27c52f0ede61",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "308be9c4-3896-4c59-aaac-a29817d2f401",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "eeea5c61-0669-461a-9388-e21147c807cb",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d51610ba-1a16-4bc0-b281-ef2aed105aa3",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "54acf18e-afa6-4a55-96c3-78f87196528d",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "1766cf4e-690b-4804-80d7-9bbf448eb2d0",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "105cef27-583c-4103-b977-804efdd0fc4f",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "a5942559-a2ba-44ad-9aff-361eabe3410c",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "6a9c13a1-640f-4406-8df3-67eb918a5930",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  74 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b86761e8-78df-48e6-8cd3-6a739180cf92",
              "parentUUID": "7c3d0c2f-13bb-4a34-a571-023032caae82",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e49b205-289e-4e20-ad38-90f4b73fd90f",
            "284d3730-4c81-4aca-a2c4-e0eb0bdf5aef",
            "310d38a7-4afe-4e68-9007-b5fe9b308668",
            "d7fc98a9-ab30-45e1-9445-f6fa2b39945a",
            "e2ed9aec-8fcf-4295-96a9-fb96b0fcfbb8",
            "1d937810-55de-4828-8d24-d332e5a6dc0e",
            "2a34c23c-de8d-4c38-be15-27c52f0ede61",
            "308be9c4-3896-4c59-aaac-a29817d2f401",
            "eeea5c61-0669-461a-9388-e21147c807cb",
            "d51610ba-1a16-4bc0-b281-ef2aed105aa3",
            "54acf18e-afa6-4a55-96c3-78f87196528d",
            "1766cf4e-690b-4804-80d7-9bbf448eb2d0",
            "105cef27-583c-4103-b977-804efdd0fc4f",
            "a5942559-a2ba-44ad-9aff-361eabe3410c",
            "6a9c13a1-640f-4406-8df3-67eb918a5930",
            "b86761e8-78df-48e6-8cd3-6a739180cf92"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
          "title": "Test 10Lines game: 10, 25 -  75",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 288,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "cd347ddd-0a19-4d4d-99aa-2f74abb91b6f",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "d8f75d49-22cb-438e-8fab-d09083761287",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "1efc4bde-b169-4490-a334-7b2fd9b4ffe7",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "a320a8fe-2dbe-4548-bb3c-29cdce4cb5fa",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "2b5fd40d-e34a-4c0f-a34f-9a594e18f5d7",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "95c0750e-8c9e-4834-8a85-642d92c3ac60",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "ac343285-1599-449f-a311-042d01d7b586",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "cf115953-8ddc-490e-a4bf-03bb82cd2ff8",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "07361445-9693-4de9-94e2-2634c4385a39",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "fe394f1c-1c5c-451a-9571-78dc10c08fd4",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "632b0251-fb02-452b-bd3e-29d46b9fcc7f",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3a4ea7b4-4aac-4692-afbc-3e2c8df8dc86",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "46dd91c1-5f53-4562-82dd-e0b1c7cf8b50",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "7ecc8060-ee31-4b49-b8a7-40797d696b97",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "9ebdedb9-5966-4061-a0e6-2dba352405fe",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "fdc7447f-0357-4f67-b27f-9699d3946c68",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "534c8e4f-e455-4079-b60c-608d2156d5a6",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  75 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f7c1bccd-9fec-4224-8ed8-e3d51c2d0352",
              "parentUUID": "86812d0f-db49-455f-9cd8-51cf9e6c98a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1efc4bde-b169-4490-a334-7b2fd9b4ffe7",
            "a320a8fe-2dbe-4548-bb3c-29cdce4cb5fa",
            "2b5fd40d-e34a-4c0f-a34f-9a594e18f5d7",
            "95c0750e-8c9e-4834-8a85-642d92c3ac60",
            "ac343285-1599-449f-a311-042d01d7b586",
            "cf115953-8ddc-490e-a4bf-03bb82cd2ff8",
            "07361445-9693-4de9-94e2-2634c4385a39",
            "fe394f1c-1c5c-451a-9571-78dc10c08fd4",
            "632b0251-fb02-452b-bd3e-29d46b9fcc7f",
            "3a4ea7b4-4aac-4692-afbc-3e2c8df8dc86",
            "46dd91c1-5f53-4562-82dd-e0b1c7cf8b50",
            "7ecc8060-ee31-4b49-b8a7-40797d696b97",
            "9ebdedb9-5966-4061-a0e6-2dba352405fe",
            "fdc7447f-0357-4f67-b27f-9699d3946c68",
            "534c8e4f-e455-4079-b60c-608d2156d5a6",
            "f7c1bccd-9fec-4224-8ed8-e3d51c2d0352"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
          "title": "Test 10Lines game: 10, 25 -  76",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 278,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "34f0d61b-171d-4445-a063-fbc3562b6236",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "44adeaeb-357b-494e-aa5b-cdd08745d02b",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "55535262-529b-4c98-b2af-61ff21e9c734",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "a1560b39-bc2d-4c4b-8a27-6ba5c358edac",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "de625cd6-d34c-42a6-a650-3c9e29820627",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "ce8e73a2-405a-4e23-a0d0-1cb3d4b0aee1",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "02da00f7-8308-4c6b-842c-417d90cd1f9c",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "c74e3c62-a698-478b-abee-bbb995a19a2c",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f90da4ac-037b-4c9b-8cd3-0548e6d0f062",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "605cdea0-60e9-4e10-b1c2-9500852abfa4",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a9aa2b12-4e8f-4427-b9d6-2c9b28d20a53",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a5579f98-fd31-404e-b4ed-176653d6fc90",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "7eb89576-c842-4780-aa17-bde6b7c52654",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0226ffa6-3b47-4309-bab4-c01d05405eae",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "c22b83ec-6674-487f-9f9e-62537788ba9d",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "4a7fca37-4993-4c34-90a1-bde8b4828e99",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "ef54ca3b-ae56-477b-b832-37bff841b36a",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  76 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "302001a6-d118-4746-a557-7bdac44b8b21",
              "parentUUID": "7c727b04-4ffa-4cb5-93e0-f9209b8d2b4d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55535262-529b-4c98-b2af-61ff21e9c734",
            "a1560b39-bc2d-4c4b-8a27-6ba5c358edac",
            "de625cd6-d34c-42a6-a650-3c9e29820627",
            "ce8e73a2-405a-4e23-a0d0-1cb3d4b0aee1",
            "02da00f7-8308-4c6b-842c-417d90cd1f9c",
            "c74e3c62-a698-478b-abee-bbb995a19a2c",
            "f90da4ac-037b-4c9b-8cd3-0548e6d0f062",
            "605cdea0-60e9-4e10-b1c2-9500852abfa4",
            "a9aa2b12-4e8f-4427-b9d6-2c9b28d20a53",
            "a5579f98-fd31-404e-b4ed-176653d6fc90",
            "7eb89576-c842-4780-aa17-bde6b7c52654",
            "0226ffa6-3b47-4309-bab4-c01d05405eae",
            "c22b83ec-6674-487f-9f9e-62537788ba9d",
            "4a7fca37-4993-4c34-90a1-bde8b4828e99",
            "ef54ca3b-ae56-477b-b832-37bff841b36a",
            "302001a6-d118-4746-a557-7bdac44b8b21"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
          "title": "Test 10Lines game: 10, 25 -  77",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 296,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "640ab702-7547-48c4-a1ab-1f09d7fe2cd6",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "83ced10a-0ed6-41fb-b64d-2c7dd99a9b89",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a9d4a77c-3bfa-4832-8cbc-f489dbcd34b4",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "d088c300-a2fe-4f4f-88b4-332c031770dc",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "1ec72cc7-359e-4b7a-b771-fd4bea314d22",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d97ad7f4-fb64-4fcf-ab85-9156dd79a2f7",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "fbb0e833-4b4c-4737-984a-695b152c652b",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "60ac1343-78f0-460f-a146-c63d8d2637ab",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bb76bf73-07f7-4754-92e3-6ba528ea3fba",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "8f143b21-218e-4f1a-82e0-49391243b550",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "67e875ea-b49a-47da-b0ed-a7ba2a254f0c",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bab46e67-375b-40d8-af71-e4ecbffc7f26",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "c2ec693c-357a-4bdf-a58e-d6a69c9e3ad2",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0ef09f63-55b7-491e-bf47-189bd5cbf48f",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "97c57e1b-e3ad-431f-823b-55b0ffbfba5f",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "ce604572-92de-4715-914a-0f0d11572f84",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e0447f0e-ba22-425c-9173-172ee3a4ed9e",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  77 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "9c3ea635-15ff-49f2-bfe9-8805c704d387",
              "parentUUID": "0466d3d7-1336-47d1-aed1-c4218c874c7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9d4a77c-3bfa-4832-8cbc-f489dbcd34b4",
            "d088c300-a2fe-4f4f-88b4-332c031770dc",
            "1ec72cc7-359e-4b7a-b771-fd4bea314d22",
            "d97ad7f4-fb64-4fcf-ab85-9156dd79a2f7",
            "fbb0e833-4b4c-4737-984a-695b152c652b",
            "60ac1343-78f0-460f-a146-c63d8d2637ab",
            "bb76bf73-07f7-4754-92e3-6ba528ea3fba",
            "8f143b21-218e-4f1a-82e0-49391243b550",
            "67e875ea-b49a-47da-b0ed-a7ba2a254f0c",
            "bab46e67-375b-40d8-af71-e4ecbffc7f26",
            "c2ec693c-357a-4bdf-a58e-d6a69c9e3ad2",
            "0ef09f63-55b7-491e-bf47-189bd5cbf48f",
            "97c57e1b-e3ad-431f-823b-55b0ffbfba5f",
            "ce604572-92de-4715-914a-0f0d11572f84",
            "e0447f0e-ba22-425c-9173-172ee3a4ed9e",
            "9c3ea635-15ff-49f2-bfe9-8805c704d387"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a59a994f-802e-4279-8f62-db3c857c2fa6",
          "title": "Test 10Lines game: 10, 25 -  78",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 282,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5d31e721-2583-4599-97ee-7b6c80967893",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "ac9b855e-540a-45ac-aeca-c4103142f142",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "03954331-96b8-4053-bb9b-935ceeae8955",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "19f67962-7d9a-4cbd-bfd0-43996fcfb85d",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "70551545-5ff4-40a8-aad8-143d2f805952",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "8721f303-35d5-4ed1-9c4d-5fcfca69f0a8",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "27d5e540-fb6c-475d-b6a4-2bdf3a4c244f",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "ef53bdad-ff77-4e2d-a125-0369b106682d",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6992d0d3-6457-4d2b-a305-7713c46d7898",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "f8356a8a-d038-4635-896d-6b153df3697d",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c85eaaef-567e-46d6-9b90-1e61f7d83d06",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4a156381-545b-43d7-8a51-63054c468689",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "e5947ec3-3f76-4062-9d00-16f1e10e107e",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "c87f82ad-9c1f-4ef1-a998-0a3e8e684843",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "4dcdb8dd-ba8f-479d-89c7-437aa26fc735",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "921bc557-6316-42bc-a72c-a035e3e8d266",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "4bf0cd91-9095-40f9-9c47-f57484df1617",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  78 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "70b221e8-34a7-4d42-97b3-6ecf6d901385",
              "parentUUID": "a59a994f-802e-4279-8f62-db3c857c2fa6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03954331-96b8-4053-bb9b-935ceeae8955",
            "19f67962-7d9a-4cbd-bfd0-43996fcfb85d",
            "70551545-5ff4-40a8-aad8-143d2f805952",
            "8721f303-35d5-4ed1-9c4d-5fcfca69f0a8",
            "27d5e540-fb6c-475d-b6a4-2bdf3a4c244f",
            "ef53bdad-ff77-4e2d-a125-0369b106682d",
            "6992d0d3-6457-4d2b-a305-7713c46d7898",
            "f8356a8a-d038-4635-896d-6b153df3697d",
            "c85eaaef-567e-46d6-9b90-1e61f7d83d06",
            "4a156381-545b-43d7-8a51-63054c468689",
            "e5947ec3-3f76-4062-9d00-16f1e10e107e",
            "c87f82ad-9c1f-4ef1-a998-0a3e8e684843",
            "4dcdb8dd-ba8f-479d-89c7-437aa26fc735",
            "921bc557-6316-42bc-a72c-a035e3e8d266",
            "4bf0cd91-9095-40f9-9c47-f57484df1617",
            "70b221e8-34a7-4d42-97b3-6ecf6d901385"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
          "title": "Test 10Lines game: 10, 25 -  79",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 375,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4abfc172-a9f2-4d9b-a974-a6571bb485bc",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "6b0d6028-2ea1-4eb2-8219-374e0cf92cca",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "1018e7a4-a0ca-4f8e-b76c-7758980991fe",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "8f8ae5f2-d020-4629-b117-7c374780d1d5",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "becb98e0-ec46-4bce-82c0-638beb65d2a5",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "c38c6d4f-3e81-44b4-b83b-559eeaf24bfa",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "2db93fc8-18b3-4845-93c4-4009a963e389",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "46fc509f-8f05-4884-b082-8af92297c13c",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f524cd2e-f023-448d-9657-db6a2a0fd2bb",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "4b47c448-6e4a-425c-9303-b70b0aea64c2",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e7361da0-1da8-4e66-b89e-5469c8da8e92",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cafc48f3-5b01-4df4-b367-3de723476a20",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "392a591a-b401-4137-8520-45f18f3b7f0f",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "3580955a-dc9a-4716-8cea-28906143597b",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "f6631d66-fa33-4626-86ea-6baa07c32ce9",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 check type of win Lines",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "576adefc-6415-4cdd-ac0c-82855142dc66",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "f056dbda-eaa8-401c-82c0-cc80725ade25",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  79 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e08fd8b5-33f6-4095-87af-1df2cef14010",
              "parentUUID": "f6d7d1e1-d64d-4383-9e9e-e418a9d4da49",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1018e7a4-a0ca-4f8e-b76c-7758980991fe",
            "8f8ae5f2-d020-4629-b117-7c374780d1d5",
            "becb98e0-ec46-4bce-82c0-638beb65d2a5",
            "c38c6d4f-3e81-44b4-b83b-559eeaf24bfa",
            "2db93fc8-18b3-4845-93c4-4009a963e389",
            "46fc509f-8f05-4884-b082-8af92297c13c",
            "f524cd2e-f023-448d-9657-db6a2a0fd2bb",
            "4b47c448-6e4a-425c-9303-b70b0aea64c2",
            "e7361da0-1da8-4e66-b89e-5469c8da8e92",
            "cafc48f3-5b01-4df4-b367-3de723476a20",
            "392a591a-b401-4137-8520-45f18f3b7f0f",
            "3580955a-dc9a-4716-8cea-28906143597b",
            "f6631d66-fa33-4626-86ea-6baa07c32ce9",
            "576adefc-6415-4cdd-ac0c-82855142dc66",
            "f056dbda-eaa8-401c-82c0-cc80725ade25",
            "e08fd8b5-33f6-4095-87af-1df2cef14010"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "fbb389c0-1014-42c6-8880-a27f87a1a284",
          "title": "Test 10Lines game: 10, 25 -  80",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 319,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "cba106bf-4dca-45fc-8805-5bd2e27f7b7b",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "e16716dc-e051-4a33-b014-b4c771bdb54b",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "5a56f31f-5f45-4915-a679-e701148068af",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "31dbed3d-6f72-45f5-bb61-51f47bfa35f9",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "277fdc5a-d195-474f-b14f-ca36b7e024cd",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "8bee55d2-6c3b-42e5-ae74-18397bd94970",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "d239e67d-8385-42e7-b145-c561f8681762",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "89b4f707-820c-48b2-86d0-edb5623a97b5",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3c3fa402-283c-4861-a1b9-13692c18dcea",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "49740a7b-87c7-4d5d-b28c-ed43dea87cdf",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5977598f-7786-4d75-8d98-dee2adea6fb5",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "92510389-2b76-46ce-a025-cc8ebab225b4",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "dce4c94c-5278-4aa2-a1b2-ce159d7366d3",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "4992e50c-80ec-4bf7-bf2b-8f0c8acc8022",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "c26d0b88-c20c-4fdf-bc18-43246dc1e247",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "c5eacbd6-f5d9-4375-9ffb-43c59034fbbe",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "59074b04-d8db-41d6-b33e-7cc631e0208a",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  80 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "7356fa51-790f-44a2-9de9-4eeaa6ae158a",
              "parentUUID": "fbb389c0-1014-42c6-8880-a27f87a1a284",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a56f31f-5f45-4915-a679-e701148068af",
            "31dbed3d-6f72-45f5-bb61-51f47bfa35f9",
            "277fdc5a-d195-474f-b14f-ca36b7e024cd",
            "8bee55d2-6c3b-42e5-ae74-18397bd94970",
            "d239e67d-8385-42e7-b145-c561f8681762",
            "89b4f707-820c-48b2-86d0-edb5623a97b5",
            "3c3fa402-283c-4861-a1b9-13692c18dcea",
            "49740a7b-87c7-4d5d-b28c-ed43dea87cdf",
            "5977598f-7786-4d75-8d98-dee2adea6fb5",
            "92510389-2b76-46ce-a025-cc8ebab225b4",
            "dce4c94c-5278-4aa2-a1b2-ce159d7366d3",
            "4992e50c-80ec-4bf7-bf2b-8f0c8acc8022",
            "c26d0b88-c20c-4fdf-bc18-43246dc1e247",
            "c5eacbd6-f5d9-4375-9ffb-43c59034fbbe",
            "59074b04-d8db-41d6-b33e-7cc631e0208a",
            "7356fa51-790f-44a2-9de9-4eeaa6ae158a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "54030583-6ba8-4821-9350-8ebc2efec4b7",
          "title": "Test 10Lines game: 10, 25 -  81",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1287,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "fd39d2a5-4094-45fb-8c77-392ba06792d6",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "f9288066-9dbb-4205-b208-85a5b425347e",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "2b0b6144-61c5-4ec6-90bf-fe47c872bb8b",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "f433c17b-1032-40d6-85be-34e6adee8b28",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "29b696bf-ce0e-46a5-a4aa-d082960aece7",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "0a069cbf-177b-4014-961e-7ecdcbab7aef",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "aaf499eb-0eda-4a42-8e64-e37914ce49e5",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "131e5dae-ec69-4a81-a726-95cad1e3c4ce",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "02b52a63-e425-4881-b4ce-aa2fda0b147f",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "622448a5-7db5-41ce-8889-64587d809019",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d30de58b-ce92-44dd-9627-ab541060ab9b",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2de8a3a6-ef86-449c-bb8d-dbfdb8bfcc6c",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "50449978-6d00-43e3-b8fa-5df347d5dd38",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a00f398a-e337-4fde-9c84-112f5aa2aeb3",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "358003fd-24c7-4e94-93e7-349ed9e89f78",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "53a8bcdb-2e15-4c74-a6d5-358a5f5589a9",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "c392c83a-c351-452c-8bc3-726362da375e",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  81 BookModule",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "7a9e3d6f-14b0-4d0e-b3eb-21a76e640ea8",
              "parentUUID": "54030583-6ba8-4821-9350-8ebc2efec4b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b0b6144-61c5-4ec6-90bf-fe47c872bb8b",
            "f433c17b-1032-40d6-85be-34e6adee8b28",
            "29b696bf-ce0e-46a5-a4aa-d082960aece7",
            "0a069cbf-177b-4014-961e-7ecdcbab7aef",
            "aaf499eb-0eda-4a42-8e64-e37914ce49e5",
            "131e5dae-ec69-4a81-a726-95cad1e3c4ce",
            "02b52a63-e425-4881-b4ce-aa2fda0b147f",
            "622448a5-7db5-41ce-8889-64587d809019",
            "d30de58b-ce92-44dd-9627-ab541060ab9b",
            "2de8a3a6-ef86-449c-bb8d-dbfdb8bfcc6c",
            "50449978-6d00-43e3-b8fa-5df347d5dd38",
            "a00f398a-e337-4fde-9c84-112f5aa2aeb3",
            "358003fd-24c7-4e94-93e7-349ed9e89f78",
            "53a8bcdb-2e15-4c74-a6d5-358a5f5589a9",
            "c392c83a-c351-452c-8bc3-726362da375e",
            "7a9e3d6f-14b0-4d0e-b3eb-21a76e640ea8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "94bc472a-e098-46b0-8501-2b1326dd9056",
          "title": "Test 10Lines game: 10, 25 -  82",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 521,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "59304242-8c31-44e6-a02e-bba6dfa4e297",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "ef32b485-e650-4e57-8653-ddf673ea614d",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "baa1db6f-93b6-409a-aaec-67e2c723f6ab",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "40151c9f-0d89-4517-94d4-0f5c945a9cc2",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "b39a7c24-61d0-4633-8b6f-f789ce1c8629",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "87b9aac4-d4ab-42fd-8fe9-cce8b199b441",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "1fdb8568-70ec-45f0-ad90-5a32a466976a",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "efdffa75-c2a2-4b78-a5d7-f2498085a854",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a33a940a-4902-45d0-b548-c18d0a30f812",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "86f435b2-a233-436b-8cd8-7161d180c1d9",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "587e6781-6d2e-4db0-a76d-5c1df6e4e92c",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bab70848-9743-4736-bf9a-f0b0dfaed12f",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "2ce9a45c-1202-45a9-bf74-488949526cb7",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "4470f940-e7c9-4d03-a3cf-d3640a148ffb",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "7845976e-9693-441a-9482-7c6edb4281d7",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "3c69c05b-d8da-42ad-86a3-692426ac0e05",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "3ce463a7-72e0-4ecf-a1c2-02cd054db235",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  82 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e50a34e8-3e49-4b96-8d45-a34f4f9c3c7f",
              "parentUUID": "94bc472a-e098-46b0-8501-2b1326dd9056",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "baa1db6f-93b6-409a-aaec-67e2c723f6ab",
            "40151c9f-0d89-4517-94d4-0f5c945a9cc2",
            "b39a7c24-61d0-4633-8b6f-f789ce1c8629",
            "87b9aac4-d4ab-42fd-8fe9-cce8b199b441",
            "1fdb8568-70ec-45f0-ad90-5a32a466976a",
            "efdffa75-c2a2-4b78-a5d7-f2498085a854",
            "a33a940a-4902-45d0-b548-c18d0a30f812",
            "86f435b2-a233-436b-8cd8-7161d180c1d9",
            "587e6781-6d2e-4db0-a76d-5c1df6e4e92c",
            "bab70848-9743-4736-bf9a-f0b0dfaed12f",
            "2ce9a45c-1202-45a9-bf74-488949526cb7",
            "4470f940-e7c9-4d03-a3cf-d3640a148ffb",
            "7845976e-9693-441a-9482-7c6edb4281d7",
            "3c69c05b-d8da-42ad-86a3-692426ac0e05",
            "3ce463a7-72e0-4ecf-a1c2-02cd054db235",
            "e50a34e8-3e49-4b96-8d45-a34f4f9c3c7f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
          "title": "Test 10Lines game: 10, 25 -  83",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 438,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5415f811-10f0-4a75-b26f-d635c08bee66",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "47b7bf9d-eea5-426c-8f3e-0127bdb9de81",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "ada361a3-fb6a-455c-a1fd-d4a9ac3fc58b",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "d6696371-adc5-4365-98b1-a6881fc38f6a",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "2d400bc2-1fb1-4e7c-86a3-fb034f7d8f53",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "ba02c7e4-cdac-4fba-a762-4f8af9adbaa2",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "c5f7fc5c-bd5e-48c8-9e1d-6a45c9332c0b",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "8d59c76c-8764-41c8-8662-10c1b436cb52",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b8a8061b-a84b-4c9d-b3c6-3c4987eec1cd",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "0d78381f-3d0e-42a1-b7e1-f55a8afc7486",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "41295f20-5f99-4179-9e41-53247f039ad9",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3a1eba96-59a1-4623-8aed-22cf3f7de117",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "09a0b9a9-8d64-4966-bd44-fdd12d787b7a",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "042ca4f5-ad4b-4193-8b64-04d63ece3ea6",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "742614dc-9d87-4442-91a8-0ad023bcb80f",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "136f811b-0257-4187-a299-f38affc15d64",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "3696d21a-0ef8-42fa-9b5b-5fdd9e25930a",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  83 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f7c945ea-8263-4045-b6bc-5ba179397965",
              "parentUUID": "b512ec6c-9ae6-4ace-9e87-f1c7b5ed39cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ada361a3-fb6a-455c-a1fd-d4a9ac3fc58b",
            "d6696371-adc5-4365-98b1-a6881fc38f6a",
            "2d400bc2-1fb1-4e7c-86a3-fb034f7d8f53",
            "ba02c7e4-cdac-4fba-a762-4f8af9adbaa2",
            "c5f7fc5c-bd5e-48c8-9e1d-6a45c9332c0b",
            "8d59c76c-8764-41c8-8662-10c1b436cb52",
            "b8a8061b-a84b-4c9d-b3c6-3c4987eec1cd",
            "0d78381f-3d0e-42a1-b7e1-f55a8afc7486",
            "41295f20-5f99-4179-9e41-53247f039ad9",
            "3a1eba96-59a1-4623-8aed-22cf3f7de117",
            "09a0b9a9-8d64-4966-bd44-fdd12d787b7a",
            "042ca4f5-ad4b-4193-8b64-04d63ece3ea6",
            "742614dc-9d87-4442-91a8-0ad023bcb80f",
            "136f811b-0257-4187-a299-f38affc15d64",
            "3696d21a-0ef8-42fa-9b5b-5fdd9e25930a",
            "f7c945ea-8263-4045-b6bc-5ba179397965"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c6d529d9-f2cf-4205-af08-6701f2707467",
          "title": "Test 10Lines game: 10, 25 -  84",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 353,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "dd56ed7e-b2aa-41c9-870d-81e24e7c0f1f",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "5a7207d8-2937-4326-a52f-30f66be95712",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "05614125-df8c-4192-8e8a-b440eab6c2b9",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "74345e5f-2c28-442c-94d6-dc122cfffbdc",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "f54d7b0f-b63a-42f0-8273-1de2578b2ea2",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "9000c7c2-6ea4-42e3-aa7f-1ecc77e0ce4f",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "f177b355-8140-4d64-bd6e-013c99389787",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d928a267-6dd7-445b-a74a-da71d54ed8df",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a164f1ff-6a4a-4e85-9582-826ad066032e",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "9a7a8a26-f28c-4d4d-ba37-328e96aea633",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "11f272ba-ea67-46c1-b053-1a9adb3ae316",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4a57ca04-7544-4d3b-9f4f-2ac270d6ad44",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "519e7d28-f6a1-4d38-8b99-d45d1e53067b",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "eb3a3e90-68e0-41ea-bf91-2ed791cfa4b8",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "6b38447a-49dd-4c6c-b559-52d6df01cd95",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "77e4dcac-f61e-442f-bd51-77016dc364c8",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "bec12603-f145-412a-b9be-e795cb166d36",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  84 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "28d20b4e-4b01-4f5f-a90f-9f2fb0a3c2bd",
              "parentUUID": "c6d529d9-f2cf-4205-af08-6701f2707467",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05614125-df8c-4192-8e8a-b440eab6c2b9",
            "74345e5f-2c28-442c-94d6-dc122cfffbdc",
            "f54d7b0f-b63a-42f0-8273-1de2578b2ea2",
            "9000c7c2-6ea4-42e3-aa7f-1ecc77e0ce4f",
            "f177b355-8140-4d64-bd6e-013c99389787",
            "d928a267-6dd7-445b-a74a-da71d54ed8df",
            "a164f1ff-6a4a-4e85-9582-826ad066032e",
            "9a7a8a26-f28c-4d4d-ba37-328e96aea633",
            "11f272ba-ea67-46c1-b053-1a9adb3ae316",
            "4a57ca04-7544-4d3b-9f4f-2ac270d6ad44",
            "519e7d28-f6a1-4d38-8b99-d45d1e53067b",
            "eb3a3e90-68e0-41ea-bf91-2ed791cfa4b8",
            "6b38447a-49dd-4c6c-b559-52d6df01cd95",
            "77e4dcac-f61e-442f-bd51-77016dc364c8",
            "bec12603-f145-412a-b9be-e795cb166d36",
            "28d20b4e-4b01-4f5f-a90f-9f2fb0a3c2bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e652c165-1a5a-4976-a71d-91a68bec1181",
          "title": "Test 10Lines game: 10, 25 -  85",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 339,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4023ea71-ec62-4303-93be-50163bd51553",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "b81436d1-10e0-4b01-8f1e-6a7d5be0c6f2",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "194ab6eb-c0b2-4a88-b359-6088d5d86945",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "6f560f8f-509d-4240-a656-38313ae7ade2",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "bb1bb98d-8fd1-4582-84f9-e170d672f9d9",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "152e154e-bbef-472e-95b5-8ffcf3729519",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "c17a4bb5-a248-4adb-8584-40a4539eb088",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "cc66793f-ba4a-4bf0-a002-5d442a2f2773",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f46b41a1-7bf2-4fe5-9613-9e92ef90cd36",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "27e30921-f491-4cba-98f5-f08292654a65",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "55d4a736-e546-483c-8c2f-92c7489605e3",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9b7d761a-69f9-480a-a991-1c25e36b179c",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "cf586883-7ff2-402b-aab6-9ea811db01a8",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "da37a989-1660-48b1-a5be-89c90150502f",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "a17c97e6-bdd7-470e-9cde-32cff8dad642",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "36ad9e8d-d45f-45f2-ad85-970f2abd4e8e",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "3b272c86-a982-4107-8cc2-448ed270dd64",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  85 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "68f7206e-7bb5-4b94-b344-7db8bc3d4396",
              "parentUUID": "e652c165-1a5a-4976-a71d-91a68bec1181",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "194ab6eb-c0b2-4a88-b359-6088d5d86945",
            "6f560f8f-509d-4240-a656-38313ae7ade2",
            "bb1bb98d-8fd1-4582-84f9-e170d672f9d9",
            "152e154e-bbef-472e-95b5-8ffcf3729519",
            "c17a4bb5-a248-4adb-8584-40a4539eb088",
            "cc66793f-ba4a-4bf0-a002-5d442a2f2773",
            "f46b41a1-7bf2-4fe5-9613-9e92ef90cd36",
            "27e30921-f491-4cba-98f5-f08292654a65",
            "55d4a736-e546-483c-8c2f-92c7489605e3",
            "9b7d761a-69f9-480a-a991-1c25e36b179c",
            "cf586883-7ff2-402b-aab6-9ea811db01a8",
            "da37a989-1660-48b1-a5be-89c90150502f",
            "a17c97e6-bdd7-470e-9cde-32cff8dad642",
            "36ad9e8d-d45f-45f2-ad85-970f2abd4e8e",
            "3b272c86-a982-4107-8cc2-448ed270dd64",
            "68f7206e-7bb5-4b94-b344-7db8bc3d4396"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
          "title": "Test 10Lines game: 10, 25 -  86",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 367,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4c662d09-ae80-4554-a59d-53f9ab773b93",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "3f55c173-8951-4c93-8fbe-a8c29b1fb02a",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "daba6eef-4254-433f-b219-82e102b63252",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "6af9f640-c4d8-426e-b7ae-296ae464ab3d",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "d689e16c-8cfd-49f6-b036-cbe78b4c6ec7",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "252d5696-1647-4705-a508-b1da52db1470",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "c09f838b-e27b-4245-8d56-c014c7e41ae0",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "36a8e58e-f140-41a7-bd44-9a8a2e5eba53",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "76fb99eb-a7d7-4cf2-85bb-6e64cc30c0c1",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "21b27fb1-20e5-4cab-a6c2-183fd36730af",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4fe16d3b-3de2-4e0a-b5f0-aba622ffd951",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "844c99a5-3c99-4b70-b85c-80899cd812db",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "6accac7b-5c2c-44db-bd9f-54469367e4b6",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "93410f00-4487-438a-bd55-00a96d2660a9",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "51b3db4c-7ff2-4d0c-9c4a-63acd679f271",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "c93e8e2c-9452-44f8-a879-8c93a4fe48d4",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 EWModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "59688eed-3dc4-4015-bc71-3d5f6a238f28",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  86 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "57327463-d5ee-48f2-b8d6-9d778f885bf2",
              "parentUUID": "a311cf61-66b9-4e0a-a8a9-572f6703b6bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "daba6eef-4254-433f-b219-82e102b63252",
            "6af9f640-c4d8-426e-b7ae-296ae464ab3d",
            "d689e16c-8cfd-49f6-b036-cbe78b4c6ec7",
            "252d5696-1647-4705-a508-b1da52db1470",
            "c09f838b-e27b-4245-8d56-c014c7e41ae0",
            "36a8e58e-f140-41a7-bd44-9a8a2e5eba53",
            "76fb99eb-a7d7-4cf2-85bb-6e64cc30c0c1",
            "21b27fb1-20e5-4cab-a6c2-183fd36730af",
            "4fe16d3b-3de2-4e0a-b5f0-aba622ffd951",
            "844c99a5-3c99-4b70-b85c-80899cd812db",
            "6accac7b-5c2c-44db-bd9f-54469367e4b6",
            "93410f00-4487-438a-bd55-00a96d2660a9",
            "51b3db4c-7ff2-4d0c-9c4a-63acd679f271",
            "c93e8e2c-9452-44f8-a879-8c93a4fe48d4",
            "59688eed-3dc4-4015-bc71-3d5f6a238f28",
            "57327463-d5ee-48f2-b8d6-9d778f885bf2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
          "title": "Test 10Lines game: 10, 25 -  87",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 345,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8827b34f-f8c5-4487-885e-9bbf3fa22441",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "710c87b1-7fc2-4416-b999-e8f3df13366a",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "df856481-b263-4402-8e0d-2fa7a4df1740",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "42591dc3-d1ee-465a-9140-04ca1a375c70",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "5cda5e1e-5636-4b0b-83c3-f8d61bd40d58",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "9c3e66b5-1ea9-4e54-ac1d-496ed6340724",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "70bb593a-86ef-4f2c-9e1a-0fa4fa28ecb1",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "aeef8e92-bde1-4918-89b5-dad526abed11",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "54a6c3ad-920a-4b3b-ac34-5c18b232196d",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "672f6688-becf-4923-b015-18f4397097e8",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c2ea1977-f6dc-4bc6-82e5-1114cb0e3744",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b2242b9b-0546-4c80-89f0-220b358dbc8f",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "1f5e49d0-f5f7-4f06-baff-15c04c135425",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "c9f3b156-eac7-433e-bbec-7dcb803046fa",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "2ba1d884-108d-4ed0-b0f5-4bb1b90b387f",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "20ff8ab0-77c6-44ca-b13f-4bfcfcce5bc2",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0a2baf05-26ae-40df-8ee1-27c374c890b8",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  87 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "98cc61da-6581-4e42-a53c-85bd37fad36e",
              "parentUUID": "8ff23ae6-55cb-4c65-bb3e-3908f0d6e3a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df856481-b263-4402-8e0d-2fa7a4df1740",
            "42591dc3-d1ee-465a-9140-04ca1a375c70",
            "5cda5e1e-5636-4b0b-83c3-f8d61bd40d58",
            "9c3e66b5-1ea9-4e54-ac1d-496ed6340724",
            "70bb593a-86ef-4f2c-9e1a-0fa4fa28ecb1",
            "aeef8e92-bde1-4918-89b5-dad526abed11",
            "54a6c3ad-920a-4b3b-ac34-5c18b232196d",
            "672f6688-becf-4923-b015-18f4397097e8",
            "c2ea1977-f6dc-4bc6-82e5-1114cb0e3744",
            "b2242b9b-0546-4c80-89f0-220b358dbc8f",
            "1f5e49d0-f5f7-4f06-baff-15c04c135425",
            "c9f3b156-eac7-433e-bbec-7dcb803046fa",
            "2ba1d884-108d-4ed0-b0f5-4bb1b90b387f",
            "20ff8ab0-77c6-44ca-b13f-4bfcfcce5bc2",
            "0a2baf05-26ae-40df-8ee1-27c374c890b8",
            "98cc61da-6581-4e42-a53c-85bd37fad36e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
          "title": "Test 10Lines game: 10, 25 -  88",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1306,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ad77dac9-6ebe-4699-bfb7-6ef3854c2d61",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "dba51726-944f-4c55-91ff-cf5da3ef3f93",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "7ec4294c-d938-421d-bd7c-c8fafa29c244",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "35e41ce4-dca4-4d26-8382-cfd400874b49",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "154dce39-d9d4-4a46-91f3-6de5cf6fce5a",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "ac8cbdbd-1004-4e96-bc91-ea63933774c6",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "9899ddb4-4e01-41bf-b23c-096781bc39d4",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "7e3e964b-c3f5-4335-a2cd-6865f504d500",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "02d8646f-0a41-4f7e-9081-fa4c5f68dadb",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "ce35382c-c4f7-4a62-96e7-c967003799c2",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b56e7949-8f61-42e5-af98-4a630855994f",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "812e0dc4-d734-44ab-a503-df8910c80ff0",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "1be9b569-aa02-41dc-a73d-55d71696f6ea",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5e2b0998-bdc1-433f-8900-63c3f34d3290",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ccb32980-89cf-4c39-b8ca-a2e160aa8868",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "b0a1d861-c991-4b97-86d1-41a40487a548",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "05ed0ef9-f67f-4046-b13d-c2f401f50650",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  88 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "13286e7c-024b-4151-8ae4-00b8a5c3ff7c",
              "parentUUID": "c609d92e-91f8-4665-89ba-24c4d40cacf4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ec4294c-d938-421d-bd7c-c8fafa29c244",
            "35e41ce4-dca4-4d26-8382-cfd400874b49",
            "154dce39-d9d4-4a46-91f3-6de5cf6fce5a",
            "ac8cbdbd-1004-4e96-bc91-ea63933774c6",
            "9899ddb4-4e01-41bf-b23c-096781bc39d4",
            "7e3e964b-c3f5-4335-a2cd-6865f504d500",
            "02d8646f-0a41-4f7e-9081-fa4c5f68dadb",
            "ce35382c-c4f7-4a62-96e7-c967003799c2",
            "b56e7949-8f61-42e5-af98-4a630855994f",
            "812e0dc4-d734-44ab-a503-df8910c80ff0",
            "1be9b569-aa02-41dc-a73d-55d71696f6ea",
            "5e2b0998-bdc1-433f-8900-63c3f34d3290",
            "ccb32980-89cf-4c39-b8ca-a2e160aa8868",
            "b0a1d861-c991-4b97-86d1-41a40487a548",
            "05ed0ef9-f67f-4046-b13d-c2f401f50650",
            "13286e7c-024b-4151-8ae4-00b8a5c3ff7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "79983584-3730-44eb-a3c7-1b962997a165",
          "title": "Test 10Lines game: 10, 25 -  89",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 316,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "2d844e2f-976a-496f-b4b6-b6c7414f09a1",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "01d3518c-c453-44b7-a436-758d94f4022d",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "19a19d0b-0bc1-4234-98b2-353f6f4e58d4",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "ab5db4b6-f281-4486-91e8-6de4cf47e3ea",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "c41716b4-0eca-472d-b9d7-22fe4782d122",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "7e19d1c9-7a9b-4950-be28-e5d0bb15d05f",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "700d485c-2b20-402d-a11a-e9ecce982de5",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "fca73321-bf68-4f8f-a69a-750f0530a6d6",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2ab2da1d-eedb-45d7-9217-f0d2879d6bd9",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "b8f3e5d9-627f-4a6a-ab2e-16b3e36d06f6",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a6a29eb1-bf31-4826-9996-0db06d9a7670",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b5da334a-c4d4-4eb4-8187-a77d3464bbbf",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "127c5e8b-96f2-48fd-91bf-3c7a4288014e",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "abe3828f-37cf-4ac8-ac37-9e40343069cc",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ed3a6d96-2572-48d7-90da-f159fedf0a10",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "592c94b4-7c84-4785-ad10-3e3e21fe929c",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "b19b934e-3588-4565-8b69-7861943ddb5b",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  89 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "1ff1147e-c31a-4e5a-b823-91eed14b61fc",
              "parentUUID": "79983584-3730-44eb-a3c7-1b962997a165",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19a19d0b-0bc1-4234-98b2-353f6f4e58d4",
            "ab5db4b6-f281-4486-91e8-6de4cf47e3ea",
            "c41716b4-0eca-472d-b9d7-22fe4782d122",
            "7e19d1c9-7a9b-4950-be28-e5d0bb15d05f",
            "700d485c-2b20-402d-a11a-e9ecce982de5",
            "fca73321-bf68-4f8f-a69a-750f0530a6d6",
            "2ab2da1d-eedb-45d7-9217-f0d2879d6bd9",
            "b8f3e5d9-627f-4a6a-ab2e-16b3e36d06f6",
            "a6a29eb1-bf31-4826-9996-0db06d9a7670",
            "b5da334a-c4d4-4eb4-8187-a77d3464bbbf",
            "127c5e8b-96f2-48fd-91bf-3c7a4288014e",
            "abe3828f-37cf-4ac8-ac37-9e40343069cc",
            "ed3a6d96-2572-48d7-90da-f159fedf0a10",
            "592c94b4-7c84-4785-ad10-3e3e21fe929c",
            "b19b934e-3588-4565-8b69-7861943ddb5b",
            "1ff1147e-c31a-4e5a-b823-91eed14b61fc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
          "title": "Test 10Lines game: 10, 25 -  90",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 283,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4d41f0f6-abc4-4c6e-b3c6-4644f235f48b",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "1a8b324e-6ae7-4b77-ba5e-81ac3dea5acc",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "9e7ed205-e3f8-4622-a9d5-8f762f5049c8",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "4c560bdf-0d69-4cb9-9fbb-bec723e04ba2",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "bef85917-4c18-4ffc-9572-b23bb067060f",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "b1bea59e-8dd7-4af5-9c35-54bc130c874d",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "3a50d432-1d04-46e7-9dee-f2cb0fb9d654",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "b3f3d24b-41cf-4554-a84f-d3e18a83f0a8",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "aff174ff-57d8-4c2d-90cd-f448aaec2350",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "a9053985-f8cc-402b-a93b-baf2e7d5aa28",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d98eb8d5-ca29-4b48-9a81-8df559cdc4e6",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1421971c-3f66-474a-8e1f-9b384c1558b1",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "afdf31a3-f892-4685-bff8-92f8258c214e",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "27bae7da-da78-48ab-8fe6-4e545af7a27c",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "b3cd69fd-9f1d-4e27-8753-3153ff8436cd",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "7bf1ec49-cfb8-4b5f-8be5-2206f7c9af65",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "a3d491a0-bde4-4dc0-a882-96b27a64409e",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  90 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "666a8e77-88c2-4803-95e9-3d5b43a73a22",
              "parentUUID": "69c8d23b-bcec-4ebf-ab54-9227610ec609",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e7ed205-e3f8-4622-a9d5-8f762f5049c8",
            "4c560bdf-0d69-4cb9-9fbb-bec723e04ba2",
            "bef85917-4c18-4ffc-9572-b23bb067060f",
            "b1bea59e-8dd7-4af5-9c35-54bc130c874d",
            "3a50d432-1d04-46e7-9dee-f2cb0fb9d654",
            "b3f3d24b-41cf-4554-a84f-d3e18a83f0a8",
            "aff174ff-57d8-4c2d-90cd-f448aaec2350",
            "a9053985-f8cc-402b-a93b-baf2e7d5aa28",
            "d98eb8d5-ca29-4b48-9a81-8df559cdc4e6",
            "1421971c-3f66-474a-8e1f-9b384c1558b1",
            "afdf31a3-f892-4685-bff8-92f8258c214e",
            "27bae7da-da78-48ab-8fe6-4e545af7a27c",
            "b3cd69fd-9f1d-4e27-8753-3153ff8436cd",
            "7bf1ec49-cfb8-4b5f-8be5-2206f7c9af65",
            "a3d491a0-bde4-4dc0-a882-96b27a64409e",
            "666a8e77-88c2-4803-95e9-3d5b43a73a22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
          "title": "Test 10Lines game: 10, 25 -  91",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 313,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "3440c180-5f87-44f8-835b-1ca599de5e01",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "826e8070-ef7f-4c27-af41-db2e66192cdf",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "90da9879-b167-4495-accf-bd279073fa65",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "fb500966-e977-4f22-ad32-7f99cfb75e7d",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ade23efe-962a-4c59-b338-9cfa562cf815",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "e07ff901-3145-4ddc-879c-11ed31e3a5f7",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "6baf8ca4-17fa-4c29-a58e-b12585f2d747",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "ead37d57-4b29-4802-ac93-01b9c718c664",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c38725f9-32fd-420c-b837-5cc7d2d84f34",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "3154158c-ed62-47be-8e62-e2d57943d2cb",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b15b4326-e44d-42a1-87ed-03b307cd8e5e",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1677b628-1652-403e-b13b-2f11c2e207fb",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "b4d91bec-9c0a-4fc1-a3dd-6e60134d6eae",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "69db516c-deb9-4f68-a3c0-6b0a9e47ecb9",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "f760512a-8475-450e-a3ce-4c83cdb1acb7",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "002a2575-f26b-465f-a59c-d5185e78c675",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "37b60c40-6846-4226-80e9-81cddbde0c6e",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  91 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "31289e59-3cf6-491b-a0ad-e631990431cd",
              "parentUUID": "7e107c5f-0ca9-40d5-a745-d03ec69cc571",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90da9879-b167-4495-accf-bd279073fa65",
            "fb500966-e977-4f22-ad32-7f99cfb75e7d",
            "ade23efe-962a-4c59-b338-9cfa562cf815",
            "e07ff901-3145-4ddc-879c-11ed31e3a5f7",
            "6baf8ca4-17fa-4c29-a58e-b12585f2d747",
            "ead37d57-4b29-4802-ac93-01b9c718c664",
            "c38725f9-32fd-420c-b837-5cc7d2d84f34",
            "3154158c-ed62-47be-8e62-e2d57943d2cb",
            "b15b4326-e44d-42a1-87ed-03b307cd8e5e",
            "1677b628-1652-403e-b13b-2f11c2e207fb",
            "b4d91bec-9c0a-4fc1-a3dd-6e60134d6eae",
            "69db516c-deb9-4f68-a3c0-6b0a9e47ecb9",
            "f760512a-8475-450e-a3ce-4c83cdb1acb7",
            "002a2575-f26b-465f-a59c-d5185e78c675",
            "37b60c40-6846-4226-80e9-81cddbde0c6e",
            "31289e59-3cf6-491b-a0ad-e631990431cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "037104bf-9901-4316-8867-ad6e399b2396",
          "title": "Test 10Lines game: 10, 25 -  92",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 317,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "97844a92-f5c3-4201-b657-c145132f7292",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "7b12b5bc-ca27-4111-b1d9-025bc1c01ca7",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "8b599234-455d-459d-b6c8-55c09a66abb7",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "cd277d9d-fc2a-4d61-8e6b-dc1cf449c41e",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "b401130d-e956-4c2a-b775-7069d313ae70",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "5c2c0b36-201b-4012-8d1a-920e164d59c6",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "ad00aa2b-657c-4a4b-bbd4-d8875e14a7e7",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a1451ae8-e48b-40c4-a22e-ad79b181dcd8",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3c3a0de2-a9cd-4db4-9c57-7d9f6954f0ac",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "a9e6c19c-5708-4fdd-85d9-77bb75867c73",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8270876b-5f17-4e65-905c-5efffc9f59e7",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0eb57e54-3854-4d38-8a0d-ff8b498f6fa2",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "4f0bc9c9-64f3-431d-928c-53482578ee5b",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "80456ea6-22df-45eb-b0df-23d0d3c91fa9",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "1a8b2511-fba7-4833-bd3e-0142dbe5afe2",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "dd804af5-a284-4767-bf6d-d095c61b9d85",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "21615b74-c429-4c9a-ba7d-98de6ec22ccf",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  92 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ec652e40-1fda-447a-a8fd-672d330bd813",
              "parentUUID": "037104bf-9901-4316-8867-ad6e399b2396",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b599234-455d-459d-b6c8-55c09a66abb7",
            "cd277d9d-fc2a-4d61-8e6b-dc1cf449c41e",
            "b401130d-e956-4c2a-b775-7069d313ae70",
            "5c2c0b36-201b-4012-8d1a-920e164d59c6",
            "ad00aa2b-657c-4a4b-bbd4-d8875e14a7e7",
            "a1451ae8-e48b-40c4-a22e-ad79b181dcd8",
            "3c3a0de2-a9cd-4db4-9c57-7d9f6954f0ac",
            "a9e6c19c-5708-4fdd-85d9-77bb75867c73",
            "8270876b-5f17-4e65-905c-5efffc9f59e7",
            "0eb57e54-3854-4d38-8a0d-ff8b498f6fa2",
            "4f0bc9c9-64f3-431d-928c-53482578ee5b",
            "80456ea6-22df-45eb-b0df-23d0d3c91fa9",
            "1a8b2511-fba7-4833-bd3e-0142dbe5afe2",
            "dd804af5-a284-4767-bf6d-d095c61b9d85",
            "21615b74-c429-4c9a-ba7d-98de6ec22ccf",
            "ec652e40-1fda-447a-a8fd-672d330bd813"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
          "title": "Test 10Lines game: 10, 25 -  93",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 277,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "aa1d56c7-9b87-4a9c-93f2-b67f00e7c6d9",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "c6332cfe-3859-43c6-a273-9ccb06e8921f",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "62f12828-72bb-44da-96ab-b72e00dd6113",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "69925081-ed7f-4c36-8e90-eca8dcdd4e4d",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "0d925a15-492d-4eee-bd2b-d508a7dd7cb5",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "9398b02d-b0d6-4b10-9443-dc88855188a0",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "fef81ee1-e6b1-4739-9168-e900ebcd7c2f",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "16114829-7f77-4599-b143-11cf1b548e7a",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a9176b3f-1470-467c-bc67-f1d99a7a545f",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "b8a3bd54-5a05-40c8-9b08-bfdb718e4386",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "44c7eb52-46f7-4a68-b808-1141fd9d5410",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "084e1788-799c-41e8-8dae-e18b5e991dca",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "35075882-796b-41fd-9ca3-d8583f0ccfb4",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "2fea6468-b7aa-42da-bd58-f8b6357e23e7",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "f02cb8f3-83e7-42d1-85bb-2b180e729aaa",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e8095061-fbe7-4d62-a51e-56585141b307",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "8f6b9404-b6f8-490a-bc96-031c9d37379b",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  93 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "4a020051-815e-4f91-804c-9b10cba382e6",
              "parentUUID": "73f9e330-7d61-49a1-93d9-4375b04ec52f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62f12828-72bb-44da-96ab-b72e00dd6113",
            "69925081-ed7f-4c36-8e90-eca8dcdd4e4d",
            "0d925a15-492d-4eee-bd2b-d508a7dd7cb5",
            "9398b02d-b0d6-4b10-9443-dc88855188a0",
            "fef81ee1-e6b1-4739-9168-e900ebcd7c2f",
            "16114829-7f77-4599-b143-11cf1b548e7a",
            "a9176b3f-1470-467c-bc67-f1d99a7a545f",
            "b8a3bd54-5a05-40c8-9b08-bfdb718e4386",
            "44c7eb52-46f7-4a68-b808-1141fd9d5410",
            "084e1788-799c-41e8-8dae-e18b5e991dca",
            "35075882-796b-41fd-9ca3-d8583f0ccfb4",
            "2fea6468-b7aa-42da-bd58-f8b6357e23e7",
            "f02cb8f3-83e7-42d1-85bb-2b180e729aaa",
            "e8095061-fbe7-4d62-a51e-56585141b307",
            "8f6b9404-b6f8-490a-bc96-031c9d37379b",
            "4a020051-815e-4f91-804c-9b10cba382e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b802521b-acc8-4222-9f36-8e09846bc5ce",
          "title": "Test 10Lines game: 10, 25 -  94",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 318,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b653f25c-2902-4c88-85c9-773dbdfe2173",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "e4c8d2cf-7dda-449f-90ad-9eb9c97172c1",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "4227fd24-efca-483b-91eb-d96a4a42b228",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "b96abfb2-2d73-49c4-81fb-6aca7fc9efa4",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "99408008-318f-4c16-8052-ecda9a3e06fb",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "592e050e-9488-4224-b206-3cb42ca65342",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "09745e8b-7e9e-45f0-8249-ab9e39f0e06b",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "8e6f8f8b-343e-4839-a21a-6ad0bfc4813e",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8b779ce7-c73b-4f7d-b006-a300d9aabdcc",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "ab22f55a-a3da-4793-8334-92584c46b8e9",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "de42d2cd-e12a-4da6-99ba-47c4bb90b59c",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5394d3b2-8c2d-49b4-8f6c-b9e4aaa218f5",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "c2853c0f-da11-48c0-8332-bd41c913af11",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "1faa26f9-a56a-4a22-8b14-bd1c86620fbf",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "520c4a43-52b7-439a-964c-a423d90b8d72",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "bb9f7931-9e2e-456e-a763-5902a3e71335",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "c5366161-1556-44ec-90ba-3e33e4f3fb4e",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  94 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "110c078e-700b-494f-b9f3-61fb5d19ecfe",
              "parentUUID": "b802521b-acc8-4222-9f36-8e09846bc5ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4227fd24-efca-483b-91eb-d96a4a42b228",
            "b96abfb2-2d73-49c4-81fb-6aca7fc9efa4",
            "99408008-318f-4c16-8052-ecda9a3e06fb",
            "592e050e-9488-4224-b206-3cb42ca65342",
            "09745e8b-7e9e-45f0-8249-ab9e39f0e06b",
            "8e6f8f8b-343e-4839-a21a-6ad0bfc4813e",
            "8b779ce7-c73b-4f7d-b006-a300d9aabdcc",
            "ab22f55a-a3da-4793-8334-92584c46b8e9",
            "de42d2cd-e12a-4da6-99ba-47c4bb90b59c",
            "5394d3b2-8c2d-49b4-8f6c-b9e4aaa218f5",
            "c2853c0f-da11-48c0-8332-bd41c913af11",
            "1faa26f9-a56a-4a22-8b14-bd1c86620fbf",
            "520c4a43-52b7-439a-964c-a423d90b8d72",
            "bb9f7931-9e2e-456e-a763-5902a3e71335",
            "c5366161-1556-44ec-90ba-3e33e4f3fb4e",
            "110c078e-700b-494f-b9f3-61fb5d19ecfe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "66e0de20-4dad-4689-8464-4645c49a325f",
          "title": "Test 10Lines game: 10, 25 -  95",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 286,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "38824333-46be-4c22-bc77-a13c65d4718b",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "e7849ff0-201f-4440-8f4a-3450b2ac9c74",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "ce1f0949-a1cc-45bf-94c5-c1d8eb4404d8",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "f1d71479-c0c4-4f2a-91b7-57fc1e69fb10",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "2d6dd62b-2af3-4afd-a4de-f81ddad471c4",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "75d0a60a-014f-40cf-8886-f30cf3a09e6b",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "827f4069-35d9-4a93-bf68-e162a6f8a52a",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "b70866a1-45ce-4616-a839-205f724c6840",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0669aab2-8e14-4580-a18c-3909f7c5e1b2",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "333f82a2-ea08-4023-b5f5-6f9228671f12",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1471cdb2-6cac-4421-9886-eb302c837f16",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "90e1cc36-2418-4796-a39b-1e9c60d7d049",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "7fb9571a-2f70-4838-8cda-1993dc76948a",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "6bbabcd3-9666-46ad-b2da-2ee12da54767",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "12f05056-81b7-49e3-9414-a523229e8c05",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e44356af-2683-468b-9324-ce9a68c1b712",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "b8a41e1f-1915-49d1-adc0-8e91b6aac8c7",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  95 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3f9d7511-86db-4327-861c-28c41aa1e656",
              "parentUUID": "66e0de20-4dad-4689-8464-4645c49a325f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce1f0949-a1cc-45bf-94c5-c1d8eb4404d8",
            "f1d71479-c0c4-4f2a-91b7-57fc1e69fb10",
            "2d6dd62b-2af3-4afd-a4de-f81ddad471c4",
            "75d0a60a-014f-40cf-8886-f30cf3a09e6b",
            "827f4069-35d9-4a93-bf68-e162a6f8a52a",
            "b70866a1-45ce-4616-a839-205f724c6840",
            "0669aab2-8e14-4580-a18c-3909f7c5e1b2",
            "333f82a2-ea08-4023-b5f5-6f9228671f12",
            "1471cdb2-6cac-4421-9886-eb302c837f16",
            "90e1cc36-2418-4796-a39b-1e9c60d7d049",
            "7fb9571a-2f70-4838-8cda-1993dc76948a",
            "6bbabcd3-9666-46ad-b2da-2ee12da54767",
            "12f05056-81b7-49e3-9414-a523229e8c05",
            "e44356af-2683-468b-9324-ce9a68c1b712",
            "b8a41e1f-1915-49d1-adc0-8e91b6aac8c7",
            "3f9d7511-86db-4327-861c-28c41aa1e656"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b6f096a6-c562-4179-b63a-b39577fd513d",
          "title": "Test 10Lines game: 10, 25 -  96",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 287,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6de94b6d-9c41-4513-9b1b-1c634e94341e",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "db60c98c-354f-4fa2-af33-ba563a899587",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "4ed65854-ea69-4bfe-b771-ea822a5f01c6",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "f17b34ee-d6c4-40e9-8503-e0fe18a2e758",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "4f4e6df3-0c6c-41d1-8e11-93b86b65a251",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "550da84b-683c-4870-9a48-c6a728007155",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "38d204a9-6e21-48ab-8afd-11b3383d2e71",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "7b3fadf4-25be-41b9-b860-1a6ed23af13f",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a5541c09-6de4-42ec-befd-85fea66ffda0",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "42c2dd49-5b83-4f23-973b-f157700bb418",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e3ba4928-69ca-4119-8f8f-d35897fe18e8",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "39de97a0-46a1-4b22-affc-c2fdb9043ac9",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "756910ca-5ece-41d3-b652-6418fa81dc5c",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "c9300cd6-c693-4b20-9c8a-d37507871ad2",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "0a6e4aa7-0e07-433e-a081-be22aab7aa1f",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "c852026d-cbff-41c8-bb3a-aede3e495fc7",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "98eb13a1-c350-4944-a16f-4cc51a9c6a4b",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  96 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b1e4ed34-e7db-4b7e-8073-323feb4bf914",
              "parentUUID": "b6f096a6-c562-4179-b63a-b39577fd513d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ed65854-ea69-4bfe-b771-ea822a5f01c6",
            "f17b34ee-d6c4-40e9-8503-e0fe18a2e758",
            "4f4e6df3-0c6c-41d1-8e11-93b86b65a251",
            "550da84b-683c-4870-9a48-c6a728007155",
            "38d204a9-6e21-48ab-8afd-11b3383d2e71",
            "7b3fadf4-25be-41b9-b860-1a6ed23af13f",
            "a5541c09-6de4-42ec-befd-85fea66ffda0",
            "42c2dd49-5b83-4f23-973b-f157700bb418",
            "e3ba4928-69ca-4119-8f8f-d35897fe18e8",
            "39de97a0-46a1-4b22-affc-c2fdb9043ac9",
            "756910ca-5ece-41d3-b652-6418fa81dc5c",
            "c9300cd6-c693-4b20-9c8a-d37507871ad2",
            "0a6e4aa7-0e07-433e-a081-be22aab7aa1f",
            "c852026d-cbff-41c8-bb3a-aede3e495fc7",
            "98eb13a1-c350-4944-a16f-4cc51a9c6a4b",
            "b1e4ed34-e7db-4b7e-8073-323feb4bf914"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9df82fd8-c197-496b-86f0-d689f4177a50",
          "title": "Test 10Lines game: 10, 25 -  97",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 355,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "3e753fb7-6bc0-4625-a325-f58fb75b7ee2",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "be66fa42-a5d6-48bd-9f7d-785c3d5dcddf",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a6200e2f-1fe5-4b91-8731-c764e79a4be3",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "9037b3f3-8bb1-4c7d-ad44-9d3913025c85",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "f7d66962-f23a-4186-b744-2fe9463b7935",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "e44e962d-add1-46e6-ad6b-e2bd97cd4346",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "fd1c1203-48ec-4978-ac59-ac35b170176a",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "783ee722-ca9f-4342-b5b7-dcdc9086c4e0",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cd4e5e2a-6744-43a5-b484-f0ebb2b434cd",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "2c0d07b2-405e-4ff4-8b66-fd4d5a9899fa",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e56a089c-a5fe-4334-a9a2-c2e79407f66d",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a87d6040-aabb-4f2e-8b9b-b4bc9f9233b1",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "5adff5cc-0bfc-4eb0-9228-db92c696ebd2",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "24094481-a38a-4be8-9412-6571cc821cbb",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ad12a633-0f1b-41f2-ad9a-c83fb138b575",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "9b17f230-b127-4aec-bdd3-a3c5c5dddcfb",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "4cdd79bf-afab-4572-a399-257c3d7f1b03",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  97 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "947beea0-386f-4f71-99ac-ab6bed19983e",
              "parentUUID": "9df82fd8-c197-496b-86f0-d689f4177a50",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6200e2f-1fe5-4b91-8731-c764e79a4be3",
            "9037b3f3-8bb1-4c7d-ad44-9d3913025c85",
            "f7d66962-f23a-4186-b744-2fe9463b7935",
            "e44e962d-add1-46e6-ad6b-e2bd97cd4346",
            "fd1c1203-48ec-4978-ac59-ac35b170176a",
            "783ee722-ca9f-4342-b5b7-dcdc9086c4e0",
            "cd4e5e2a-6744-43a5-b484-f0ebb2b434cd",
            "2c0d07b2-405e-4ff4-8b66-fd4d5a9899fa",
            "e56a089c-a5fe-4334-a9a2-c2e79407f66d",
            "a87d6040-aabb-4f2e-8b9b-b4bc9f9233b1",
            "5adff5cc-0bfc-4eb0-9228-db92c696ebd2",
            "24094481-a38a-4be8-9412-6571cc821cbb",
            "ad12a633-0f1b-41f2-ad9a-c83fb138b575",
            "9b17f230-b127-4aec-bdd3-a3c5c5dddcfb",
            "4cdd79bf-afab-4572-a399-257c3d7f1b03",
            "947beea0-386f-4f71-99ac-ab6bed19983e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "38227a96-d307-4649-8b67-bbf8dbef983e",
          "title": "Test 10Lines game: 10, 25 -  98",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 286,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f3ccbdd1-c19f-4638-9e60-da65d1bcd273",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "e8798f3d-3011-4d30-89c5-8a265801d028",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "13afc5bd-7126-4846-858b-3570d7010a96",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "0df2882e-75d3-4157-85c1-c61550ac1a92",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "0a2e30ed-61dd-40bf-82d1-7b787ce5e787",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "a69046c1-d6b7-4bb5-9063-7ddba225c0fc",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "4dd025b2-355d-48cb-a14d-6bfd1bd371ac",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "142dc8e5-8b47-4594-a4d4-682f61ec42c1",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "94a7d21d-94f8-4f13-9347-b74e3d82c0a4",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "886e6686-9e62-4cea-90b1-71227b8660e4",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5504989f-16eb-4b2f-86c6-07534bf393b3",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "06fbf539-51df-48ef-a89e-479d10fe0f4a",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "c941ca94-c2a5-4d4d-815c-8c98bdf7eafc",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "b95c1619-edba-424f-bb90-8deaab7fce16",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "476f849a-9ccc-4792-a8b4-e11926e91358",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "c99506ce-aa11-48a5-9359-55078c44a8f9",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "de261b67-65d8-45b5-9e56-2297cd1d1eb6",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  98 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "2c879157-b6fb-46a0-9ac9-50ca57e9fe89",
              "parentUUID": "38227a96-d307-4649-8b67-bbf8dbef983e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13afc5bd-7126-4846-858b-3570d7010a96",
            "0df2882e-75d3-4157-85c1-c61550ac1a92",
            "0a2e30ed-61dd-40bf-82d1-7b787ce5e787",
            "a69046c1-d6b7-4bb5-9063-7ddba225c0fc",
            "4dd025b2-355d-48cb-a14d-6bfd1bd371ac",
            "142dc8e5-8b47-4594-a4d4-682f61ec42c1",
            "94a7d21d-94f8-4f13-9347-b74e3d82c0a4",
            "886e6686-9e62-4cea-90b1-71227b8660e4",
            "5504989f-16eb-4b2f-86c6-07534bf393b3",
            "06fbf539-51df-48ef-a89e-479d10fe0f4a",
            "c941ca94-c2a5-4d4d-815c-8c98bdf7eafc",
            "b95c1619-edba-424f-bb90-8deaab7fce16",
            "476f849a-9ccc-4792-a8b4-e11926e91358",
            "c99506ce-aa11-48a5-9359-55078c44a8f9",
            "de261b67-65d8-45b5-9e56-2297cd1d1eb6",
            "2c879157-b6fb-46a0-9ac9-50ca57e9fe89"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b9790351-ef7e-4529-aa6f-007236d396d7",
          "title": "Test 10Lines game: 10, 25 -  99",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 291,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1631817a-e20a-44ca-af9d-0c8523b5be0a",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele);",
              "err": {},
              "uuid": "f60ede05-e135-4192-8079-7c731964908b",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "f8159ff0-a699-43b8-b21a-bf87889b4064",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl);",
              "err": {},
              "uuid": "3fa8a656-97ad-4574-8bb2-74e44bab21a4",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "53885c77-e774-49bc-a351-a29c35b74d7f",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "fb06ff1c-0d54-4e64-8284-b040c42ce1f6",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable);",
              "err": {},
              "uuid": "0a5054a3-ca1a-495c-aade-7c4058a9874a",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "5f195829-0602-4e03-a171-623105fbecad",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7f325fda-91c0-43da-9dc3-8dca3801976b",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "4390e83f-ad98-4efd-9cf7-8495133e91e5",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "475f8c23-f44c-4b64-ad5d-caaaf235e99b",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "beaab481-49b7-42f8-8c71-267567fd0a97",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate);",
              "err": {},
              "uuid": "02c4abc6-d4d3-479f-a5d8-2d9a9f7fa86c",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "f57eee9a-11cf-476c-ba3e-7cb2f9e0b50b",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(actionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "f88c3ee4-ae14-4521-baf6-36386ffe292a",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "f1e88201-6ff6-4ab4-8ff9-88128bf4f4c9",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "4a5b6d1d-afbe-47df-b833-f291fbd07286",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 10, 25 -  99 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "949a000c-e499-44ae-85af-239572859c2b",
              "parentUUID": "b9790351-ef7e-4529-aa6f-007236d396d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8159ff0-a699-43b8-b21a-bf87889b4064",
            "3fa8a656-97ad-4574-8bb2-74e44bab21a4",
            "53885c77-e774-49bc-a351-a29c35b74d7f",
            "fb06ff1c-0d54-4e64-8284-b040c42ce1f6",
            "0a5054a3-ca1a-495c-aade-7c4058a9874a",
            "5f195829-0602-4e03-a171-623105fbecad",
            "7f325fda-91c0-43da-9dc3-8dca3801976b",
            "4390e83f-ad98-4efd-9cf7-8495133e91e5",
            "475f8c23-f44c-4b64-ad5d-caaaf235e99b",
            "beaab481-49b7-42f8-8c71-267567fd0a97",
            "02c4abc6-d4d3-479f-a5d8-2d9a9f7fa86c",
            "f57eee9a-11cf-476c-ba3e-7cb2f9e0b50b",
            "f88c3ee4-ae14-4521-baf6-36386ffe292a",
            "f1e88201-6ff6-4ab4-8ff9-88128bf4f4c9",
            "4a5b6d1d-afbe-47df-b833-f291fbd07286",
            "949a000c-e499-44ae-85af-239572859c2b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "650c0080-be29-438c-8c78-e2f7599318e0",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "5b341061-26e1-48c7-acaa-2f7e1b05d774",
              "parentUUID": "650c0080-be29-438c-8c78-e2f7599318e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "6f03ba9a-f81a-4dfe-aece-ff1159b6f16f",
              "parentUUID": "650c0080-be29-438c-8c78-e2f7599318e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "090e745a-dcdd-46df-be3d-88834bf2a80c",
              "parentUUID": "650c0080-be29-438c-8c78-e2f7599318e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "a5726748-fa10-4b15-b57f-3978929f40db",
              "parentUUID": "650c0080-be29-438c-8c78-e2f7599318e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "33838b76-b06f-4457-8fce-31e036a1da6f",
              "parentUUID": "650c0080-be29-438c-8c78-e2f7599318e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "68c97d30-f7c6-4130-ba2a-59db7e5aed0f",
              "parentUUID": "650c0080-be29-438c-8c78-e2f7599318e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "a6008062-a00a-47dd-b1f0-ac780f18ae48",
              "parentUUID": "650c0080-be29-438c-8c78-e2f7599318e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "27b4c341-898a-42e7-a320-df3a4415e673",
              "parentUUID": "650c0080-be29-438c-8c78-e2f7599318e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b341061-26e1-48c7-acaa-2f7e1b05d774",
            "6f03ba9a-f81a-4dfe-aece-ff1159b6f16f",
            "090e745a-dcdd-46df-be3d-88834bf2a80c",
            "a5726748-fa10-4b15-b57f-3978929f40db",
            "33838b76-b06f-4457-8fce-31e036a1da6f",
            "68c97d30-f7c6-4130-ba2a-59db7e5aed0f",
            "a6008062-a00a-47dd-b1f0-ac780f18ae48",
            "27b4c341-898a-42e7-a320-df3a4415e673"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "150b15ac-155f-4bff-a100-8754958794d2",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "1e24146f-f6da-49d6-920b-cb6995873cc7",
              "parentUUID": "150b15ac-155f-4bff-a100-8754958794d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "f7c7e83a-616e-49ef-a4c3-64e2ea51283e",
              "parentUUID": "150b15ac-155f-4bff-a100-8754958794d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "b66feee9-38a2-4820-8bf3-2e70d178a1b3",
              "parentUUID": "150b15ac-155f-4bff-a100-8754958794d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "eb93e84a-06f8-47f5-a9c5-6e3547614f1d",
              "parentUUID": "150b15ac-155f-4bff-a100-8754958794d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "e9a7585e-4ff8-4fc0-9ccf-d4a177075748",
              "parentUUID": "150b15ac-155f-4bff-a100-8754958794d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "23c9a20d-58ec-40b4-b96e-80bb7fec72d0",
              "parentUUID": "150b15ac-155f-4bff-a100-8754958794d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "7157447a-9d4f-44a4-88bd-b5d95ed27e0b",
              "parentUUID": "150b15ac-155f-4bff-a100-8754958794d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "60d2b3f2-9552-48b3-8ba2-7db7508f6f47",
              "parentUUID": "150b15ac-155f-4bff-a100-8754958794d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e24146f-f6da-49d6-920b-cb6995873cc7",
            "f7c7e83a-616e-49ef-a4c3-64e2ea51283e",
            "b66feee9-38a2-4820-8bf3-2e70d178a1b3",
            "eb93e84a-06f8-47f5-a9c5-6e3547614f1d",
            "e9a7585e-4ff8-4fc0-9ccf-d4a177075748",
            "23c9a20d-58ec-40b4-b96e-80bb7fec72d0",
            "7157447a-9d4f-44a4-88bd-b5d95ed27e0b",
            "60d2b3f2-9552-48b3-8ba2-7db7508f6f47"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1de99169-1b2c-4b8e-8ba9-3172697572a9",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "c273e485-516d-428d-8ed6-dc32c0dacb3b",
              "parentUUID": "1de99169-1b2c-4b8e-8ba9-3172697572a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "61830248-39f5-4a7c-80d3-e225e4178d76",
              "parentUUID": "1de99169-1b2c-4b8e-8ba9-3172697572a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "ff6bfd1e-2359-492c-b9a4-64d5dabcd04e",
              "parentUUID": "1de99169-1b2c-4b8e-8ba9-3172697572a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "11760f2a-8828-422b-a988-c21f93f6257d",
              "parentUUID": "1de99169-1b2c-4b8e-8ba9-3172697572a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "35e9c009-e845-4cef-afaa-e053dc3de0af",
              "parentUUID": "1de99169-1b2c-4b8e-8ba9-3172697572a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "7fcd15d9-3a95-4b99-bd73-7930df4aba10",
              "parentUUID": "1de99169-1b2c-4b8e-8ba9-3172697572a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "9642f7f1-04ea-4821-a09f-5552c1cc1f7a",
              "parentUUID": "1de99169-1b2c-4b8e-8ba9-3172697572a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "5b48d650-eb7e-495e-814d-769f0ef40cdb",
              "parentUUID": "1de99169-1b2c-4b8e-8ba9-3172697572a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c273e485-516d-428d-8ed6-dc32c0dacb3b",
            "61830248-39f5-4a7c-80d3-e225e4178d76",
            "ff6bfd1e-2359-492c-b9a4-64d5dabcd04e",
            "11760f2a-8828-422b-a988-c21f93f6257d",
            "35e9c009-e845-4cef-afaa-e053dc3de0af",
            "7fcd15d9-3a95-4b99-bd73-7930df4aba10",
            "9642f7f1-04ea-4821-a09f-5552c1cc1f7a",
            "5b48d650-eb7e-495e-814d-769f0ef40cdb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7dc6ec66-ec4e-4049-8c70-10227c048001",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "4ac2dc61-93d1-4a83-be4a-3385a21b8eab",
              "parentUUID": "7dc6ec66-ec4e-4049-8c70-10227c048001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "d41fe3f7-3499-4ed5-bbaa-47a74f21a585",
              "parentUUID": "7dc6ec66-ec4e-4049-8c70-10227c048001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "918457af-bf14-4313-a7f3-09ec9c8ce751",
              "parentUUID": "7dc6ec66-ec4e-4049-8c70-10227c048001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "512a55ff-6ee1-4e7e-99de-8731c01e8ed8",
              "parentUUID": "7dc6ec66-ec4e-4049-8c70-10227c048001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "46201604-6f88-46cb-abf0-ca490105d920",
              "parentUUID": "7dc6ec66-ec4e-4049-8c70-10227c048001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "5dda76f0-3e96-42d8-bdf0-263891e94573",
              "parentUUID": "7dc6ec66-ec4e-4049-8c70-10227c048001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "b7c87025-8b43-4b13-a54a-10b1319078fc",
              "parentUUID": "7dc6ec66-ec4e-4049-8c70-10227c048001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "b449e6e1-009e-456b-82ce-619edb18eee3",
              "parentUUID": "7dc6ec66-ec4e-4049-8c70-10227c048001",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ac2dc61-93d1-4a83-be4a-3385a21b8eab",
            "d41fe3f7-3499-4ed5-bbaa-47a74f21a585",
            "918457af-bf14-4313-a7f3-09ec9c8ce751",
            "512a55ff-6ee1-4e7e-99de-8731c01e8ed8",
            "46201604-6f88-46cb-abf0-ca490105d920",
            "5dda76f0-3e96-42d8-bdf0-263891e94573",
            "b7c87025-8b43-4b13-a54a-10b1319078fc",
            "b449e6e1-009e-456b-82ce-619edb18eee3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a477d6ca-f328-40b1-ab95-2591fd758b95",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "bc82ccd7-90e6-4c25-b65e-769678585a6d",
              "parentUUID": "a477d6ca-f328-40b1-ab95-2591fd758b95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "6edd4b31-2e53-4bac-ba50-a858b32f5730",
              "parentUUID": "a477d6ca-f328-40b1-ab95-2591fd758b95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "33d96a71-3ec1-4e32-9d73-6d8a09f5e0f1",
              "parentUUID": "a477d6ca-f328-40b1-ab95-2591fd758b95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "4a5e9ca4-5c81-46c5-9659-8d06d602a5ea",
              "parentUUID": "a477d6ca-f328-40b1-ab95-2591fd758b95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "8acb9e6c-82b6-415c-880c-394b0cb0a09e",
              "parentUUID": "a477d6ca-f328-40b1-ab95-2591fd758b95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "3682a7eb-0857-4973-8617-9dae95d6d800",
              "parentUUID": "a477d6ca-f328-40b1-ab95-2591fd758b95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "d66e4b92-f9c8-42d4-ba63-65398475fc71",
              "parentUUID": "a477d6ca-f328-40b1-ab95-2591fd758b95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "fa3d6c44-963d-4a8d-9b8a-ecc4f084fa3b",
              "parentUUID": "a477d6ca-f328-40b1-ab95-2591fd758b95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc82ccd7-90e6-4c25-b65e-769678585a6d",
            "6edd4b31-2e53-4bac-ba50-a858b32f5730",
            "33d96a71-3ec1-4e32-9d73-6d8a09f5e0f1",
            "4a5e9ca4-5c81-46c5-9659-8d06d602a5ea",
            "8acb9e6c-82b6-415c-880c-394b0cb0a09e",
            "3682a7eb-0857-4973-8617-9dae95d6d800",
            "d66e4b92-f9c8-42d4-ba63-65398475fc71",
            "fa3d6c44-963d-4a8d-9b8a-ecc4f084fa3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "87909f6d-9bad-4eeb-b8c2-2e59be797259",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "a48c8a32-7132-46e6-b15c-a98e3a4ab1d2",
              "parentUUID": "87909f6d-9bad-4eeb-b8c2-2e59be797259",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "7f5aa333-8c71-4def-bc75-226a49971694",
              "parentUUID": "87909f6d-9bad-4eeb-b8c2-2e59be797259",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "83621471-e589-4217-87a4-475426d6c0bb",
              "parentUUID": "87909f6d-9bad-4eeb-b8c2-2e59be797259",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "8368c371-192e-45cc-9504-deccd31909e1",
              "parentUUID": "87909f6d-9bad-4eeb-b8c2-2e59be797259",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "3374d0fb-4af9-4ed5-ad4d-cdaa89587fa7",
              "parentUUID": "87909f6d-9bad-4eeb-b8c2-2e59be797259",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "bfb2b328-f928-4247-9864-16a9d4d9b6b7",
              "parentUUID": "87909f6d-9bad-4eeb-b8c2-2e59be797259",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "ccbab0c5-0046-47c6-ad0b-064798c854a2",
              "parentUUID": "87909f6d-9bad-4eeb-b8c2-2e59be797259",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "c8b5a145-2890-4b00-a125-63b8d121d550",
              "parentUUID": "87909f6d-9bad-4eeb-b8c2-2e59be797259",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a48c8a32-7132-46e6-b15c-a98e3a4ab1d2",
            "7f5aa333-8c71-4def-bc75-226a49971694",
            "83621471-e589-4217-87a4-475426d6c0bb",
            "8368c371-192e-45cc-9504-deccd31909e1",
            "3374d0fb-4af9-4ed5-ad4d-cdaa89587fa7",
            "bfb2b328-f928-4247-9864-16a9d4d9b6b7",
            "ccbab0c5-0046-47c6-ad0b-064798c854a2",
            "c8b5a145-2890-4b00-a125-63b8d121d550"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "73109bca-7ff6-4f97-b1de-18fa8fc1fcad",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "abd330ea-3ef5-4e97-a8c4-213f009c9553",
              "parentUUID": "73109bca-7ff6-4f97-b1de-18fa8fc1fcad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "87a9e8db-8b48-423a-81a3-367f9ac8d6f9",
              "parentUUID": "73109bca-7ff6-4f97-b1de-18fa8fc1fcad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "b1294e50-de85-44f1-9eb9-1302a16b97eb",
              "parentUUID": "73109bca-7ff6-4f97-b1de-18fa8fc1fcad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "6076d763-ea42-4ec6-8006-1b162585a0f5",
              "parentUUID": "73109bca-7ff6-4f97-b1de-18fa8fc1fcad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "70f56a9c-42b0-470f-a007-8da53266f47c",
              "parentUUID": "73109bca-7ff6-4f97-b1de-18fa8fc1fcad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "3ba1a5fa-bb35-4078-8182-9bad5b10dbc4",
              "parentUUID": "73109bca-7ff6-4f97-b1de-18fa8fc1fcad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "292acc27-70f9-40b2-b4ef-3f1550d5727a",
              "parentUUID": "73109bca-7ff6-4f97-b1de-18fa8fc1fcad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "c8721416-79ce-44d9-877d-f19e53b8c512",
              "parentUUID": "73109bca-7ff6-4f97-b1de-18fa8fc1fcad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "abd330ea-3ef5-4e97-a8c4-213f009c9553",
            "87a9e8db-8b48-423a-81a3-367f9ac8d6f9",
            "b1294e50-de85-44f1-9eb9-1302a16b97eb",
            "6076d763-ea42-4ec6-8006-1b162585a0f5",
            "70f56a9c-42b0-470f-a007-8da53266f47c",
            "3ba1a5fa-bb35-4078-8182-9bad5b10dbc4",
            "292acc27-70f9-40b2-b4ef-3f1550d5727a",
            "c8721416-79ce-44d9-877d-f19e53b8c512"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1a46a43e-5f1e-4a77-b562-f4b9055e9186",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "a83e2ee7-4715-4717-a562-45a8b4cefbf7",
              "parentUUID": "1a46a43e-5f1e-4a77-b562-f4b9055e9186",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "d830559e-9dcf-4074-9437-8e1e5e7d1f80",
              "parentUUID": "1a46a43e-5f1e-4a77-b562-f4b9055e9186",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "30b7792c-81b5-4878-800c-7e91abba1f26",
              "parentUUID": "1a46a43e-5f1e-4a77-b562-f4b9055e9186",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "2ff2937e-cb65-4e3e-a326-6b415d8c08a8",
              "parentUUID": "1a46a43e-5f1e-4a77-b562-f4b9055e9186",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "fe663d74-e55f-42a7-9567-bb4229c08c79",
              "parentUUID": "1a46a43e-5f1e-4a77-b562-f4b9055e9186",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "e60fbd88-7d70-41f5-8b61-2710fd17d2b6",
              "parentUUID": "1a46a43e-5f1e-4a77-b562-f4b9055e9186",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "c6bfe4ff-da6b-4420-b751-9c328e57d76d",
              "parentUUID": "1a46a43e-5f1e-4a77-b562-f4b9055e9186",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "d4970a36-c4c3-4d4e-af9b-f21da4d32e83",
              "parentUUID": "1a46a43e-5f1e-4a77-b562-f4b9055e9186",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a83e2ee7-4715-4717-a562-45a8b4cefbf7",
            "d830559e-9dcf-4074-9437-8e1e5e7d1f80",
            "30b7792c-81b5-4878-800c-7e91abba1f26",
            "2ff2937e-cb65-4e3e-a326-6b415d8c08a8",
            "fe663d74-e55f-42a7-9567-bb4229c08c79",
            "e60fbd88-7d70-41f5-8b61-2710fd17d2b6",
            "c6bfe4ff-da6b-4420-b751-9c328e57d76d",
            "d4970a36-c4c3-4d4e-af9b-f21da4d32e83"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b7e69948-391a-41e8-a2c9-b04390ee744d",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "d2b7e78a-fb7c-47d6-adbe-f6eb4a5877b3",
              "parentUUID": "b7e69948-391a-41e8-a2c9-b04390ee744d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "684ea5ab-554d-426b-9ef0-c0c4cb85099d",
              "parentUUID": "b7e69948-391a-41e8-a2c9-b04390ee744d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "cd0279a1-4dfe-499d-9a17-e55669e6d129",
              "parentUUID": "b7e69948-391a-41e8-a2c9-b04390ee744d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "f660a170-02ca-45a1-b52e-2a5c87bd9b77",
              "parentUUID": "b7e69948-391a-41e8-a2c9-b04390ee744d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "9b4d0c61-e96e-4d20-ba9f-45637e973bf5",
              "parentUUID": "b7e69948-391a-41e8-a2c9-b04390ee744d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "5ed8170b-9d63-4ca2-bc6b-7c3956360670",
              "parentUUID": "b7e69948-391a-41e8-a2c9-b04390ee744d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "0acfb7fc-26fe-430b-a0df-87691bdd98f4",
              "parentUUID": "b7e69948-391a-41e8-a2c9-b04390ee744d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "3d72a40b-ce45-4aee-abe6-6a72124d1860",
              "parentUUID": "b7e69948-391a-41e8-a2c9-b04390ee744d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2b7e78a-fb7c-47d6-adbe-f6eb4a5877b3",
            "684ea5ab-554d-426b-9ef0-c0c4cb85099d",
            "cd0279a1-4dfe-499d-9a17-e55669e6d129",
            "f660a170-02ca-45a1-b52e-2a5c87bd9b77",
            "9b4d0c61-e96e-4d20-ba9f-45637e973bf5",
            "5ed8170b-9d63-4ca2-bc6b-7c3956360670",
            "0acfb7fc-26fe-430b-a0df-87691bdd98f4",
            "3d72a40b-ce45-4aee-abe6-6a72124d1860"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "03fadce7-e4ab-4cca-9381-b32992d3294e",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "c64bb767-0a76-4c3e-9f4b-83d7f6960020",
              "parentUUID": "03fadce7-e4ab-4cca-9381-b32992d3294e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "ff35f01c-f19b-4e6d-ad2b-dbb80e640b23",
              "parentUUID": "03fadce7-e4ab-4cca-9381-b32992d3294e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "589cdf4d-9159-4261-9016-23bcfba1a9ea",
              "parentUUID": "03fadce7-e4ab-4cca-9381-b32992d3294e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "68d588ec-7f25-44bb-8d68-e18fc11a279e",
              "parentUUID": "03fadce7-e4ab-4cca-9381-b32992d3294e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "de0334bf-6c9a-41ab-83c0-d80ff1e956df",
              "parentUUID": "03fadce7-e4ab-4cca-9381-b32992d3294e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "5ed3e30e-4003-46b0-96d8-9273360dcc64",
              "parentUUID": "03fadce7-e4ab-4cca-9381-b32992d3294e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "ef220e9f-21b0-40d3-9462-9b922ddb32d6",
              "parentUUID": "03fadce7-e4ab-4cca-9381-b32992d3294e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "9dc49ba3-440a-4da5-a8e6-69288b7d74f8",
              "parentUUID": "03fadce7-e4ab-4cca-9381-b32992d3294e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c64bb767-0a76-4c3e-9f4b-83d7f6960020",
            "ff35f01c-f19b-4e6d-ad2b-dbb80e640b23",
            "589cdf4d-9159-4261-9016-23bcfba1a9ea",
            "68d588ec-7f25-44bb-8d68-e18fc11a279e",
            "de0334bf-6c9a-41ab-83c0-d80ff1e956df",
            "5ed3e30e-4003-46b0-96d8-9273360dcc64",
            "ef220e9f-21b0-40d3-9462-9b922ddb32d6",
            "9dc49ba3-440a-4da5-a8e6-69288b7d74f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4aef41ca-b3e9-4222-8ea9-952e7b60ce07",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "5840f549-2421-48ba-ac8f-2e626072d21b",
              "parentUUID": "4aef41ca-b3e9-4222-8ea9-952e7b60ce07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "00c15833-18bf-45d9-8da8-0a8d96ddfb13",
              "parentUUID": "4aef41ca-b3e9-4222-8ea9-952e7b60ce07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "ffab1c6a-9855-4a17-a514-4dff17b187b9",
              "parentUUID": "4aef41ca-b3e9-4222-8ea9-952e7b60ce07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "c28fa75a-9833-49f7-9c0e-914f52ec036b",
              "parentUUID": "4aef41ca-b3e9-4222-8ea9-952e7b60ce07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "f9454a93-8ff9-4ba4-b67c-cc105a9a1f60",
              "parentUUID": "4aef41ca-b3e9-4222-8ea9-952e7b60ce07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "f1bd585e-ddf3-48ed-816c-b021a0832bb0",
              "parentUUID": "4aef41ca-b3e9-4222-8ea9-952e7b60ce07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "7077ba35-74ea-4052-969e-0978476ec82f",
              "parentUUID": "4aef41ca-b3e9-4222-8ea9-952e7b60ce07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "30e66a88-0d7e-4f6d-bcd3-45b8470b433f",
              "parentUUID": "4aef41ca-b3e9-4222-8ea9-952e7b60ce07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5840f549-2421-48ba-ac8f-2e626072d21b",
            "00c15833-18bf-45d9-8da8-0a8d96ddfb13",
            "ffab1c6a-9855-4a17-a514-4dff17b187b9",
            "c28fa75a-9833-49f7-9c0e-914f52ec036b",
            "f9454a93-8ff9-4ba4-b67c-cc105a9a1f60",
            "f1bd585e-ddf3-48ed-816c-b021a0832bb0",
            "7077ba35-74ea-4052-969e-0978476ec82f",
            "30e66a88-0d7e-4f6d-bcd3-45b8470b433f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "24984136-8863-4494-8177-dd2f9de41653",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "32958ff8-0b7a-4675-b740-a917b88d4ec4",
              "parentUUID": "24984136-8863-4494-8177-dd2f9de41653",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "01b4c441-0582-40a1-ba1a-c3228efecccb",
              "parentUUID": "24984136-8863-4494-8177-dd2f9de41653",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "31f839b2-26df-42b4-8adf-a5939c78d758",
              "parentUUID": "24984136-8863-4494-8177-dd2f9de41653",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "22588243-5aaa-463e-aad7-5ac13e8f8d28",
              "parentUUID": "24984136-8863-4494-8177-dd2f9de41653",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "eeadfbc4-221e-4a81-b742-0a6c8ceb6e58",
              "parentUUID": "24984136-8863-4494-8177-dd2f9de41653",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "cab1ff49-3597-49d5-84aa-5ae70f30eef3",
              "parentUUID": "24984136-8863-4494-8177-dd2f9de41653",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "77899140-7ee8-41b9-9197-9309d766b31c",
              "parentUUID": "24984136-8863-4494-8177-dd2f9de41653",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "54bdf6b7-8b5e-46b5-8203-8521bb121845",
              "parentUUID": "24984136-8863-4494-8177-dd2f9de41653",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32958ff8-0b7a-4675-b740-a917b88d4ec4",
            "01b4c441-0582-40a1-ba1a-c3228efecccb",
            "31f839b2-26df-42b4-8adf-a5939c78d758",
            "22588243-5aaa-463e-aad7-5ac13e8f8d28",
            "eeadfbc4-221e-4a81-b742-0a6c8ceb6e58",
            "cab1ff49-3597-49d5-84aa-5ae70f30eef3",
            "77899140-7ee8-41b9-9197-9309d766b31c",
            "54bdf6b7-8b5e-46b5-8203-8521bb121845"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "50d47258-293f-45db-a536-a299b2c322af",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "5d6fc0ad-4d08-4316-b820-58edb815372a",
              "parentUUID": "50d47258-293f-45db-a536-a299b2c322af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "37bcd486-cfc1-4e21-a072-fec50312a720",
              "parentUUID": "50d47258-293f-45db-a536-a299b2c322af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "7a1ab765-472d-4a7d-9a03-db6b458d06c8",
              "parentUUID": "50d47258-293f-45db-a536-a299b2c322af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "73802591-bcd2-46f8-b9cf-05ea89282b40",
              "parentUUID": "50d47258-293f-45db-a536-a299b2c322af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "a04be50e-dfa3-42c6-9890-160180a92d03",
              "parentUUID": "50d47258-293f-45db-a536-a299b2c322af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "42fcfad1-aced-4055-8863-51a6368d7926",
              "parentUUID": "50d47258-293f-45db-a536-a299b2c322af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "9d8387b7-f35b-4be4-aa3c-3375a379b7c8",
              "parentUUID": "50d47258-293f-45db-a536-a299b2c322af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "d91efc69-5a18-4b68-8529-62919d543e60",
              "parentUUID": "50d47258-293f-45db-a536-a299b2c322af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d6fc0ad-4d08-4316-b820-58edb815372a",
            "37bcd486-cfc1-4e21-a072-fec50312a720",
            "7a1ab765-472d-4a7d-9a03-db6b458d06c8",
            "73802591-bcd2-46f8-b9cf-05ea89282b40",
            "a04be50e-dfa3-42c6-9890-160180a92d03",
            "42fcfad1-aced-4055-8863-51a6368d7926",
            "9d8387b7-f35b-4be4-aa3c-3375a379b7c8",
            "d91efc69-5a18-4b68-8529-62919d543e60"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "992c1771-6f63-4ca8-8baf-31171b7079e6",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "ce5fb55a-a8e4-437f-962a-389040d1a01f",
              "parentUUID": "992c1771-6f63-4ca8-8baf-31171b7079e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "2b11cfe4-add0-470d-9dec-716e0b9e987b",
              "parentUUID": "992c1771-6f63-4ca8-8baf-31171b7079e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "d8fcdfb7-5674-41f3-940b-8113b8af4481",
              "parentUUID": "992c1771-6f63-4ca8-8baf-31171b7079e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "3b27e4c0-7cfe-4ac6-9dc3-aac3fc838bd9",
              "parentUUID": "992c1771-6f63-4ca8-8baf-31171b7079e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "f25a33ea-30b5-45cb-a7f8-2e751f014377",
              "parentUUID": "992c1771-6f63-4ca8-8baf-31171b7079e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "1bad3efa-d7eb-4d3e-996f-6df8cee7e33e",
              "parentUUID": "992c1771-6f63-4ca8-8baf-31171b7079e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "20f50f75-2e57-40e9-8001-e2dd04073569",
              "parentUUID": "992c1771-6f63-4ca8-8baf-31171b7079e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "3ab01713-cd23-4a5c-a603-e3c099d227f8",
              "parentUUID": "992c1771-6f63-4ca8-8baf-31171b7079e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce5fb55a-a8e4-437f-962a-389040d1a01f",
            "2b11cfe4-add0-470d-9dec-716e0b9e987b",
            "d8fcdfb7-5674-41f3-940b-8113b8af4481",
            "3b27e4c0-7cfe-4ac6-9dc3-aac3fc838bd9",
            "f25a33ea-30b5-45cb-a7f8-2e751f014377",
            "1bad3efa-d7eb-4d3e-996f-6df8cee7e33e",
            "20f50f75-2e57-40e9-8001-e2dd04073569",
            "3ab01713-cd23-4a5c-a603-e3c099d227f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "343ea0a8-75b3-4f99-b1bb-5da5d0bf9365",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "41ce9fa3-905c-46ac-a063-e6106165358e",
              "parentUUID": "343ea0a8-75b3-4f99-b1bb-5da5d0bf9365",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "63fed334-1cbc-4726-b381-c0a504d50c13",
              "parentUUID": "343ea0a8-75b3-4f99-b1bb-5da5d0bf9365",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "67d54139-e80b-4565-aa26-387f34b11cea",
              "parentUUID": "343ea0a8-75b3-4f99-b1bb-5da5d0bf9365",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "493c9b4f-7a88-4104-88fe-eb3bba85ff7c",
              "parentUUID": "343ea0a8-75b3-4f99-b1bb-5da5d0bf9365",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "d8104a7e-cc66-449e-a4e3-6d745eeaefba",
              "parentUUID": "343ea0a8-75b3-4f99-b1bb-5da5d0bf9365",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "ade81d8c-ba11-4c6f-bd1d-7af02b9453a2",
              "parentUUID": "343ea0a8-75b3-4f99-b1bb-5da5d0bf9365",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "7eb51f04-c2a7-4280-b38b-e7687879ac8e",
              "parentUUID": "343ea0a8-75b3-4f99-b1bb-5da5d0bf9365",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "251267f7-a7dc-4b34-9a98-3e9c24404e61",
              "parentUUID": "343ea0a8-75b3-4f99-b1bb-5da5d0bf9365",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41ce9fa3-905c-46ac-a063-e6106165358e",
            "63fed334-1cbc-4726-b381-c0a504d50c13",
            "67d54139-e80b-4565-aa26-387f34b11cea",
            "493c9b4f-7a88-4104-88fe-eb3bba85ff7c",
            "d8104a7e-cc66-449e-a4e3-6d745eeaefba",
            "ade81d8c-ba11-4c6f-bd1d-7af02b9453a2",
            "7eb51f04-c2a7-4280-b38b-e7687879ac8e",
            "251267f7-a7dc-4b34-9a98-3e9c24404e61"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "abf793f8-1955-4b82-b622-271801b1722d",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "51ce44fd-79f6-416a-b7f0-3b2228a4db75",
              "parentUUID": "abf793f8-1955-4b82-b622-271801b1722d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "f0c34fce-c01f-4a39-966a-44bb4df14bbf",
              "parentUUID": "abf793f8-1955-4b82-b622-271801b1722d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "ae1d6e51-c3b6-4cb4-9e82-603918b288de",
              "parentUUID": "abf793f8-1955-4b82-b622-271801b1722d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "81d44618-0d98-4ff3-a536-2abd2db283dc",
              "parentUUID": "abf793f8-1955-4b82-b622-271801b1722d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "94176d58-8fcf-4c9b-98c5-678e0285bb9d",
              "parentUUID": "abf793f8-1955-4b82-b622-271801b1722d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "fa6ae5d6-d4d3-41a3-8a17-01824b4d9946",
              "parentUUID": "abf793f8-1955-4b82-b622-271801b1722d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "3123af19-b63b-4954-98da-32d74a647299",
              "parentUUID": "abf793f8-1955-4b82-b622-271801b1722d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "32e10436-0aaf-4d0d-9cc0-0f3ea5b8fe80",
              "parentUUID": "abf793f8-1955-4b82-b622-271801b1722d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51ce44fd-79f6-416a-b7f0-3b2228a4db75",
            "f0c34fce-c01f-4a39-966a-44bb4df14bbf",
            "ae1d6e51-c3b6-4cb4-9e82-603918b288de",
            "81d44618-0d98-4ff3-a536-2abd2db283dc",
            "94176d58-8fcf-4c9b-98c5-678e0285bb9d",
            "fa6ae5d6-d4d3-41a3-8a17-01824b4d9946",
            "3123af19-b63b-4954-98da-32d74a647299",
            "32e10436-0aaf-4d0d-9cc0-0f3ea5b8fe80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8e217495-00cb-4a3a-a225-ebc5517a876d",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "ab9e15a3-a98c-44bf-8320-ed84f97ead33",
              "parentUUID": "8e217495-00cb-4a3a-a225-ebc5517a876d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "a2d6dc43-cee1-47f4-a6ef-71304404d612",
              "parentUUID": "8e217495-00cb-4a3a-a225-ebc5517a876d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "86399de4-2563-40a0-8dc7-be08b3d648f9",
              "parentUUID": "8e217495-00cb-4a3a-a225-ebc5517a876d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "4261daaa-d0df-4069-89dc-2d6659f367b0",
              "parentUUID": "8e217495-00cb-4a3a-a225-ebc5517a876d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "a8b10b03-e971-42ad-b2a8-d6b0e8d7fd5d",
              "parentUUID": "8e217495-00cb-4a3a-a225-ebc5517a876d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "4099e1ca-dd25-4707-866f-301528903861",
              "parentUUID": "8e217495-00cb-4a3a-a225-ebc5517a876d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "2db605f4-3059-4604-a76c-486094cdfb35",
              "parentUUID": "8e217495-00cb-4a3a-a225-ebc5517a876d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "bbbb22e4-592d-477d-8aea-5e61df9ad4e2",
              "parentUUID": "8e217495-00cb-4a3a-a225-ebc5517a876d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ab9e15a3-a98c-44bf-8320-ed84f97ead33",
            "a2d6dc43-cee1-47f4-a6ef-71304404d612",
            "86399de4-2563-40a0-8dc7-be08b3d648f9",
            "4261daaa-d0df-4069-89dc-2d6659f367b0",
            "a8b10b03-e971-42ad-b2a8-d6b0e8d7fd5d",
            "4099e1ca-dd25-4707-866f-301528903861",
            "2db605f4-3059-4604-a76c-486094cdfb35",
            "bbbb22e4-592d-477d-8aea-5e61df9ad4e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "29aa0801-b386-4204-a9bc-56ed3a5c9740",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "61c402dc-8204-42c1-8197-40431f02b352",
              "parentUUID": "29aa0801-b386-4204-a9bc-56ed3a5c9740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "92e67feb-640b-4f21-aedf-5891b44083e7",
              "parentUUID": "29aa0801-b386-4204-a9bc-56ed3a5c9740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "ccf212cf-996b-427a-a016-77fa35bc8cfb",
              "parentUUID": "29aa0801-b386-4204-a9bc-56ed3a5c9740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "25351434-b358-40a0-afbd-e5cde8b62ff9",
              "parentUUID": "29aa0801-b386-4204-a9bc-56ed3a5c9740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "927f21f4-e815-48a2-9601-110e3597c2b2",
              "parentUUID": "29aa0801-b386-4204-a9bc-56ed3a5c9740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "4fd31433-dec4-4223-8b60-6d2a9b9321a4",
              "parentUUID": "29aa0801-b386-4204-a9bc-56ed3a5c9740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "b909c0d8-c382-44eb-9b04-67d6957a8f93",
              "parentUUID": "29aa0801-b386-4204-a9bc-56ed3a5c9740",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "8582a4c8-52ce-4475-96b0-74d852d78092",
              "parentUUID": "29aa0801-b386-4204-a9bc-56ed3a5c9740",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61c402dc-8204-42c1-8197-40431f02b352",
            "92e67feb-640b-4f21-aedf-5891b44083e7",
            "ccf212cf-996b-427a-a016-77fa35bc8cfb",
            "25351434-b358-40a0-afbd-e5cde8b62ff9",
            "927f21f4-e815-48a2-9601-110e3597c2b2",
            "4fd31433-dec4-4223-8b60-6d2a9b9321a4",
            "b909c0d8-c382-44eb-9b04-67d6957a8f93",
            "8582a4c8-52ce-4475-96b0-74d852d78092"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4c5e2755-08c2-450b-a7c6-b05f581b289c",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "41aca6c1-27ef-4372-8aaf-8af4da22f523",
              "parentUUID": "4c5e2755-08c2-450b-a7c6-b05f581b289c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "1aecab68-c138-4695-bb14-b060113cf2c5",
              "parentUUID": "4c5e2755-08c2-450b-a7c6-b05f581b289c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "bf87a218-4ad1-4e90-85b3-df7eba212f98",
              "parentUUID": "4c5e2755-08c2-450b-a7c6-b05f581b289c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "e5948f92-a27f-401b-b615-9dcfed5436af",
              "parentUUID": "4c5e2755-08c2-450b-a7c6-b05f581b289c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "ff63a20f-4faf-455f-80e0-5031de0f6a44",
              "parentUUID": "4c5e2755-08c2-450b-a7c6-b05f581b289c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "c8bdb80a-6943-4a63-930f-b35dc36be7a4",
              "parentUUID": "4c5e2755-08c2-450b-a7c6-b05f581b289c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "5ca154d2-b57a-4f17-bac8-eac72178399d",
              "parentUUID": "4c5e2755-08c2-450b-a7c6-b05f581b289c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "bcfb0df3-c8e9-4639-9183-889255050120",
              "parentUUID": "4c5e2755-08c2-450b-a7c6-b05f581b289c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41aca6c1-27ef-4372-8aaf-8af4da22f523",
            "1aecab68-c138-4695-bb14-b060113cf2c5",
            "bf87a218-4ad1-4e90-85b3-df7eba212f98",
            "e5948f92-a27f-401b-b615-9dcfed5436af",
            "ff63a20f-4faf-455f-80e0-5031de0f6a44",
            "c8bdb80a-6943-4a63-930f-b35dc36be7a4",
            "5ca154d2-b57a-4f17-bac8-eac72178399d",
            "bcfb0df3-c8e9-4639-9183-889255050120"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2f8ca815-1ecd-477e-a00f-5b228dc09285",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "4abd1469-0dfe-4b3a-a87e-0a4ab6b7aef7",
              "parentUUID": "2f8ca815-1ecd-477e-a00f-5b228dc09285",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "127c6a28-fdb5-4d26-8b06-370671676020",
              "parentUUID": "2f8ca815-1ecd-477e-a00f-5b228dc09285",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "5363b818-4833-4c3d-b17b-02a04b1f2325",
              "parentUUID": "2f8ca815-1ecd-477e-a00f-5b228dc09285",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "c0afb42c-414f-47e6-b998-89b96dbf030d",
              "parentUUID": "2f8ca815-1ecd-477e-a00f-5b228dc09285",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "1dce85f0-a20c-4578-a8c6-ac43287edd6a",
              "parentUUID": "2f8ca815-1ecd-477e-a00f-5b228dc09285",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "bf815469-023f-4397-b037-bf24ff3e6e4c",
              "parentUUID": "2f8ca815-1ecd-477e-a00f-5b228dc09285",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "3853efbc-054c-42e5-81c8-c66730fb3944",
              "parentUUID": "2f8ca815-1ecd-477e-a00f-5b228dc09285",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "37ada982-5454-431c-b0c8-2d389ef3b742",
              "parentUUID": "2f8ca815-1ecd-477e-a00f-5b228dc09285",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4abd1469-0dfe-4b3a-a87e-0a4ab6b7aef7",
            "127c6a28-fdb5-4d26-8b06-370671676020",
            "5363b818-4833-4c3d-b17b-02a04b1f2325",
            "c0afb42c-414f-47e6-b998-89b96dbf030d",
            "1dce85f0-a20c-4578-a8c6-ac43287edd6a",
            "bf815469-023f-4397-b037-bf24ff3e6e4c",
            "3853efbc-054c-42e5-81c8-c66730fb3944",
            "37ada982-5454-431c-b0c8-2d389ef3b742"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4dfb67b0-5e0c-40da-8d6a-edcbc651f8d6",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "e557418f-9436-4fd5-ad9f-f1b746df7ba4",
              "parentUUID": "4dfb67b0-5e0c-40da-8d6a-edcbc651f8d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "c623eeea-3830-41bd-8881-244e38571713",
              "parentUUID": "4dfb67b0-5e0c-40da-8d6a-edcbc651f8d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "77d99892-005a-459b-a0dc-8eeba8828b5c",
              "parentUUID": "4dfb67b0-5e0c-40da-8d6a-edcbc651f8d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "145f01c8-31bf-4cdb-a153-6495c32d8a49",
              "parentUUID": "4dfb67b0-5e0c-40da-8d6a-edcbc651f8d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "e54df672-2bfe-45fa-80d2-7eef24ccb84e",
              "parentUUID": "4dfb67b0-5e0c-40da-8d6a-edcbc651f8d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "d2e995e4-3f23-4647-9617-fbc01827302c",
              "parentUUID": "4dfb67b0-5e0c-40da-8d6a-edcbc651f8d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "2251a261-6793-4b65-98f9-c396a1e5c1c3",
              "parentUUID": "4dfb67b0-5e0c-40da-8d6a-edcbc651f8d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "d8b2ffa1-8358-4929-a9db-6e41286edfcf",
              "parentUUID": "4dfb67b0-5e0c-40da-8d6a-edcbc651f8d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e557418f-9436-4fd5-ad9f-f1b746df7ba4",
            "c623eeea-3830-41bd-8881-244e38571713",
            "77d99892-005a-459b-a0dc-8eeba8828b5c",
            "145f01c8-31bf-4cdb-a153-6495c32d8a49",
            "e54df672-2bfe-45fa-80d2-7eef24ccb84e",
            "d2e995e4-3f23-4647-9617-fbc01827302c",
            "2251a261-6793-4b65-98f9-c396a1e5c1c3",
            "d8b2ffa1-8358-4929-a9db-6e41286edfcf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b1546bb4-5149-471d-b587-b1877b116a0c",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "fe479ad8-a35c-4d83-9ba4-6ba2090001fd",
              "parentUUID": "b1546bb4-5149-471d-b587-b1877b116a0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "d9a1513e-0471-41b4-9cfd-6e638d9e52a3",
              "parentUUID": "b1546bb4-5149-471d-b587-b1877b116a0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "aacd8721-9167-4c63-9367-888cdbc4dfb6",
              "parentUUID": "b1546bb4-5149-471d-b587-b1877b116a0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "c01bbba9-8ce4-41f8-996c-a162296f94c3",
              "parentUUID": "b1546bb4-5149-471d-b587-b1877b116a0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "5a4363ed-dd02-4ac8-a84e-48191396caf9",
              "parentUUID": "b1546bb4-5149-471d-b587-b1877b116a0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "e9c78a63-e73c-485d-a52e-455258769c8b",
              "parentUUID": "b1546bb4-5149-471d-b587-b1877b116a0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "abb6364b-f1f6-47cf-95ef-372df5d3c224",
              "parentUUID": "b1546bb4-5149-471d-b587-b1877b116a0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "1cc14ee1-2b81-459c-8490-c80696ee84e2",
              "parentUUID": "b1546bb4-5149-471d-b587-b1877b116a0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe479ad8-a35c-4d83-9ba4-6ba2090001fd",
            "d9a1513e-0471-41b4-9cfd-6e638d9e52a3",
            "aacd8721-9167-4c63-9367-888cdbc4dfb6",
            "c01bbba9-8ce4-41f8-996c-a162296f94c3",
            "5a4363ed-dd02-4ac8-a84e-48191396caf9",
            "e9c78a63-e73c-485d-a52e-455258769c8b",
            "abb6364b-f1f6-47cf-95ef-372df5d3c224",
            "1cc14ee1-2b81-459c-8490-c80696ee84e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "03a93e4d-5072-4e34-a62d-987780cf04c8",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "b5a9ac82-2b72-4d22-ae40-007a6fdc7aec",
              "parentUUID": "03a93e4d-5072-4e34-a62d-987780cf04c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "c0a7046b-02f8-44eb-b774-f7bd06b67c49",
              "parentUUID": "03a93e4d-5072-4e34-a62d-987780cf04c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "3deefd35-8cdf-44aa-a2b0-8e8213ca9f3e",
              "parentUUID": "03a93e4d-5072-4e34-a62d-987780cf04c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "0e19c8f1-888c-4c10-86ec-b24e015a4dad",
              "parentUUID": "03a93e4d-5072-4e34-a62d-987780cf04c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "9e8a36f9-2ef1-48b7-8180-148a3c2f46bd",
              "parentUUID": "03a93e4d-5072-4e34-a62d-987780cf04c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "c9ae4877-e18d-487b-a1d1-4cd1d6a479f8",
              "parentUUID": "03a93e4d-5072-4e34-a62d-987780cf04c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "fbee54fe-72c7-44ec-9672-16f480b5746c",
              "parentUUID": "03a93e4d-5072-4e34-a62d-987780cf04c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "2902b613-8ee2-46e6-9627-9cdb99211679",
              "parentUUID": "03a93e4d-5072-4e34-a62d-987780cf04c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5a9ac82-2b72-4d22-ae40-007a6fdc7aec",
            "c0a7046b-02f8-44eb-b774-f7bd06b67c49",
            "3deefd35-8cdf-44aa-a2b0-8e8213ca9f3e",
            "0e19c8f1-888c-4c10-86ec-b24e015a4dad",
            "9e8a36f9-2ef1-48b7-8180-148a3c2f46bd",
            "c9ae4877-e18d-487b-a1d1-4cd1d6a479f8",
            "fbee54fe-72c7-44ec-9672-16f480b5746c",
            "2902b613-8ee2-46e6-9627-9cdb99211679"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 127,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "934bcbbb-489a-47b3-95d3-067358dd7e7d",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "1655e11c-66bf-47ac-aaa6-42754baf7c38",
              "parentUUID": "934bcbbb-489a-47b3-95d3-067358dd7e7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "b2bbb89d-d4ee-4c8f-be79-a08cdacf1277",
              "parentUUID": "934bcbbb-489a-47b3-95d3-067358dd7e7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "40ac708f-c1d9-4520-93ab-5598074c4621",
              "parentUUID": "934bcbbb-489a-47b3-95d3-067358dd7e7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "5b0b99f4-8cf4-4649-b874-6886d61f5f2e",
              "parentUUID": "934bcbbb-489a-47b3-95d3-067358dd7e7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "3a195f20-785e-4955-9609-4c59663aee4b",
              "parentUUID": "934bcbbb-489a-47b3-95d3-067358dd7e7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "dea2e75c-9453-40de-aaa8-ae8e17753db2",
              "parentUUID": "934bcbbb-489a-47b3-95d3-067358dd7e7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "49b7ffb5-7da6-480f-bb46-570e297c4910",
              "parentUUID": "934bcbbb-489a-47b3-95d3-067358dd7e7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "b5b811ab-0ef2-4ced-b3d9-e9e1044bda4c",
              "parentUUID": "934bcbbb-489a-47b3-95d3-067358dd7e7d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1655e11c-66bf-47ac-aaa6-42754baf7c38",
            "b2bbb89d-d4ee-4c8f-be79-a08cdacf1277",
            "40ac708f-c1d9-4520-93ab-5598074c4621",
            "5b0b99f4-8cf4-4649-b874-6886d61f5f2e",
            "3a195f20-785e-4955-9609-4c59663aee4b",
            "dea2e75c-9453-40de-aaa8-ae8e17753db2",
            "49b7ffb5-7da6-480f-bb46-570e297c4910",
            "b5b811ab-0ef2-4ced-b3d9-e9e1044bda4c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d357fdd9-2c73-45fd-aa10-73649b987297",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "c4881f0a-eb3c-4397-8201-eebea98f6e42",
              "parentUUID": "d357fdd9-2c73-45fd-aa10-73649b987297",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "1c56b74c-143f-40b9-804d-35ef02a3bf69",
              "parentUUID": "d357fdd9-2c73-45fd-aa10-73649b987297",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "9479ab91-1eb1-416f-9ed2-dbd8ac5d8627",
              "parentUUID": "d357fdd9-2c73-45fd-aa10-73649b987297",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "61bf1255-966e-475d-99d6-f2005050f4a3",
              "parentUUID": "d357fdd9-2c73-45fd-aa10-73649b987297",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "6e8750dc-3c0d-4f45-91f5-c6a32bd1d036",
              "parentUUID": "d357fdd9-2c73-45fd-aa10-73649b987297",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "33f0a10d-c97d-42f6-87d3-b6dfec6c52cc",
              "parentUUID": "d357fdd9-2c73-45fd-aa10-73649b987297",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "306020fd-33dc-4ecd-a874-648c1ca5af8d",
              "parentUUID": "d357fdd9-2c73-45fd-aa10-73649b987297",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "8e79d683-bd4f-4deb-bcef-953cab0ff0c0",
              "parentUUID": "d357fdd9-2c73-45fd-aa10-73649b987297",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c4881f0a-eb3c-4397-8201-eebea98f6e42",
            "1c56b74c-143f-40b9-804d-35ef02a3bf69",
            "9479ab91-1eb1-416f-9ed2-dbd8ac5d8627",
            "61bf1255-966e-475d-99d6-f2005050f4a3",
            "6e8750dc-3c0d-4f45-91f5-c6a32bd1d036",
            "33f0a10d-c97d-42f6-87d3-b6dfec6c52cc",
            "306020fd-33dc-4ecd-a874-648c1ca5af8d",
            "8e79d683-bd4f-4deb-bcef-953cab0ff0c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9ea5efe4-ff35-4f66-9d27-ba9bb1c7de9a",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "e9354e6c-bbb1-4ff9-b3ad-3883c25902e4",
              "parentUUID": "9ea5efe4-ff35-4f66-9d27-ba9bb1c7de9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "59744461-861c-4df7-868b-ede3fdf6d82c",
              "parentUUID": "9ea5efe4-ff35-4f66-9d27-ba9bb1c7de9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "0794f6ad-92c1-4382-9ab6-02483cc78a5d",
              "parentUUID": "9ea5efe4-ff35-4f66-9d27-ba9bb1c7de9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "6b0da9a0-52bd-467f-be4c-1423ae16a2f0",
              "parentUUID": "9ea5efe4-ff35-4f66-9d27-ba9bb1c7de9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "c31f46f0-e9e2-44fa-ae68-aeb812971a05",
              "parentUUID": "9ea5efe4-ff35-4f66-9d27-ba9bb1c7de9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "0b5d41c4-54d2-4f98-95ba-7caebdf14278",
              "parentUUID": "9ea5efe4-ff35-4f66-9d27-ba9bb1c7de9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "56db1272-fa9b-4b08-a1e7-b679e34c7ad3",
              "parentUUID": "9ea5efe4-ff35-4f66-9d27-ba9bb1c7de9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "c324c2ee-ec47-49de-befa-1181e57c971c",
              "parentUUID": "9ea5efe4-ff35-4f66-9d27-ba9bb1c7de9a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9354e6c-bbb1-4ff9-b3ad-3883c25902e4",
            "59744461-861c-4df7-868b-ede3fdf6d82c",
            "0794f6ad-92c1-4382-9ab6-02483cc78a5d",
            "6b0da9a0-52bd-467f-be4c-1423ae16a2f0",
            "c31f46f0-e9e2-44fa-ae68-aeb812971a05",
            "0b5d41c4-54d2-4f98-95ba-7caebdf14278",
            "56db1272-fa9b-4b08-a1e7-b679e34c7ad3",
            "c324c2ee-ec47-49de-befa-1181e57c971c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ba5e3be4-df9c-4bd2-a017-9823f76c88b5",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "12159673-f226-4ace-9f89-9d1ac95231c9",
              "parentUUID": "ba5e3be4-df9c-4bd2-a017-9823f76c88b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "af039c14-a66a-4cda-8320-88f225d6507e",
              "parentUUID": "ba5e3be4-df9c-4bd2-a017-9823f76c88b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "13c6a0a7-b94c-47f7-a80d-7e385244e5ac",
              "parentUUID": "ba5e3be4-df9c-4bd2-a017-9823f76c88b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "0549917c-fe83-498d-80e6-9b9e6c77f300",
              "parentUUID": "ba5e3be4-df9c-4bd2-a017-9823f76c88b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "b3215ef5-aca0-4c05-ab40-e45ab5371e94",
              "parentUUID": "ba5e3be4-df9c-4bd2-a017-9823f76c88b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "e02ca330-165c-42fe-ab81-8203cb0f1ef1",
              "parentUUID": "ba5e3be4-df9c-4bd2-a017-9823f76c88b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "ee78344f-39f1-4a51-8adc-64ffa2e69536",
              "parentUUID": "ba5e3be4-df9c-4bd2-a017-9823f76c88b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "0fc53c34-4d61-49b9-afbc-607e16ffe468",
              "parentUUID": "ba5e3be4-df9c-4bd2-a017-9823f76c88b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12159673-f226-4ace-9f89-9d1ac95231c9",
            "af039c14-a66a-4cda-8320-88f225d6507e",
            "13c6a0a7-b94c-47f7-a80d-7e385244e5ac",
            "0549917c-fe83-498d-80e6-9b9e6c77f300",
            "b3215ef5-aca0-4c05-ab40-e45ab5371e94",
            "e02ca330-165c-42fe-ab81-8203cb0f1ef1",
            "ee78344f-39f1-4a51-8adc-64ffa2e69536",
            "0fc53c34-4d61-49b9-afbc-607e16ffe468"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ac21a3b3-45cb-48d2-8cdc-012126f04edb",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "6a52b04b-abcf-4393-8542-0ac7c2c52ef7",
              "parentUUID": "ac21a3b3-45cb-48d2-8cdc-012126f04edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "eebe2d23-b4e7-4514-b193-827e842f158b",
              "parentUUID": "ac21a3b3-45cb-48d2-8cdc-012126f04edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "8bba3449-ed68-49f7-b355-2edabdedd3c3",
              "parentUUID": "ac21a3b3-45cb-48d2-8cdc-012126f04edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "d5d6d061-5227-4a4e-92e1-166386abb4f5",
              "parentUUID": "ac21a3b3-45cb-48d2-8cdc-012126f04edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "67ad9e87-3b34-4ca4-baee-9899c311ac7c",
              "parentUUID": "ac21a3b3-45cb-48d2-8cdc-012126f04edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "c755b65f-9fcd-411a-b403-e3f3617139bd",
              "parentUUID": "ac21a3b3-45cb-48d2-8cdc-012126f04edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "37df15c4-2ed4-4d35-a497-7f258f28b97d",
              "parentUUID": "ac21a3b3-45cb-48d2-8cdc-012126f04edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "45d1fa27-d8fe-45b7-acd2-7e02b30e9f70",
              "parentUUID": "ac21a3b3-45cb-48d2-8cdc-012126f04edb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a52b04b-abcf-4393-8542-0ac7c2c52ef7",
            "eebe2d23-b4e7-4514-b193-827e842f158b",
            "8bba3449-ed68-49f7-b355-2edabdedd3c3",
            "d5d6d061-5227-4a4e-92e1-166386abb4f5",
            "67ad9e87-3b34-4ca4-baee-9899c311ac7c",
            "c755b65f-9fcd-411a-b403-e3f3617139bd",
            "37df15c4-2ed4-4d35-a497-7f258f28b97d",
            "45d1fa27-d8fe-45b7-acd2-7e02b30e9f70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "aa5014d9-131c-418e-944f-d10999064477",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "d7e294bf-f7f9-4031-9cd7-f001e451c428",
              "parentUUID": "aa5014d9-131c-418e-944f-d10999064477",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "86756d8d-4eeb-486a-a817-0d0c5ebc8134",
              "parentUUID": "aa5014d9-131c-418e-944f-d10999064477",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "c73f8f99-a491-481d-9401-262be35313df",
              "parentUUID": "aa5014d9-131c-418e-944f-d10999064477",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "f32805c9-3abb-4774-b677-c87eb0d03aae",
              "parentUUID": "aa5014d9-131c-418e-944f-d10999064477",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "acf30ff4-6fe4-45db-81f8-ac4da46ba45a",
              "parentUUID": "aa5014d9-131c-418e-944f-d10999064477",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "f957e556-02f3-41ce-a9e3-e52c0f326ebb",
              "parentUUID": "aa5014d9-131c-418e-944f-d10999064477",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "f8fe3e7b-302d-4336-bfe3-3e1e0622d88f",
              "parentUUID": "aa5014d9-131c-418e-944f-d10999064477",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "66808c4f-e13d-4932-a15b-2d257d6652ac",
              "parentUUID": "aa5014d9-131c-418e-944f-d10999064477",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7e294bf-f7f9-4031-9cd7-f001e451c428",
            "86756d8d-4eeb-486a-a817-0d0c5ebc8134",
            "c73f8f99-a491-481d-9401-262be35313df",
            "f32805c9-3abb-4774-b677-c87eb0d03aae",
            "acf30ff4-6fe4-45db-81f8-ac4da46ba45a",
            "f957e556-02f3-41ce-a9e3-e52c0f326ebb",
            "f8fe3e7b-302d-4336-bfe3-3e1e0622d88f",
            "66808c4f-e13d-4932-a15b-2d257d6652ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "19c9ce72-8309-4849-b494-05181cd1942f",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "16b12ab3-e529-4f77-8dce-9fc0ea33233c",
              "parentUUID": "19c9ce72-8309-4849-b494-05181cd1942f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "a58ba5d8-4991-47c5-8413-3b75fb053da4",
              "parentUUID": "19c9ce72-8309-4849-b494-05181cd1942f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "9d818604-10b9-4b22-9cba-e3fa68bdbf8c",
              "parentUUID": "19c9ce72-8309-4849-b494-05181cd1942f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "70e90bd0-28dd-4f28-b147-17584d5a27b4",
              "parentUUID": "19c9ce72-8309-4849-b494-05181cd1942f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "bb1f0b6e-16ee-48ed-a817-8c781e1469d0",
              "parentUUID": "19c9ce72-8309-4849-b494-05181cd1942f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "6ab0ca8d-fc06-4c39-9717-e62a55ecfa0e",
              "parentUUID": "19c9ce72-8309-4849-b494-05181cd1942f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "bdd1e0f2-f39b-403f-8118-662bf94141a2",
              "parentUUID": "19c9ce72-8309-4849-b494-05181cd1942f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "c583dfcf-ad4d-4090-97d5-c0a77c98aa0e",
              "parentUUID": "19c9ce72-8309-4849-b494-05181cd1942f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16b12ab3-e529-4f77-8dce-9fc0ea33233c",
            "a58ba5d8-4991-47c5-8413-3b75fb053da4",
            "9d818604-10b9-4b22-9cba-e3fa68bdbf8c",
            "70e90bd0-28dd-4f28-b147-17584d5a27b4",
            "bb1f0b6e-16ee-48ed-a817-8c781e1469d0",
            "6ab0ca8d-fc06-4c39-9717-e62a55ecfa0e",
            "bdd1e0f2-f39b-403f-8118-662bf94141a2",
            "c583dfcf-ad4d-4090-97d5-c0a77c98aa0e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c120829f-2b73-4f58-919b-2d3557c52876",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "2614372b-9fa6-473b-a2d3-c421d0bf3065",
              "parentUUID": "c120829f-2b73-4f58-919b-2d3557c52876",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "49becc10-09a2-43fa-86f6-3b49c54bcde5",
              "parentUUID": "c120829f-2b73-4f58-919b-2d3557c52876",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "5e4ec1da-7b5a-4eeb-9a1d-5eb7e1c8b6d2",
              "parentUUID": "c120829f-2b73-4f58-919b-2d3557c52876",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "c53f332c-3627-4940-b2d2-4b46f4700d66",
              "parentUUID": "c120829f-2b73-4f58-919b-2d3557c52876",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "a372fd07-cc53-41d8-856a-b4d35fe807f9",
              "parentUUID": "c120829f-2b73-4f58-919b-2d3557c52876",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "6d810d9f-2c9f-4fc3-a37b-132a17722585",
              "parentUUID": "c120829f-2b73-4f58-919b-2d3557c52876",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "97ea3513-c5f8-40ac-a038-0f3948bdc060",
              "parentUUID": "c120829f-2b73-4f58-919b-2d3557c52876",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "f8bca887-1fd7-47d0-b773-e15349d4c257",
              "parentUUID": "c120829f-2b73-4f58-919b-2d3557c52876",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2614372b-9fa6-473b-a2d3-c421d0bf3065",
            "49becc10-09a2-43fa-86f6-3b49c54bcde5",
            "5e4ec1da-7b5a-4eeb-9a1d-5eb7e1c8b6d2",
            "c53f332c-3627-4940-b2d2-4b46f4700d66",
            "a372fd07-cc53-41d8-856a-b4d35fe807f9",
            "6d810d9f-2c9f-4fc3-a37b-132a17722585",
            "97ea3513-c5f8-40ac-a038-0f3948bdc060",
            "f8bca887-1fd7-47d0-b773-e15349d4c257"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e90c106c-aff0-4113-861b-27d92a778169",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "05683d56-f6d3-476f-80d6-9a96a192bf33",
              "parentUUID": "e90c106c-aff0-4113-861b-27d92a778169",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "b492e30b-f24f-4002-8a3a-cd7b870500f4",
              "parentUUID": "e90c106c-aff0-4113-861b-27d92a778169",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "89d381a2-2ddf-49b1-bc34-416d1fdc8e8c",
              "parentUUID": "e90c106c-aff0-4113-861b-27d92a778169",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "1bc823b1-01ff-4eee-b3d2-fe926146e018",
              "parentUUID": "e90c106c-aff0-4113-861b-27d92a778169",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "6ff65cf2-1ee5-4f43-a191-e8623f78f57e",
              "parentUUID": "e90c106c-aff0-4113-861b-27d92a778169",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "74527fe0-81e7-4c9e-a93a-9f1bd5318e57",
              "parentUUID": "e90c106c-aff0-4113-861b-27d92a778169",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "ea53f989-bb51-459d-b28c-4cb17e58fb99",
              "parentUUID": "e90c106c-aff0-4113-861b-27d92a778169",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "eaebd28a-9eac-4c66-bf10-d09c7daa9d11",
              "parentUUID": "e90c106c-aff0-4113-861b-27d92a778169",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05683d56-f6d3-476f-80d6-9a96a192bf33",
            "b492e30b-f24f-4002-8a3a-cd7b870500f4",
            "89d381a2-2ddf-49b1-bc34-416d1fdc8e8c",
            "1bc823b1-01ff-4eee-b3d2-fe926146e018",
            "6ff65cf2-1ee5-4f43-a191-e8623f78f57e",
            "74527fe0-81e7-4c9e-a93a-9f1bd5318e57",
            "ea53f989-bb51-459d-b28c-4cb17e58fb99",
            "eaebd28a-9eac-4c66-bf10-d09c7daa9d11"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d3f7606a-edaf-494f-9848-942ef847b36e",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "af79e65c-3b9a-4233-b5f7-1d3e3d06ac2f",
              "parentUUID": "d3f7606a-edaf-494f-9848-942ef847b36e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "df2fe47a-07df-4248-8bd9-49b7a063c648",
              "parentUUID": "d3f7606a-edaf-494f-9848-942ef847b36e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "d642aa7e-7286-443a-bab3-c6df0f7f21e1",
              "parentUUID": "d3f7606a-edaf-494f-9848-942ef847b36e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "73e5841e-0802-4c72-b91d-03b37cda82d6",
              "parentUUID": "d3f7606a-edaf-494f-9848-942ef847b36e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "7a67a781-ab8e-4e96-9bb5-3d3bf5fa933c",
              "parentUUID": "d3f7606a-edaf-494f-9848-942ef847b36e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "a43160f0-bebf-414a-8b49-6947eb35514e",
              "parentUUID": "d3f7606a-edaf-494f-9848-942ef847b36e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "b88dbe43-e98b-491a-aa88-cbee6ad1694e",
              "parentUUID": "d3f7606a-edaf-494f-9848-942ef847b36e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "c7e057c1-f452-4865-ae4b-424fc1067b85",
              "parentUUID": "d3f7606a-edaf-494f-9848-942ef847b36e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af79e65c-3b9a-4233-b5f7-1d3e3d06ac2f",
            "df2fe47a-07df-4248-8bd9-49b7a063c648",
            "d642aa7e-7286-443a-bab3-c6df0f7f21e1",
            "73e5841e-0802-4c72-b91d-03b37cda82d6",
            "7a67a781-ab8e-4e96-9bb5-3d3bf5fa933c",
            "a43160f0-bebf-414a-8b49-6947eb35514e",
            "b88dbe43-e98b-491a-aa88-cbee6ad1694e",
            "c7e057c1-f452-4865-ae4b-424fc1067b85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3f310f99-3a96-4a7b-8566-4dced2284f4f",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "767af8c6-cce0-4278-8602-ceead6987a35",
              "parentUUID": "3f310f99-3a96-4a7b-8566-4dced2284f4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "400e3353-9d26-4823-a24c-76050f92922d",
              "parentUUID": "3f310f99-3a96-4a7b-8566-4dced2284f4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "fdea5c94-c99d-4795-bc7f-beabf1d242c6",
              "parentUUID": "3f310f99-3a96-4a7b-8566-4dced2284f4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "5cf98e84-031c-4ed2-ac46-e332fe6101f4",
              "parentUUID": "3f310f99-3a96-4a7b-8566-4dced2284f4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "6e6d94f0-8b54-4a45-b9ec-25bfdffe3a49",
              "parentUUID": "3f310f99-3a96-4a7b-8566-4dced2284f4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "8751f659-9b29-4a53-b921-d53d50ce90ac",
              "parentUUID": "3f310f99-3a96-4a7b-8566-4dced2284f4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "29de386c-38b2-4a2f-b99e-316171fb74bb",
              "parentUUID": "3f310f99-3a96-4a7b-8566-4dced2284f4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "c6437c46-23cf-4931-b2f4-df9612ff8ed4",
              "parentUUID": "3f310f99-3a96-4a7b-8566-4dced2284f4f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "767af8c6-cce0-4278-8602-ceead6987a35",
            "400e3353-9d26-4823-a24c-76050f92922d",
            "fdea5c94-c99d-4795-bc7f-beabf1d242c6",
            "5cf98e84-031c-4ed2-ac46-e332fe6101f4",
            "6e6d94f0-8b54-4a45-b9ec-25bfdffe3a49",
            "8751f659-9b29-4a53-b921-d53d50ce90ac",
            "29de386c-38b2-4a2f-b99e-316171fb74bb",
            "c6437c46-23cf-4931-b2f4-df9612ff8ed4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "298bd599-cf07-4b03-8b0d-36d998d61d1c",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "fc2e40aa-bce2-4280-9e56-1851e67ed65d",
              "parentUUID": "298bd599-cf07-4b03-8b0d-36d998d61d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "f4430366-2110-4646-93c5-bcdf620240be",
              "parentUUID": "298bd599-cf07-4b03-8b0d-36d998d61d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "275ca638-6e85-4026-9fb7-af1c0d228b19",
              "parentUUID": "298bd599-cf07-4b03-8b0d-36d998d61d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "b550d37a-e939-4924-b7d1-c1dfedd3c623",
              "parentUUID": "298bd599-cf07-4b03-8b0d-36d998d61d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "1f18deb0-ec4f-41f4-bf4a-7f5784ce0943",
              "parentUUID": "298bd599-cf07-4b03-8b0d-36d998d61d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "1378184d-8bee-43c7-a0d2-b13dfc04476e",
              "parentUUID": "298bd599-cf07-4b03-8b0d-36d998d61d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "a4fa73e8-bb3c-49a2-9df8-442ee755170d",
              "parentUUID": "298bd599-cf07-4b03-8b0d-36d998d61d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "57c55ab4-3fed-48ab-81c4-ac33e4fd35ba",
              "parentUUID": "298bd599-cf07-4b03-8b0d-36d998d61d1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc2e40aa-bce2-4280-9e56-1851e67ed65d",
            "f4430366-2110-4646-93c5-bcdf620240be",
            "275ca638-6e85-4026-9fb7-af1c0d228b19",
            "b550d37a-e939-4924-b7d1-c1dfedd3c623",
            "1f18deb0-ec4f-41f4-bf4a-7f5784ce0943",
            "1378184d-8bee-43c7-a0d2-b13dfc04476e",
            "a4fa73e8-bb3c-49a2-9df8-442ee755170d",
            "57c55ab4-3fed-48ab-81c4-ac33e4fd35ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d5f8e23c-2a05-4e0c-85dd-fef881ab350a",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "9745efa1-2940-47d1-80fd-1395c1670367",
              "parentUUID": "d5f8e23c-2a05-4e0c-85dd-fef881ab350a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "ce60d6f2-3b45-4f7c-8502-5d6370314048",
              "parentUUID": "d5f8e23c-2a05-4e0c-85dd-fef881ab350a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "17d25f48-2663-4dfd-b5a7-b25bacd26b56",
              "parentUUID": "d5f8e23c-2a05-4e0c-85dd-fef881ab350a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "1dd1ed12-123e-4d5f-92e0-135809066078",
              "parentUUID": "d5f8e23c-2a05-4e0c-85dd-fef881ab350a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "df5d031b-639f-4f56-a87f-dbd92d592ddc",
              "parentUUID": "d5f8e23c-2a05-4e0c-85dd-fef881ab350a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "fc93d6ef-e17b-4d8a-b0ae-cff48ec2348d",
              "parentUUID": "d5f8e23c-2a05-4e0c-85dd-fef881ab350a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "662532be-3613-408c-aaf4-9bb814ec6204",
              "parentUUID": "d5f8e23c-2a05-4e0c-85dd-fef881ab350a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "3933c40f-627f-4f1a-901a-ad8899d7e0be",
              "parentUUID": "d5f8e23c-2a05-4e0c-85dd-fef881ab350a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9745efa1-2940-47d1-80fd-1395c1670367",
            "ce60d6f2-3b45-4f7c-8502-5d6370314048",
            "17d25f48-2663-4dfd-b5a7-b25bacd26b56",
            "1dd1ed12-123e-4d5f-92e0-135809066078",
            "df5d031b-639f-4f56-a87f-dbd92d592ddc",
            "fc93d6ef-e17b-4d8a-b0ae-cff48ec2348d",
            "662532be-3613-408c-aaf4-9bb814ec6204",
            "3933c40f-627f-4f1a-901a-ad8899d7e0be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b0e2faeb-7710-48ef-a0b9-bf905e67debb",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "bd76a7c5-0c88-4aa4-b134-99349b532f5a",
              "parentUUID": "b0e2faeb-7710-48ef-a0b9-bf905e67debb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "b6da8ed5-fae1-4877-ba0f-e6c0fee24cc8",
              "parentUUID": "b0e2faeb-7710-48ef-a0b9-bf905e67debb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "67eb5da3-beb3-45d0-8767-78deac5dfee3",
              "parentUUID": "b0e2faeb-7710-48ef-a0b9-bf905e67debb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "b6cc154b-1e47-434a-bc63-297785075598",
              "parentUUID": "b0e2faeb-7710-48ef-a0b9-bf905e67debb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "9e3656e8-cdcd-40d5-824b-2f2182c9db8a",
              "parentUUID": "b0e2faeb-7710-48ef-a0b9-bf905e67debb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "2c4dadd5-911f-480b-a6d8-88fba378d0d8",
              "parentUUID": "b0e2faeb-7710-48ef-a0b9-bf905e67debb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "c1e4b00a-efff-4636-9de8-ed36f17ed0eb",
              "parentUUID": "b0e2faeb-7710-48ef-a0b9-bf905e67debb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "6f04657b-a245-4cd4-af6d-c26f28c5d173",
              "parentUUID": "b0e2faeb-7710-48ef-a0b9-bf905e67debb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd76a7c5-0c88-4aa4-b134-99349b532f5a",
            "b6da8ed5-fae1-4877-ba0f-e6c0fee24cc8",
            "67eb5da3-beb3-45d0-8767-78deac5dfee3",
            "b6cc154b-1e47-434a-bc63-297785075598",
            "9e3656e8-cdcd-40d5-824b-2f2182c9db8a",
            "2c4dadd5-911f-480b-a6d8-88fba378d0d8",
            "c1e4b00a-efff-4636-9de8-ed36f17ed0eb",
            "6f04657b-a245-4cd4-af6d-c26f28c5d173"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "63e939ee-15e0-4503-9ca2-8db56e6ad4b0",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "28c60186-21b1-4bec-bf77-3aa2ebbb0d1f",
              "parentUUID": "63e939ee-15e0-4503-9ca2-8db56e6ad4b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "190fd02d-fb9a-4164-a63f-a0b24984d95e",
              "parentUUID": "63e939ee-15e0-4503-9ca2-8db56e6ad4b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "47bd0925-9c53-46b6-8714-203259d460ae",
              "parentUUID": "63e939ee-15e0-4503-9ca2-8db56e6ad4b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "999c66a6-1ea4-449b-8a06-e71c31d8521c",
              "parentUUID": "63e939ee-15e0-4503-9ca2-8db56e6ad4b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "58d073c5-3d39-4bad-b12f-5dc48c9b29b6",
              "parentUUID": "63e939ee-15e0-4503-9ca2-8db56e6ad4b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "59d1640a-0ae2-4fdc-88a2-f4a839ad2dd7",
              "parentUUID": "63e939ee-15e0-4503-9ca2-8db56e6ad4b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "8303ae97-3cd3-472b-b08e-1f6d47777c50",
              "parentUUID": "63e939ee-15e0-4503-9ca2-8db56e6ad4b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "bc0cf203-bdb2-46b4-a9c1-21097d1d329d",
              "parentUUID": "63e939ee-15e0-4503-9ca2-8db56e6ad4b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28c60186-21b1-4bec-bf77-3aa2ebbb0d1f",
            "190fd02d-fb9a-4164-a63f-a0b24984d95e",
            "47bd0925-9c53-46b6-8714-203259d460ae",
            "999c66a6-1ea4-449b-8a06-e71c31d8521c",
            "58d073c5-3d39-4bad-b12f-5dc48c9b29b6",
            "59d1640a-0ae2-4fdc-88a2-f4a839ad2dd7",
            "8303ae97-3cd3-472b-b08e-1f6d47777c50",
            "bc0cf203-bdb2-46b4-a9c1-21097d1d329d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "62f19523-0e6e-4860-900e-d55936fdd08c",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "1c4921ea-3433-4b52-b2a4-edce067d3a97",
              "parentUUID": "62f19523-0e6e-4860-900e-d55936fdd08c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "fea6f35a-bc72-44d6-a3ea-bf9cc2d863c1",
              "parentUUID": "62f19523-0e6e-4860-900e-d55936fdd08c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "041ff89a-5094-41a3-81b7-a140e66a4d26",
              "parentUUID": "62f19523-0e6e-4860-900e-d55936fdd08c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "25c70b7e-6eac-4b5c-af17-829dc1f70d22",
              "parentUUID": "62f19523-0e6e-4860-900e-d55936fdd08c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "4e5f5bee-93ad-407d-845e-6b6c32a6f8cd",
              "parentUUID": "62f19523-0e6e-4860-900e-d55936fdd08c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "e2311b68-d6bc-4100-9daa-fc4bdc5fccc2",
              "parentUUID": "62f19523-0e6e-4860-900e-d55936fdd08c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "d860a19e-f010-4262-ae3f-0db0bc6696ef",
              "parentUUID": "62f19523-0e6e-4860-900e-d55936fdd08c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "8573df61-9e97-4747-a716-0c36e0be9b85",
              "parentUUID": "62f19523-0e6e-4860-900e-d55936fdd08c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c4921ea-3433-4b52-b2a4-edce067d3a97",
            "fea6f35a-bc72-44d6-a3ea-bf9cc2d863c1",
            "041ff89a-5094-41a3-81b7-a140e66a4d26",
            "25c70b7e-6eac-4b5c-af17-829dc1f70d22",
            "4e5f5bee-93ad-407d-845e-6b6c32a6f8cd",
            "e2311b68-d6bc-4100-9daa-fc4bdc5fccc2",
            "d860a19e-f010-4262-ae3f-0db0bc6696ef",
            "8573df61-9e97-4747-a716-0c36e0be9b85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8c5f8f13-78db-4530-aa51-2113371e1fd8",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "bc4179c3-d757-409c-9d1b-c2b9d1ce1c27",
              "parentUUID": "8c5f8f13-78db-4530-aa51-2113371e1fd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "bb6b9fd7-b775-4119-81e8-ec23e76d2bbf",
              "parentUUID": "8c5f8f13-78db-4530-aa51-2113371e1fd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "5f946ae3-9632-48be-8cc7-2fb932a618c5",
              "parentUUID": "8c5f8f13-78db-4530-aa51-2113371e1fd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "168af39e-0991-430a-940c-24875011e45d",
              "parentUUID": "8c5f8f13-78db-4530-aa51-2113371e1fd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "8d8c4236-20c6-4e60-8426-9d94914540f6",
              "parentUUID": "8c5f8f13-78db-4530-aa51-2113371e1fd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "de0ad855-f892-419f-a9b1-ddeb8315aabf",
              "parentUUID": "8c5f8f13-78db-4530-aa51-2113371e1fd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "77829790-6ede-4bf8-912a-90d856af27e5",
              "parentUUID": "8c5f8f13-78db-4530-aa51-2113371e1fd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "82d84bf3-27ec-4879-bd40-360496570def",
              "parentUUID": "8c5f8f13-78db-4530-aa51-2113371e1fd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc4179c3-d757-409c-9d1b-c2b9d1ce1c27",
            "bb6b9fd7-b775-4119-81e8-ec23e76d2bbf",
            "5f946ae3-9632-48be-8cc7-2fb932a618c5",
            "168af39e-0991-430a-940c-24875011e45d",
            "8d8c4236-20c6-4e60-8426-9d94914540f6",
            "de0ad855-f892-419f-a9b1-ddeb8315aabf",
            "77829790-6ede-4bf8-912a-90d856af27e5",
            "82d84bf3-27ec-4879-bd40-360496570def"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "599467a8-5cbd-4299-82f1-5658932eebbe",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "e7191c6a-b44f-4e4b-8f18-a32a4fd5bd7e",
              "parentUUID": "599467a8-5cbd-4299-82f1-5658932eebbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "f82340df-176b-4bad-b9b6-8e69ea539ed3",
              "parentUUID": "599467a8-5cbd-4299-82f1-5658932eebbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "b0cda9ba-c970-40e4-8f8c-92f930d7135b",
              "parentUUID": "599467a8-5cbd-4299-82f1-5658932eebbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "226767fd-424b-4d86-b7ab-8f66045b116f",
              "parentUUID": "599467a8-5cbd-4299-82f1-5658932eebbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "57eda3ee-9128-44a4-a337-6037057f5e82",
              "parentUUID": "599467a8-5cbd-4299-82f1-5658932eebbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "902b6ad3-a4fc-4c48-bbd8-27e3f7684cec",
              "parentUUID": "599467a8-5cbd-4299-82f1-5658932eebbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "2a910526-6981-4684-8ac5-fc90530e7302",
              "parentUUID": "599467a8-5cbd-4299-82f1-5658932eebbe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "2b9ab8fb-e1fc-4f9f-99df-8e95db3aec34",
              "parentUUID": "599467a8-5cbd-4299-82f1-5658932eebbe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7191c6a-b44f-4e4b-8f18-a32a4fd5bd7e",
            "f82340df-176b-4bad-b9b6-8e69ea539ed3",
            "b0cda9ba-c970-40e4-8f8c-92f930d7135b",
            "226767fd-424b-4d86-b7ab-8f66045b116f",
            "57eda3ee-9128-44a4-a337-6037057f5e82",
            "902b6ad3-a4fc-4c48-bbd8-27e3f7684cec",
            "2a910526-6981-4684-8ac5-fc90530e7302",
            "2b9ab8fb-e1fc-4f9f-99df-8e95db3aec34"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "6ae4e214-df79-4e08-81d1-62976c4b5146",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "da179b92-1324-4947-ac33-6d8858ab4343",
              "parentUUID": "6ae4e214-df79-4e08-81d1-62976c4b5146",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "afcc5594-852f-4b2d-9468-08b060d809d3",
              "parentUUID": "6ae4e214-df79-4e08-81d1-62976c4b5146",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "1da2c1ac-a87b-4814-bd1a-bed39e707f81",
              "parentUUID": "6ae4e214-df79-4e08-81d1-62976c4b5146",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "e0f7eff7-23c7-4396-9407-149a48b60d36",
              "parentUUID": "6ae4e214-df79-4e08-81d1-62976c4b5146",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "4df34e24-98a2-4b4d-873e-0614c379bd78",
              "parentUUID": "6ae4e214-df79-4e08-81d1-62976c4b5146",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "9c315e83-ffc0-4311-85ff-7e8b1693f88c",
              "parentUUID": "6ae4e214-df79-4e08-81d1-62976c4b5146",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "c8b2752e-f7f5-4eb6-9e7f-ace229b49b55",
              "parentUUID": "6ae4e214-df79-4e08-81d1-62976c4b5146",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "a18aae1a-1fd0-45e4-9ad9-77768cfadb98",
              "parentUUID": "6ae4e214-df79-4e08-81d1-62976c4b5146",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da179b92-1324-4947-ac33-6d8858ab4343",
            "afcc5594-852f-4b2d-9468-08b060d809d3",
            "1da2c1ac-a87b-4814-bd1a-bed39e707f81",
            "e0f7eff7-23c7-4396-9407-149a48b60d36",
            "4df34e24-98a2-4b4d-873e-0614c379bd78",
            "9c315e83-ffc0-4311-85ff-7e8b1693f88c",
            "c8b2752e-f7f5-4eb6-9e7f-ace229b49b55",
            "a18aae1a-1fd0-45e4-9ad9-77768cfadb98"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "000bd1b4-e757-4024-af09-b3a17326f0f5",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "7c0c69fb-c236-410c-b060-a41b95059881",
              "parentUUID": "000bd1b4-e757-4024-af09-b3a17326f0f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "f2675f94-9960-4f9b-a904-5c534e23d51a",
              "parentUUID": "000bd1b4-e757-4024-af09-b3a17326f0f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "8e357725-8506-48dc-9b9f-079cde9296d7",
              "parentUUID": "000bd1b4-e757-4024-af09-b3a17326f0f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "0551d65d-a194-456d-a3e1-f6254b5b5177",
              "parentUUID": "000bd1b4-e757-4024-af09-b3a17326f0f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "57a4d3e4-eb4f-48bc-8d73-d8ab7556c391",
              "parentUUID": "000bd1b4-e757-4024-af09-b3a17326f0f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "675be885-b2ec-4207-a403-4c3e898e75c4",
              "parentUUID": "000bd1b4-e757-4024-af09-b3a17326f0f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "2525daac-261b-4932-84fa-3056e4472ad4",
              "parentUUID": "000bd1b4-e757-4024-af09-b3a17326f0f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "913b376d-0a71-4cee-a097-d8847b2cc574",
              "parentUUID": "000bd1b4-e757-4024-af09-b3a17326f0f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c0c69fb-c236-410c-b060-a41b95059881",
            "f2675f94-9960-4f9b-a904-5c534e23d51a",
            "8e357725-8506-48dc-9b9f-079cde9296d7",
            "0551d65d-a194-456d-a3e1-f6254b5b5177",
            "57a4d3e4-eb4f-48bc-8d73-d8ab7556c391",
            "675be885-b2ec-4207-a403-4c3e898e75c4",
            "2525daac-261b-4932-84fa-3056e4472ad4",
            "913b376d-0a71-4cee-a097-d8847b2cc574"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d29bfc70-5499-45de-9c82-a8a75e2d53ac",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "9ee123ef-475a-4982-a34f-b2d244b1fc3e",
              "parentUUID": "d29bfc70-5499-45de-9c82-a8a75e2d53ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "a2714944-643a-44c0-b675-320b1ec48ccc",
              "parentUUID": "d29bfc70-5499-45de-9c82-a8a75e2d53ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "549ea12c-cad4-4555-98e0-fb63936c9557",
              "parentUUID": "d29bfc70-5499-45de-9c82-a8a75e2d53ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "85f3e792-0ec3-4a14-a078-9744791d6a43",
              "parentUUID": "d29bfc70-5499-45de-9c82-a8a75e2d53ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "e9ffda50-9fd8-4615-930e-07b1cdfb19a8",
              "parentUUID": "d29bfc70-5499-45de-9c82-a8a75e2d53ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "4fcd1759-5804-409d-bd91-f9608b209f64",
              "parentUUID": "d29bfc70-5499-45de-9c82-a8a75e2d53ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "3aa84708-985d-445b-8025-4307c1a0aea4",
              "parentUUID": "d29bfc70-5499-45de-9c82-a8a75e2d53ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "e5986eed-da59-4c4e-acd4-cbe313b4ddf0",
              "parentUUID": "d29bfc70-5499-45de-9c82-a8a75e2d53ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ee123ef-475a-4982-a34f-b2d244b1fc3e",
            "a2714944-643a-44c0-b675-320b1ec48ccc",
            "549ea12c-cad4-4555-98e0-fb63936c9557",
            "85f3e792-0ec3-4a14-a078-9744791d6a43",
            "e9ffda50-9fd8-4615-930e-07b1cdfb19a8",
            "4fcd1759-5804-409d-bd91-f9608b209f64",
            "3aa84708-985d-445b-8025-4307c1a0aea4",
            "e5986eed-da59-4c4e-acd4-cbe313b4ddf0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e097fd87-c3aa-47d7-bdf6-14f2e13d9814",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "1c83f703-efca-4677-bfe5-fcd960fba693",
              "parentUUID": "e097fd87-c3aa-47d7-bdf6-14f2e13d9814",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "3bf073c1-b204-457d-a367-18b8347dda52",
              "parentUUID": "e097fd87-c3aa-47d7-bdf6-14f2e13d9814",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "a105a5d4-ff52-4f78-b6d3-bcf1ef0eb646",
              "parentUUID": "e097fd87-c3aa-47d7-bdf6-14f2e13d9814",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "0b31f9f8-57e6-4288-937d-92d43b9d462e",
              "parentUUID": "e097fd87-c3aa-47d7-bdf6-14f2e13d9814",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "10da4d91-4e1d-4d52-a4cf-ea6f5bdbe9e3",
              "parentUUID": "e097fd87-c3aa-47d7-bdf6-14f2e13d9814",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "25811a31-23e7-4a99-92db-bfd90fa3665b",
              "parentUUID": "e097fd87-c3aa-47d7-bdf6-14f2e13d9814",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "a92a9e6b-1b7d-4f70-97a6-559a3740fad1",
              "parentUUID": "e097fd87-c3aa-47d7-bdf6-14f2e13d9814",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "924afaa6-67bc-4d25-8bc3-8e01649b96a7",
              "parentUUID": "e097fd87-c3aa-47d7-bdf6-14f2e13d9814",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c83f703-efca-4677-bfe5-fcd960fba693",
            "3bf073c1-b204-457d-a367-18b8347dda52",
            "a105a5d4-ff52-4f78-b6d3-bcf1ef0eb646",
            "0b31f9f8-57e6-4288-937d-92d43b9d462e",
            "10da4d91-4e1d-4d52-a4cf-ea6f5bdbe9e3",
            "25811a31-23e7-4a99-92db-bfd90fa3665b",
            "a92a9e6b-1b7d-4f70-97a6-559a3740fad1",
            "924afaa6-67bc-4d25-8bc3-8e01649b96a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a445839c-5762-4d41-aece-1f2843569110",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "0c18a7c2-0cee-4aab-acb4-f97df1e254f4",
              "parentUUID": "a445839c-5762-4d41-aece-1f2843569110",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "e092203f-c102-4b0f-b652-c8b2731ba109",
              "parentUUID": "a445839c-5762-4d41-aece-1f2843569110",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "e5846beb-2511-4843-af99-c03bad403c74",
              "parentUUID": "a445839c-5762-4d41-aece-1f2843569110",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "89a46da5-72c9-4237-816e-562804dcad95",
              "parentUUID": "a445839c-5762-4d41-aece-1f2843569110",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "0f99fe8b-b041-473b-9ede-301e91374f74",
              "parentUUID": "a445839c-5762-4d41-aece-1f2843569110",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "158c5f78-62e9-472c-985b-75955d239c03",
              "parentUUID": "a445839c-5762-4d41-aece-1f2843569110",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "8dc48a0a-9aa3-40b2-9cec-baa7732975a6",
              "parentUUID": "a445839c-5762-4d41-aece-1f2843569110",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "14f8a281-8940-468c-ba8b-3fffc0d4bfe1",
              "parentUUID": "a445839c-5762-4d41-aece-1f2843569110",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c18a7c2-0cee-4aab-acb4-f97df1e254f4",
            "e092203f-c102-4b0f-b652-c8b2731ba109",
            "e5846beb-2511-4843-af99-c03bad403c74",
            "89a46da5-72c9-4237-816e-562804dcad95",
            "0f99fe8b-b041-473b-9ede-301e91374f74",
            "158c5f78-62e9-472c-985b-75955d239c03",
            "8dc48a0a-9aa3-40b2-9cec-baa7732975a6",
            "14f8a281-8940-468c-ba8b-3fffc0d4bfe1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d342547a-404e-47cf-a271-7c3cc5ef057b",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "d2af334e-fbfb-4ab0-8e07-b36133923e04",
              "parentUUID": "d342547a-404e-47cf-a271-7c3cc5ef057b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "4c81c382-ab0b-48b6-b37d-1117e1a6ad05",
              "parentUUID": "d342547a-404e-47cf-a271-7c3cc5ef057b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "a3a84312-9aea-44ad-83c4-d15a9c1b153c",
              "parentUUID": "d342547a-404e-47cf-a271-7c3cc5ef057b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "61adfa92-5c01-4b49-94e2-d4a01e97adcc",
              "parentUUID": "d342547a-404e-47cf-a271-7c3cc5ef057b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "617b1c48-2d75-4bbf-84c3-b6ead06e54d9",
              "parentUUID": "d342547a-404e-47cf-a271-7c3cc5ef057b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "02c42679-5cbb-45a9-a6f6-1b2e8bd844cc",
              "parentUUID": "d342547a-404e-47cf-a271-7c3cc5ef057b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "74576d32-7262-4d16-a88e-32218081dbf1",
              "parentUUID": "d342547a-404e-47cf-a271-7c3cc5ef057b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "c588646c-8547-4f2e-8281-e4accb99deee",
              "parentUUID": "d342547a-404e-47cf-a271-7c3cc5ef057b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2af334e-fbfb-4ab0-8e07-b36133923e04",
            "4c81c382-ab0b-48b6-b37d-1117e1a6ad05",
            "a3a84312-9aea-44ad-83c4-d15a9c1b153c",
            "61adfa92-5c01-4b49-94e2-d4a01e97adcc",
            "617b1c48-2d75-4bbf-84c3-b6ead06e54d9",
            "02c42679-5cbb-45a9-a6f6-1b2e8bd844cc",
            "74576d32-7262-4d16-a88e-32218081dbf1",
            "c588646c-8547-4f2e-8281-e4accb99deee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "49c40146-adf9-4ce9-a000-c71c1540aa6f",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "8a71fefc-8c62-4b54-8cba-a6787976f841",
              "parentUUID": "49c40146-adf9-4ce9-a000-c71c1540aa6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "3e64ef9a-b240-4130-b829-f95a3ce89cc2",
              "parentUUID": "49c40146-adf9-4ce9-a000-c71c1540aa6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "2a96acdb-2dd8-4a1c-88ca-25cea6c1cfb9",
              "parentUUID": "49c40146-adf9-4ce9-a000-c71c1540aa6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "b4de75dd-4429-4efa-89ea-7701f5f0c96c",
              "parentUUID": "49c40146-adf9-4ce9-a000-c71c1540aa6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "0ffdfc47-c69b-4523-9c40-ba06eb973f37",
              "parentUUID": "49c40146-adf9-4ce9-a000-c71c1540aa6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "2a8950d8-d01b-456c-b65a-ed3426e7f2f3",
              "parentUUID": "49c40146-adf9-4ce9-a000-c71c1540aa6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "22347ea0-b4ca-47d4-9d0b-8f7bfb455a35",
              "parentUUID": "49c40146-adf9-4ce9-a000-c71c1540aa6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "b4c69de4-ead4-4ccb-906c-af1019e870ca",
              "parentUUID": "49c40146-adf9-4ce9-a000-c71c1540aa6f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a71fefc-8c62-4b54-8cba-a6787976f841",
            "3e64ef9a-b240-4130-b829-f95a3ce89cc2",
            "2a96acdb-2dd8-4a1c-88ca-25cea6c1cfb9",
            "b4de75dd-4429-4efa-89ea-7701f5f0c96c",
            "0ffdfc47-c69b-4523-9c40-ba06eb973f37",
            "2a8950d8-d01b-456c-b65a-ed3426e7f2f3",
            "22347ea0-b4ca-47d4-9d0b-8f7bfb455a35",
            "b4c69de4-ead4-4ccb-906c-af1019e870ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "627e3207-14fa-4a6a-840d-81eeb1177887",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "3e653c2c-6eec-48d2-a742-6aa42eee177e",
              "parentUUID": "627e3207-14fa-4a6a-840d-81eeb1177887",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "fe55c0ba-1983-4132-8d61-381ed9d486a4",
              "parentUUID": "627e3207-14fa-4a6a-840d-81eeb1177887",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "a77b97ce-d02b-4d1a-9f0e-ffaa2addacce",
              "parentUUID": "627e3207-14fa-4a6a-840d-81eeb1177887",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "0a5508d8-bd06-470e-9164-adb5cd6b58ad",
              "parentUUID": "627e3207-14fa-4a6a-840d-81eeb1177887",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "a3320fea-94f3-4b2b-9737-d0e02abffdf3",
              "parentUUID": "627e3207-14fa-4a6a-840d-81eeb1177887",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "78d311b3-7e8b-4bcd-85f7-70b3f0f2c0e9",
              "parentUUID": "627e3207-14fa-4a6a-840d-81eeb1177887",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "1b053a0c-14f2-4274-89bb-b3e3f07a4c18",
              "parentUUID": "627e3207-14fa-4a6a-840d-81eeb1177887",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "44df1e40-8501-49b4-bcc6-65bb454011bf",
              "parentUUID": "627e3207-14fa-4a6a-840d-81eeb1177887",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e653c2c-6eec-48d2-a742-6aa42eee177e",
            "fe55c0ba-1983-4132-8d61-381ed9d486a4",
            "a77b97ce-d02b-4d1a-9f0e-ffaa2addacce",
            "0a5508d8-bd06-470e-9164-adb5cd6b58ad",
            "a3320fea-94f3-4b2b-9737-d0e02abffdf3",
            "78d311b3-7e8b-4bcd-85f7-70b3f0f2c0e9",
            "1b053a0c-14f2-4274-89bb-b3e3f07a4c18",
            "44df1e40-8501-49b4-bcc6-65bb454011bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ac54460b-1aca-4b75-be9a-24379245f619",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "f03d924c-b963-40d9-bf81-6f218bf60ad4",
              "parentUUID": "ac54460b-1aca-4b75-be9a-24379245f619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "9dbb0cee-1d70-40b0-8e8f-f83cd0708ebb",
              "parentUUID": "ac54460b-1aca-4b75-be9a-24379245f619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "09bdd9b2-04e6-47b2-a528-d9b36abbcc55",
              "parentUUID": "ac54460b-1aca-4b75-be9a-24379245f619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "fc15228a-29cd-4854-8cca-fad1eaf54364",
              "parentUUID": "ac54460b-1aca-4b75-be9a-24379245f619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "6dbbb689-0f3e-4a41-964c-9cedec8babac",
              "parentUUID": "ac54460b-1aca-4b75-be9a-24379245f619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "932fe616-3b04-4bd2-a724-0489d2d0140f",
              "parentUUID": "ac54460b-1aca-4b75-be9a-24379245f619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "6e3088f6-2101-4aa0-b1de-8697e20cbd8f",
              "parentUUID": "ac54460b-1aca-4b75-be9a-24379245f619",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "b07901d7-83bb-47fa-ad71-106937531959",
              "parentUUID": "ac54460b-1aca-4b75-be9a-24379245f619",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f03d924c-b963-40d9-bf81-6f218bf60ad4",
            "9dbb0cee-1d70-40b0-8e8f-f83cd0708ebb",
            "09bdd9b2-04e6-47b2-a528-d9b36abbcc55",
            "fc15228a-29cd-4854-8cca-fad1eaf54364",
            "6dbbb689-0f3e-4a41-964c-9cedec8babac",
            "932fe616-3b04-4bd2-a724-0489d2d0140f",
            "6e3088f6-2101-4aa0-b1de-8697e20cbd8f",
            "b07901d7-83bb-47fa-ad71-106937531959"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c0b23524-0f5f-4885-b9f2-d17500077262",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "4c200785-f2b0-47f5-b292-629ec0d61c53",
              "parentUUID": "c0b23524-0f5f-4885-b9f2-d17500077262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "560c3018-822f-4205-b376-241c838e0c2b",
              "parentUUID": "c0b23524-0f5f-4885-b9f2-d17500077262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "7a851e4b-1d56-4063-afbb-faf16c1b78b1",
              "parentUUID": "c0b23524-0f5f-4885-b9f2-d17500077262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "db1e02de-367d-4705-bbc0-1e7df6837699",
              "parentUUID": "c0b23524-0f5f-4885-b9f2-d17500077262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "e9e6060b-4dc5-4e58-b36e-d33659c2b820",
              "parentUUID": "c0b23524-0f5f-4885-b9f2-d17500077262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "59bc0fec-211b-4805-ade7-f4e84b9877cd",
              "parentUUID": "c0b23524-0f5f-4885-b9f2-d17500077262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "4c4b0a2f-33c3-43b8-a08d-a919b5ec7a0d",
              "parentUUID": "c0b23524-0f5f-4885-b9f2-d17500077262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "a2d0ed2b-2b65-4013-9414-7a70090f67e9",
              "parentUUID": "c0b23524-0f5f-4885-b9f2-d17500077262",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c200785-f2b0-47f5-b292-629ec0d61c53",
            "560c3018-822f-4205-b376-241c838e0c2b",
            "7a851e4b-1d56-4063-afbb-faf16c1b78b1",
            "db1e02de-367d-4705-bbc0-1e7df6837699",
            "e9e6060b-4dc5-4e58-b36e-d33659c2b820",
            "59bc0fec-211b-4805-ade7-f4e84b9877cd",
            "4c4b0a2f-33c3-43b8-a08d-a919b5ec7a0d",
            "a2d0ed2b-2b65-4013-9414-7a70090f67e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "03ba233c-7ff8-420f-b49f-76aaeaf14472",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "479394ef-d0ef-4446-a524-f7505edfd355",
              "parentUUID": "03ba233c-7ff8-420f-b49f-76aaeaf14472",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "cea9867f-18b2-48fc-b45d-e642e09d824f",
              "parentUUID": "03ba233c-7ff8-420f-b49f-76aaeaf14472",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "fabef57e-6fe7-434e-b1cd-347682ed44b5",
              "parentUUID": "03ba233c-7ff8-420f-b49f-76aaeaf14472",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "03918314-77f9-4605-a181-7c8143466fde",
              "parentUUID": "03ba233c-7ff8-420f-b49f-76aaeaf14472",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "15d5fb29-8a60-4fbe-8053-692464e9b959",
              "parentUUID": "03ba233c-7ff8-420f-b49f-76aaeaf14472",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "5e2f0b98-114d-4b07-9aae-2acc7a2b6573",
              "parentUUID": "03ba233c-7ff8-420f-b49f-76aaeaf14472",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "c3b5d93b-b6fd-48d9-952e-4254d6a26e9b",
              "parentUUID": "03ba233c-7ff8-420f-b49f-76aaeaf14472",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "259467eb-8dbf-49ad-8021-ee9805399817",
              "parentUUID": "03ba233c-7ff8-420f-b49f-76aaeaf14472",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "479394ef-d0ef-4446-a524-f7505edfd355",
            "cea9867f-18b2-48fc-b45d-e642e09d824f",
            "fabef57e-6fe7-434e-b1cd-347682ed44b5",
            "03918314-77f9-4605-a181-7c8143466fde",
            "15d5fb29-8a60-4fbe-8053-692464e9b959",
            "5e2f0b98-114d-4b07-9aae-2acc7a2b6573",
            "c3b5d93b-b6fd-48d9-952e-4254d6a26e9b",
            "259467eb-8dbf-49ad-8021-ee9805399817"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2001b03f-3398-489a-ae02-84b0410ded29",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "b4a43749-a6c8-4ea2-b4e2-a7d21e6b0ed2",
              "parentUUID": "2001b03f-3398-489a-ae02-84b0410ded29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "08583c53-5501-41d1-982e-95b8b48ecd7b",
              "parentUUID": "2001b03f-3398-489a-ae02-84b0410ded29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "738d2b0a-b4c4-4e81-a7bc-daaaf3026427",
              "parentUUID": "2001b03f-3398-489a-ae02-84b0410ded29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "c7338293-32f0-46c7-a5f7-8e75406724b7",
              "parentUUID": "2001b03f-3398-489a-ae02-84b0410ded29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "d99f2065-4e5d-4447-a2f1-ce5a6f661962",
              "parentUUID": "2001b03f-3398-489a-ae02-84b0410ded29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "a4a94031-31e5-4776-b3e4-f20346bc33cd",
              "parentUUID": "2001b03f-3398-489a-ae02-84b0410ded29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "4141fbb0-e135-44f1-a09b-c871a6838c12",
              "parentUUID": "2001b03f-3398-489a-ae02-84b0410ded29",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "c2b20168-6a8a-4c76-ac13-a77c0bdccb6a",
              "parentUUID": "2001b03f-3398-489a-ae02-84b0410ded29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4a43749-a6c8-4ea2-b4e2-a7d21e6b0ed2",
            "08583c53-5501-41d1-982e-95b8b48ecd7b",
            "738d2b0a-b4c4-4e81-a7bc-daaaf3026427",
            "c7338293-32f0-46c7-a5f7-8e75406724b7",
            "d99f2065-4e5d-4447-a2f1-ce5a6f661962",
            "a4a94031-31e5-4776-b3e4-f20346bc33cd",
            "4141fbb0-e135-44f1-a09b-c871a6838c12",
            "c2b20168-6a8a-4c76-ac13-a77c0bdccb6a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1633703a-73b6-4416-9a6d-62c17a196782",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "dcedbe36-7e42-4466-bbd3-8ec8c4e50a60",
              "parentUUID": "1633703a-73b6-4416-9a6d-62c17a196782",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "c5c6b6d6-454a-4c86-bfc7-198b9d97de19",
              "parentUUID": "1633703a-73b6-4416-9a6d-62c17a196782",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "85d14dc8-0705-4407-a2ac-2f65c27a35fc",
              "parentUUID": "1633703a-73b6-4416-9a6d-62c17a196782",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "40e4a1c0-8b48-431c-9bcb-0b53310e5df1",
              "parentUUID": "1633703a-73b6-4416-9a6d-62c17a196782",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "805d21fd-38cb-4fc9-b54c-38cdd7279311",
              "parentUUID": "1633703a-73b6-4416-9a6d-62c17a196782",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "6bce795f-256c-4693-9e13-d54014a9c12d",
              "parentUUID": "1633703a-73b6-4416-9a6d-62c17a196782",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "7cf23ec5-b0a2-4e87-a399-4014aa87cd58",
              "parentUUID": "1633703a-73b6-4416-9a6d-62c17a196782",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "29a75229-9177-4364-b81f-590e623f7c70",
              "parentUUID": "1633703a-73b6-4416-9a6d-62c17a196782",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcedbe36-7e42-4466-bbd3-8ec8c4e50a60",
            "c5c6b6d6-454a-4c86-bfc7-198b9d97de19",
            "85d14dc8-0705-4407-a2ac-2f65c27a35fc",
            "40e4a1c0-8b48-431c-9bcb-0b53310e5df1",
            "805d21fd-38cb-4fc9-b54c-38cdd7279311",
            "6bce795f-256c-4693-9e13-d54014a9c12d",
            "7cf23ec5-b0a2-4e87-a399-4014aa87cd58",
            "29a75229-9177-4364-b81f-590e623f7c70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "366f8c45-cfd6-4f1b-9d9e-dc60ce201f9a",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "1c8aa416-7af1-445c-8b21-b717b8138c09",
              "parentUUID": "366f8c45-cfd6-4f1b-9d9e-dc60ce201f9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "92b6e405-cf6d-4814-97fb-6e00cb511709",
              "parentUUID": "366f8c45-cfd6-4f1b-9d9e-dc60ce201f9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "b8bf45ab-2550-4f49-bf95-d2ad9fab1e52",
              "parentUUID": "366f8c45-cfd6-4f1b-9d9e-dc60ce201f9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "d42a0c05-3750-4ef3-a5c7-47db84be3ccc",
              "parentUUID": "366f8c45-cfd6-4f1b-9d9e-dc60ce201f9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "3de674b1-f684-44be-a342-6600e05c62d7",
              "parentUUID": "366f8c45-cfd6-4f1b-9d9e-dc60ce201f9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "cc0b8c84-029e-4b58-ab12-6137d4077627",
              "parentUUID": "366f8c45-cfd6-4f1b-9d9e-dc60ce201f9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "58dd4855-3aa9-4c88-bb79-8e8c46f3cf6d",
              "parentUUID": "366f8c45-cfd6-4f1b-9d9e-dc60ce201f9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "3e212495-f280-4690-8549-cf442b8b77b8",
              "parentUUID": "366f8c45-cfd6-4f1b-9d9e-dc60ce201f9a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c8aa416-7af1-445c-8b21-b717b8138c09",
            "92b6e405-cf6d-4814-97fb-6e00cb511709",
            "b8bf45ab-2550-4f49-bf95-d2ad9fab1e52",
            "d42a0c05-3750-4ef3-a5c7-47db84be3ccc",
            "3de674b1-f684-44be-a342-6600e05c62d7",
            "cc0b8c84-029e-4b58-ab12-6137d4077627",
            "58dd4855-3aa9-4c88-bb79-8e8c46f3cf6d",
            "3e212495-f280-4690-8549-cf442b8b77b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "bc363c4a-eb24-4c0c-be0c-3246348b3013",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "3a75d5cd-fd4f-414a-b207-288578c806c9",
              "parentUUID": "bc363c4a-eb24-4c0c-be0c-3246348b3013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "8d43ffab-7b4f-435b-9f2f-e6f6ba49b8c3",
              "parentUUID": "bc363c4a-eb24-4c0c-be0c-3246348b3013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "15c6fc37-5163-451e-883d-7d0361996f7e",
              "parentUUID": "bc363c4a-eb24-4c0c-be0c-3246348b3013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "851a64c5-b1d4-40cf-9989-d01dbb205c87",
              "parentUUID": "bc363c4a-eb24-4c0c-be0c-3246348b3013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "8e01b4c1-8d28-49a4-870e-7fa8ec4c3b3b",
              "parentUUID": "bc363c4a-eb24-4c0c-be0c-3246348b3013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "68999408-cb63-4d20-a658-45b1bfc9b9b7",
              "parentUUID": "bc363c4a-eb24-4c0c-be0c-3246348b3013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "30b9b8fb-cc91-4a1d-af31-4816fb499a66",
              "parentUUID": "bc363c4a-eb24-4c0c-be0c-3246348b3013",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "ed9b0bfa-5bfc-4348-91c9-329aa3c00cb8",
              "parentUUID": "bc363c4a-eb24-4c0c-be0c-3246348b3013",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a75d5cd-fd4f-414a-b207-288578c806c9",
            "8d43ffab-7b4f-435b-9f2f-e6f6ba49b8c3",
            "15c6fc37-5163-451e-883d-7d0361996f7e",
            "851a64c5-b1d4-40cf-9989-d01dbb205c87",
            "8e01b4c1-8d28-49a4-870e-7fa8ec4c3b3b",
            "68999408-cb63-4d20-a658-45b1bfc9b9b7",
            "30b9b8fb-cc91-4a1d-af31-4816fb499a66",
            "ed9b0bfa-5bfc-4348-91c9-329aa3c00cb8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "92968d20-8465-4c74-b960-3306f7fffd0c",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "bc6c62f0-e28a-42dd-9383-959cae813373",
              "parentUUID": "92968d20-8465-4c74-b960-3306f7fffd0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "37e03dfc-7995-425f-a605-32fba2b6b10d",
              "parentUUID": "92968d20-8465-4c74-b960-3306f7fffd0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "d715ae50-c6af-4bcf-9ffd-dff6f527d116",
              "parentUUID": "92968d20-8465-4c74-b960-3306f7fffd0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "d60a3145-6e1a-48a0-acdc-88fc23b7b694",
              "parentUUID": "92968d20-8465-4c74-b960-3306f7fffd0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "39cb9be0-c6b5-4631-a9c5-395c1bb4a3c4",
              "parentUUID": "92968d20-8465-4c74-b960-3306f7fffd0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "89ae41f9-04dd-411f-bcf6-77ef6b5278e0",
              "parentUUID": "92968d20-8465-4c74-b960-3306f7fffd0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "9efd5c2d-5d9a-449f-a8d4-4a2ff259c4f9",
              "parentUUID": "92968d20-8465-4c74-b960-3306f7fffd0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "4ddb7303-3397-46ef-8683-249844184e5b",
              "parentUUID": "92968d20-8465-4c74-b960-3306f7fffd0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc6c62f0-e28a-42dd-9383-959cae813373",
            "37e03dfc-7995-425f-a605-32fba2b6b10d",
            "d715ae50-c6af-4bcf-9ffd-dff6f527d116",
            "d60a3145-6e1a-48a0-acdc-88fc23b7b694",
            "39cb9be0-c6b5-4631-a9c5-395c1bb4a3c4",
            "89ae41f9-04dd-411f-bcf6-77ef6b5278e0",
            "9efd5c2d-5d9a-449f-a8d4-4a2ff259c4f9",
            "4ddb7303-3397-46ef-8683-249844184e5b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a6af4aae-f1b5-4295-a0cc-261222791e45",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "c686f949-c480-49d0-b530-ddb23ad557f4",
              "parentUUID": "a6af4aae-f1b5-4295-a0cc-261222791e45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "8c4d72a8-641c-4079-9726-9484be04ab80",
              "parentUUID": "a6af4aae-f1b5-4295-a0cc-261222791e45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "46ffe28c-ec08-4fa0-b9d7-0dffe03fa6f3",
              "parentUUID": "a6af4aae-f1b5-4295-a0cc-261222791e45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "392e3894-4a07-4771-8c83-09dafb6f22f9",
              "parentUUID": "a6af4aae-f1b5-4295-a0cc-261222791e45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "04081e03-cea3-4e21-a282-ef221574aa5b",
              "parentUUID": "a6af4aae-f1b5-4295-a0cc-261222791e45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "ce678eef-4486-4655-811f-44b4dc51a369",
              "parentUUID": "a6af4aae-f1b5-4295-a0cc-261222791e45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "b05b18ef-d73e-4449-ac86-e692aa181952",
              "parentUUID": "a6af4aae-f1b5-4295-a0cc-261222791e45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "3b023aef-5eec-4bfd-a5e2-306163408f91",
              "parentUUID": "a6af4aae-f1b5-4295-a0cc-261222791e45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c686f949-c480-49d0-b530-ddb23ad557f4",
            "8c4d72a8-641c-4079-9726-9484be04ab80",
            "46ffe28c-ec08-4fa0-b9d7-0dffe03fa6f3",
            "392e3894-4a07-4771-8c83-09dafb6f22f9",
            "04081e03-cea3-4e21-a282-ef221574aa5b",
            "ce678eef-4486-4655-811f-44b4dc51a369",
            "b05b18ef-d73e-4449-ac86-e692aa181952",
            "3b023aef-5eec-4bfd-a5e2-306163408f91"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "79f24e42-1e92-4ce6-8dd8-4ee0f810f33e",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "8c59a108-a271-404b-928b-c6c355fbbd71",
              "parentUUID": "79f24e42-1e92-4ce6-8dd8-4ee0f810f33e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "33934320-7a02-485c-b1ec-fecfb3e1975e",
              "parentUUID": "79f24e42-1e92-4ce6-8dd8-4ee0f810f33e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "ec3e5df4-f9fa-4beb-838f-0be558e6a342",
              "parentUUID": "79f24e42-1e92-4ce6-8dd8-4ee0f810f33e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "88ca08f0-0261-4bbb-8db4-d8dcb8091262",
              "parentUUID": "79f24e42-1e92-4ce6-8dd8-4ee0f810f33e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "2b45fd08-5804-4137-90d6-2b5d29e8b5e3",
              "parentUUID": "79f24e42-1e92-4ce6-8dd8-4ee0f810f33e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "7e855cff-1573-4e43-9fa3-f2d37c211860",
              "parentUUID": "79f24e42-1e92-4ce6-8dd8-4ee0f810f33e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "80c397a7-942b-490b-a53d-844633c392d0",
              "parentUUID": "79f24e42-1e92-4ce6-8dd8-4ee0f810f33e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "ee6d651b-70a2-40b9-8ebb-04b74bd96a1e",
              "parentUUID": "79f24e42-1e92-4ce6-8dd8-4ee0f810f33e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c59a108-a271-404b-928b-c6c355fbbd71",
            "33934320-7a02-485c-b1ec-fecfb3e1975e",
            "ec3e5df4-f9fa-4beb-838f-0be558e6a342",
            "88ca08f0-0261-4bbb-8db4-d8dcb8091262",
            "2b45fd08-5804-4137-90d6-2b5d29e8b5e3",
            "7e855cff-1573-4e43-9fa3-f2d37c211860",
            "80c397a7-942b-490b-a53d-844633c392d0",
            "ee6d651b-70a2-40b9-8ebb-04b74bd96a1e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "54bb8c98-52c9-48fe-969f-46af58200e03",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "a6564b47-34aa-4d01-ae34-5dc02ea3e94d",
              "parentUUID": "54bb8c98-52c9-48fe-969f-46af58200e03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "398254b8-5ed2-466c-9927-007506db25d5",
              "parentUUID": "54bb8c98-52c9-48fe-969f-46af58200e03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "e5400d8d-48f1-4f87-bdb6-e4ba034e0623",
              "parentUUID": "54bb8c98-52c9-48fe-969f-46af58200e03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "2b425412-ebf5-4aee-bbd0-d1c6316a77cf",
              "parentUUID": "54bb8c98-52c9-48fe-969f-46af58200e03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "70804b6f-138b-44ec-861a-9694765a8ec1",
              "parentUUID": "54bb8c98-52c9-48fe-969f-46af58200e03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "e9a83fe9-2043-4848-b654-e905b77e3a77",
              "parentUUID": "54bb8c98-52c9-48fe-969f-46af58200e03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "e8c86129-f280-4492-828f-0bc8c8cc70a7",
              "parentUUID": "54bb8c98-52c9-48fe-969f-46af58200e03",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "6a9d6699-a5bc-43d7-9a9c-de139c0aaa44",
              "parentUUID": "54bb8c98-52c9-48fe-969f-46af58200e03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6564b47-34aa-4d01-ae34-5dc02ea3e94d",
            "398254b8-5ed2-466c-9927-007506db25d5",
            "e5400d8d-48f1-4f87-bdb6-e4ba034e0623",
            "2b425412-ebf5-4aee-bbd0-d1c6316a77cf",
            "70804b6f-138b-44ec-861a-9694765a8ec1",
            "e9a83fe9-2043-4848-b654-e905b77e3a77",
            "e8c86129-f280-4492-828f-0bc8c8cc70a7",
            "6a9d6699-a5bc-43d7-9a9c-de139c0aaa44"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4e9f1817-5ff4-431b-8bda-951fca1d584c",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "e36e3ac8-0eae-4307-838e-ce7c438bad50",
              "parentUUID": "4e9f1817-5ff4-431b-8bda-951fca1d584c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "cf8af541-1698-47db-9717-ccc0ae2aaf9b",
              "parentUUID": "4e9f1817-5ff4-431b-8bda-951fca1d584c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "f3aa9df9-4d92-4b37-9228-5c97a4d7e842",
              "parentUUID": "4e9f1817-5ff4-431b-8bda-951fca1d584c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "306febd5-1288-4735-8b68-49a9ee1e7793",
              "parentUUID": "4e9f1817-5ff4-431b-8bda-951fca1d584c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "2a19713e-f0cb-40a0-bddf-de5f8cd2214b",
              "parentUUID": "4e9f1817-5ff4-431b-8bda-951fca1d584c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "12f627cd-31bb-4665-a2f8-7e77b3613769",
              "parentUUID": "4e9f1817-5ff4-431b-8bda-951fca1d584c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "c618a57e-ab3f-42c7-b743-f00a9be8eaae",
              "parentUUID": "4e9f1817-5ff4-431b-8bda-951fca1d584c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "1fbbbed1-7b26-43a4-911d-b2f9e680dee4",
              "parentUUID": "4e9f1817-5ff4-431b-8bda-951fca1d584c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e36e3ac8-0eae-4307-838e-ce7c438bad50",
            "cf8af541-1698-47db-9717-ccc0ae2aaf9b",
            "f3aa9df9-4d92-4b37-9228-5c97a4d7e842",
            "306febd5-1288-4735-8b68-49a9ee1e7793",
            "2a19713e-f0cb-40a0-bddf-de5f8cd2214b",
            "12f627cd-31bb-4665-a2f8-7e77b3613769",
            "c618a57e-ab3f-42c7-b743-f00a9be8eaae",
            "1fbbbed1-7b26-43a4-911d-b2f9e680dee4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e3a93faa-76dc-44cf-ac41-499ee2dd1290",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "f220197f-4665-4adb-8a5d-bc044e5d2b05",
              "parentUUID": "e3a93faa-76dc-44cf-ac41-499ee2dd1290",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "0bb0d6a4-9380-49f2-9e9d-f4a75b0b06a1",
              "parentUUID": "e3a93faa-76dc-44cf-ac41-499ee2dd1290",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "4104756f-5e54-4107-8175-86864dded573",
              "parentUUID": "e3a93faa-76dc-44cf-ac41-499ee2dd1290",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "73978a56-983e-4330-b942-0ed050ae0bb9",
              "parentUUID": "e3a93faa-76dc-44cf-ac41-499ee2dd1290",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "38c1d50f-1cf7-4cb9-8b13-f0a622fc7bc5",
              "parentUUID": "e3a93faa-76dc-44cf-ac41-499ee2dd1290",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "45a11323-8c5e-4446-9ccd-ddc87bbbe399",
              "parentUUID": "e3a93faa-76dc-44cf-ac41-499ee2dd1290",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "c4fece73-b3e9-4d28-90e8-366b27c68a7a",
              "parentUUID": "e3a93faa-76dc-44cf-ac41-499ee2dd1290",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "dcde3ec5-f151-4de6-8d23-400f2cd01eeb",
              "parentUUID": "e3a93faa-76dc-44cf-ac41-499ee2dd1290",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f220197f-4665-4adb-8a5d-bc044e5d2b05",
            "0bb0d6a4-9380-49f2-9e9d-f4a75b0b06a1",
            "4104756f-5e54-4107-8175-86864dded573",
            "73978a56-983e-4330-b942-0ed050ae0bb9",
            "38c1d50f-1cf7-4cb9-8b13-f0a622fc7bc5",
            "45a11323-8c5e-4446-9ccd-ddc87bbbe399",
            "c4fece73-b3e9-4d28-90e8-366b27c68a7a",
            "dcde3ec5-f151-4de6-8d23-400f2cd01eeb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "be417fff-9ab5-4139-a05a-13650baf4c21",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "9e28da0d-3b6c-4a5d-9251-a3fd6f02754f",
              "parentUUID": "be417fff-9ab5-4139-a05a-13650baf4c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "827f36b3-bfce-41d3-809f-a1e68d642cfd",
              "parentUUID": "be417fff-9ab5-4139-a05a-13650baf4c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "699371c1-8699-442c-9032-8cc38b298730",
              "parentUUID": "be417fff-9ab5-4139-a05a-13650baf4c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "6b65549f-1b80-46d5-9ccf-3ce45fa06be6",
              "parentUUID": "be417fff-9ab5-4139-a05a-13650baf4c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "085e3535-9b84-4992-8688-56fedd148e48",
              "parentUUID": "be417fff-9ab5-4139-a05a-13650baf4c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "5c571549-8814-423f-95ac-e57e43cf2c02",
              "parentUUID": "be417fff-9ab5-4139-a05a-13650baf4c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "1785ab81-db34-45e4-942c-57c528769bcc",
              "parentUUID": "be417fff-9ab5-4139-a05a-13650baf4c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "0253a324-37f7-48c3-8d19-70488a9f3988",
              "parentUUID": "be417fff-9ab5-4139-a05a-13650baf4c21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e28da0d-3b6c-4a5d-9251-a3fd6f02754f",
            "827f36b3-bfce-41d3-809f-a1e68d642cfd",
            "699371c1-8699-442c-9032-8cc38b298730",
            "6b65549f-1b80-46d5-9ccf-3ce45fa06be6",
            "085e3535-9b84-4992-8688-56fedd148e48",
            "5c571549-8814-423f-95ac-e57e43cf2c02",
            "1785ab81-db34-45e4-942c-57c528769bcc",
            "0253a324-37f7-48c3-8d19-70488a9f3988"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7648185a-31e7-4303-aca0-4af4590188ff",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "313674d9-6df2-436a-8822-16f609384036",
              "parentUUID": "7648185a-31e7-4303-aca0-4af4590188ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "af9a6862-5ef5-4204-96d3-02c0dbf7dd79",
              "parentUUID": "7648185a-31e7-4303-aca0-4af4590188ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "3e6d1786-e6e5-4c24-bb82-18e2a9f61fed",
              "parentUUID": "7648185a-31e7-4303-aca0-4af4590188ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "603ccadf-ff27-4e4e-ba76-058ba76100f4",
              "parentUUID": "7648185a-31e7-4303-aca0-4af4590188ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "63999af9-3c14-45fd-a576-acd1d58bacd1",
              "parentUUID": "7648185a-31e7-4303-aca0-4af4590188ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "8c799ec0-f4b8-463b-9dbb-f50c7772036b",
              "parentUUID": "7648185a-31e7-4303-aca0-4af4590188ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "643a3943-480c-4055-91f5-bf60d376d40a",
              "parentUUID": "7648185a-31e7-4303-aca0-4af4590188ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "9990370a-b406-44cc-a732-d26c2143661a",
              "parentUUID": "7648185a-31e7-4303-aca0-4af4590188ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "313674d9-6df2-436a-8822-16f609384036",
            "af9a6862-5ef5-4204-96d3-02c0dbf7dd79",
            "3e6d1786-e6e5-4c24-bb82-18e2a9f61fed",
            "603ccadf-ff27-4e4e-ba76-058ba76100f4",
            "63999af9-3c14-45fd-a576-acd1d58bacd1",
            "8c799ec0-f4b8-463b-9dbb-f50c7772036b",
            "643a3943-480c-4055-91f5-bf60d376d40a",
            "9990370a-b406-44cc-a732-d26c2143661a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9c6de09b-f4a1-4690-8f05-a18d00026a7c",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "909194b1-96c8-4b8b-906e-f236506f9b84",
              "parentUUID": "9c6de09b-f4a1-4690-8f05-a18d00026a7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "4971ec19-cb9c-428a-8bc4-4c0e5d0133d1",
              "parentUUID": "9c6de09b-f4a1-4690-8f05-a18d00026a7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "5ac33d81-c882-4590-a3fe-8915e4f30f03",
              "parentUUID": "9c6de09b-f4a1-4690-8f05-a18d00026a7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "062485e7-8ba6-4557-9f8a-f64abeb74eca",
              "parentUUID": "9c6de09b-f4a1-4690-8f05-a18d00026a7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "7e64552c-7d8b-4303-aa6b-ba2c3d4e96b9",
              "parentUUID": "9c6de09b-f4a1-4690-8f05-a18d00026a7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "119a7c06-ed06-423d-a044-b9c5f76a488e",
              "parentUUID": "9c6de09b-f4a1-4690-8f05-a18d00026a7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "7c9a79e0-2a63-4657-b8c6-311969a73981",
              "parentUUID": "9c6de09b-f4a1-4690-8f05-a18d00026a7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "af6b78fb-9a24-4ab3-9b7e-e4804ad72f64",
              "parentUUID": "9c6de09b-f4a1-4690-8f05-a18d00026a7c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "909194b1-96c8-4b8b-906e-f236506f9b84",
            "4971ec19-cb9c-428a-8bc4-4c0e5d0133d1",
            "5ac33d81-c882-4590-a3fe-8915e4f30f03",
            "062485e7-8ba6-4557-9f8a-f64abeb74eca",
            "7e64552c-7d8b-4303-aa6b-ba2c3d4e96b9",
            "119a7c06-ed06-423d-a044-b9c5f76a488e",
            "7c9a79e0-2a63-4657-b8c6-311969a73981",
            "af6b78fb-9a24-4ab3-9b7e-e4804ad72f64"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7fcc3db0-3f95-4f70-9de7-67c506a0a585",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "b3c9436c-c31e-4928-a1db-c3acd0431859",
              "parentUUID": "7fcc3db0-3f95-4f70-9de7-67c506a0a585",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "1c65962b-7119-4df1-b7a0-08cf6ab72e81",
              "parentUUID": "7fcc3db0-3f95-4f70-9de7-67c506a0a585",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "d16b63fa-5f6f-42de-ba98-cc21ec24b07a",
              "parentUUID": "7fcc3db0-3f95-4f70-9de7-67c506a0a585",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "d8993037-5de0-4b74-92fe-aa40ee0e3f50",
              "parentUUID": "7fcc3db0-3f95-4f70-9de7-67c506a0a585",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "4b153803-4599-421a-a666-c318cde73b24",
              "parentUUID": "7fcc3db0-3f95-4f70-9de7-67c506a0a585",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "1361a698-27e9-4636-bc82-e6e9ccf8fb1c",
              "parentUUID": "7fcc3db0-3f95-4f70-9de7-67c506a0a585",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "baa5299a-e2d8-4b37-86af-c3e64664d919",
              "parentUUID": "7fcc3db0-3f95-4f70-9de7-67c506a0a585",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "ca0de213-ec80-4291-a477-6f84904428b8",
              "parentUUID": "7fcc3db0-3f95-4f70-9de7-67c506a0a585",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b3c9436c-c31e-4928-a1db-c3acd0431859",
            "1c65962b-7119-4df1-b7a0-08cf6ab72e81",
            "d16b63fa-5f6f-42de-ba98-cc21ec24b07a",
            "d8993037-5de0-4b74-92fe-aa40ee0e3f50",
            "4b153803-4599-421a-a666-c318cde73b24",
            "1361a698-27e9-4636-bc82-e6e9ccf8fb1c",
            "baa5299a-e2d8-4b37-86af-c3e64664d919",
            "ca0de213-ec80-4291-a477-6f84904428b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2d515bdb-84de-4a32-99ee-df91efb12ddc",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "56be85bf-8806-4073-8b8c-4a561f510a03",
              "parentUUID": "2d515bdb-84de-4a32-99ee-df91efb12ddc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "ab9814b5-ea2b-4ec4-99d8-7bc5257f6dba",
              "parentUUID": "2d515bdb-84de-4a32-99ee-df91efb12ddc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "c2e34864-f9be-4372-ae46-4d418d3b8b2c",
              "parentUUID": "2d515bdb-84de-4a32-99ee-df91efb12ddc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "bfa9b0f4-fad3-4ab4-9f98-72826d8b15fc",
              "parentUUID": "2d515bdb-84de-4a32-99ee-df91efb12ddc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "ccc1da4f-ddc5-4935-900a-e46e4b2a5d55",
              "parentUUID": "2d515bdb-84de-4a32-99ee-df91efb12ddc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "67ec3530-8296-48bc-92fe-2d22999a70e4",
              "parentUUID": "2d515bdb-84de-4a32-99ee-df91efb12ddc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "f48dab70-6455-4492-a52f-354b0c4e95e5",
              "parentUUID": "2d515bdb-84de-4a32-99ee-df91efb12ddc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "5665adb3-0255-41f2-8f05-3e6ba78a8ff9",
              "parentUUID": "2d515bdb-84de-4a32-99ee-df91efb12ddc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56be85bf-8806-4073-8b8c-4a561f510a03",
            "ab9814b5-ea2b-4ec4-99d8-7bc5257f6dba",
            "c2e34864-f9be-4372-ae46-4d418d3b8b2c",
            "bfa9b0f4-fad3-4ab4-9f98-72826d8b15fc",
            "ccc1da4f-ddc5-4935-900a-e46e4b2a5d55",
            "67ec3530-8296-48bc-92fe-2d22999a70e4",
            "f48dab70-6455-4492-a52f-354b0c4e95e5",
            "5665adb3-0255-41f2-8f05-3e6ba78a8ff9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "27f808b7-061e-4573-8cb2-475bcd34cdf5",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "e1285685-d77f-4d5d-9310-5efe7004633b",
              "parentUUID": "27f808b7-061e-4573-8cb2-475bcd34cdf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "88483f54-271c-47a1-bb24-874fa94a0832",
              "parentUUID": "27f808b7-061e-4573-8cb2-475bcd34cdf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "79fc7dbe-812e-46e4-8908-c622e7cc4ce9",
              "parentUUID": "27f808b7-061e-4573-8cb2-475bcd34cdf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "1862219d-a041-4d15-96eb-02e20876d7c5",
              "parentUUID": "27f808b7-061e-4573-8cb2-475bcd34cdf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "a15c5cf2-9095-4b4c-a783-ada96fa2d45c",
              "parentUUID": "27f808b7-061e-4573-8cb2-475bcd34cdf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "b927d430-8eb0-4512-8230-5eead0bde9b9",
              "parentUUID": "27f808b7-061e-4573-8cb2-475bcd34cdf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "e9a944d8-cd53-452d-b69d-a0972223f019",
              "parentUUID": "27f808b7-061e-4573-8cb2-475bcd34cdf5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "c9c0be8a-3a8f-47e0-aaaf-99e781b54b9e",
              "parentUUID": "27f808b7-061e-4573-8cb2-475bcd34cdf5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1285685-d77f-4d5d-9310-5efe7004633b",
            "88483f54-271c-47a1-bb24-874fa94a0832",
            "79fc7dbe-812e-46e4-8908-c622e7cc4ce9",
            "1862219d-a041-4d15-96eb-02e20876d7c5",
            "a15c5cf2-9095-4b4c-a783-ada96fa2d45c",
            "b927d430-8eb0-4512-8230-5eead0bde9b9",
            "e9a944d8-cd53-452d-b69d-a0972223f019",
            "c9c0be8a-3a8f-47e0-aaaf-99e781b54b9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5f5b5d34-d82d-4a52-a16b-2e46789bcd90",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "c80e7b90-4dd5-4780-8088-9064dc91f85e",
              "parentUUID": "5f5b5d34-d82d-4a52-a16b-2e46789bcd90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "f9b54fa4-264f-4096-9004-8fe556db3961",
              "parentUUID": "5f5b5d34-d82d-4a52-a16b-2e46789bcd90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "b86b8a3b-54ff-4a59-8f50-bf542d15707b",
              "parentUUID": "5f5b5d34-d82d-4a52-a16b-2e46789bcd90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "7bb837fe-405b-41bf-a3a2-a8c839c1be70",
              "parentUUID": "5f5b5d34-d82d-4a52-a16b-2e46789bcd90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "4b0d0382-c2d0-4c5e-a765-84782b23f37a",
              "parentUUID": "5f5b5d34-d82d-4a52-a16b-2e46789bcd90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "6470bb58-0058-4197-80ff-716ede900059",
              "parentUUID": "5f5b5d34-d82d-4a52-a16b-2e46789bcd90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "a53f165d-b012-48f3-85a9-4c9159688651",
              "parentUUID": "5f5b5d34-d82d-4a52-a16b-2e46789bcd90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "7002af9b-8426-48bb-a4ec-ea3453e80f05",
              "parentUUID": "5f5b5d34-d82d-4a52-a16b-2e46789bcd90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c80e7b90-4dd5-4780-8088-9064dc91f85e",
            "f9b54fa4-264f-4096-9004-8fe556db3961",
            "b86b8a3b-54ff-4a59-8f50-bf542d15707b",
            "7bb837fe-405b-41bf-a3a2-a8c839c1be70",
            "4b0d0382-c2d0-4c5e-a765-84782b23f37a",
            "6470bb58-0058-4197-80ff-716ede900059",
            "a53f165d-b012-48f3-85a9-4c9159688651",
            "7002af9b-8426-48bb-a4ec-ea3453e80f05"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4ca58c5f-ea0c-42ed-9aca-b30b3729cde3",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "896f8d98-0314-4e4b-9883-e6402030447c",
              "parentUUID": "4ca58c5f-ea0c-42ed-9aca-b30b3729cde3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "98467d0d-74f4-49c7-b9b9-e3d9f8db604f",
              "parentUUID": "4ca58c5f-ea0c-42ed-9aca-b30b3729cde3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "f154af36-e946-4e8b-95de-929f9d977ada",
              "parentUUID": "4ca58c5f-ea0c-42ed-9aca-b30b3729cde3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "af86abae-6fc1-4979-9c09-7b4bd0ec7967",
              "parentUUID": "4ca58c5f-ea0c-42ed-9aca-b30b3729cde3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "2e2e327a-2ab3-4507-9779-8a32082dd245",
              "parentUUID": "4ca58c5f-ea0c-42ed-9aca-b30b3729cde3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "a05e086f-5e00-4c01-9a85-7cc902708e06",
              "parentUUID": "4ca58c5f-ea0c-42ed-9aca-b30b3729cde3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "21a18349-6891-423e-b750-43a126cc56c5",
              "parentUUID": "4ca58c5f-ea0c-42ed-9aca-b30b3729cde3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "347aeb36-045d-498d-ada6-6d9a42794483",
              "parentUUID": "4ca58c5f-ea0c-42ed-9aca-b30b3729cde3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "896f8d98-0314-4e4b-9883-e6402030447c",
            "98467d0d-74f4-49c7-b9b9-e3d9f8db604f",
            "f154af36-e946-4e8b-95de-929f9d977ada",
            "af86abae-6fc1-4979-9c09-7b4bd0ec7967",
            "2e2e327a-2ab3-4507-9779-8a32082dd245",
            "a05e086f-5e00-4c01-9a85-7cc902708e06",
            "21a18349-6891-423e-b750-43a126cc56c5",
            "347aeb36-045d-498d-ada6-6d9a42794483"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "0f647215-cba8-479b-8b6c-10cb49d0998e",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "d1b45e7d-ab26-4c35-9514-9c0ec79eb79f",
              "parentUUID": "0f647215-cba8-479b-8b6c-10cb49d0998e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "a3e064cb-33c6-497e-9dc8-d26d159b9a07",
              "parentUUID": "0f647215-cba8-479b-8b6c-10cb49d0998e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "0779380b-5b70-4da9-8bee-6f2a4bf10927",
              "parentUUID": "0f647215-cba8-479b-8b6c-10cb49d0998e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "75384a9f-62a6-4907-8437-275102fac4d2",
              "parentUUID": "0f647215-cba8-479b-8b6c-10cb49d0998e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "1a67ed86-bd83-4226-9586-34cfab73183c",
              "parentUUID": "0f647215-cba8-479b-8b6c-10cb49d0998e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "8718752e-5546-4e98-9e89-2e5b98645352",
              "parentUUID": "0f647215-cba8-479b-8b6c-10cb49d0998e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "6d1a3e20-fe9f-474c-ad00-f24711cc1b81",
              "parentUUID": "0f647215-cba8-479b-8b6c-10cb49d0998e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "08cb4534-3a38-4c1c-bc1d-390a3a123721",
              "parentUUID": "0f647215-cba8-479b-8b6c-10cb49d0998e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d1b45e7d-ab26-4c35-9514-9c0ec79eb79f",
            "a3e064cb-33c6-497e-9dc8-d26d159b9a07",
            "0779380b-5b70-4da9-8bee-6f2a4bf10927",
            "75384a9f-62a6-4907-8437-275102fac4d2",
            "1a67ed86-bd83-4226-9586-34cfab73183c",
            "8718752e-5546-4e98-9e89-2e5b98645352",
            "6d1a3e20-fe9f-474c-ad00-f24711cc1b81",
            "08cb4534-3a38-4c1c-bc1d-390a3a123721"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4925cad6-331b-4d0d-96a0-293a9179e193",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "b45ac65e-c603-4ccd-9a93-152185e1fbe4",
              "parentUUID": "4925cad6-331b-4d0d-96a0-293a9179e193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "26a0c640-8820-494c-afdc-8cff54f49d91",
              "parentUUID": "4925cad6-331b-4d0d-96a0-293a9179e193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "96d8622c-5999-4e4f-ad82-a50576eb468d",
              "parentUUID": "4925cad6-331b-4d0d-96a0-293a9179e193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "e1a664e8-6200-4958-b638-231826b117e4",
              "parentUUID": "4925cad6-331b-4d0d-96a0-293a9179e193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "ec243be9-819e-403a-9b2d-fb112a25996e",
              "parentUUID": "4925cad6-331b-4d0d-96a0-293a9179e193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "6eafc536-4afb-4568-ba0c-ff93e2cf1380",
              "parentUUID": "4925cad6-331b-4d0d-96a0-293a9179e193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "0a04bed2-1e7b-41ed-a87a-121d194796cf",
              "parentUUID": "4925cad6-331b-4d0d-96a0-293a9179e193",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "456bc1df-a032-4257-9c93-e30bad9b5cb6",
              "parentUUID": "4925cad6-331b-4d0d-96a0-293a9179e193",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b45ac65e-c603-4ccd-9a93-152185e1fbe4",
            "26a0c640-8820-494c-afdc-8cff54f49d91",
            "96d8622c-5999-4e4f-ad82-a50576eb468d",
            "e1a664e8-6200-4958-b638-231826b117e4",
            "ec243be9-819e-403a-9b2d-fb112a25996e",
            "6eafc536-4afb-4568-ba0c-ff93e2cf1380",
            "0a04bed2-1e7b-41ed-a87a-121d194796cf",
            "456bc1df-a032-4257-9c93-e30bad9b5cb6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f1d22fbf-f07e-4f41-a999-4a3bdcf6bcab",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "99629a6c-bbed-4e2d-873b-ce055163e6bb",
              "parentUUID": "f1d22fbf-f07e-4f41-a999-4a3bdcf6bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "11042823-fc26-4e48-80d0-4b58718e1b9a",
              "parentUUID": "f1d22fbf-f07e-4f41-a999-4a3bdcf6bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "90014974-f39a-4e89-adaf-ea11eaf42859",
              "parentUUID": "f1d22fbf-f07e-4f41-a999-4a3bdcf6bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "c2b09661-1b17-47f7-933b-e923dae32d73",
              "parentUUID": "f1d22fbf-f07e-4f41-a999-4a3bdcf6bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "9bb19c24-01f2-4fd6-b0e9-6d2db5424ed2",
              "parentUUID": "f1d22fbf-f07e-4f41-a999-4a3bdcf6bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "dde91586-3c39-4667-9162-c94491e80309",
              "parentUUID": "f1d22fbf-f07e-4f41-a999-4a3bdcf6bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "9b2a9cc5-bd30-4256-b74d-8bfd2b487f1a",
              "parentUUID": "f1d22fbf-f07e-4f41-a999-4a3bdcf6bcab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "4edf40fa-0d2a-4163-bae5-48fdcc089023",
              "parentUUID": "f1d22fbf-f07e-4f41-a999-4a3bdcf6bcab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99629a6c-bbed-4e2d-873b-ce055163e6bb",
            "11042823-fc26-4e48-80d0-4b58718e1b9a",
            "90014974-f39a-4e89-adaf-ea11eaf42859",
            "c2b09661-1b17-47f7-933b-e923dae32d73",
            "9bb19c24-01f2-4fd6-b0e9-6d2db5424ed2",
            "dde91586-3c39-4667-9162-c94491e80309",
            "9b2a9cc5-bd30-4256-b74d-8bfd2b487f1a",
            "4edf40fa-0d2a-4163-bae5-48fdcc089023"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "86766bc0-6a2c-4a2f-8d69-c03555d86d1c",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "33d28a74-bc00-4d3d-ac87-df0c2f39bb13",
              "parentUUID": "86766bc0-6a2c-4a2f-8d69-c03555d86d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "d0f0b818-05e2-4f17-9913-545c8642154e",
              "parentUUID": "86766bc0-6a2c-4a2f-8d69-c03555d86d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "7a862b0e-fb99-442b-b9d6-5ab481df9989",
              "parentUUID": "86766bc0-6a2c-4a2f-8d69-c03555d86d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "17020739-afa3-4615-9ca6-cbabb8159854",
              "parentUUID": "86766bc0-6a2c-4a2f-8d69-c03555d86d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "cc227c5c-a0ac-4695-934d-3e0e27830793",
              "parentUUID": "86766bc0-6a2c-4a2f-8d69-c03555d86d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "6675c1c3-b593-48c7-852f-9689a277d576",
              "parentUUID": "86766bc0-6a2c-4a2f-8d69-c03555d86d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "b81b0462-62e6-4f17-91f0-9845bf5185d8",
              "parentUUID": "86766bc0-6a2c-4a2f-8d69-c03555d86d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "46e5f057-41f4-459f-bf18-6417b6796e4b",
              "parentUUID": "86766bc0-6a2c-4a2f-8d69-c03555d86d1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33d28a74-bc00-4d3d-ac87-df0c2f39bb13",
            "d0f0b818-05e2-4f17-9913-545c8642154e",
            "7a862b0e-fb99-442b-b9d6-5ab481df9989",
            "17020739-afa3-4615-9ca6-cbabb8159854",
            "cc227c5c-a0ac-4695-934d-3e0e27830793",
            "6675c1c3-b593-48c7-852f-9689a277d576",
            "b81b0462-62e6-4f17-91f0-9845bf5185d8",
            "46e5f057-41f4-459f-bf18-6417b6796e4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "97521e23-8427-4c80-82e6-f244611aabfb",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "917d0f83-d0d1-4bf6-b477-c9cdaea05c55",
              "parentUUID": "97521e23-8427-4c80-82e6-f244611aabfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "24ef1281-80a1-4beb-ae84-195fe81b24bf",
              "parentUUID": "97521e23-8427-4c80-82e6-f244611aabfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "6aee7fec-1b06-4f6b-8262-542ed34f0570",
              "parentUUID": "97521e23-8427-4c80-82e6-f244611aabfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "aec674e2-d6b4-4deb-a05b-c2f5ecce0a89",
              "parentUUID": "97521e23-8427-4c80-82e6-f244611aabfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "a3871f22-d05a-48b9-9ade-66403ef8b92b",
              "parentUUID": "97521e23-8427-4c80-82e6-f244611aabfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "f4742a4b-2583-4de5-838a-e55ff2a20a75",
              "parentUUID": "97521e23-8427-4c80-82e6-f244611aabfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "e15282e6-397f-4c4a-8180-f6df2e857d54",
              "parentUUID": "97521e23-8427-4c80-82e6-f244611aabfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "4882873d-7e62-4477-9b83-27464fa4203d",
              "parentUUID": "97521e23-8427-4c80-82e6-f244611aabfb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "917d0f83-d0d1-4bf6-b477-c9cdaea05c55",
            "24ef1281-80a1-4beb-ae84-195fe81b24bf",
            "6aee7fec-1b06-4f6b-8262-542ed34f0570",
            "aec674e2-d6b4-4deb-a05b-c2f5ecce0a89",
            "a3871f22-d05a-48b9-9ade-66403ef8b92b",
            "f4742a4b-2583-4de5-838a-e55ff2a20a75",
            "e15282e6-397f-4c4a-8180-f6df2e857d54",
            "4882873d-7e62-4477-9b83-27464fa4203d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "22557ac3-dd99-40dc-bb1f-1eb78d98c6d9",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "4e75ae90-8a25-4b26-a98c-290d7ae34876",
              "parentUUID": "22557ac3-dd99-40dc-bb1f-1eb78d98c6d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "5684c422-1553-49a3-a693-1e32fc4ad44a",
              "parentUUID": "22557ac3-dd99-40dc-bb1f-1eb78d98c6d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "2f9b0df1-a599-4522-9dbd-04927f2732ea",
              "parentUUID": "22557ac3-dd99-40dc-bb1f-1eb78d98c6d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "26c8fc53-ff21-45d0-9fb9-1cfc08afbd83",
              "parentUUID": "22557ac3-dd99-40dc-bb1f-1eb78d98c6d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "786cf8fa-03f7-45b4-849c-5deb1723d1af",
              "parentUUID": "22557ac3-dd99-40dc-bb1f-1eb78d98c6d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "ca9fe937-11f0-456e-8193-9f9c65cd9819",
              "parentUUID": "22557ac3-dd99-40dc-bb1f-1eb78d98c6d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "6b9883ec-c1ba-4fef-b793-d87884398739",
              "parentUUID": "22557ac3-dd99-40dc-bb1f-1eb78d98c6d9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "e8ee0b22-e2f8-40aa-a4a8-ee5879bcfa8d",
              "parentUUID": "22557ac3-dd99-40dc-bb1f-1eb78d98c6d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e75ae90-8a25-4b26-a98c-290d7ae34876",
            "5684c422-1553-49a3-a693-1e32fc4ad44a",
            "2f9b0df1-a599-4522-9dbd-04927f2732ea",
            "26c8fc53-ff21-45d0-9fb9-1cfc08afbd83",
            "786cf8fa-03f7-45b4-849c-5deb1723d1af",
            "ca9fe937-11f0-456e-8193-9f9c65cd9819",
            "6b9883ec-c1ba-4fef-b793-d87884398739",
            "e8ee0b22-e2f8-40aa-a4a8-ee5879bcfa8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "12d3256a-e923-4b40-a383-571b5b88255d",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "8a65b519-84f4-413f-a730-23bff5ac0597",
              "parentUUID": "12d3256a-e923-4b40-a383-571b5b88255d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "7989ab44-7b33-4fbc-b2ed-0dea14c335c5",
              "parentUUID": "12d3256a-e923-4b40-a383-571b5b88255d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "46a23259-1a80-4af4-aa39-be4e9ef972d4",
              "parentUUID": "12d3256a-e923-4b40-a383-571b5b88255d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "9c57ffe4-b7a0-4374-817c-b6065d9cabbc",
              "parentUUID": "12d3256a-e923-4b40-a383-571b5b88255d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "129cd310-2e60-49f1-b86d-148408040bfa",
              "parentUUID": "12d3256a-e923-4b40-a383-571b5b88255d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "42cce706-383e-4ee4-bc4c-79132dad055e",
              "parentUUID": "12d3256a-e923-4b40-a383-571b5b88255d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "d2774f62-23ca-43f3-a653-d116f3b194eb",
              "parentUUID": "12d3256a-e923-4b40-a383-571b5b88255d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "53fe6f54-e819-458b-80ca-c2a44af378aa",
              "parentUUID": "12d3256a-e923-4b40-a383-571b5b88255d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a65b519-84f4-413f-a730-23bff5ac0597",
            "7989ab44-7b33-4fbc-b2ed-0dea14c335c5",
            "46a23259-1a80-4af4-aa39-be4e9ef972d4",
            "9c57ffe4-b7a0-4374-817c-b6065d9cabbc",
            "129cd310-2e60-49f1-b86d-148408040bfa",
            "42cce706-383e-4ee4-bc4c-79132dad055e",
            "d2774f62-23ca-43f3-a653-d116f3b194eb",
            "53fe6f54-e819-458b-80ca-c2a44af378aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c245fdd2-6a78-41e1-b1c9-9434b5bb7ea2",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "418a2dd8-72ad-4996-854f-e1df45f9828c",
              "parentUUID": "c245fdd2-6a78-41e1-b1c9-9434b5bb7ea2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "b039ec2e-e735-41e8-9989-b272871237ce",
              "parentUUID": "c245fdd2-6a78-41e1-b1c9-9434b5bb7ea2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "d658390a-9f24-42c5-aced-cf28b18c62a3",
              "parentUUID": "c245fdd2-6a78-41e1-b1c9-9434b5bb7ea2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "be8548a0-f9c7-4306-be08-eb75f400abdd",
              "parentUUID": "c245fdd2-6a78-41e1-b1c9-9434b5bb7ea2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "489d0a67-3498-451b-a8e1-ba7c4af9ba51",
              "parentUUID": "c245fdd2-6a78-41e1-b1c9-9434b5bb7ea2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "51ed1abe-2626-4dfa-997e-28b2c927bb0b",
              "parentUUID": "c245fdd2-6a78-41e1-b1c9-9434b5bb7ea2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "b3703a6d-08fb-44aa-bd33-3b78be6d2d9c",
              "parentUUID": "c245fdd2-6a78-41e1-b1c9-9434b5bb7ea2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "1f2b504c-ac8b-42cc-85f8-62bc93a3333c",
              "parentUUID": "c245fdd2-6a78-41e1-b1c9-9434b5bb7ea2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "418a2dd8-72ad-4996-854f-e1df45f9828c",
            "b039ec2e-e735-41e8-9989-b272871237ce",
            "d658390a-9f24-42c5-aced-cf28b18c62a3",
            "be8548a0-f9c7-4306-be08-eb75f400abdd",
            "489d0a67-3498-451b-a8e1-ba7c4af9ba51",
            "51ed1abe-2626-4dfa-997e-28b2c927bb0b",
            "b3703a6d-08fb-44aa-bd33-3b78be6d2d9c",
            "1f2b504c-ac8b-42cc-85f8-62bc93a3333c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ba554289-eb28-47b4-94cd-20aa02921b14",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "1280ff97-a75b-4768-86d7-1efdce988106",
              "parentUUID": "ba554289-eb28-47b4-94cd-20aa02921b14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "030350eb-482b-48a6-93fe-22a79db83f8d",
              "parentUUID": "ba554289-eb28-47b4-94cd-20aa02921b14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "1919a583-2fe6-45d6-a954-013edefe0e4a",
              "parentUUID": "ba554289-eb28-47b4-94cd-20aa02921b14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "7b5149e7-9e5a-4029-843b-1b35de8cf142",
              "parentUUID": "ba554289-eb28-47b4-94cd-20aa02921b14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "697b159f-496f-46f9-9162-9655b4f5a594",
              "parentUUID": "ba554289-eb28-47b4-94cd-20aa02921b14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "a7503cc6-ba5a-473f-8b8c-0ac91ec650d0",
              "parentUUID": "ba554289-eb28-47b4-94cd-20aa02921b14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "0a11b048-85c1-4ba4-856e-e258f0c241ff",
              "parentUUID": "ba554289-eb28-47b4-94cd-20aa02921b14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "ccaaad02-2670-4dbc-83ee-557ef2b35571",
              "parentUUID": "ba554289-eb28-47b4-94cd-20aa02921b14",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1280ff97-a75b-4768-86d7-1efdce988106",
            "030350eb-482b-48a6-93fe-22a79db83f8d",
            "1919a583-2fe6-45d6-a954-013edefe0e4a",
            "7b5149e7-9e5a-4029-843b-1b35de8cf142",
            "697b159f-496f-46f9-9162-9655b4f5a594",
            "a7503cc6-ba5a-473f-8b8c-0ac91ec650d0",
            "0a11b048-85c1-4ba4-856e-e258f0c241ff",
            "ccaaad02-2670-4dbc-83ee-557ef2b35571"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e98f4a32-f273-4078-baf5-023773afdcc3",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "b7247ef3-bc8b-4139-9d47-055bb8ae3fb8",
              "parentUUID": "e98f4a32-f273-4078-baf5-023773afdcc3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "a936e89f-c973-40ed-9ccf-472dcfbc117d",
              "parentUUID": "e98f4a32-f273-4078-baf5-023773afdcc3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "dfdfcb4f-c29f-4de5-be1b-612440be2766",
              "parentUUID": "e98f4a32-f273-4078-baf5-023773afdcc3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "0cb1890c-947a-4cea-ae64-cd005fec42eb",
              "parentUUID": "e98f4a32-f273-4078-baf5-023773afdcc3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "4390e74e-25e6-4943-85b8-a4dade3c210b",
              "parentUUID": "e98f4a32-f273-4078-baf5-023773afdcc3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "118fc03e-3c13-43d8-81cf-634ef5a3d24b",
              "parentUUID": "e98f4a32-f273-4078-baf5-023773afdcc3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "8cbee0e9-0afb-44eb-a175-bf64436307c8",
              "parentUUID": "e98f4a32-f273-4078-baf5-023773afdcc3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "67706098-6361-47bd-a7f7-1d07094bcb56",
              "parentUUID": "e98f4a32-f273-4078-baf5-023773afdcc3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7247ef3-bc8b-4139-9d47-055bb8ae3fb8",
            "a936e89f-c973-40ed-9ccf-472dcfbc117d",
            "dfdfcb4f-c29f-4de5-be1b-612440be2766",
            "0cb1890c-947a-4cea-ae64-cd005fec42eb",
            "4390e74e-25e6-4943-85b8-a4dade3c210b",
            "118fc03e-3c13-43d8-81cf-634ef5a3d24b",
            "8cbee0e9-0afb-44eb-a175-bf64436307c8",
            "67706098-6361-47bd-a7f7-1d07094bcb56"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5dafba61-c1f5-4b88-aaf2-db315fd04ef4",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "fcc9d16a-2339-428b-ae69-5e678e255db9",
              "parentUUID": "5dafba61-c1f5-4b88-aaf2-db315fd04ef4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "f9073ceb-55c1-472e-b143-704d0f239bd7",
              "parentUUID": "5dafba61-c1f5-4b88-aaf2-db315fd04ef4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "2b048ec4-bf18-4ff1-83d0-aeec8bd457bc",
              "parentUUID": "5dafba61-c1f5-4b88-aaf2-db315fd04ef4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "03bb29af-e352-46a7-94e2-6afc3eb8d745",
              "parentUUID": "5dafba61-c1f5-4b88-aaf2-db315fd04ef4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "852c77b1-37e1-489b-9c2a-2c5634000d7f",
              "parentUUID": "5dafba61-c1f5-4b88-aaf2-db315fd04ef4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "023bbf9a-18f0-43d7-9e1a-d872978b552c",
              "parentUUID": "5dafba61-c1f5-4b88-aaf2-db315fd04ef4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "a5208dcd-458b-4db4-802f-a8551222ad79",
              "parentUUID": "5dafba61-c1f5-4b88-aaf2-db315fd04ef4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "d8d5006e-b85e-4d3a-aecf-30e2174c35a3",
              "parentUUID": "5dafba61-c1f5-4b88-aaf2-db315fd04ef4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fcc9d16a-2339-428b-ae69-5e678e255db9",
            "f9073ceb-55c1-472e-b143-704d0f239bd7",
            "2b048ec4-bf18-4ff1-83d0-aeec8bd457bc",
            "03bb29af-e352-46a7-94e2-6afc3eb8d745",
            "852c77b1-37e1-489b-9c2a-2c5634000d7f",
            "023bbf9a-18f0-43d7-9e1a-d872978b552c",
            "a5208dcd-458b-4db4-802f-a8551222ad79",
            "d8d5006e-b85e-4d3a-aecf-30e2174c35a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "cc407456-9b35-4408-9b38-97418affab45",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "434cbe58-d86b-41c8-a863-7e5362ff4f3f",
              "parentUUID": "cc407456-9b35-4408-9b38-97418affab45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "c3b23f71-c960-4103-917c-80cfbebc87da",
              "parentUUID": "cc407456-9b35-4408-9b38-97418affab45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "052bcf6c-ebe1-4258-9289-cc4684b12669",
              "parentUUID": "cc407456-9b35-4408-9b38-97418affab45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "a4fb4465-a322-4338-985c-4b2b0848a9db",
              "parentUUID": "cc407456-9b35-4408-9b38-97418affab45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "738b5f78-b789-40ec-bbe7-9cf251b3c335",
              "parentUUID": "cc407456-9b35-4408-9b38-97418affab45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "8e8a5b39-b8da-4164-9235-9db517e524f4",
              "parentUUID": "cc407456-9b35-4408-9b38-97418affab45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "3c0a4e03-5386-4ab0-bc19-b216accb263b",
              "parentUUID": "cc407456-9b35-4408-9b38-97418affab45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "63252126-19d1-4474-8be7-21b9fefb067b",
              "parentUUID": "cc407456-9b35-4408-9b38-97418affab45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "434cbe58-d86b-41c8-a863-7e5362ff4f3f",
            "c3b23f71-c960-4103-917c-80cfbebc87da",
            "052bcf6c-ebe1-4258-9289-cc4684b12669",
            "a4fb4465-a322-4338-985c-4b2b0848a9db",
            "738b5f78-b789-40ec-bbe7-9cf251b3c335",
            "8e8a5b39-b8da-4164-9235-9db517e524f4",
            "3c0a4e03-5386-4ab0-bc19-b216accb263b",
            "63252126-19d1-4474-8be7-21b9fefb067b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d262771c-99f4-4018-84a2-ca785d65bd7c",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "3bf3684c-e283-47c6-907c-5563d1240ed4",
              "parentUUID": "d262771c-99f4-4018-84a2-ca785d65bd7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "4f42ecb5-01c3-419e-a11c-220e7fd15afd",
              "parentUUID": "d262771c-99f4-4018-84a2-ca785d65bd7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "4db002c7-5029-4c34-8bf5-60aedbd51edc",
              "parentUUID": "d262771c-99f4-4018-84a2-ca785d65bd7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "66a98c33-234c-49f2-9290-c5746cdc4370",
              "parentUUID": "d262771c-99f4-4018-84a2-ca785d65bd7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "0043615e-a911-4bf3-95c5-71a8769e3e7d",
              "parentUUID": "d262771c-99f4-4018-84a2-ca785d65bd7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "20a1317a-b5ce-4b79-8657-bee40f413751",
              "parentUUID": "d262771c-99f4-4018-84a2-ca785d65bd7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "ffa12bb0-af16-4a7f-985b-202f758f5ac9",
              "parentUUID": "d262771c-99f4-4018-84a2-ca785d65bd7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "458f89d8-c5b7-49b3-997d-318ae055256e",
              "parentUUID": "d262771c-99f4-4018-84a2-ca785d65bd7c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3bf3684c-e283-47c6-907c-5563d1240ed4",
            "4f42ecb5-01c3-419e-a11c-220e7fd15afd",
            "4db002c7-5029-4c34-8bf5-60aedbd51edc",
            "66a98c33-234c-49f2-9290-c5746cdc4370",
            "0043615e-a911-4bf3-95c5-71a8769e3e7d",
            "20a1317a-b5ce-4b79-8657-bee40f413751",
            "ffa12bb0-af16-4a7f-985b-202f758f5ac9",
            "458f89d8-c5b7-49b3-997d-318ae055256e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9f2fb80e-b76a-4912-84d0-47a2de841216",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "1fca968d-ed96-4988-bb83-0c710baf5926",
              "parentUUID": "9f2fb80e-b76a-4912-84d0-47a2de841216",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "aa64c24d-3993-486a-aae3-19e8f786075c",
              "parentUUID": "9f2fb80e-b76a-4912-84d0-47a2de841216",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "4aac6d99-030d-45f2-b97c-e53cbdff1762",
              "parentUUID": "9f2fb80e-b76a-4912-84d0-47a2de841216",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "053ed581-dc8a-4c7f-aa52-7ff6443994ac",
              "parentUUID": "9f2fb80e-b76a-4912-84d0-47a2de841216",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "1d9d6120-8359-4fff-af55-269eb1269fec",
              "parentUUID": "9f2fb80e-b76a-4912-84d0-47a2de841216",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "4106bd7e-577b-4e1a-a026-105dfb93a863",
              "parentUUID": "9f2fb80e-b76a-4912-84d0-47a2de841216",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "dbe10788-4fd0-437f-add2-02eab6b26188",
              "parentUUID": "9f2fb80e-b76a-4912-84d0-47a2de841216",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "e2d116e0-acad-4e61-b174-62300ee48a15",
              "parentUUID": "9f2fb80e-b76a-4912-84d0-47a2de841216",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1fca968d-ed96-4988-bb83-0c710baf5926",
            "aa64c24d-3993-486a-aae3-19e8f786075c",
            "4aac6d99-030d-45f2-b97c-e53cbdff1762",
            "053ed581-dc8a-4c7f-aa52-7ff6443994ac",
            "1d9d6120-8359-4fff-af55-269eb1269fec",
            "4106bd7e-577b-4e1a-a026-105dfb93a863",
            "dbe10788-4fd0-437f-add2-02eab6b26188",
            "e2d116e0-acad-4e61-b174-62300ee48a15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "05f28cd7-d07d-4f5a-aa86-289499d5d349",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "c9e0b46b-235d-48ed-871b-47656b428444",
              "parentUUID": "05f28cd7-d07d-4f5a-aa86-289499d5d349",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "2fa340ce-ef27-41a3-a72e-4f934119f657",
              "parentUUID": "05f28cd7-d07d-4f5a-aa86-289499d5d349",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "c87f8685-1355-47f5-afe4-f399d204dd05",
              "parentUUID": "05f28cd7-d07d-4f5a-aa86-289499d5d349",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "bcf9addb-a15c-44cf-9e8c-0f8729b244ba",
              "parentUUID": "05f28cd7-d07d-4f5a-aa86-289499d5d349",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "c3cc65d1-e9dd-492f-a40d-b50537b9113d",
              "parentUUID": "05f28cd7-d07d-4f5a-aa86-289499d5d349",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "7827d031-3247-4d92-8581-3b4275ffb9a1",
              "parentUUID": "05f28cd7-d07d-4f5a-aa86-289499d5d349",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "78de0cde-6cd4-4164-9b51-7d17f498e42c",
              "parentUUID": "05f28cd7-d07d-4f5a-aa86-289499d5d349",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "61bdce01-0c30-48fa-ae93-60ef7966d84b",
              "parentUUID": "05f28cd7-d07d-4f5a-aa86-289499d5d349",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9e0b46b-235d-48ed-871b-47656b428444",
            "2fa340ce-ef27-41a3-a72e-4f934119f657",
            "c87f8685-1355-47f5-afe4-f399d204dd05",
            "bcf9addb-a15c-44cf-9e8c-0f8729b244ba",
            "c3cc65d1-e9dd-492f-a40d-b50537b9113d",
            "7827d031-3247-4d92-8581-3b4275ffb9a1",
            "78de0cde-6cd4-4164-9b51-7d17f498e42c",
            "61bdce01-0c30-48fa-ae93-60ef7966d84b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "36f863d9-792b-4389-9482-0b69a9f2b144",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "71490ebf-86e4-4dcd-9b4d-f12864dc47b5",
              "parentUUID": "36f863d9-792b-4389-9482-0b69a9f2b144",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "687659b4-1727-4957-99bc-3f58ceb6350b",
              "parentUUID": "36f863d9-792b-4389-9482-0b69a9f2b144",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "c5966248-7bd5-4a91-a1b3-d86222276942",
              "parentUUID": "36f863d9-792b-4389-9482-0b69a9f2b144",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "90946c02-ab09-4ed1-ab66-ea2cea01f1de",
              "parentUUID": "36f863d9-792b-4389-9482-0b69a9f2b144",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "e0a4673e-6065-483d-aaef-5605d10b2a6a",
              "parentUUID": "36f863d9-792b-4389-9482-0b69a9f2b144",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "56278af6-d535-46d3-95f1-e121b85d5ffe",
              "parentUUID": "36f863d9-792b-4389-9482-0b69a9f2b144",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "7e8a5acd-c88a-4bcf-b11d-74bf074763b4",
              "parentUUID": "36f863d9-792b-4389-9482-0b69a9f2b144",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "9c043283-35f8-4fe2-9a58-721f1a94a03e",
              "parentUUID": "36f863d9-792b-4389-9482-0b69a9f2b144",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71490ebf-86e4-4dcd-9b4d-f12864dc47b5",
            "687659b4-1727-4957-99bc-3f58ceb6350b",
            "c5966248-7bd5-4a91-a1b3-d86222276942",
            "90946c02-ab09-4ed1-ab66-ea2cea01f1de",
            "e0a4673e-6065-483d-aaef-5605d10b2a6a",
            "56278af6-d535-46d3-95f1-e121b85d5ffe",
            "7e8a5acd-c88a-4bcf-b11d-74bf074763b4",
            "9c043283-35f8-4fe2-9a58-721f1a94a03e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5df67b1c-73fd-45e0-b811-2c3e8712e68e",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "b1ac6cc1-f30b-4198-a598-3683a495fe46",
              "parentUUID": "5df67b1c-73fd-45e0-b811-2c3e8712e68e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "b7bed8c9-fb8e-4287-9207-43ebf7c728c9",
              "parentUUID": "5df67b1c-73fd-45e0-b811-2c3e8712e68e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "4e699d15-0bd3-4c1e-8698-0e892bbc5fee",
              "parentUUID": "5df67b1c-73fd-45e0-b811-2c3e8712e68e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "ba73abdc-a304-423d-baec-149b79802fa4",
              "parentUUID": "5df67b1c-73fd-45e0-b811-2c3e8712e68e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "fd06e70a-b4b9-44ac-ae02-5e0f546eb403",
              "parentUUID": "5df67b1c-73fd-45e0-b811-2c3e8712e68e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "4d3f7111-4bce-46a5-87a8-8b707d5dd78e",
              "parentUUID": "5df67b1c-73fd-45e0-b811-2c3e8712e68e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "bd53ba61-7f05-41cc-a2c2-706c68dd0b1e",
              "parentUUID": "5df67b1c-73fd-45e0-b811-2c3e8712e68e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "b54d888e-3a9f-4b27-a792-6002fad27e04",
              "parentUUID": "5df67b1c-73fd-45e0-b811-2c3e8712e68e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1ac6cc1-f30b-4198-a598-3683a495fe46",
            "b7bed8c9-fb8e-4287-9207-43ebf7c728c9",
            "4e699d15-0bd3-4c1e-8698-0e892bbc5fee",
            "ba73abdc-a304-423d-baec-149b79802fa4",
            "fd06e70a-b4b9-44ac-ae02-5e0f546eb403",
            "4d3f7111-4bce-46a5-87a8-8b707d5dd78e",
            "bd53ba61-7f05-41cc-a2c2-706c68dd0b1e",
            "b54d888e-3a9f-4b27-a792-6002fad27e04"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "655b2771-d1ff-49c6-ad2b-2776c26c3456",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "2c65eaea-a224-4332-92d2-489b08480f8d",
              "parentUUID": "655b2771-d1ff-49c6-ad2b-2776c26c3456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "8db3b748-9c7b-44b5-a0e2-1085a6fd2700",
              "parentUUID": "655b2771-d1ff-49c6-ad2b-2776c26c3456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "ccf7ddc1-79f1-47b6-9082-cffe6a569f87",
              "parentUUID": "655b2771-d1ff-49c6-ad2b-2776c26c3456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "3d7e1c92-e510-4a45-9b87-b0617fa87c01",
              "parentUUID": "655b2771-d1ff-49c6-ad2b-2776c26c3456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "8817cf79-0868-4398-b68c-b9c4a5b2536d",
              "parentUUID": "655b2771-d1ff-49c6-ad2b-2776c26c3456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "4d407e66-9e8c-4874-89e0-7b09ba3d777a",
              "parentUUID": "655b2771-d1ff-49c6-ad2b-2776c26c3456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "9c3e503c-5564-4e8d-961b-db578e06fe84",
              "parentUUID": "655b2771-d1ff-49c6-ad2b-2776c26c3456",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "abe5c63b-a565-4de2-a154-be6f29b2ba15",
              "parentUUID": "655b2771-d1ff-49c6-ad2b-2776c26c3456",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c65eaea-a224-4332-92d2-489b08480f8d",
            "8db3b748-9c7b-44b5-a0e2-1085a6fd2700",
            "ccf7ddc1-79f1-47b6-9082-cffe6a569f87",
            "3d7e1c92-e510-4a45-9b87-b0617fa87c01",
            "8817cf79-0868-4398-b68c-b9c4a5b2536d",
            "4d407e66-9e8c-4874-89e0-7b09ba3d777a",
            "9c3e503c-5564-4e8d-961b-db578e06fe84",
            "abe5c63b-a565-4de2-a154-be6f29b2ba15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "552eb28b-ebbe-4440-9318-dd0c1a650b8f",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "8615a3e9-2424-4a7f-a627-61a81dffffb0",
              "parentUUID": "552eb28b-ebbe-4440-9318-dd0c1a650b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "f5ef9938-c05c-432c-b530-e5118a72949a",
              "parentUUID": "552eb28b-ebbe-4440-9318-dd0c1a650b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "5790dace-67f4-48a6-8765-a0178cbf6071",
              "parentUUID": "552eb28b-ebbe-4440-9318-dd0c1a650b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "070488a6-f6c9-4d7a-80ef-aad8599b06ad",
              "parentUUID": "552eb28b-ebbe-4440-9318-dd0c1a650b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "aef61752-369b-4b2d-a284-214ba965af50",
              "parentUUID": "552eb28b-ebbe-4440-9318-dd0c1a650b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "3507fbee-92d6-42ab-b087-99b009afdcfe",
              "parentUUID": "552eb28b-ebbe-4440-9318-dd0c1a650b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "3a3f7ac3-3b7b-49eb-8079-3a77863f69c5",
              "parentUUID": "552eb28b-ebbe-4440-9318-dd0c1a650b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "0af7dbc3-067d-47f3-b013-7321d7627e83",
              "parentUUID": "552eb28b-ebbe-4440-9318-dd0c1a650b8f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8615a3e9-2424-4a7f-a627-61a81dffffb0",
            "f5ef9938-c05c-432c-b530-e5118a72949a",
            "5790dace-67f4-48a6-8765-a0178cbf6071",
            "070488a6-f6c9-4d7a-80ef-aad8599b06ad",
            "aef61752-369b-4b2d-a284-214ba965af50",
            "3507fbee-92d6-42ab-b087-99b009afdcfe",
            "3a3f7ac3-3b7b-49eb-8079-3a77863f69c5",
            "0af7dbc3-067d-47f3-b013-7321d7627e83"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "de58115b-d3c9-4f4f-bc77-97e2e5b9d44c",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "026e61ae-0489-481e-8ea9-c9e7d7642f05",
              "parentUUID": "de58115b-d3c9-4f4f-bc77-97e2e5b9d44c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "bdd8d1cb-bfb2-4d29-a898-021ccbc5d887",
              "parentUUID": "de58115b-d3c9-4f4f-bc77-97e2e5b9d44c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "6cfa4c1e-a8c3-4f2b-962d-9f6aebe70d63",
              "parentUUID": "de58115b-d3c9-4f4f-bc77-97e2e5b9d44c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "08508bae-8300-429a-8faf-f9f0b4b8fb98",
              "parentUUID": "de58115b-d3c9-4f4f-bc77-97e2e5b9d44c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "ef7752ef-3491-4495-9d1a-adf53c3a531a",
              "parentUUID": "de58115b-d3c9-4f4f-bc77-97e2e5b9d44c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "51980c4d-e25d-4e3d-bbc9-3b8de83dbf7d",
              "parentUUID": "de58115b-d3c9-4f4f-bc77-97e2e5b9d44c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "f6001efa-6fd1-49f8-9c6d-14a51744deff",
              "parentUUID": "de58115b-d3c9-4f4f-bc77-97e2e5b9d44c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "f795fed8-96c4-4d14-8e8a-dc82222e6d7a",
              "parentUUID": "de58115b-d3c9-4f4f-bc77-97e2e5b9d44c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "026e61ae-0489-481e-8ea9-c9e7d7642f05",
            "bdd8d1cb-bfb2-4d29-a898-021ccbc5d887",
            "6cfa4c1e-a8c3-4f2b-962d-9f6aebe70d63",
            "08508bae-8300-429a-8faf-f9f0b4b8fb98",
            "ef7752ef-3491-4495-9d1a-adf53c3a531a",
            "51980c4d-e25d-4e3d-bbc9-3b8de83dbf7d",
            "f6001efa-6fd1-49f8-9c6d-14a51744deff",
            "f795fed8-96c4-4d14-8e8a-dc82222e6d7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c8e9110a-e7af-4a02-95ee-4c04139c8680",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "febb8d5c-d011-4fa4-bacb-bb080ea88535",
              "parentUUID": "c8e9110a-e7af-4a02-95ee-4c04139c8680",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "191e8cc0-7f14-4a40-8d99-c1e8f504b6d2",
              "parentUUID": "c8e9110a-e7af-4a02-95ee-4c04139c8680",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "35920955-f8f1-4972-8c76-f4b92ac3fe58",
              "parentUUID": "c8e9110a-e7af-4a02-95ee-4c04139c8680",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "84381a5d-fe92-4e3a-a5f8-2468bf0c14f6",
              "parentUUID": "c8e9110a-e7af-4a02-95ee-4c04139c8680",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "b8c84d21-be7c-4169-bbbf-96edf920a768",
              "parentUUID": "c8e9110a-e7af-4a02-95ee-4c04139c8680",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "b3f656a6-c107-44d5-a7e0-cf4d7a972b42",
              "parentUUID": "c8e9110a-e7af-4a02-95ee-4c04139c8680",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "5f65a137-8367-4c00-aa6a-c666bb5d772c",
              "parentUUID": "c8e9110a-e7af-4a02-95ee-4c04139c8680",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "56c9fa1c-9688-477e-b842-e1785b6e13c6",
              "parentUUID": "c8e9110a-e7af-4a02-95ee-4c04139c8680",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "febb8d5c-d011-4fa4-bacb-bb080ea88535",
            "191e8cc0-7f14-4a40-8d99-c1e8f504b6d2",
            "35920955-f8f1-4972-8c76-f4b92ac3fe58",
            "84381a5d-fe92-4e3a-a5f8-2468bf0c14f6",
            "b8c84d21-be7c-4169-bbbf-96edf920a768",
            "b3f656a6-c107-44d5-a7e0-cf4d7a972b42",
            "5f65a137-8367-4c00-aa6a-c666bb5d772c",
            "56c9fa1c-9688-477e-b842-e1785b6e13c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "92d625ce-5e19-49bd-8349-b4a69000e86a",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "32700e66-3d23-4f34-8d06-1771b7349c56",
              "parentUUID": "92d625ce-5e19-49bd-8349-b4a69000e86a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "06829926-008d-443f-a97e-f957c63d896e",
              "parentUUID": "92d625ce-5e19-49bd-8349-b4a69000e86a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "e5f82a56-b93a-479d-9921-7be55f3c3f96",
              "parentUUID": "92d625ce-5e19-49bd-8349-b4a69000e86a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "2fb6919b-7d62-4e00-9864-9d5c6fd619da",
              "parentUUID": "92d625ce-5e19-49bd-8349-b4a69000e86a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "8d69d2b0-b52d-4896-8b90-32f62adaf920",
              "parentUUID": "92d625ce-5e19-49bd-8349-b4a69000e86a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "c13b9d87-8e62-4494-8f2d-47a422bf477f",
              "parentUUID": "92d625ce-5e19-49bd-8349-b4a69000e86a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "a378bf7f-b7e2-469f-8a25-a948576bd6f6",
              "parentUUID": "92d625ce-5e19-49bd-8349-b4a69000e86a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "5f47af02-067b-41e2-a785-201f59cf7ec6",
              "parentUUID": "92d625ce-5e19-49bd-8349-b4a69000e86a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32700e66-3d23-4f34-8d06-1771b7349c56",
            "06829926-008d-443f-a97e-f957c63d896e",
            "e5f82a56-b93a-479d-9921-7be55f3c3f96",
            "2fb6919b-7d62-4e00-9864-9d5c6fd619da",
            "8d69d2b0-b52d-4896-8b90-32f62adaf920",
            "c13b9d87-8e62-4494-8f2d-47a422bf477f",
            "a378bf7f-b7e2-469f-8a25-a948576bd6f6",
            "5f47af02-067b-41e2-a785-201f59cf7ec6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4b5d2fc6-51d5-4a8c-8a32-c0af6d1023bb",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "d56b6f74-bfac-4a60-a633-7495fa5c608c",
              "parentUUID": "4b5d2fc6-51d5-4a8c-8a32-c0af6d1023bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "c6483904-7f00-4f81-86d1-50fac7271b98",
              "parentUUID": "4b5d2fc6-51d5-4a8c-8a32-c0af6d1023bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "efb45b9a-4307-4956-8a33-75ccb34a7316",
              "parentUUID": "4b5d2fc6-51d5-4a8c-8a32-c0af6d1023bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "d729859a-7f47-4c96-8e12-6bddb91363d5",
              "parentUUID": "4b5d2fc6-51d5-4a8c-8a32-c0af6d1023bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "515a5b0e-dfe0-4472-9e94-89a6deedd7d9",
              "parentUUID": "4b5d2fc6-51d5-4a8c-8a32-c0af6d1023bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "fb4d7823-f065-4843-89f1-f8d38d22ce7a",
              "parentUUID": "4b5d2fc6-51d5-4a8c-8a32-c0af6d1023bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "28bef53a-3608-430d-a557-c73fef1dcc10",
              "parentUUID": "4b5d2fc6-51d5-4a8c-8a32-c0af6d1023bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "16fa6324-2c21-4e75-93a1-1044fed9bb02",
              "parentUUID": "4b5d2fc6-51d5-4a8c-8a32-c0af6d1023bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d56b6f74-bfac-4a60-a633-7495fa5c608c",
            "c6483904-7f00-4f81-86d1-50fac7271b98",
            "efb45b9a-4307-4956-8a33-75ccb34a7316",
            "d729859a-7f47-4c96-8e12-6bddb91363d5",
            "515a5b0e-dfe0-4472-9e94-89a6deedd7d9",
            "fb4d7823-f065-4843-89f1-f8d38d22ce7a",
            "28bef53a-3608-430d-a557-c73fef1dcc10",
            "16fa6324-2c21-4e75-93a1-1044fed9bb02"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9b1c38f4-4e3e-40b9-acbf-423cd98a2341",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "43070c5d-c7a1-4b49-aed5-a5eda3abf389",
              "parentUUID": "9b1c38f4-4e3e-40b9-acbf-423cd98a2341",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "bbbca182-52fd-4323-8bcd-2f931c150b44",
              "parentUUID": "9b1c38f4-4e3e-40b9-acbf-423cd98a2341",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "cf64aea9-384b-4a54-9629-5fb4a983e907",
              "parentUUID": "9b1c38f4-4e3e-40b9-acbf-423cd98a2341",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "379f314a-ae15-4a14-9350-071375fe58d4",
              "parentUUID": "9b1c38f4-4e3e-40b9-acbf-423cd98a2341",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "7a58482c-5c2b-4622-935f-ccdada45b6a5",
              "parentUUID": "9b1c38f4-4e3e-40b9-acbf-423cd98a2341",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "b1f0be45-5cd9-467f-bff8-32c8b2913795",
              "parentUUID": "9b1c38f4-4e3e-40b9-acbf-423cd98a2341",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "d8d93e75-31c7-406c-b9f5-c3ddb2b2c465",
              "parentUUID": "9b1c38f4-4e3e-40b9-acbf-423cd98a2341",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "3bc073df-2bf1-4da7-aebf-1d94e7aac899",
              "parentUUID": "9b1c38f4-4e3e-40b9-acbf-423cd98a2341",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "43070c5d-c7a1-4b49-aed5-a5eda3abf389",
            "bbbca182-52fd-4323-8bcd-2f931c150b44",
            "cf64aea9-384b-4a54-9629-5fb4a983e907",
            "379f314a-ae15-4a14-9350-071375fe58d4",
            "7a58482c-5c2b-4622-935f-ccdada45b6a5",
            "b1f0be45-5cd9-467f-bff8-32c8b2913795",
            "d8d93e75-31c7-406c-b9f5-c3ddb2b2c465",
            "3bc073df-2bf1-4da7-aebf-1d94e7aac899"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b1d61b42-ca89-4f1b-a038-32be69d57c68",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "c951f98a-b24d-490c-9db3-c4f4f9bb4290",
              "parentUUID": "b1d61b42-ca89-4f1b-a038-32be69d57c68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "0be481de-fdd4-4504-82fa-f2253c5ea7f0",
              "parentUUID": "b1d61b42-ca89-4f1b-a038-32be69d57c68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "218781c5-9c24-48de-b822-afef03c35b70",
              "parentUUID": "b1d61b42-ca89-4f1b-a038-32be69d57c68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "b0c185c0-ded2-420f-a473-15a63ff048f2",
              "parentUUID": "b1d61b42-ca89-4f1b-a038-32be69d57c68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "0722169d-2e43-4eba-9372-3bd8ef21bc5b",
              "parentUUID": "b1d61b42-ca89-4f1b-a038-32be69d57c68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "68431926-c0f7-487e-a3d6-7b42474e97ea",
              "parentUUID": "b1d61b42-ca89-4f1b-a038-32be69d57c68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "bd4d0308-08ee-4ff1-8714-2e21954d401e",
              "parentUUID": "b1d61b42-ca89-4f1b-a038-32be69d57c68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "dc7034d6-b9d9-4190-bde3-3a1c63d01d62",
              "parentUUID": "b1d61b42-ca89-4f1b-a038-32be69d57c68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c951f98a-b24d-490c-9db3-c4f4f9bb4290",
            "0be481de-fdd4-4504-82fa-f2253c5ea7f0",
            "218781c5-9c24-48de-b822-afef03c35b70",
            "b0c185c0-ded2-420f-a473-15a63ff048f2",
            "0722169d-2e43-4eba-9372-3bd8ef21bc5b",
            "68431926-c0f7-487e-a3d6-7b42474e97ea",
            "bd4d0308-08ee-4ff1-8714-2e21954d401e",
            "dc7034d6-b9d9-4190-bde3-3a1c63d01d62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "72301e83-c7e3-44c7-9ce8-79ddb98cb718",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "4da4f4f0-0ced-4aca-bcc1-3c3cc1cc580d",
              "parentUUID": "72301e83-c7e3-44c7-9ce8-79ddb98cb718",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "47f7ad57-178b-4906-ba5e-6109144eb7c4",
              "parentUUID": "72301e83-c7e3-44c7-9ce8-79ddb98cb718",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "2b715041-acec-4105-8ae0-cc396dafab94",
              "parentUUID": "72301e83-c7e3-44c7-9ce8-79ddb98cb718",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "77552b9a-034f-4545-8276-d48e7121f1ac",
              "parentUUID": "72301e83-c7e3-44c7-9ce8-79ddb98cb718",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "2c0da383-87a8-4b5f-b4b8-63183528ba4d",
              "parentUUID": "72301e83-c7e3-44c7-9ce8-79ddb98cb718",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "f0e95a41-2249-4ef8-93c7-93c5080c3ef7",
              "parentUUID": "72301e83-c7e3-44c7-9ce8-79ddb98cb718",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "173d3a90-1fe2-40a9-8a89-145285d7eca8",
              "parentUUID": "72301e83-c7e3-44c7-9ce8-79ddb98cb718",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "12e21db3-ae9c-4299-adfe-36ede7491dea",
              "parentUUID": "72301e83-c7e3-44c7-9ce8-79ddb98cb718",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4da4f4f0-0ced-4aca-bcc1-3c3cc1cc580d",
            "47f7ad57-178b-4906-ba5e-6109144eb7c4",
            "2b715041-acec-4105-8ae0-cc396dafab94",
            "77552b9a-034f-4545-8276-d48e7121f1ac",
            "2c0da383-87a8-4b5f-b4b8-63183528ba4d",
            "f0e95a41-2249-4ef8-93c7-93c5080c3ef7",
            "173d3a90-1fe2-40a9-8a89-145285d7eca8",
            "12e21db3-ae9c-4299-adfe-36ede7491dea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "0a37ab46-740e-4ffc-8022-6ad2d3e99ca7",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "d27f1407-62b2-4828-a8a8-39eb5aaa0520",
              "parentUUID": "0a37ab46-740e-4ffc-8022-6ad2d3e99ca7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "a21873d2-b1ef-49a0-820a-0f7dea126950",
              "parentUUID": "0a37ab46-740e-4ffc-8022-6ad2d3e99ca7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "b4b56073-d527-47a1-86de-ad78d19a27d3",
              "parentUUID": "0a37ab46-740e-4ffc-8022-6ad2d3e99ca7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "636acf2f-051c-4550-a226-c2b687c7d478",
              "parentUUID": "0a37ab46-740e-4ffc-8022-6ad2d3e99ca7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "c675d0c8-2f0d-42ac-8915-d75b98cbf92f",
              "parentUUID": "0a37ab46-740e-4ffc-8022-6ad2d3e99ca7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "89c0eeb1-4ab2-4bbf-89fd-93baf541d2b1",
              "parentUUID": "0a37ab46-740e-4ffc-8022-6ad2d3e99ca7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "fe5c14ac-9f30-447f-9cd0-1d6fd4528f40",
              "parentUUID": "0a37ab46-740e-4ffc-8022-6ad2d3e99ca7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "8e973d1a-7480-430c-8f5e-e26d78973496",
              "parentUUID": "0a37ab46-740e-4ffc-8022-6ad2d3e99ca7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d27f1407-62b2-4828-a8a8-39eb5aaa0520",
            "a21873d2-b1ef-49a0-820a-0f7dea126950",
            "b4b56073-d527-47a1-86de-ad78d19a27d3",
            "636acf2f-051c-4550-a226-c2b687c7d478",
            "c675d0c8-2f0d-42ac-8915-d75b98cbf92f",
            "89c0eeb1-4ab2-4bbf-89fd-93baf541d2b1",
            "fe5c14ac-9f30-447f-9cd0-1d6fd4528f40",
            "8e973d1a-7480-430c-8f5e-e26d78973496"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "6c60d613-0e10-4717-afef-980eea44e086",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "daaff5b4-1fc7-423b-a0d6-61e6f40a3b5c",
              "parentUUID": "6c60d613-0e10-4717-afef-980eea44e086",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "82d503e9-3c56-4e01-bf30-3ddc7433de76",
              "parentUUID": "6c60d613-0e10-4717-afef-980eea44e086",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "24aea617-e118-4ce3-856b-1092d9bcb223",
              "parentUUID": "6c60d613-0e10-4717-afef-980eea44e086",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "dcfc355a-568c-44f1-9034-22de7c20dbaa",
              "parentUUID": "6c60d613-0e10-4717-afef-980eea44e086",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "5c61ec42-ed92-4000-a1a4-590c69dd6566",
              "parentUUID": "6c60d613-0e10-4717-afef-980eea44e086",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "2df8472c-2a21-42be-af10-feecb430f78d",
              "parentUUID": "6c60d613-0e10-4717-afef-980eea44e086",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "bcb9eda0-c702-454e-865e-a74d46b3a5f8",
              "parentUUID": "6c60d613-0e10-4717-afef-980eea44e086",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "c932a3f2-3cff-4aed-9431-3a18e59d924b",
              "parentUUID": "6c60d613-0e10-4717-afef-980eea44e086",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "daaff5b4-1fc7-423b-a0d6-61e6f40a3b5c",
            "82d503e9-3c56-4e01-bf30-3ddc7433de76",
            "24aea617-e118-4ce3-856b-1092d9bcb223",
            "dcfc355a-568c-44f1-9034-22de7c20dbaa",
            "5c61ec42-ed92-4000-a1a4-590c69dd6566",
            "2df8472c-2a21-42be-af10-feecb430f78d",
            "bcb9eda0-c702-454e-865e-a74d46b3a5f8",
            "c932a3f2-3cff-4aed-9431-3a18e59d924b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "6b90c335-9b54-41a1-bc59-b2385406176e",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "c042a39b-a38f-4162-94e7-0950b9a5038a",
              "parentUUID": "6b90c335-9b54-41a1-bc59-b2385406176e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "d36bb5e9-8412-4e00-81f7-196dc7afa9a1",
              "parentUUID": "6b90c335-9b54-41a1-bc59-b2385406176e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "c714da36-bc7a-477f-8f0f-ef6a87550db3",
              "parentUUID": "6b90c335-9b54-41a1-bc59-b2385406176e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "66ee5357-efbf-4e9c-a53a-378d8bf0adb1",
              "parentUUID": "6b90c335-9b54-41a1-bc59-b2385406176e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "28024f4a-506c-4eee-b134-0e3219bda4d9",
              "parentUUID": "6b90c335-9b54-41a1-bc59-b2385406176e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "9ec54a91-4932-411d-8179-bd91a714c3e3",
              "parentUUID": "6b90c335-9b54-41a1-bc59-b2385406176e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "68f0b6a7-c6a0-4610-96e2-bce761b2ea14",
              "parentUUID": "6b90c335-9b54-41a1-bc59-b2385406176e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "2e7548e8-c09f-48e8-842c-bf4eb0a90e79",
              "parentUUID": "6b90c335-9b54-41a1-bc59-b2385406176e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c042a39b-a38f-4162-94e7-0950b9a5038a",
            "d36bb5e9-8412-4e00-81f7-196dc7afa9a1",
            "c714da36-bc7a-477f-8f0f-ef6a87550db3",
            "66ee5357-efbf-4e9c-a53a-378d8bf0adb1",
            "28024f4a-506c-4eee-b134-0e3219bda4d9",
            "9ec54a91-4932-411d-8179-bd91a714c3e3",
            "68f0b6a7-c6a0-4610-96e2-bce761b2ea14",
            "2e7548e8-c09f-48e8-842c-bf4eb0a90e79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9893b411-5a49-4020-a8cd-f352f4f24b34",
          "title": "Test EW",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check response has expendingWin if there is feature \"ESymbol\"",
              "fullTitle": "Test EW check response has expendingWin if there is feature \"ESymbol\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultESymbol } = data;\nCheckExpendingWinIfFeaturePresent(res, funcResultESymbol);",
              "err": {},
              "uuid": "5c5569ee-b5d3-4797-be74-981226f3a4ba",
              "parentUUID": "9893b411-5a49-4020-a8cd-f352f4f24b34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has ESymbol if there is feature \"expendingWin\"",
              "fullTitle": "Test EW check response has ESymbol if there is feature \"expendingWin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckESymbolIfExpendingWinPresent(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "67c52372-617d-449c-b7dd-6e916a008c18",
              "parentUUID": "9893b411-5a49-4020-a8cd-f352f4f24b34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is correct",
              "fullTitle": "Test EW check ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res, globalDate } = data;\nCheckESymbolIsCorrect(actionsSpin, funcResultESymbol, globalDate);",
              "err": {},
              "uuid": "17d18aa7-aa15-4d74-ab23-d110f0b5260f",
              "parentUUID": "9893b411-5a49-4020-a8cd-f352f4f24b34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check ESymbol is not wild/scatter",
              "fullTitle": "Test EW check ESymbol is not wild/scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol } = data;\nCheckESymbolIsNotScatter(actionsSpin, funcResultESymbol);",
              "err": {},
              "uuid": "e60098ff-e5cc-4c25-9bbf-72f44fb377c2",
              "parentUUID": "9893b411-5a49-4020-a8cd-f352f4f24b34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check new matrix with ESymbol is correct",
              "fullTitle": "Test EW check new matrix with ESymbol is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckMatrixExpendingWin(actionsSpin, funcResultESymbol, res);",
              "err": {},
              "uuid": "b9fce42b-960d-4fe9-aafb-5ef7bb956bf3",
              "parentUUID": "9893b411-5a49-4020-a8cd-f352f4f24b34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings ESymbol",
              "fullTitle": "Test EW check correct accrual of winnings ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultESymbol, res } = data;\nCheckAccrualWinningESymbol(actionsSpin, funcResultESymbol, res, Usepaytable);",
              "err": {},
              "uuid": "3e4b6975-aae2-4761-bbe8-11a0148c9abf",
              "parentUUID": "9893b411-5a49-4020-a8cd-f352f4f24b34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual fsWin with ESymbol",
              "fullTitle": "Test EW check correct accrual fsWin with ESymbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, winLines, funcResultESymbol, res, globalDate } = data;\nCheckAccrualFSWinESymbol(actionsSpin, winLines, funcResultESymbol, res, globalDate);",
              "err": {},
              "uuid": "86e5f48e-c1cb-48ed-a6a7-d254ca29f8e5",
              "parentUUID": "9893b411-5a49-4020-a8cd-f352f4f24b34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of expendingWin",
              "fullTitle": "Test EW check type of expendingWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res, \"expendingWin\");",
              "err": {},
              "uuid": "7e8f91d8-26cc-4dd9-898e-0ebc64df8312",
              "parentUUID": "9893b411-5a49-4020-a8cd-f352f4f24b34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c5569ee-b5d3-4797-be74-981226f3a4ba",
            "67c52372-617d-449c-b7dd-6e916a008c18",
            "17d18aa7-aa15-4d74-ab23-d110f0b5260f",
            "e60098ff-e5cc-4c25-9bbf-72f44fb377c2",
            "b9fce42b-960d-4fe9-aafb-5ef7bb956bf3",
            "3e4b6975-aae2-4761-bbe8-11a0148c9abf",
            "86e5f48e-c1cb-48ed-a6a7-d254ca29f8e5",
            "7e8f91d8-26cc-4dd9-898e-0ebc64df8312"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 300000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}