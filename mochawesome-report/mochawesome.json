{
  "stats": {
    "suites": 200,
    "tests": 2700,
    "passes": 2700,
    "pending": 0,
    "failures": 0,
    "start": "2020-11-26T13:32:15.996Z",
    "end": "2020-11-26T13:32:48.924Z",
    "duration": 32928,
    "testsRegistered": 2700,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e525b529-1ce4-46f0-9921-8da869c76335",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
          "title": "Test 10Lines game: 20, 36 -  0",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 367,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "2a4b29d0-742b-4be2-b6ce-b57e32b4d0fc",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "7f380d20-3721-451b-b1e6-15d492f4c1f4",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "41bbc133-e4e1-474e-8669-8f971e6bf30e",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "d2a247a0-4bf6-4498-b81c-0d93712a16b4",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "46829643-f96d-4f2b-8428-dd8a8d64854d",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "5ee62c9d-8cad-4f71-9aa0-a1ee97f6a2a5",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "02460357-07b0-4407-a833-efa76c01fb34",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "676d8c91-f0dc-47b3-aaf6-f9d97d08dd28",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 check correct add count of FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "918653fc-238c-4e1f-8695-9967a048f46c",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "8ff1e5fc-366c-4d8b-b5a7-c30e02e2de70",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5518ee8d-ac9a-4f9e-bdda-438e2e81c8ac",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "11826ae2-a2e2-4439-8c6f-d69bb12c96ba",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "6350a232-f22d-4c5d-927f-82ebff1538c4",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "06b6a9f2-a014-4167-8b31-5a25a3e73ea1",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "e7f9052c-2a12-470e-a81d-67b06ab21500",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e9e4a647-a5ca-438c-bc02-87dfdc85c290",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "2461dfd1-9eba-4da0-b8db-40a5356f0427",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "2a254fc1-e467-4801-a50f-565b1190677a",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  0 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6193c925-08ff-4514-99e1-0c640895ac30",
              "parentUUID": "f1d26b05-f980-48dc-9ed8-e739c21592e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41bbc133-e4e1-474e-8669-8f971e6bf30e",
            "d2a247a0-4bf6-4498-b81c-0d93712a16b4",
            "46829643-f96d-4f2b-8428-dd8a8d64854d",
            "5ee62c9d-8cad-4f71-9aa0-a1ee97f6a2a5",
            "02460357-07b0-4407-a833-efa76c01fb34",
            "676d8c91-f0dc-47b3-aaf6-f9d97d08dd28",
            "918653fc-238c-4e1f-8695-9967a048f46c",
            "8ff1e5fc-366c-4d8b-b5a7-c30e02e2de70",
            "5518ee8d-ac9a-4f9e-bdda-438e2e81c8ac",
            "11826ae2-a2e2-4439-8c6f-d69bb12c96ba",
            "6350a232-f22d-4c5d-927f-82ebff1538c4",
            "06b6a9f2-a014-4167-8b31-5a25a3e73ea1",
            "e7f9052c-2a12-470e-a81d-67b06ab21500",
            "e9e4a647-a5ca-438c-bc02-87dfdc85c290",
            "2461dfd1-9eba-4da0-b8db-40a5356f0427",
            "2a254fc1-e467-4801-a50f-565b1190677a",
            "6193c925-08ff-4514-99e1-0c640895ac30"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
          "title": "Test 10Lines game: 20, 36 -  1",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 284,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c4485811-4786-445f-8fd0-e9f01149c196",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "beb92ca0-fa65-44a4-8c40-617558ca2e3f",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "07f6db3b-d291-4acd-b664-14f4ebd8a926",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "f6d130bc-4a35-4cbb-9070-f99be8b2862d",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "57a20602-afce-4e10-929c-1d44bbac451d",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "75f690f9-3bb5-4107-abdf-c945a4427c06",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "fd2ae7fa-650c-435b-bf2c-d3ae3ee0c361",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "cf8e1e1b-2e6e-4110-b7fc-ea2690032a41",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a523768b-b823-4372-b97e-b21e974a7093",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "bda81888-d47b-4f04-848e-1cf4aa99435f",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "14f41c43-f218-4331-b199-590a4bcb012f",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "aff3ce3e-e03d-4768-8bfb-e2172495ef71",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "287f2bf6-3099-477c-8e26-295c0fda5359",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "1eacb40e-7392-4df7-b6ec-31c54b9094b8",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "e0fb4710-7277-435f-90a9-85ee64876aab",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "07942903-ed3f-49b7-9029-1c2ac9e0ac61",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "c8ddf91f-943f-43b5-b48c-93de69a779ba",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b36cd02a-908b-4a3f-bd02-c9004ef4578f",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  1 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "2a62129b-8cc0-4fe9-8204-df59b816ac0c",
              "parentUUID": "c6af06ad-8f5e-4fc2-b6cf-67ed6dcd55e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "07f6db3b-d291-4acd-b664-14f4ebd8a926",
            "f6d130bc-4a35-4cbb-9070-f99be8b2862d",
            "57a20602-afce-4e10-929c-1d44bbac451d",
            "75f690f9-3bb5-4107-abdf-c945a4427c06",
            "fd2ae7fa-650c-435b-bf2c-d3ae3ee0c361",
            "cf8e1e1b-2e6e-4110-b7fc-ea2690032a41",
            "a523768b-b823-4372-b97e-b21e974a7093",
            "bda81888-d47b-4f04-848e-1cf4aa99435f",
            "14f41c43-f218-4331-b199-590a4bcb012f",
            "aff3ce3e-e03d-4768-8bfb-e2172495ef71",
            "287f2bf6-3099-477c-8e26-295c0fda5359",
            "1eacb40e-7392-4df7-b6ec-31c54b9094b8",
            "e0fb4710-7277-435f-90a9-85ee64876aab",
            "07942903-ed3f-49b7-9029-1c2ac9e0ac61",
            "c8ddf91f-943f-43b5-b48c-93de69a779ba",
            "b36cd02a-908b-4a3f-bd02-c9004ef4578f",
            "2a62129b-8cc0-4fe9-8204-df59b816ac0c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
          "title": "Test 10Lines game: 20, 36 -  2",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 280,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d99d8e52-f294-4b69-a309-a31c7f94d06d",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "b38ab7cc-ca1b-4095-a915-9f438d89a784",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "126df6b5-69c3-4c90-b9fd-5485a6b17b9d",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "7f514fae-8a23-44be-8448-cf7502441208",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "601d06d7-05b7-4fa6-af2e-0a3a0b945439",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "3da89ad8-a660-481c-bc7b-07a8a2112703",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "ef700960-c184-447d-a0c9-0ebceb4c1fbc",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "acc41c83-68cb-4827-8ba0-39df7abff1b1",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a16b1f70-0bf3-4361-8cb7-f850209550a0",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "d919f7cc-151c-4a47-853a-51298745a35b",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "885659e9-ad5c-4cd3-bec7-3bec2f964bff",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b2054ae2-19b1-4531-aa99-0ab6321bf55e",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "4b7b40d3-723a-4f55-b09e-6a9c4b9b75b5",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "2d66cf65-4006-43bc-8d0a-e5153da1431c",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "071b7885-1f3c-49f9-bade-ac136e6ce03a",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e55dffeb-6f21-4e62-91fc-576312585640",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "c7222ced-ff4c-4fd6-9aa7-9d66e14af16f",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "4c7b3fee-1770-4c6b-98b3-10bc52b5b3fd",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  2 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a3efa781-b2be-44bd-b0d9-0cd2159ac812",
              "parentUUID": "c8c4a44f-e1f3-4e56-8cf8-5abcb5001a01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "126df6b5-69c3-4c90-b9fd-5485a6b17b9d",
            "7f514fae-8a23-44be-8448-cf7502441208",
            "601d06d7-05b7-4fa6-af2e-0a3a0b945439",
            "3da89ad8-a660-481c-bc7b-07a8a2112703",
            "ef700960-c184-447d-a0c9-0ebceb4c1fbc",
            "acc41c83-68cb-4827-8ba0-39df7abff1b1",
            "a16b1f70-0bf3-4361-8cb7-f850209550a0",
            "d919f7cc-151c-4a47-853a-51298745a35b",
            "885659e9-ad5c-4cd3-bec7-3bec2f964bff",
            "b2054ae2-19b1-4531-aa99-0ab6321bf55e",
            "4b7b40d3-723a-4f55-b09e-6a9c4b9b75b5",
            "2d66cf65-4006-43bc-8d0a-e5153da1431c",
            "071b7885-1f3c-49f9-bade-ac136e6ce03a",
            "e55dffeb-6f21-4e62-91fc-576312585640",
            "c7222ced-ff4c-4fd6-9aa7-9d66e14af16f",
            "4c7b3fee-1770-4c6b-98b3-10bc52b5b3fd",
            "a3efa781-b2be-44bd-b0d9-0cd2159ac812"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
          "title": "Test 10Lines game: 20, 36 -  3",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 317,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "07da691d-8030-4c15-8eb0-cc7227e1c60e",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "9d4cec7b-804c-46c5-b2f9-1c1615eda48e",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "046f90f0-b582-4f72-beeb-18a2a16528c5",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "54e6e739-8f82-4fd9-8f95-f90bdefd9885",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "59d0d242-675f-4f2a-bbd7-fce8fa844811",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "3bdd43b6-147e-4012-9e30-57407843ee2b",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "507cb1ce-ab93-438d-955e-fba2a75051f4",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "4d85939a-c9fc-4d22-8813-e54d06b76e1a",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "585164c7-d152-4e61-a0f8-d3940914be60",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "5781e694-2ef0-4591-9b8f-1639eb7e1209",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "916382ed-6577-43cb-aa64-6b3c00d0fad9",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1b9d39b4-5a60-41a1-94aa-56ea9a880685",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "7372be07-5313-4385-9fd0-af79bccb86dd",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "52260a15-841b-4e63-be29-8cd0238035d1",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "a4e068b5-3795-45e3-b814-ffe3a51d7bea",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "03fd44dd-9e51-419d-a227-efe0d0a328f8",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e5184ade-8940-444f-8ccb-c7fa3f2d9b94",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "0bf35e06-66c7-4769-a863-5346deb9915e",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  3 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "63455bdb-eb1a-44aa-82b0-ee3b15a801ce",
              "parentUUID": "399e5bb2-9efc-4561-8c7c-6a6c1533356c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "046f90f0-b582-4f72-beeb-18a2a16528c5",
            "54e6e739-8f82-4fd9-8f95-f90bdefd9885",
            "59d0d242-675f-4f2a-bbd7-fce8fa844811",
            "3bdd43b6-147e-4012-9e30-57407843ee2b",
            "507cb1ce-ab93-438d-955e-fba2a75051f4",
            "4d85939a-c9fc-4d22-8813-e54d06b76e1a",
            "585164c7-d152-4e61-a0f8-d3940914be60",
            "5781e694-2ef0-4591-9b8f-1639eb7e1209",
            "916382ed-6577-43cb-aa64-6b3c00d0fad9",
            "1b9d39b4-5a60-41a1-94aa-56ea9a880685",
            "7372be07-5313-4385-9fd0-af79bccb86dd",
            "52260a15-841b-4e63-be29-8cd0238035d1",
            "a4e068b5-3795-45e3-b814-ffe3a51d7bea",
            "03fd44dd-9e51-419d-a227-efe0d0a328f8",
            "e5184ade-8940-444f-8ccb-c7fa3f2d9b94",
            "0bf35e06-66c7-4769-a863-5346deb9915e",
            "63455bdb-eb1a-44aa-82b0-ee3b15a801ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 39,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1a276874-92e3-4047-bd5c-a7c68013e745",
          "title": "Test 10Lines game: 20, 36 -  4",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 295,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1711406d-e57d-4b21-a2e5-7d884c0540a0",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "dbf3d954-8969-4134-9472-ba27b8c78b3a",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "752abbb5-41ff-43fd-ad28-67f3eb387a28",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "c9730929-adc0-43e6-990e-cb456c5bf3d6",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ec1c85fc-cee1-4ea7-b299-59bc7fd15980",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "c3bdfa71-fdeb-495f-a34b-cfe1a7e41e74",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "682a89ea-ccca-4663-bddf-a1d1a2bf641d",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "3fdf7c4d-4d51-4514-a0d0-a878df0aab5c",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4c1d9729-9d7f-4047-a081-e99dd3a5d05c",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "d794c161-b70a-4242-a779-6e206e4b0d18",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "eec4ef74-b199-44ed-9f43-7883a4c35ac7",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bebdfd30-c1b1-40e8-b212-133b83633877",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "cc5ebe42-2c5b-4623-b1f6-566c3a04040b",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "365fd1ee-8201-4d59-8b8e-1eb0e9ca09ae",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "12d8d80c-fdf0-4799-8006-de89f5af3a70",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "c6ba838c-b308-4224-b1ae-ba34100161c0",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "84a67530-a9fb-46f4-8fc9-ecb5564eb5c0",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "862c044c-8992-459b-95fb-cd0019aeba17",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  4 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "fd5cb6a4-23dc-40f7-8953-a45e910deea6",
              "parentUUID": "1a276874-92e3-4047-bd5c-a7c68013e745",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "752abbb5-41ff-43fd-ad28-67f3eb387a28",
            "c9730929-adc0-43e6-990e-cb456c5bf3d6",
            "ec1c85fc-cee1-4ea7-b299-59bc7fd15980",
            "c3bdfa71-fdeb-495f-a34b-cfe1a7e41e74",
            "682a89ea-ccca-4663-bddf-a1d1a2bf641d",
            "3fdf7c4d-4d51-4514-a0d0-a878df0aab5c",
            "4c1d9729-9d7f-4047-a081-e99dd3a5d05c",
            "d794c161-b70a-4242-a779-6e206e4b0d18",
            "eec4ef74-b199-44ed-9f43-7883a4c35ac7",
            "bebdfd30-c1b1-40e8-b212-133b83633877",
            "cc5ebe42-2c5b-4623-b1f6-566c3a04040b",
            "365fd1ee-8201-4d59-8b8e-1eb0e9ca09ae",
            "12d8d80c-fdf0-4799-8006-de89f5af3a70",
            "c6ba838c-b308-4224-b1ae-ba34100161c0",
            "84a67530-a9fb-46f4-8fc9-ecb5564eb5c0",
            "862c044c-8992-459b-95fb-cd0019aeba17",
            "fd5cb6a4-23dc-40f7-8953-a45e910deea6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "0e11d946-fc08-458a-9b59-ac8626f86908",
          "title": "Test 10Lines game: 20, 36 -  5",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 287,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "43dd5085-5fa3-45a4-bfca-c84796d6c975",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "0b3cdf9f-6ec9-4a29-bf51-81d3b279ddcc",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "8d72f3d5-4327-4a84-9b72-3ddc4171aa5b",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "2f2d0bda-7f03-4ca1-8e86-588772027ec8",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "fc9e57da-8d84-4e29-8b08-7f224febe741",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 check correct position of winning symbol",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "df255fcd-1841-441f-9e41-6ccb99208806",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 check correct accrual of winnings",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "c6816411-06e7-4980-944d-770024a0ad66",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "3e56ce22-689a-414d-9700-b6bb7db12dbb",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7039fc39-8e2d-4ddb-b26a-950669cac77f",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "d8648813-5e78-4a35-a088-6fdd6adc5493",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "18ce5de8-d906-4db0-af1f-5033f4a735d5",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "26342030-1df4-45a3-85dc-ef15f52f9002",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "da0d81bb-d94f-4407-a6ea-eb1f2164adcb",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "31bbc0b7-8f0d-48b0-8324-cb13746fef4f",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "c0eee353-8ef4-4915-829d-52f23c94742f",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e66d36f9-4d41-43f2-8028-a2e9e8c2e138",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "7ecb487b-e173-4086-ab6e-8b1e0cd5f514",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "764a4507-c4ca-432d-9409-6cb2aecac8c5",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  5 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "7a48c69e-7f1d-4a8a-9630-517e4ec73f27",
              "parentUUID": "0e11d946-fc08-458a-9b59-ac8626f86908",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8d72f3d5-4327-4a84-9b72-3ddc4171aa5b",
            "2f2d0bda-7f03-4ca1-8e86-588772027ec8",
            "fc9e57da-8d84-4e29-8b08-7f224febe741",
            "df255fcd-1841-441f-9e41-6ccb99208806",
            "c6816411-06e7-4980-944d-770024a0ad66",
            "3e56ce22-689a-414d-9700-b6bb7db12dbb",
            "7039fc39-8e2d-4ddb-b26a-950669cac77f",
            "d8648813-5e78-4a35-a088-6fdd6adc5493",
            "18ce5de8-d906-4db0-af1f-5033f4a735d5",
            "26342030-1df4-45a3-85dc-ef15f52f9002",
            "da0d81bb-d94f-4407-a6ea-eb1f2164adcb",
            "31bbc0b7-8f0d-48b0-8324-cb13746fef4f",
            "c0eee353-8ef4-4915-829d-52f23c94742f",
            "e66d36f9-4d41-43f2-8028-a2e9e8c2e138",
            "7ecb487b-e173-4086-ab6e-8b1e0cd5f514",
            "764a4507-c4ca-432d-9409-6cb2aecac8c5",
            "7a48c69e-7f1d-4a8a-9630-517e4ec73f27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
          "title": "Test 10Lines game: 20, 36 -  6",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 280,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "3be8e062-9147-4d82-873a-a7e0b84fbe00",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "f6da840d-1427-45db-b6e4-d33a9ad7e60e",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a9e6d2c9-2c4f-490b-b721-0f34b31897bf",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "89980766-89ad-4a14-8ad0-f94117a9ec1f",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "202cd2b5-e785-406f-a61b-2ea759025eea",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "3f84edd9-9ae7-4823-b9c5-a34bcc2e42a3",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "2afca93d-c076-48b6-b235-b0ebcda598fc",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "86810d1f-73f9-40aa-a902-d43789f57f04",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a94895fa-b5f1-4fd6-9d6b-af4df302717d",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "f805384c-4d65-4f86-a536-1c5129beacf3",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9f2114cd-443f-4881-9250-525871f4a07a",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1590a632-6bee-4db6-b46d-37714b8d4467",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "e0fe6354-627a-4ce9-9af1-1ce539174ad4",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "2c5287df-53c4-46cf-bc29-b397b42d6442",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "4057c02d-c81e-4dd9-af99-f7e9edc399ba",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "7522074f-237b-4c61-8832-ef21f7fc5a65",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "523a1471-118d-4b39-b6f2-05f4c7036f4a",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f5dd5074-8bdb-4537-a0a8-446201133b9a",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  6 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "61dab1dc-513a-4ba1-a99b-d8080c909306",
              "parentUUID": "8106ab65-7f1d-4ef0-b36a-29eec71f9831",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9e6d2c9-2c4f-490b-b721-0f34b31897bf",
            "89980766-89ad-4a14-8ad0-f94117a9ec1f",
            "202cd2b5-e785-406f-a61b-2ea759025eea",
            "3f84edd9-9ae7-4823-b9c5-a34bcc2e42a3",
            "2afca93d-c076-48b6-b235-b0ebcda598fc",
            "86810d1f-73f9-40aa-a902-d43789f57f04",
            "a94895fa-b5f1-4fd6-9d6b-af4df302717d",
            "f805384c-4d65-4f86-a536-1c5129beacf3",
            "9f2114cd-443f-4881-9250-525871f4a07a",
            "1590a632-6bee-4db6-b46d-37714b8d4467",
            "e0fe6354-627a-4ce9-9af1-1ce539174ad4",
            "2c5287df-53c4-46cf-bc29-b397b42d6442",
            "4057c02d-c81e-4dd9-af99-f7e9edc399ba",
            "7522074f-237b-4c61-8832-ef21f7fc5a65",
            "523a1471-118d-4b39-b6f2-05f4c7036f4a",
            "f5dd5074-8bdb-4537-a0a8-446201133b9a",
            "61dab1dc-513a-4ba1-a99b-d8080c909306"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "39b006e5-6adf-455b-b5f5-b4823faea182",
          "title": "Test 10Lines game: 20, 36 -  7",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 278,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f3315c50-4c0f-45c8-85a9-6cb6748994e0",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "3cac70a4-d1a1-47fa-88d3-9d718c9cb49e",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d2edab67-a976-499b-afb7-c4319799085f",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "2476584a-351f-479b-b16a-4b214d12c340",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "edae17eb-4578-41bc-9234-5bb7b686a2fa",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "e84949f8-2022-4b6f-86de-eccf8756eb90",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "6074bdca-88f5-4354-928c-14e0dcc8e186",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "3c3e8852-bc8a-4960-8460-d94d048b481f",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b579baff-6a51-41cc-95f2-98d2103596e1",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "c98ca5ab-da97-42f1-96c0-afb0e1c2ba87",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "acb39c06-ed22-4249-a60d-bd6b74eafc36",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f64d4d59-1cdb-487d-90b0-deb2161eadf3",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 balance is not change",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "7683cfb0-b16e-4481-a20c-aba90dcb5ddb",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "f02ae399-473f-4b0c-a132-4424c3d1a266",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "0fe2bca6-2510-45a2-a8a1-9416f520725a",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "fd508f0a-2558-483d-b9f4-6ecf7136d657",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e95567a3-205d-43bf-893b-2f9cc393f414",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f93e0c1c-d1d3-435b-9681-ce36b5c5c32f",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  7 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "1c914456-4af9-4603-8456-355689c7c217",
              "parentUUID": "39b006e5-6adf-455b-b5f5-b4823faea182",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2edab67-a976-499b-afb7-c4319799085f",
            "2476584a-351f-479b-b16a-4b214d12c340",
            "edae17eb-4578-41bc-9234-5bb7b686a2fa",
            "e84949f8-2022-4b6f-86de-eccf8756eb90",
            "6074bdca-88f5-4354-928c-14e0dcc8e186",
            "3c3e8852-bc8a-4960-8460-d94d048b481f",
            "b579baff-6a51-41cc-95f2-98d2103596e1",
            "c98ca5ab-da97-42f1-96c0-afb0e1c2ba87",
            "acb39c06-ed22-4249-a60d-bd6b74eafc36",
            "f64d4d59-1cdb-487d-90b0-deb2161eadf3",
            "7683cfb0-b16e-4481-a20c-aba90dcb5ddb",
            "f02ae399-473f-4b0c-a132-4424c3d1a266",
            "0fe2bca6-2510-45a2-a8a1-9416f520725a",
            "fd508f0a-2558-483d-b9f4-6ecf7136d657",
            "e95567a3-205d-43bf-893b-2f9cc393f414",
            "f93e0c1c-d1d3-435b-9681-ce36b5c5c32f",
            "1c914456-4af9-4603-8456-355689c7c217"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b3030f76-4212-4273-a0fc-ec46ae92af90",
          "title": "Test 10Lines game: 20, 36 -  8",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 285,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "3824dacc-7a74-427f-9a1f-493fe84f16af",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "5c7c8279-cb89-4d7f-9dc2-1cdec9817fea",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "31caedd1-a074-4b13-9d23-6d019662053c",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "31da2e82-9cef-4bef-8d29-5be83e664a41",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "fb186742-71b6-411d-8ca2-d95968e199e6",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "26b64b1e-8025-484f-bea1-a30c987e2cb6",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "b3b77ff2-88be-4e4d-8919-cac376f83471",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "70fa269c-d57e-455a-8ea0-162fc48d9b08",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4e8df225-26ab-48b1-a8bb-b3141bdf5679",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "28b8aeb3-ebaa-42af-8db3-892320b91c1d",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c8160e67-8bb2-48bf-b188-3fa1d094db8c",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6608e23b-835d-42db-9d05-04d078ffdd03",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "026b0d93-c7a4-419b-8062-5103df16adbc",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5520db47-8beb-4438-8232-3d204df18cd4",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "63e997f6-7f1b-4542-9dcc-fff97460d95b",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "2c9aceec-a938-4c29-8059-e0e385b7b830",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "616c3b19-8cd4-4881-9705-9e0d3f469aa4",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ffaf059f-e32f-4505-b925-a4d6e258744f",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  8 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "28ccdd31-f3df-4527-b686-778d3d93240f",
              "parentUUID": "b3030f76-4212-4273-a0fc-ec46ae92af90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31caedd1-a074-4b13-9d23-6d019662053c",
            "31da2e82-9cef-4bef-8d29-5be83e664a41",
            "fb186742-71b6-411d-8ca2-d95968e199e6",
            "26b64b1e-8025-484f-bea1-a30c987e2cb6",
            "b3b77ff2-88be-4e4d-8919-cac376f83471",
            "70fa269c-d57e-455a-8ea0-162fc48d9b08",
            "4e8df225-26ab-48b1-a8bb-b3141bdf5679",
            "28b8aeb3-ebaa-42af-8db3-892320b91c1d",
            "c8160e67-8bb2-48bf-b188-3fa1d094db8c",
            "6608e23b-835d-42db-9d05-04d078ffdd03",
            "026b0d93-c7a4-419b-8062-5103df16adbc",
            "5520db47-8beb-4438-8232-3d204df18cd4",
            "63e997f6-7f1b-4542-9dcc-fff97460d95b",
            "2c9aceec-a938-4c29-8059-e0e385b7b830",
            "616c3b19-8cd4-4881-9705-9e0d3f469aa4",
            "ffaf059f-e32f-4505-b925-a4d6e258744f",
            "28ccdd31-f3df-4527-b686-778d3d93240f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1240fdca-b050-46b6-8a25-7a8582801446",
          "title": "Test 10Lines game: 20, 36 -  9",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 277,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e8ea4c51-bb94-4623-87d2-9a311c5a1af5",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "9908642a-1c99-458a-bb92-1911abe35cdb",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "13488905-6f85-4b6c-94da-ca1250d2c428",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "2dbd455b-d18e-4cda-8469-a336136c9191",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "d4ca1e87-c3ce-40a9-a30b-ec5ee3bd8cd4",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "b5fb4c23-5c8a-478f-ad31-bd9913bdbf95",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "0c70af48-c9cc-4fd4-b692-1cf7ccfdce30",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "aba60117-32c6-4dc7-a0d2-f349a269fbf9",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b0f781c5-c2ca-49c7-a0e4-08aac2761ec7",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "d8333385-7292-4f19-a67f-2058e580b39e",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cd400009-670c-4151-9396-7575b1661086",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2252b8f0-1614-4350-b57c-22f8ff4b36be",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "aa1fcd1a-fc4f-4691-b496-d32d157cddde",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "9d707505-c69d-48f9-aa97-f149a5638c3d",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ba7a7e83-d7a2-4ea2-94c8-f563cbcd5b69",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "eed72b1d-c493-4fb4-98d2-2c4c2969489e",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "9c86f1bc-0b6b-44dc-aeb3-ff9162c1cc67",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3d6a4f7b-4724-4ec6-a132-2f3c42185eeb",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  9 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "680498fb-948a-49d7-9315-d5ff6786f267",
              "parentUUID": "1240fdca-b050-46b6-8a25-7a8582801446",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13488905-6f85-4b6c-94da-ca1250d2c428",
            "2dbd455b-d18e-4cda-8469-a336136c9191",
            "d4ca1e87-c3ce-40a9-a30b-ec5ee3bd8cd4",
            "b5fb4c23-5c8a-478f-ad31-bd9913bdbf95",
            "0c70af48-c9cc-4fd4-b692-1cf7ccfdce30",
            "aba60117-32c6-4dc7-a0d2-f349a269fbf9",
            "b0f781c5-c2ca-49c7-a0e4-08aac2761ec7",
            "d8333385-7292-4f19-a67f-2058e580b39e",
            "cd400009-670c-4151-9396-7575b1661086",
            "2252b8f0-1614-4350-b57c-22f8ff4b36be",
            "aa1fcd1a-fc4f-4691-b496-d32d157cddde",
            "9d707505-c69d-48f9-aa97-f149a5638c3d",
            "ba7a7e83-d7a2-4ea2-94c8-f563cbcd5b69",
            "eed72b1d-c493-4fb4-98d2-2c4c2969489e",
            "9c86f1bc-0b6b-44dc-aeb3-ff9162c1cc67",
            "3d6a4f7b-4724-4ec6-a132-2f3c42185eeb",
            "680498fb-948a-49d7-9315-d5ff6786f267"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8899ef0d-1335-44fe-9f92-dad92469acb4",
          "title": "Test 10Lines game: 20, 36 -  10",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 310,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b4ee91ac-fa27-4222-b56f-84dab049bf07",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "ea882faa-a2d4-4c3a-a142-ea4ee26ed33e",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "5fe5f23b-d1cb-437d-b36f-9c45c56bab84",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "f3220000-919b-46b5-9d48-abc47ec3f7af",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "d1b26a1d-3c9c-4db5-87ab-8b7de5e7af7d",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "7c95e998-4c10-4461-93fb-03aceaf40ea2",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "fa12cc0e-cf76-45d3-9bc9-821bc5403661",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "45ab7f8b-e309-435f-9612-38e6a5350798",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3e44ba6f-8d67-40f5-a9fd-e36521e456a2",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "3ebbef96-9791-47cb-a1d9-f3c5de371154",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b3fd8ed2-96c8-4baf-b6cb-8d3ec6101a52",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6dc40989-3976-4b8a-b761-0ed3712581fe",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "56acff6e-d119-4652-9bd6-312d27b5d335",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "621ba9e3-9690-4cef-ac64-e062be7a85a8",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "5046478b-7197-43fc-a077-de066f31fbc9",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "c5655b54-7639-4c9b-87ad-74d69c8bdbe5",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "3d2d9667-4ab1-4d49-8ad9-139623dcfd74",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "52b9c456-f327-405a-9506-4d8628786a1a",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  10 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "55460947-738f-4dfe-ab87-1054093c035e",
              "parentUUID": "8899ef0d-1335-44fe-9f92-dad92469acb4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fe5f23b-d1cb-437d-b36f-9c45c56bab84",
            "f3220000-919b-46b5-9d48-abc47ec3f7af",
            "d1b26a1d-3c9c-4db5-87ab-8b7de5e7af7d",
            "7c95e998-4c10-4461-93fb-03aceaf40ea2",
            "fa12cc0e-cf76-45d3-9bc9-821bc5403661",
            "45ab7f8b-e309-435f-9612-38e6a5350798",
            "3e44ba6f-8d67-40f5-a9fd-e36521e456a2",
            "3ebbef96-9791-47cb-a1d9-f3c5de371154",
            "b3fd8ed2-96c8-4baf-b6cb-8d3ec6101a52",
            "6dc40989-3976-4b8a-b761-0ed3712581fe",
            "56acff6e-d119-4652-9bd6-312d27b5d335",
            "621ba9e3-9690-4cef-ac64-e062be7a85a8",
            "5046478b-7197-43fc-a077-de066f31fbc9",
            "c5655b54-7639-4c9b-87ad-74d69c8bdbe5",
            "3d2d9667-4ab1-4d49-8ad9-139623dcfd74",
            "52b9c456-f327-405a-9506-4d8628786a1a",
            "55460947-738f-4dfe-ab87-1054093c035e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
          "title": "Test 10Lines game: 20, 36 -  11",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 291,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e82956eb-4f46-4298-9267-29988091d7e2",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "326ee002-9c40-42f4-91ac-68032f721b98",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "f1420d03-6298-4949-b294-4e38a54db72b",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "c42ef725-c053-477f-a004-758adc37a56d",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "15fc7bed-19b1-42ca-8e4a-ae6b076ea619",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "64e1b7f0-1c6c-4812-afa1-6151f393e55d",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "bebea151-b13b-40ea-8e69-a5b23cb7ed02",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "4b8f5bc6-ee36-45b7-a3ec-334fb4a4aa73",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ac683697-b6b2-4aa7-b686-5dc8abb705bb",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "deb970d6-76af-4630-91a6-e0fecaa2ef8c",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a56a4568-f595-480b-a3ee-094eb1fe4cbb",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5726d849-c040-493b-9b2f-26b0ecccc858",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "ebbe0fbb-07e5-4601-925e-09643f371c0c",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "1c463a5c-56b6-412b-bf22-e387b22c6438",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ae4ff2f3-66fc-44ff-baa3-3234845454c8",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "2f0fa523-4198-44a1-a732-3f35e855f532",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "55ed48a9-949d-4557-92aa-a81ab59753e0",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "1e5e8182-8572-4141-8074-83d06c445793",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  11 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "902a4980-7b2f-4a1b-bd96-3393ac658d76",
              "parentUUID": "57cd0ec4-2770-44bc-83c5-4a24c931082d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1420d03-6298-4949-b294-4e38a54db72b",
            "c42ef725-c053-477f-a004-758adc37a56d",
            "15fc7bed-19b1-42ca-8e4a-ae6b076ea619",
            "64e1b7f0-1c6c-4812-afa1-6151f393e55d",
            "bebea151-b13b-40ea-8e69-a5b23cb7ed02",
            "4b8f5bc6-ee36-45b7-a3ec-334fb4a4aa73",
            "ac683697-b6b2-4aa7-b686-5dc8abb705bb",
            "deb970d6-76af-4630-91a6-e0fecaa2ef8c",
            "a56a4568-f595-480b-a3ee-094eb1fe4cbb",
            "5726d849-c040-493b-9b2f-26b0ecccc858",
            "ebbe0fbb-07e5-4601-925e-09643f371c0c",
            "1c463a5c-56b6-412b-bf22-e387b22c6438",
            "ae4ff2f3-66fc-44ff-baa3-3234845454c8",
            "2f0fa523-4198-44a1-a732-3f35e855f532",
            "55ed48a9-949d-4557-92aa-a81ab59753e0",
            "1e5e8182-8572-4141-8074-83d06c445793",
            "902a4980-7b2f-4a1b-bd96-3393ac658d76"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
          "title": "Test 10Lines game: 20, 36 -  12",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 277,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a9789c6d-5e85-441b-802b-87572215571d",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "abb04b15-a846-4f3a-86c3-d55b84eb0c42",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d527c72d-2a5f-4368-9750-1697d83a3c68",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "3f8f349c-739a-4e16-9d80-2e19e5fd4fd9",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "c83e8b61-7f6a-4f28-9c5f-e78ae0492454",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "4f17c810-928b-475c-b836-4b48809996b3",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "9e0ca169-1571-409a-89cf-0fe1171ce7d0",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a4b4f445-e715-48ad-a73f-928e27489164",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "797ab902-1748-46e3-9777-bcd77882bc4f",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "3b52d56e-dc7f-451c-8f2d-3adc1292e5f2",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "27aa9409-f6de-495b-9d00-925136981db4",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a96e50cc-fdb7-4805-953f-993bf519bc56",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "4ceeee1a-f6ae-4280-b939-c02f37dd687e",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "78734d4c-0a8e-4b89-b5d0-f2810d258325",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "168d714d-d6b3-4b51-ab5e-cf894192a8c0",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "821e18ae-ded5-4643-b868-fbe407c9f662",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "b7875b0d-684b-4665-95b9-02a6b9f60604",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "9362f832-c0ca-458d-9b50-09e8b104be5a",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  12 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "cf333674-6331-4262-beb2-28eacdfd24ea",
              "parentUUID": "356163ca-8cd0-4271-b2e2-784e39dd1b7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d527c72d-2a5f-4368-9750-1697d83a3c68",
            "3f8f349c-739a-4e16-9d80-2e19e5fd4fd9",
            "c83e8b61-7f6a-4f28-9c5f-e78ae0492454",
            "4f17c810-928b-475c-b836-4b48809996b3",
            "9e0ca169-1571-409a-89cf-0fe1171ce7d0",
            "a4b4f445-e715-48ad-a73f-928e27489164",
            "797ab902-1748-46e3-9777-bcd77882bc4f",
            "3b52d56e-dc7f-451c-8f2d-3adc1292e5f2",
            "27aa9409-f6de-495b-9d00-925136981db4",
            "a96e50cc-fdb7-4805-953f-993bf519bc56",
            "4ceeee1a-f6ae-4280-b939-c02f37dd687e",
            "78734d4c-0a8e-4b89-b5d0-f2810d258325",
            "168d714d-d6b3-4b51-ab5e-cf894192a8c0",
            "821e18ae-ded5-4643-b868-fbe407c9f662",
            "b7875b0d-684b-4665-95b9-02a6b9f60604",
            "9362f832-c0ca-458d-9b50-09e8b104be5a",
            "cf333674-6331-4262-beb2-28eacdfd24ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "74542e40-d364-4159-85fe-a44fc0fd39f9",
          "title": "Test 10Lines game: 20, 36 -  13",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 454,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6d117487-0ebd-4793-96ba-52572ebadf41",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "d928a8ae-79f4-4526-a649-61beee4ac1f0",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "0573dac8-9242-47e3-b548-402e6d273de3",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "ac9b32e1-642f-4206-9316-9b0e2eb3e175",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "5c046749-3fa8-414d-98d1-cabea1ae4c4a",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "e039af31-3533-47e7-b02a-8125d19acece",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "f0fc6c36-a09d-4157-b725-13801d997256",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "9e8632fb-07ff-4b0f-b8cb-9255c0c1c2dd",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a7ce40e1-dd0f-4d6e-89a9-088a23bdf984",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "f120635f-b62c-4255-8c79-2b2631180528",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6eedff7e-c4df-4cd2-bfab-62f28ed7b658",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "89e6608e-faef-4c4a-8a81-53f1d4c00561",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "18259120-9957-42bd-a28d-6f5580dce4f2",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "6c6f8e7d-fe2e-42fb-8f84-89cf5413d174",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "4a4a98c5-f1a8-4340-98aa-c0f2824d210e",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "88b08b42-0c20-4d3f-bb80-1e17ac6bee6a",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "33f37104-4c80-411e-81b6-24501d5fd109",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a0b28fb4-53c2-4da1-a934-438967921e66",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  13 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "bff73f40-212c-413a-84c3-5f323ac52cda",
              "parentUUID": "74542e40-d364-4159-85fe-a44fc0fd39f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0573dac8-9242-47e3-b548-402e6d273de3",
            "ac9b32e1-642f-4206-9316-9b0e2eb3e175",
            "5c046749-3fa8-414d-98d1-cabea1ae4c4a",
            "e039af31-3533-47e7-b02a-8125d19acece",
            "f0fc6c36-a09d-4157-b725-13801d997256",
            "9e8632fb-07ff-4b0f-b8cb-9255c0c1c2dd",
            "a7ce40e1-dd0f-4d6e-89a9-088a23bdf984",
            "f120635f-b62c-4255-8c79-2b2631180528",
            "6eedff7e-c4df-4cd2-bfab-62f28ed7b658",
            "89e6608e-faef-4c4a-8a81-53f1d4c00561",
            "18259120-9957-42bd-a28d-6f5580dce4f2",
            "6c6f8e7d-fe2e-42fb-8f84-89cf5413d174",
            "4a4a98c5-f1a8-4340-98aa-c0f2824d210e",
            "88b08b42-0c20-4d3f-bb80-1e17ac6bee6a",
            "33f37104-4c80-411e-81b6-24501d5fd109",
            "a0b28fb4-53c2-4da1-a934-438967921e66",
            "bff73f40-212c-413a-84c3-5f323ac52cda"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
          "title": "Test 10Lines game: 20, 36 -  14",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 336,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "952f5b64-6a3e-473b-b9f2-16238717da37",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "5a22782d-e503-4926-810a-397df96c553a",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "2c628805-73ad-4f5d-8719-1f79267b4f71",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "6d39d992-5073-4e3f-985c-4dacae832719",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "b664ae7a-1b90-4fe4-a10e-c9dbaf6c56d3",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "37843e04-38e0-40aa-b732-5fbc9b6299a7",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "a7d93364-ab29-42a4-8b96-da8931b0c0d6",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "2c667e78-967e-45ae-b8bf-16bdd9cd7027",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "548f035a-7fc4-4ae1-9337-0efde18a2e63",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "08f8d3a5-87c0-47ba-be7f-0c70593acc68",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f492611c-d6f5-4e07-a915-c79689487c51",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ca82c142-b975-44fc-8666-691d6d919660",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "b311eef4-920c-4c85-b2fe-eeefb82b8816",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "25ea11b7-0529-4df8-9f2f-d63e8c66dc3f",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "d68b47fc-1a33-4329-be15-5e6b98ea785b",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "7b08c7fc-8fe0-489f-aa05-8aa1df5f6c4c",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "6d338a88-cf9a-4537-bca4-0a0f56bfdbab",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "681ecaad-f0c3-462c-9d06-f391043c5c69",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  14 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "4b1b05de-d551-46ca-9fb5-6f51d396b186",
              "parentUUID": "15853dc1-6c3d-4c89-8213-fe0c4c5f45d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c628805-73ad-4f5d-8719-1f79267b4f71",
            "6d39d992-5073-4e3f-985c-4dacae832719",
            "b664ae7a-1b90-4fe4-a10e-c9dbaf6c56d3",
            "37843e04-38e0-40aa-b732-5fbc9b6299a7",
            "a7d93364-ab29-42a4-8b96-da8931b0c0d6",
            "2c667e78-967e-45ae-b8bf-16bdd9cd7027",
            "548f035a-7fc4-4ae1-9337-0efde18a2e63",
            "08f8d3a5-87c0-47ba-be7f-0c70593acc68",
            "f492611c-d6f5-4e07-a915-c79689487c51",
            "ca82c142-b975-44fc-8666-691d6d919660",
            "b311eef4-920c-4c85-b2fe-eeefb82b8816",
            "25ea11b7-0529-4df8-9f2f-d63e8c66dc3f",
            "d68b47fc-1a33-4329-be15-5e6b98ea785b",
            "7b08c7fc-8fe0-489f-aa05-8aa1df5f6c4c",
            "6d338a88-cf9a-4537-bca4-0a0f56bfdbab",
            "681ecaad-f0c3-462c-9d06-f391043c5c69",
            "4b1b05de-d551-46ca-9fb5-6f51d396b186"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
          "title": "Test 10Lines game: 20, 36 -  15",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 277,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c81b0fd6-d3b5-4667-b66d-5a36089d6bbc",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "2d96c449-0923-45f7-9ed9-82a2cff13545",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "8ff8029e-73eb-4356-ab4b-c0e874843f02",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 check correct accrual Scatter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "c17abe2c-79cc-4509-a453-c7fed5e89734",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "7c32e40d-2ff5-449e-8fb8-bbee380236e8",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "95585235-9782-4f73-9e08-fb423e802ca6",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "3b4b0fd1-2af6-416d-8963-8276f3a11f23",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "00e8e935-fb8d-42e3-8f22-4f0fd85aa3d5",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5b86f6f9-906a-4ce0-b96b-31079c83bb54",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "f5ec27a5-75a6-48a9-b86c-2974a78e440e",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d9f09858-e370-4912-8f98-b6bf337b071b",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "27412cec-3630-4903-a124-452a009fe43f",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "cc14d473-1f29-4015-bfd8-8293cba4199f",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "bae97e86-8505-47fb-8c70-f4b09e9b5a52",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "5919a51b-127d-48e9-bcba-592d879725f2",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "04d7199f-bc9b-4495-ad9b-09fddbb0f092",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "87757a10-654a-4e0b-ba7f-61f994182a34",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6d414013-6cf9-41d8-961c-8be0189d9f81",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  15 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c1d0ea60-69a6-4022-8cbc-c86d224bfa08",
              "parentUUID": "b271785c-a55a-4ca9-90a4-7b3a66de1f56",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ff8029e-73eb-4356-ab4b-c0e874843f02",
            "c17abe2c-79cc-4509-a453-c7fed5e89734",
            "7c32e40d-2ff5-449e-8fb8-bbee380236e8",
            "95585235-9782-4f73-9e08-fb423e802ca6",
            "3b4b0fd1-2af6-416d-8963-8276f3a11f23",
            "00e8e935-fb8d-42e3-8f22-4f0fd85aa3d5",
            "5b86f6f9-906a-4ce0-b96b-31079c83bb54",
            "f5ec27a5-75a6-48a9-b86c-2974a78e440e",
            "d9f09858-e370-4912-8f98-b6bf337b071b",
            "27412cec-3630-4903-a124-452a009fe43f",
            "cc14d473-1f29-4015-bfd8-8293cba4199f",
            "bae97e86-8505-47fb-8c70-f4b09e9b5a52",
            "5919a51b-127d-48e9-bcba-592d879725f2",
            "04d7199f-bc9b-4495-ad9b-09fddbb0f092",
            "87757a10-654a-4e0b-ba7f-61f994182a34",
            "6d414013-6cf9-41d8-961c-8be0189d9f81",
            "c1d0ea60-69a6-4022-8cbc-c86d224bfa08"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
          "title": "Test 10Lines game: 20, 36 -  16",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 278,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "970a1ee4-ee2a-4e1b-a2bb-ab27ad29b36e",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "0be6a307-4830-4565-b1a4-b2a7a5301bf7",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "666d012b-60ab-4895-8fe1-abcffd491e3c",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "dca6e625-1dc8-402a-89fc-ea06d87f7783",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "e7e75907-8f70-4cbe-8961-2073d3ca5a64",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "f66f785d-8157-4651-9005-c945b76b0348",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "19ff7b3b-b235-4082-b32f-bde8f461dbdf",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "97cdea73-95d9-4b20-8be4-17ca2baaddc2",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5db6898a-6cbf-4959-8c29-12a57acebbba",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "cd24e3aa-4d1d-4206-b8dd-e6257ed1d6ae",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7d91d652-7c2d-4636-afb7-acbb7a321d6a",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "393ff2c3-4ffa-4b02-a680-ee0b6be28c5c",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "5b8e6c23-e641-4b41-ad9b-680209c0f36f",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "afade073-a7c4-4c20-a2f2-1cc6c81ac1aa",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "da6de574-7ac6-4424-a7de-59fb275560a5",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "3326a8a5-abde-4259-9318-5f487ad18df1",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "77895cc6-354e-433f-bb97-2ca95dff1150",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f882d129-0432-4ca2-b547-3b136596a05f",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  16 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "53b4bf39-7c50-4761-81d5-af3ba448cec1",
              "parentUUID": "60fd52d6-90a8-4dbc-8a7b-13202370b21a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "666d012b-60ab-4895-8fe1-abcffd491e3c",
            "dca6e625-1dc8-402a-89fc-ea06d87f7783",
            "e7e75907-8f70-4cbe-8961-2073d3ca5a64",
            "f66f785d-8157-4651-9005-c945b76b0348",
            "19ff7b3b-b235-4082-b32f-bde8f461dbdf",
            "97cdea73-95d9-4b20-8be4-17ca2baaddc2",
            "5db6898a-6cbf-4959-8c29-12a57acebbba",
            "cd24e3aa-4d1d-4206-b8dd-e6257ed1d6ae",
            "7d91d652-7c2d-4636-afb7-acbb7a321d6a",
            "393ff2c3-4ffa-4b02-a680-ee0b6be28c5c",
            "5b8e6c23-e641-4b41-ad9b-680209c0f36f",
            "afade073-a7c4-4c20-a2f2-1cc6c81ac1aa",
            "da6de574-7ac6-4424-a7de-59fb275560a5",
            "3326a8a5-abde-4259-9318-5f487ad18df1",
            "77895cc6-354e-433f-bb97-2ca95dff1150",
            "f882d129-0432-4ca2-b547-3b136596a05f",
            "53b4bf39-7c50-4761-81d5-af3ba448cec1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
          "title": "Test 10Lines game: 20, 36 -  17",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 333,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d64db8e4-3aee-43d4-8b11-61dfd609241e",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "ca34adc2-ade9-477e-bf43-156c73815486",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "ec72766f-e4ce-4c94-b21d-119c62e696b5",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "7c6666e5-f51b-4a8a-a906-7f99b4095717",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "354758da-ff66-4dbb-b940-45e9e6dfdae5",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "f843be6f-3596-42d9-b710-5d79598bcc2b",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "2d2e8c8b-0903-4527-a4cf-8d281dfba862",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "1521e271-47d6-4809-ab4f-48e7a630d342",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "794fc5d3-08f0-4ed8-90e4-7449251a6213",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "a8c176d2-0c33-4a49-8b41-a2c40b1514c7",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "345ff9d9-0987-4c2e-92de-f2dafad969b4",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "859b076e-9352-4982-afe9-e4f58b094776",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 balance is not change",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "56e14423-4dd4-43d0-b765-0f7b2bce32b2",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "3a258a97-441f-468c-b664-cc6f3dda6b22",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "8c7c40d9-20cc-4d32-9d30-603b2b465bc5",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "08da9842-d6b9-4dd3-ba7c-19f958c552a5",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "520d1bc4-992d-40c7-8d5c-18b167fe3791",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3a33bbe7-471b-4a3c-96d2-f538ac51bc6f",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  17 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "efab1903-2203-43e0-a24d-b28a026f20d1",
              "parentUUID": "c99c20cc-b5e1-4456-86c3-32775ae928e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec72766f-e4ce-4c94-b21d-119c62e696b5",
            "7c6666e5-f51b-4a8a-a906-7f99b4095717",
            "354758da-ff66-4dbb-b940-45e9e6dfdae5",
            "f843be6f-3596-42d9-b710-5d79598bcc2b",
            "2d2e8c8b-0903-4527-a4cf-8d281dfba862",
            "1521e271-47d6-4809-ab4f-48e7a630d342",
            "794fc5d3-08f0-4ed8-90e4-7449251a6213",
            "a8c176d2-0c33-4a49-8b41-a2c40b1514c7",
            "345ff9d9-0987-4c2e-92de-f2dafad969b4",
            "859b076e-9352-4982-afe9-e4f58b094776",
            "56e14423-4dd4-43d0-b765-0f7b2bce32b2",
            "3a258a97-441f-468c-b664-cc6f3dda6b22",
            "8c7c40d9-20cc-4d32-9d30-603b2b465bc5",
            "08da9842-d6b9-4dd3-ba7c-19f958c552a5",
            "520d1bc4-992d-40c7-8d5c-18b167fe3791",
            "3a33bbe7-471b-4a3c-96d2-f538ac51bc6f",
            "efab1903-2203-43e0-a24d-b28a026f20d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "6a794229-97fa-4e31-a891-965ac3a95a8a",
          "title": "Test 10Lines game: 20, 36 -  18",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 315,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f7f84ee8-f4c8-44f6-aa85-a782a849c7ad",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "54121480-7f8a-4bfa-a11f-95a0622dad10",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d2dbbe86-c9ec-45a7-a80f-ba8ba712b759",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "fa1a334d-984d-4f26-8f12-0a1c1135d8fd",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "8d9e3012-ac85-4c17-8dcd-846917a15917",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "8e8c5907-a488-4e06-b716-fd8c87a58861",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "4734d527-eda7-4c1b-b926-641e7a52daa3",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "627d12aa-b60c-433d-960d-e0a7168b74f7",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e4c04406-ff82-4512-9a90-8b0aaacc6c57",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "76396625-49f6-4bd1-abaa-8956d89a4185",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "12240e60-911e-4c2d-b72f-89fb3553efb7",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4bb443c9-fa3f-4a96-8f6b-4884533ac283",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "6b9c62e0-73eb-4537-8dfa-6bc7dfb8d3da",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5297abbf-4294-4321-af74-8fadd7ad00d5",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "c3122e5c-cbb5-4a0a-b9d7-98f6f4f6c009",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "02d02bd6-e0b8-4bab-8544-a22b8e326c3c",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0883849a-7942-4b08-86b1-eeefe4f1a981",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "4731f557-153f-4953-b56b-eccdbdccd757",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  18 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e76c7101-be2e-4a92-9226-989b1d040504",
              "parentUUID": "6a794229-97fa-4e31-a891-965ac3a95a8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2dbbe86-c9ec-45a7-a80f-ba8ba712b759",
            "fa1a334d-984d-4f26-8f12-0a1c1135d8fd",
            "8d9e3012-ac85-4c17-8dcd-846917a15917",
            "8e8c5907-a488-4e06-b716-fd8c87a58861",
            "4734d527-eda7-4c1b-b926-641e7a52daa3",
            "627d12aa-b60c-433d-960d-e0a7168b74f7",
            "e4c04406-ff82-4512-9a90-8b0aaacc6c57",
            "76396625-49f6-4bd1-abaa-8956d89a4185",
            "12240e60-911e-4c2d-b72f-89fb3553efb7",
            "4bb443c9-fa3f-4a96-8f6b-4884533ac283",
            "6b9c62e0-73eb-4537-8dfa-6bc7dfb8d3da",
            "5297abbf-4294-4321-af74-8fadd7ad00d5",
            "c3122e5c-cbb5-4a0a-b9d7-98f6f4f6c009",
            "02d02bd6-e0b8-4bab-8544-a22b8e326c3c",
            "0883849a-7942-4b08-86b1-eeefe4f1a981",
            "4731f557-153f-4953-b56b-eccdbdccd757",
            "e76c7101-be2e-4a92-9226-989b1d040504"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
          "title": "Test 10Lines game: 20, 36 -  19",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 289,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b4016371-dd94-4323-ae2b-169b2d922784",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "02bb2c1f-ba72-4bb9-9ba6-28285526ee51",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e43d3ce1-df80-4eb1-95ee-f913ad91b2cb",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "f6841391-7004-401e-8481-a67c792c1a88",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "08b8f328-8ce6-4c9c-91cc-5bf99613ccff",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6825442d-4374-4bff-823c-8967ebc65a48",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "5fa26f04-63ea-4e3c-a9e2-31376e1cba82",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "4f68b31e-a6d3-4961-8603-43b8abeace6e",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c88cf883-9b66-4d86-b627-60bbb2133377",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "0a2162c7-3224-4e4b-8f27-5a9d647526ff",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "59c8f710-571b-4d14-ad56-3228e86caa52",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "dbafe625-8be1-4de0-be1c-7a138e777d9d",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "7da21e3e-8a99-4445-ad50-448254e3f7a3",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "f769d0d9-28cd-48ad-925c-dad242658b9d",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "528973f2-3e7d-4f24-95f7-d1e2542a7652",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "b119cd0c-2624-49e8-9e6c-a9a68b0b1a5f",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "c54b749f-793f-42ae-8d48-bb2ad01af968",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "7cae97ea-b5f8-4329-bddd-4ae52d11c291",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  19 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "15ce9d2b-5ded-4670-b55a-4d0492fada2a",
              "parentUUID": "d6d78eef-c1d5-4572-83ee-2b9a74635006",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e43d3ce1-df80-4eb1-95ee-f913ad91b2cb",
            "f6841391-7004-401e-8481-a67c792c1a88",
            "08b8f328-8ce6-4c9c-91cc-5bf99613ccff",
            "6825442d-4374-4bff-823c-8967ebc65a48",
            "5fa26f04-63ea-4e3c-a9e2-31376e1cba82",
            "4f68b31e-a6d3-4961-8603-43b8abeace6e",
            "c88cf883-9b66-4d86-b627-60bbb2133377",
            "0a2162c7-3224-4e4b-8f27-5a9d647526ff",
            "59c8f710-571b-4d14-ad56-3228e86caa52",
            "dbafe625-8be1-4de0-be1c-7a138e777d9d",
            "7da21e3e-8a99-4445-ad50-448254e3f7a3",
            "f769d0d9-28cd-48ad-925c-dad242658b9d",
            "528973f2-3e7d-4f24-95f7-d1e2542a7652",
            "b119cd0c-2624-49e8-9e6c-a9a68b0b1a5f",
            "c54b749f-793f-42ae-8d48-bb2ad01af968",
            "7cae97ea-b5f8-4329-bddd-4ae52d11c291",
            "15ce9d2b-5ded-4670-b55a-4d0492fada2a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "fe803729-2f96-4703-9eff-9c6214abaa91",
          "title": "Test 10Lines game: 20, 36 -  20",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 319,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b56189d4-a415-44e8-a89b-041c5f918e8e",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "45fd248b-aeb0-4949-9d40-559b46e2bc25",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "8238f25a-cd64-40fc-92bc-e201262cec6c",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "cf2da2c5-cccb-4d3d-be79-bb2f29105ebc",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "0e230532-30e5-42b5-ab66-6148abf7df7d",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "a8db3001-d0e3-463b-b7fc-01150e10df60",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "1690af4e-ff1d-4225-97b6-759359cb2e9e",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "1bf8bb20-99b5-4c59-9064-9e15a87a2c71",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9b5fb614-4b20-4e94-8096-1748cf6aba40",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "f55d09f5-b34b-40f2-abff-ec8c1211110e",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "fb19f8bc-d34b-45ae-85bb-b4dbd233fa38",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0ded9953-d1a5-4a4e-b948-8e7896f7a530",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "67b18954-cda7-4844-8310-2426a2e8b3ce",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "4792661f-c13c-4424-aebc-83cd509d9de6",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "4ed64f74-2622-4fa5-b957-8c3bda9a48ea",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "15b50e5e-440f-4022-84fc-bfb8af5297f6",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "7ae0c6e7-b6ef-46b0-ab8d-7b9f58a5a8a3",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "981f52dc-ed57-4e55-a7d3-35a20d2ed56b",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  20 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "28dbdcd2-c14c-47a2-b899-fe0e0cafb018",
              "parentUUID": "fe803729-2f96-4703-9eff-9c6214abaa91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8238f25a-cd64-40fc-92bc-e201262cec6c",
            "cf2da2c5-cccb-4d3d-be79-bb2f29105ebc",
            "0e230532-30e5-42b5-ab66-6148abf7df7d",
            "a8db3001-d0e3-463b-b7fc-01150e10df60",
            "1690af4e-ff1d-4225-97b6-759359cb2e9e",
            "1bf8bb20-99b5-4c59-9064-9e15a87a2c71",
            "9b5fb614-4b20-4e94-8096-1748cf6aba40",
            "f55d09f5-b34b-40f2-abff-ec8c1211110e",
            "fb19f8bc-d34b-45ae-85bb-b4dbd233fa38",
            "0ded9953-d1a5-4a4e-b948-8e7896f7a530",
            "67b18954-cda7-4844-8310-2426a2e8b3ce",
            "4792661f-c13c-4424-aebc-83cd509d9de6",
            "4ed64f74-2622-4fa5-b957-8c3bda9a48ea",
            "15b50e5e-440f-4022-84fc-bfb8af5297f6",
            "7ae0c6e7-b6ef-46b0-ab8d-7b9f58a5a8a3",
            "981f52dc-ed57-4e55-a7d3-35a20d2ed56b",
            "28dbdcd2-c14c-47a2-b899-fe0e0cafb018"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d866a527-eb11-4983-b606-3d953dcaed4c",
          "title": "Test 10Lines game: 20, 36 -  21",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 289,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5083e050-f835-44d7-b92f-150b3ba724d9",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "ac9b9cfa-bc59-447a-83b8-fef2d9bdf1d2",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "107f25fb-d2b7-4aea-9c31-71b39c602c47",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "1affcc20-d1a4-4b43-9fe6-01f1a9111de9",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "6ec856e4-e02d-4aae-8f14-af6e81bc70e5",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "0979c3fb-4678-45d9-9136-60d1c12dbfdd",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "fe930d74-d98d-47ec-a1fa-c7c8e966f1da",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "6534a390-146b-43be-91ce-9b347d0b530e",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d0b4a60f-61e8-40ad-9ece-ce51b48cb32e",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "ebc2b27d-dde3-49e6-822a-940c3a5a70da",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "042cecdf-b277-473a-8565-47eea8d48318",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "40b862be-8313-4469-9237-0a4e3653dec5",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "81d77ec2-bb15-4323-930d-a61d2176de38",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "f8514e92-009d-45f1-af3e-b449ace97899",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "8c640c18-0194-455c-8fc8-5b08b4c200a0",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "09cefeda-0ea7-4e81-9795-88c6ad3a31cb",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "799cd89d-46a0-44fb-b891-e5691293447f",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ef5871b8-102d-4f51-b76b-b9647966c17b",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  21 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "fc2827e2-40d7-46cc-8f45-aa78bab13885",
              "parentUUID": "d866a527-eb11-4983-b606-3d953dcaed4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "107f25fb-d2b7-4aea-9c31-71b39c602c47",
            "1affcc20-d1a4-4b43-9fe6-01f1a9111de9",
            "6ec856e4-e02d-4aae-8f14-af6e81bc70e5",
            "0979c3fb-4678-45d9-9136-60d1c12dbfdd",
            "fe930d74-d98d-47ec-a1fa-c7c8e966f1da",
            "6534a390-146b-43be-91ce-9b347d0b530e",
            "d0b4a60f-61e8-40ad-9ece-ce51b48cb32e",
            "ebc2b27d-dde3-49e6-822a-940c3a5a70da",
            "042cecdf-b277-473a-8565-47eea8d48318",
            "40b862be-8313-4469-9237-0a4e3653dec5",
            "81d77ec2-bb15-4323-930d-a61d2176de38",
            "f8514e92-009d-45f1-af3e-b449ace97899",
            "8c640c18-0194-455c-8fc8-5b08b4c200a0",
            "09cefeda-0ea7-4e81-9795-88c6ad3a31cb",
            "799cd89d-46a0-44fb-b891-e5691293447f",
            "ef5871b8-102d-4f51-b76b-b9647966c17b",
            "fc2827e2-40d7-46cc-8f45-aa78bab13885"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
          "title": "Test 10Lines game: 20, 36 -  22",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 240,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5426a822-efba-4ace-8152-2d35f96b0da8",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "f72ec2b8-9a6d-48c7-ba18-c6db2c716aa7",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "8cf5173e-dd44-485e-855e-b173c0a4e594",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "309da864-68a8-490f-867b-a7a63dbbe4ce",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "a1dec0cd-1326-4645-b96b-debd6c30957c",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "f2af2662-8501-4064-a275-ea7466a00eab",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "343df5d0-2b69-4c03-bcd7-7a4b6ce99210",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "fa7841b7-a644-4ad9-98c1-f47025f40b4b",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "49b2483f-f2f7-4e7b-9f47-c7598083fcb4",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "c9967d97-bddf-48f6-af5d-6367efdf72c1",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4a49a25f-840b-40e6-9309-742720b81051",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0ad09445-5c5d-4f40-bae8-012839709596",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "592e79e2-a0cb-400e-9a54-9adbb20d1729",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "db63d091-bd7b-4670-bb7f-bd33745104a7",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "de3b4eab-69e7-4e24-8367-3ecceb0b96b4",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "78886a7f-bfc9-4402-9f92-310cc99e4f89",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "aa4f2d40-e3da-4fbb-8b27-68aaaba90e47",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "819a76de-41c0-4bc4-9b38-0472c7d0e5ba",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  22 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "19927bef-36c1-4b5c-8b39-ca66e92690fa",
              "parentUUID": "8317d6b7-1037-4b78-ae6c-6dfc258d860d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8cf5173e-dd44-485e-855e-b173c0a4e594",
            "309da864-68a8-490f-867b-a7a63dbbe4ce",
            "a1dec0cd-1326-4645-b96b-debd6c30957c",
            "f2af2662-8501-4064-a275-ea7466a00eab",
            "343df5d0-2b69-4c03-bcd7-7a4b6ce99210",
            "fa7841b7-a644-4ad9-98c1-f47025f40b4b",
            "49b2483f-f2f7-4e7b-9f47-c7598083fcb4",
            "c9967d97-bddf-48f6-af5d-6367efdf72c1",
            "4a49a25f-840b-40e6-9309-742720b81051",
            "0ad09445-5c5d-4f40-bae8-012839709596",
            "592e79e2-a0cb-400e-9a54-9adbb20d1729",
            "db63d091-bd7b-4670-bb7f-bd33745104a7",
            "de3b4eab-69e7-4e24-8367-3ecceb0b96b4",
            "78886a7f-bfc9-4402-9f92-310cc99e4f89",
            "aa4f2d40-e3da-4fbb-8b27-68aaaba90e47",
            "819a76de-41c0-4bc4-9b38-0472c7d0e5ba",
            "19927bef-36c1-4b5c-8b39-ca66e92690fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
          "title": "Test 10Lines game: 20, 36 -  23",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 317,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1dba7bdd-8328-4da5-b264-c56e0a5c2b73",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "4d49fde1-1d93-426c-92e3-caa469304408",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "1fc88d9c-ddb6-4712-a16d-31e3313a2f0d",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "bce9cca9-9f84-40c8-9c57-04171a057ea7",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "65662cf4-63a1-423c-a3ce-1e3e5d412190",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "88665bab-4a27-499b-ae05-50f46fbb425c",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "4978cc00-db68-462f-a4ec-89290d56f79e",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "49ff4c85-b141-4788-a694-3cc8e1c11dd5",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "de28ed28-b342-49d8-bae4-d5d10fc8763e",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "3e5eb905-7ae3-4026-b249-81e00e941b5e",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 Check the number of free spins",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "02653eb9-5c71-46cc-a017-a2475d24cdbc",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "57f94a51-7576-483c-941a-a1879eecf585",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "498b9afa-6ae0-4604-8e5f-f3b94a9ae1d4",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "3171fa2d-af19-4dcf-a10a-d28646d8b263",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "81297fd5-74e8-4801-bf62-d30bac1493d2",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "a9a95052-5a35-47b4-a31a-47a36efcdd28",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "40d5c1dc-f62c-4c74-92e0-41b8272b2b97",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f36b8604-aeda-40bf-8c9d-b7f67f54ed4c",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  23 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "4e1c15d2-817f-4221-95d6-584b09a10e3b",
              "parentUUID": "d35be110-59db-4fcc-8cdb-54b4c85bf3a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1fc88d9c-ddb6-4712-a16d-31e3313a2f0d",
            "bce9cca9-9f84-40c8-9c57-04171a057ea7",
            "65662cf4-63a1-423c-a3ce-1e3e5d412190",
            "88665bab-4a27-499b-ae05-50f46fbb425c",
            "4978cc00-db68-462f-a4ec-89290d56f79e",
            "49ff4c85-b141-4788-a694-3cc8e1c11dd5",
            "de28ed28-b342-49d8-bae4-d5d10fc8763e",
            "3e5eb905-7ae3-4026-b249-81e00e941b5e",
            "02653eb9-5c71-46cc-a017-a2475d24cdbc",
            "57f94a51-7576-483c-941a-a1879eecf585",
            "498b9afa-6ae0-4604-8e5f-f3b94a9ae1d4",
            "3171fa2d-af19-4dcf-a10a-d28646d8b263",
            "81297fd5-74e8-4801-bf62-d30bac1493d2",
            "a9a95052-5a35-47b4-a31a-47a36efcdd28",
            "40d5c1dc-f62c-4c74-92e0-41b8272b2b97",
            "f36b8604-aeda-40bf-8c9d-b7f67f54ed4c",
            "4e1c15d2-817f-4221-95d6-584b09a10e3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "21172919-4230-4946-8f0d-443ffa98361e",
          "title": "Test 10Lines game: 20, 36 -  24",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 279,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9265fbb6-d9a5-40b5-b72f-3ca8206dc194",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "aecea7d0-1a6e-47f4-adab-302132ee2b32",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "68e9ad44-728e-46e5-a5e2-26e983f2d603",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "8b44f6c7-4c0b-477a-8c1c-01bea4634321",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "31e6d737-5ec0-4e46-8d00-2169219e46db",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "96b2780f-fa2f-4988-8479-e23b20767ef2",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "7828e16c-b17b-4b09-af59-1f7e7f1b98c3",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "cf81db8a-5dc1-4a44-88ea-6b1fbb315a23",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "16f2aacb-bd89-4cb2-9491-a629832e9573",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "050de7ab-545e-4251-828d-0f4d24933d08",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ccbc0b48-07a2-44bd-b45c-b433f612b36d",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9289bd6f-6cc5-4bf1-acf8-a61d9e07aca9",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "2a0c93c5-9c40-4220-b734-f50aeb19e0a0",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "d59f8005-eadf-4739-9526-efaea6194a34",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "22839e81-7018-4643-8fc9-7dc7a513ba06",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "37df6340-cba1-4c98-a91d-383a756d465b",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "57f2a482-d7a6-4206-9ebe-3548ec0065a6",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "9091c63c-29e3-4676-8030-05b56cabebc9",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  24 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e6985661-eeab-422f-bf62-be0d04d6143d",
              "parentUUID": "21172919-4230-4946-8f0d-443ffa98361e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "68e9ad44-728e-46e5-a5e2-26e983f2d603",
            "8b44f6c7-4c0b-477a-8c1c-01bea4634321",
            "31e6d737-5ec0-4e46-8d00-2169219e46db",
            "96b2780f-fa2f-4988-8479-e23b20767ef2",
            "7828e16c-b17b-4b09-af59-1f7e7f1b98c3",
            "cf81db8a-5dc1-4a44-88ea-6b1fbb315a23",
            "16f2aacb-bd89-4cb2-9491-a629832e9573",
            "050de7ab-545e-4251-828d-0f4d24933d08",
            "ccbc0b48-07a2-44bd-b45c-b433f612b36d",
            "9289bd6f-6cc5-4bf1-acf8-a61d9e07aca9",
            "2a0c93c5-9c40-4220-b734-f50aeb19e0a0",
            "d59f8005-eadf-4739-9526-efaea6194a34",
            "22839e81-7018-4643-8fc9-7dc7a513ba06",
            "37df6340-cba1-4c98-a91d-383a756d465b",
            "57f2a482-d7a6-4206-9ebe-3548ec0065a6",
            "9091c63c-29e3-4676-8030-05b56cabebc9",
            "e6985661-eeab-422f-bf62-be0d04d6143d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4706ca31-8450-4ff6-af8a-09504eefa289",
          "title": "Test 10Lines game: 20, 36 -  25",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 288,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "488ae027-2c3a-477f-bdc7-e7f8b4f06762",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "f595d590-2b2c-405e-8f6f-39d1d5208753",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "3f0827d6-5084-468f-abfd-6c72f63fb223",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "2db30657-cb23-45d2-8331-14af935cecd7",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "c18a0b12-c5ef-4ad5-995e-09fa4433a2f5",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "80faeeb5-e909-4078-9435-e7a8f3820ce5",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "c854efd6-4ba6-42c7-a31a-3627f4777255",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d9d1b011-f018-46bb-8486-c42e79023f50",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1ec8e80f-fb97-452f-b451-e8c35d49dc32",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "28c3d38b-f234-4734-86c3-024395eb6c9b",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4a4441b6-8c2e-4fa8-8eb0-a9967f66ee02",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bcfe9e26-8e36-4324-b010-bf877102dbd4",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "27dcaef4-2393-4e31-a59b-4e29f449a506",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "6e9a9e17-1bc3-4962-878a-44367c543289",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "7ac383d2-06a7-46c8-a387-5e34199572e9",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "ec66e74c-f3df-411f-a42e-7c6ce3fdd557",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "3fda92b4-d076-453f-975c-f1fac4775e17",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "59fb026d-4b3b-40eb-9e9e-11435ca61f96",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  25 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e1612f77-4b75-4956-ba36-cc3734cc2a4d",
              "parentUUID": "4706ca31-8450-4ff6-af8a-09504eefa289",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f0827d6-5084-468f-abfd-6c72f63fb223",
            "2db30657-cb23-45d2-8331-14af935cecd7",
            "c18a0b12-c5ef-4ad5-995e-09fa4433a2f5",
            "80faeeb5-e909-4078-9435-e7a8f3820ce5",
            "c854efd6-4ba6-42c7-a31a-3627f4777255",
            "d9d1b011-f018-46bb-8486-c42e79023f50",
            "1ec8e80f-fb97-452f-b451-e8c35d49dc32",
            "28c3d38b-f234-4734-86c3-024395eb6c9b",
            "4a4441b6-8c2e-4fa8-8eb0-a9967f66ee02",
            "bcfe9e26-8e36-4324-b010-bf877102dbd4",
            "27dcaef4-2393-4e31-a59b-4e29f449a506",
            "6e9a9e17-1bc3-4962-878a-44367c543289",
            "7ac383d2-06a7-46c8-a387-5e34199572e9",
            "ec66e74c-f3df-411f-a42e-7c6ce3fdd557",
            "3fda92b4-d076-453f-975c-f1fac4775e17",
            "59fb026d-4b3b-40eb-9e9e-11435ca61f96",
            "e1612f77-4b75-4956-ba36-cc3734cc2a4d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
          "title": "Test 10Lines game: 20, 36 -  26",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 312,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "79af0cd2-c708-4958-ad55-487c95c5ad49",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "3bcbf8fa-0208-49c5-a52c-c64c06d067f4",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "5393ac35-7d59-43b0-a812-27621dfe26fc",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "bf130465-daa4-4287-8cf6-1118f76eecc5",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "33e5ce65-e637-41d0-b135-3e939bd8f0e2",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "684e0f4c-7638-4461-b401-122220d71f48",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "c826e7ed-b60b-437e-9a55-08ee2981979a",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d8e58d8e-fd81-4e8c-ac17-036a9da31a09",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "39e6bbf9-968a-47fa-9d76-8915bf2e464d",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "31251fba-14cf-4357-9531-edfef528ad48",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "09cf2bf0-d5b8-419a-ab4c-0b96f62bb5dc",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "dcd760d9-83d1-482a-8081-dc2e46dbcec6",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "121018fb-7bc5-4822-9a10-8e9dbe8ce453",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "ab0d671e-c7c9-466c-8de4-084bd78940ea",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "291721b1-907a-4d01-bff8-8dfb98102dd7",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "9be4be9b-92f6-4c6f-a717-c217216d5152",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "2100a086-eecd-4354-a56d-f4334970bef5",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c3107335-a14e-428f-8791-d584ffc26b3e",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  26 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "37d4d5a3-70a6-46c1-ad92-5b975e277ecb",
              "parentUUID": "670bb67d-7ef4-451d-a2a6-eb8cd0b2110f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5393ac35-7d59-43b0-a812-27621dfe26fc",
            "bf130465-daa4-4287-8cf6-1118f76eecc5",
            "33e5ce65-e637-41d0-b135-3e939bd8f0e2",
            "684e0f4c-7638-4461-b401-122220d71f48",
            "c826e7ed-b60b-437e-9a55-08ee2981979a",
            "d8e58d8e-fd81-4e8c-ac17-036a9da31a09",
            "39e6bbf9-968a-47fa-9d76-8915bf2e464d",
            "31251fba-14cf-4357-9531-edfef528ad48",
            "09cf2bf0-d5b8-419a-ab4c-0b96f62bb5dc",
            "dcd760d9-83d1-482a-8081-dc2e46dbcec6",
            "121018fb-7bc5-4822-9a10-8e9dbe8ce453",
            "ab0d671e-c7c9-466c-8de4-084bd78940ea",
            "291721b1-907a-4d01-bff8-8dfb98102dd7",
            "9be4be9b-92f6-4c6f-a717-c217216d5152",
            "2100a086-eecd-4354-a56d-f4334970bef5",
            "c3107335-a14e-428f-8791-d584ffc26b3e",
            "37d4d5a3-70a6-46c1-ad92-5b975e277ecb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
          "title": "Test 10Lines game: 20, 36 -  27",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 300,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4d134a62-f50c-4d28-a788-af9c15fe3bb2",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "d3084f81-0d32-4d6b-8b6b-7296f30821af",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "807709f3-4182-4c05-918b-3656d16c9a5b",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "42951e94-c8ac-4942-a647-1fac28b924a2",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "d297a957-0fd1-4125-aac0-5279cbe09015",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "46728c88-cc27-405c-9835-a4fa7de9927c",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "c7327765-247f-4b0b-8fd9-82fb748a6e44",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "0102484e-be11-4fc8-9426-d89bccb15aed",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9da700f6-eb04-43fa-8340-e7d07ef065ca",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "b88b06f1-fa7e-478e-8765-3305f076f599",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "02bda1b2-12ee-4cc6-b629-330e7320b35f",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "dee15afd-d3de-4657-bedd-d7c9f48ea35e",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "66bc2395-d307-41ea-8835-9132f96129e6",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "30c3b0ae-f0f3-47a4-9406-5d6ce97c31f7",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "a84a1111-bc5e-4a7c-9d5b-9139fcbb66ce",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "5213253d-9e92-4437-ace5-b75844b41b8f",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "b29c063a-f7d9-4ac5-8707-49462d95ed71",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f2129e39-3f7f-4544-b661-7ed716902c99",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  27 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "1ccd0a9a-572f-40d6-8e70-fdbdc2b0b2d9",
              "parentUUID": "cd176b83-b4c3-40c7-8ccb-ec6ce597d0f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "807709f3-4182-4c05-918b-3656d16c9a5b",
            "42951e94-c8ac-4942-a647-1fac28b924a2",
            "d297a957-0fd1-4125-aac0-5279cbe09015",
            "46728c88-cc27-405c-9835-a4fa7de9927c",
            "c7327765-247f-4b0b-8fd9-82fb748a6e44",
            "0102484e-be11-4fc8-9426-d89bccb15aed",
            "9da700f6-eb04-43fa-8340-e7d07ef065ca",
            "b88b06f1-fa7e-478e-8765-3305f076f599",
            "02bda1b2-12ee-4cc6-b629-330e7320b35f",
            "dee15afd-d3de-4657-bedd-d7c9f48ea35e",
            "66bc2395-d307-41ea-8835-9132f96129e6",
            "30c3b0ae-f0f3-47a4-9406-5d6ce97c31f7",
            "a84a1111-bc5e-4a7c-9d5b-9139fcbb66ce",
            "5213253d-9e92-4437-ace5-b75844b41b8f",
            "b29c063a-f7d9-4ac5-8707-49462d95ed71",
            "f2129e39-3f7f-4544-b661-7ed716902c99",
            "1ccd0a9a-572f-40d6-8e70-fdbdc2b0b2d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c45bc625-d939-4f4b-a536-b59af1c997ed",
          "title": "Test 10Lines game: 20, 36 -  28",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 298,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "90be622f-ff1e-4edd-9b6b-2e8c664d1e31",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "e815bcef-23fd-477f-be0c-16c50fdd35e0",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "4c87e17b-2cb5-4869-b9f1-bbd5dc4061a6",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "5ea62ee3-77b2-47be-928d-6f43122d9327",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "c89487c6-fc11-4a74-b08b-7d100f903a11",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "499e9119-4e2d-48f2-898d-983e60f87f1e",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "c9830475-9ee2-46e6-b38f-6848cf1144f0",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "39e35689-814c-4944-9020-6ef6d3f002fd",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bfcc308b-a560-4924-adad-c09409d9b445",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "fe9a030e-a1d3-46cc-9fa1-171a25b48d04",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e066d000-a3ad-4ae3-bfbe-6564bcf2bce5",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "90cabaf3-fe60-4320-8700-4bd153d113fe",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "37591756-a270-485e-96a7-7d01e950f9df",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "f19d8d4a-ca22-49bb-b6ca-dc6010a8bd35",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "012d0967-044a-4854-9647-30231772965c",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "29c76314-6cde-4e75-9df1-89c3197b2dbb",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0abfc42d-a768-45d7-8f57-d27d14ea86a3",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "478bed8a-4479-440b-a1df-7f31e5091452",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  28 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "bb7759c0-3ee6-43c2-93f0-18aa0762b9fd",
              "parentUUID": "c45bc625-d939-4f4b-a536-b59af1c997ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c87e17b-2cb5-4869-b9f1-bbd5dc4061a6",
            "5ea62ee3-77b2-47be-928d-6f43122d9327",
            "c89487c6-fc11-4a74-b08b-7d100f903a11",
            "499e9119-4e2d-48f2-898d-983e60f87f1e",
            "c9830475-9ee2-46e6-b38f-6848cf1144f0",
            "39e35689-814c-4944-9020-6ef6d3f002fd",
            "bfcc308b-a560-4924-adad-c09409d9b445",
            "fe9a030e-a1d3-46cc-9fa1-171a25b48d04",
            "e066d000-a3ad-4ae3-bfbe-6564bcf2bce5",
            "90cabaf3-fe60-4320-8700-4bd153d113fe",
            "37591756-a270-485e-96a7-7d01e950f9df",
            "f19d8d4a-ca22-49bb-b6ca-dc6010a8bd35",
            "012d0967-044a-4854-9647-30231772965c",
            "29c76314-6cde-4e75-9df1-89c3197b2dbb",
            "0abfc42d-a768-45d7-8f57-d27d14ea86a3",
            "478bed8a-4479-440b-a1df-7f31e5091452",
            "bb7759c0-3ee6-43c2-93f0-18aa0762b9fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "956887da-1dce-4f79-869e-f503c21a06c6",
          "title": "Test 10Lines game: 20, 36 -  29",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 306,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "bb38d87e-0100-40d9-8c4c-9a091946c5d8",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "fdbae852-d190-4ad1-bf61-958c8ba7aa75",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "b8cfe283-cbda-4bbc-b5ab-68eb8bfda233",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "41c6124a-eb04-481e-8289-573512dd54c3",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ef4f96f7-6d71-437b-8e17-00e480cf6f16",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "56fa506d-7409-4907-8622-50536449cb6e",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "57afbc14-a230-40d5-a46a-d88c3e4f70e7",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "b1fc895c-5f00-405b-9f65-b12bffbc9652",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f615214e-64f9-4963-af36-6346560705c9",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "18885703-53a1-4414-a298-17b7932689cf",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0313332f-c1fd-4970-82db-a7bc7706c2a4",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3f4ca425-eac4-4de2-a2a4-2852a252b6d5",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "03670c3f-7705-4d31-9178-b279f28b3b87",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0eb146f5-097f-4fa8-8727-037c3f96f617",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "0e1ceb64-3b8d-45f1-9a26-c15ed1c7083e",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "c917180f-7d91-49f6-a61d-541bbe93b59f",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "8778dc73-82e5-47c4-b3b1-d0213b77c871",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f9e79471-81fb-4817-8a5d-15e8ca3c30f6",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  29 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "557551d8-8e27-47df-8d8e-f0a202200895",
              "parentUUID": "956887da-1dce-4f79-869e-f503c21a06c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8cfe283-cbda-4bbc-b5ab-68eb8bfda233",
            "41c6124a-eb04-481e-8289-573512dd54c3",
            "ef4f96f7-6d71-437b-8e17-00e480cf6f16",
            "56fa506d-7409-4907-8622-50536449cb6e",
            "57afbc14-a230-40d5-a46a-d88c3e4f70e7",
            "b1fc895c-5f00-405b-9f65-b12bffbc9652",
            "f615214e-64f9-4963-af36-6346560705c9",
            "18885703-53a1-4414-a298-17b7932689cf",
            "0313332f-c1fd-4970-82db-a7bc7706c2a4",
            "3f4ca425-eac4-4de2-a2a4-2852a252b6d5",
            "03670c3f-7705-4d31-9178-b279f28b3b87",
            "0eb146f5-097f-4fa8-8727-037c3f96f617",
            "0e1ceb64-3b8d-45f1-9a26-c15ed1c7083e",
            "c917180f-7d91-49f6-a61d-541bbe93b59f",
            "8778dc73-82e5-47c4-b3b1-d0213b77c871",
            "f9e79471-81fb-4817-8a5d-15e8ca3c30f6",
            "557551d8-8e27-47df-8d8e-f0a202200895"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
          "title": "Test 10Lines game: 20, 36 -  30",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 293,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "86e9b1f5-bcb8-4dbc-933d-1474af20dccb",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "7fd2bd8b-53e3-42f9-99bc-57ab5913fd29",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "17b7e83b-b4da-4d62-8954-78ebb3fd9c60",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "b8dca997-7752-47e5-81e8-16bfc498352c",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ff5e5f78-1ad8-4a05-acf3-b8a1f44eb015",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "803a7f4b-b7b0-452f-90d6-914883d56a45",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "b2ced52f-fbd0-440c-8c6e-6356013df480",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f743aa1a-24bc-4151-a793-aded674f2bfd",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2216a262-552c-4fa3-a163-e61bd2a516d7",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "a65287bc-e9de-41db-91ef-7780e032af6f",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8f668aa3-ef4a-4a90-a101-0800b493c491",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9b0f57a0-3e33-4254-8c6e-c987904c2cf9",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "27cb1dbc-ce0e-4f9b-979e-23bfded4b207",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a03f3877-c32a-459f-a3e5-2c0cabd1cf0f",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "c003b438-01ff-4266-a8b2-25a05f0ed8ec",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "1942f8d6-5997-4537-a139-3ee2aa7f946d",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "4fcb2c07-ff69-40be-b497-818a48c8eb55",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "898ca0f8-1b32-4b63-a63c-b11e1db1f85f",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  30 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c22f77de-cda1-4eb6-94d5-e3aa0d2185c6",
              "parentUUID": "ff83e1d4-27f9-42fb-828d-78ec2f8cfce1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17b7e83b-b4da-4d62-8954-78ebb3fd9c60",
            "b8dca997-7752-47e5-81e8-16bfc498352c",
            "ff5e5f78-1ad8-4a05-acf3-b8a1f44eb015",
            "803a7f4b-b7b0-452f-90d6-914883d56a45",
            "b2ced52f-fbd0-440c-8c6e-6356013df480",
            "f743aa1a-24bc-4151-a793-aded674f2bfd",
            "2216a262-552c-4fa3-a163-e61bd2a516d7",
            "a65287bc-e9de-41db-91ef-7780e032af6f",
            "8f668aa3-ef4a-4a90-a101-0800b493c491",
            "9b0f57a0-3e33-4254-8c6e-c987904c2cf9",
            "27cb1dbc-ce0e-4f9b-979e-23bfded4b207",
            "a03f3877-c32a-459f-a3e5-2c0cabd1cf0f",
            "c003b438-01ff-4266-a8b2-25a05f0ed8ec",
            "1942f8d6-5997-4537-a139-3ee2aa7f946d",
            "4fcb2c07-ff69-40be-b497-818a48c8eb55",
            "898ca0f8-1b32-4b63-a63c-b11e1db1f85f",
            "c22f77de-cda1-4eb6-94d5-e3aa0d2185c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
          "title": "Test 10Lines game: 20, 36 -  31",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 282,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1791ea5c-506b-4a74-add5-37dad8c95908",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "991084db-1e82-4dee-8567-5919df6c2461",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "8e0863bb-7151-408d-858e-be0176e7064a",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "aff8c029-79e4-40fa-bd69-ae14cf91d686",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "86f6d9ad-cf04-4a0a-bdda-21372564de19",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "3ce5f2a2-fdaf-4157-a8bf-78f7cb86453d",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "d29bc143-4147-4917-80b8-69ebfcbc2481",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "7a8746dd-c3d1-493c-a15a-b7fbc2aabb0a",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "fb990d99-4c4f-42a2-a9fc-b32f7f96bbfd",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "1a157604-2b94-44b2-87f1-b1fefc9770e2",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f784cd30-94ef-49a8-87f7-a1adf1507fb0",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "294ee98f-9952-447e-892c-24e3b6528ef3",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "c10ec35e-dcf9-4040-8684-ddd63139677d",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "b431f3e4-3d2a-49b8-90a3-926ea048f89b",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "3f0795e9-9356-41ca-984f-b727da338971",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "3fbdf738-8f47-4be0-9933-657a15dc4d6c",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 EWModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "3ed8d542-7389-41b0-8217-cd50db2d6f24",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3e88db7c-2b0b-4a25-b31c-b0dd88e6b6eb",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  31 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "8a82f25f-f1e5-4399-afba-1fe21eed06a7",
              "parentUUID": "6faf3f2b-4102-4ced-9612-7cd36e108a4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e0863bb-7151-408d-858e-be0176e7064a",
            "aff8c029-79e4-40fa-bd69-ae14cf91d686",
            "86f6d9ad-cf04-4a0a-bdda-21372564de19",
            "3ce5f2a2-fdaf-4157-a8bf-78f7cb86453d",
            "d29bc143-4147-4917-80b8-69ebfcbc2481",
            "7a8746dd-c3d1-493c-a15a-b7fbc2aabb0a",
            "fb990d99-4c4f-42a2-a9fc-b32f7f96bbfd",
            "1a157604-2b94-44b2-87f1-b1fefc9770e2",
            "f784cd30-94ef-49a8-87f7-a1adf1507fb0",
            "294ee98f-9952-447e-892c-24e3b6528ef3",
            "c10ec35e-dcf9-4040-8684-ddd63139677d",
            "b431f3e4-3d2a-49b8-90a3-926ea048f89b",
            "3f0795e9-9356-41ca-984f-b727da338971",
            "3fbdf738-8f47-4be0-9933-657a15dc4d6c",
            "3ed8d542-7389-41b0-8217-cd50db2d6f24",
            "3e88db7c-2b0b-4a25-b31c-b0dd88e6b6eb",
            "8a82f25f-f1e5-4399-afba-1fe21eed06a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
          "title": "Test 10Lines game: 20, 36 -  32",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 276,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ac8d8b2d-a6a8-4d75-8915-1027637e9009",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "19591f10-4b8f-49b9-8ff8-11ff931178bb",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a045b254-ad1d-456b-ae00-632e8c969068",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "6c2c1a59-7478-4201-ba69-099e4ce1af0e",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "cfd4201f-d449-4f4b-95ef-94956efb7c5c",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "5d3f8b0c-96be-4c89-acad-9fe38a376f07",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "535c2db5-3cfa-4e53-a03c-f007eee0f965",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a9ffc53d-3a7c-4b75-9f11-3cb7e68769c6",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1f6c1142-ef69-4dee-9397-5c6a61c29bd0",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "0bf0e69e-a029-4864-8f30-e8c0882f69c8",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bb580c10-8994-4417-9b30-812c9e8e729f",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8d673252-7d61-400f-b9db-53f27470ae28",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "6533b07c-32e1-45a0-9f53-d20ba4f69f14",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "cc278b3e-6861-446d-9ac5-83fbc64ce686",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "67d92b1d-e646-4e6e-ae60-491e642d5179",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "baaf48b8-8898-4a1a-bf6d-29ad8e0d451a",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "37773f64-bc73-4978-8f48-cb2bbf824f1a",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "2b81d752-a01a-4c84-a68d-e8515ab32057",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  32 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "dda494e9-0361-4a41-be58-fe5522e5deb9",
              "parentUUID": "f5c6ecdd-36b9-4fae-b9a6-ef41978a7593",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a045b254-ad1d-456b-ae00-632e8c969068",
            "6c2c1a59-7478-4201-ba69-099e4ce1af0e",
            "cfd4201f-d449-4f4b-95ef-94956efb7c5c",
            "5d3f8b0c-96be-4c89-acad-9fe38a376f07",
            "535c2db5-3cfa-4e53-a03c-f007eee0f965",
            "a9ffc53d-3a7c-4b75-9f11-3cb7e68769c6",
            "1f6c1142-ef69-4dee-9397-5c6a61c29bd0",
            "0bf0e69e-a029-4864-8f30-e8c0882f69c8",
            "bb580c10-8994-4417-9b30-812c9e8e729f",
            "8d673252-7d61-400f-b9db-53f27470ae28",
            "6533b07c-32e1-45a0-9f53-d20ba4f69f14",
            "cc278b3e-6861-446d-9ac5-83fbc64ce686",
            "67d92b1d-e646-4e6e-ae60-491e642d5179",
            "baaf48b8-8898-4a1a-bf6d-29ad8e0d451a",
            "37773f64-bc73-4978-8f48-cb2bbf824f1a",
            "2b81d752-a01a-4c84-a68d-e8515ab32057",
            "dda494e9-0361-4a41-be58-fe5522e5deb9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
          "title": "Test 10Lines game: 20, 36 -  33",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 277,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9a1f7300-790d-4036-a4f1-6ab00235940d",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "0f4a1d23-5a10-46d7-98e1-64bc02149935",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "13189059-cbd6-470b-81eb-3486af9e9ee8",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "01987337-bc4e-4d63-8758-cf41f1e2dc4d",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "86b84de5-52fc-46c4-a272-6e47a579489e",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "72834385-beef-4678-b605-006fd05cf065",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "b8a9cdb2-5666-4b8d-9cbf-9f947a47f101",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "7a6bfc69-73b7-4e79-80a4-e9a26d7a070d",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c852eac3-19cf-4120-b070-8b95c8082c30",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "1bea38c7-b33c-4ad8-9434-c1989c364c48",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "501cead9-b7ae-459a-84b0-a2ae8c38225a",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5476db4d-0020-48dc-ae65-6f0055c71fef",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "4618cfa1-f3cd-4d81-aa54-40afbf361547",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "7f9277a3-0da0-43de-80d9-eb536cbd39ab",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "12b335bf-7783-4fe0-886d-cac3163c0365",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "a5de5ab7-593f-46c8-b116-165dd3cffbc1",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "f07e07e3-ea1f-47f3-831e-35b79bdee0fe",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a93d3c20-d221-4528-84c9-af115f9314c1",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  33 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "294818e8-f3bb-453a-b32c-cfe6136bef9b",
              "parentUUID": "8d78800e-2ad2-4513-8a5d-d602757be5ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13189059-cbd6-470b-81eb-3486af9e9ee8",
            "01987337-bc4e-4d63-8758-cf41f1e2dc4d",
            "86b84de5-52fc-46c4-a272-6e47a579489e",
            "72834385-beef-4678-b605-006fd05cf065",
            "b8a9cdb2-5666-4b8d-9cbf-9f947a47f101",
            "7a6bfc69-73b7-4e79-80a4-e9a26d7a070d",
            "c852eac3-19cf-4120-b070-8b95c8082c30",
            "1bea38c7-b33c-4ad8-9434-c1989c364c48",
            "501cead9-b7ae-459a-84b0-a2ae8c38225a",
            "5476db4d-0020-48dc-ae65-6f0055c71fef",
            "4618cfa1-f3cd-4d81-aa54-40afbf361547",
            "7f9277a3-0da0-43de-80d9-eb536cbd39ab",
            "12b335bf-7783-4fe0-886d-cac3163c0365",
            "a5de5ab7-593f-46c8-b116-165dd3cffbc1",
            "f07e07e3-ea1f-47f3-831e-35b79bdee0fe",
            "a93d3c20-d221-4528-84c9-af115f9314c1",
            "294818e8-f3bb-453a-b32c-cfe6136bef9b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
          "title": "Test 10Lines game: 20, 36 -  34",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 285,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1a8b6898-962a-4637-ba2b-52f1d72a9c68",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "459a2c04-f727-473a-96e9-856fbd1abe9a",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "7a1cadb5-0953-473f-a7ae-3e05dc1d464a",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "bac55e2c-a5ee-4ee2-a959-bcd91283d2f5",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "305c9812-9e16-450f-a4aa-c6b90151c984",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "71dfabd6-07eb-4b9b-8ffb-25eaa31e9313",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 check correct accrual of winnings",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "72c64938-8ba9-402a-b48e-b9fd5367a2ba",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "85cc2111-7317-4db2-95b4-e8d010ac6794",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "14b5b2aa-82ee-4c3a-a2bc-ab2a2c8687d7",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "ef2932ea-86f4-4e9f-bbae-70d0a626034c",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d5a1851d-401b-4164-8ada-faf5b7d83fe8",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8b4e6e4a-b805-4432-baf3-87d70703395f",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "980492fa-3c76-4cb5-b554-61244a903aad",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "54b590d9-5a21-410e-a2a9-1d4527492897",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "3d76ec02-9082-4ccd-9c44-4d0aa2247423",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e88ea851-5c1d-426f-8453-d9f8206ad526",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "cd31192b-4465-4f42-b3ff-21a71a1a233e",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b8cab57c-b8c2-4dc5-92b7-ca3b10695b64",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  34 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c9ae6946-d47c-4a0d-a45e-93ddd7366b50",
              "parentUUID": "1591a3d5-1b70-4931-a52b-22a4f504eed6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a1cadb5-0953-473f-a7ae-3e05dc1d464a",
            "bac55e2c-a5ee-4ee2-a959-bcd91283d2f5",
            "305c9812-9e16-450f-a4aa-c6b90151c984",
            "71dfabd6-07eb-4b9b-8ffb-25eaa31e9313",
            "72c64938-8ba9-402a-b48e-b9fd5367a2ba",
            "85cc2111-7317-4db2-95b4-e8d010ac6794",
            "14b5b2aa-82ee-4c3a-a2bc-ab2a2c8687d7",
            "ef2932ea-86f4-4e9f-bbae-70d0a626034c",
            "d5a1851d-401b-4164-8ada-faf5b7d83fe8",
            "8b4e6e4a-b805-4432-baf3-87d70703395f",
            "980492fa-3c76-4cb5-b554-61244a903aad",
            "54b590d9-5a21-410e-a2a9-1d4527492897",
            "3d76ec02-9082-4ccd-9c44-4d0aa2247423",
            "e88ea851-5c1d-426f-8453-d9f8206ad526",
            "cd31192b-4465-4f42-b3ff-21a71a1a233e",
            "b8cab57c-b8c2-4dc5-92b7-ca3b10695b64",
            "c9ae6946-d47c-4a0d-a45e-93ddd7366b50"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
          "title": "Test 10Lines game: 20, 36 -  35",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 275,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "81843465-cd9c-4b18-bfe8-1a28ca6a66e1",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "42299c7b-66a4-431b-8503-20fc042e2384",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "90da55e1-6a97-4290-9ced-bf2a835eab35",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "05851fc0-2cc7-4c2d-ae38-01b948e0f9d0",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "f1fadb92-370b-4539-8128-f8c7b7d0c595",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 check correct position of winning symbol",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6db87e5f-00c2-4c17-833b-e27ca8510c6d",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 check correct accrual of winnings",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "3eaaf9f6-1405-4945-a3e3-bc7172c74938",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "e93989ee-5a6d-419f-b84f-3666f4a6bf60",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "941cd65e-60a0-4264-95d0-70f616379c48",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "b1956373-0ec8-4f5e-9608-20b37c57e5a3",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cd1abcb7-5dae-4515-9dba-ce2b2350dcd3",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b34ea5c3-4623-47dc-a46f-63b6b32790ae",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "b332d7de-8aa4-44cb-abaa-9ec471a2741b",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "8995627b-8218-4d05-93d3-017a646f8078",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "aee10e0a-ee89-4a72-900d-422194d43540",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "f9557d87-6988-4b46-a78e-2a7ec8f31bb4",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "f49fa133-0b53-4db0-b14e-56f214b53ffc",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "136cbdea-a370-4935-bf92-140d1ca61512",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  35 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b9d5b0b7-86e0-4172-8ba9-15f353bddfd3",
              "parentUUID": "a9c09662-fa78-4e18-9609-45ef30dc9da9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90da55e1-6a97-4290-9ced-bf2a835eab35",
            "05851fc0-2cc7-4c2d-ae38-01b948e0f9d0",
            "f1fadb92-370b-4539-8128-f8c7b7d0c595",
            "6db87e5f-00c2-4c17-833b-e27ca8510c6d",
            "3eaaf9f6-1405-4945-a3e3-bc7172c74938",
            "e93989ee-5a6d-419f-b84f-3666f4a6bf60",
            "941cd65e-60a0-4264-95d0-70f616379c48",
            "b1956373-0ec8-4f5e-9608-20b37c57e5a3",
            "cd1abcb7-5dae-4515-9dba-ce2b2350dcd3",
            "b34ea5c3-4623-47dc-a46f-63b6b32790ae",
            "b332d7de-8aa4-44cb-abaa-9ec471a2741b",
            "8995627b-8218-4d05-93d3-017a646f8078",
            "aee10e0a-ee89-4a72-900d-422194d43540",
            "f9557d87-6988-4b46-a78e-2a7ec8f31bb4",
            "f49fa133-0b53-4db0-b14e-56f214b53ffc",
            "136cbdea-a370-4935-bf92-140d1ca61512",
            "b9d5b0b7-86e0-4172-8ba9-15f353bddfd3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
          "title": "Test 10Lines game: 20, 36 -  36",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 282,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ce5a0113-553e-4f4f-a96a-54eb75e3f3fa",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "56df5628-1962-4c8c-8a37-00dd88a97ba1",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "b61a6fc5-7300-4f81-b6cf-c943a2eda6cf",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "e7b63f2b-9583-4f6b-a8f6-b2bf7734d75e",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "8f2d99ff-ea3a-49f1-aba7-adc79664313b",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d3c49675-b83f-4fe9-b710-76ec52574dd0",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "496ef46f-de3c-4b8c-92a0-e15b985dbd5c",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f4757079-41af-4a0c-9676-30d704cfbc8b",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7ce019c7-0ac3-415c-97e6-d100a5bce0c0",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "46e8f154-72ba-47b5-a40f-9a5c724ec65e",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c54dbe5b-0abf-4f9b-a5bd-0ea33d314c1d",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d8b24c8e-9eac-4b42-bc57-a41c4b4b21a2",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "d11ce15c-4270-4eab-8921-2e21c4057c69",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0d6ca516-1ced-42f5-bd9b-ec08b3137e26",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "bbe31a12-859a-48b9-b1f5-0e54f7bd64ad",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "56db0974-c639-473f-b7c4-af42822a9ad3",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "7e852812-d104-4657-ab4f-5836976d427b",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "4f2ff274-d7b3-4fbf-82c3-e9ed2f514a24",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  36 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "d80e7cc4-3df5-4109-9668-20aa76945ac0",
              "parentUUID": "abb32cf4-0230-4eee-85d3-6d6896ce334c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b61a6fc5-7300-4f81-b6cf-c943a2eda6cf",
            "e7b63f2b-9583-4f6b-a8f6-b2bf7734d75e",
            "8f2d99ff-ea3a-49f1-aba7-adc79664313b",
            "d3c49675-b83f-4fe9-b710-76ec52574dd0",
            "496ef46f-de3c-4b8c-92a0-e15b985dbd5c",
            "f4757079-41af-4a0c-9676-30d704cfbc8b",
            "7ce019c7-0ac3-415c-97e6-d100a5bce0c0",
            "46e8f154-72ba-47b5-a40f-9a5c724ec65e",
            "c54dbe5b-0abf-4f9b-a5bd-0ea33d314c1d",
            "d8b24c8e-9eac-4b42-bc57-a41c4b4b21a2",
            "d11ce15c-4270-4eab-8921-2e21c4057c69",
            "0d6ca516-1ced-42f5-bd9b-ec08b3137e26",
            "bbe31a12-859a-48b9-b1f5-0e54f7bd64ad",
            "56db0974-c639-473f-b7c4-af42822a9ad3",
            "7e852812-d104-4657-ab4f-5836976d427b",
            "4f2ff274-d7b3-4fbf-82c3-e9ed2f514a24",
            "d80e7cc4-3df5-4109-9668-20aa76945ac0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
          "title": "Test 10Lines game: 20, 36 -  37",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 296,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f2c4917a-1d60-4ee0-8f17-a0a8ab50bf5f",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "09db30c0-c750-4cd1-af95-536e4c9f952e",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "37c60d45-af1b-407d-bb0d-bd568043cb5c",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "8dbaff0d-eac4-4bbe-bf7e-a559c6bdc430",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "d870abca-ae92-4044-9c3d-353473a179d3",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "1234b63c-60de-4462-8ff3-f9066d31c867",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "adb5e96a-2d8c-4560-9f9a-899b2fb8ed2f",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "9632953a-fca3-4b99-8a8f-ee04355bb613",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "37b0213b-dd7c-4078-ab1c-1952d25cf4c2",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "7af1d49b-5088-4393-aefe-b2e90f84966e",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "19e71cb8-ea4c-4487-94f0-d8b5cb1309fa",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "dc90a573-2de0-4aee-8835-545f00c02f92",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "bcf82c15-0749-465f-9cc7-3ac7c474e0b6",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0972e040-5160-48a4-b34a-ab6bc50fa617",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "203a1532-be83-435e-92d0-7f4c005aa1e2",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "cbeae155-1709-49e8-8079-ae6082ac9b77",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "c8d394bb-8ce5-4bd4-8599-0df9c56e7a46",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "cd5bf402-2a5a-4e14-8a20-9f403c453034",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  37 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "41679b4e-d0a5-49ad-b571-1c1846afde93",
              "parentUUID": "8c5f49dc-3a5b-42f1-a581-d4b74810a038",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37c60d45-af1b-407d-bb0d-bd568043cb5c",
            "8dbaff0d-eac4-4bbe-bf7e-a559c6bdc430",
            "d870abca-ae92-4044-9c3d-353473a179d3",
            "1234b63c-60de-4462-8ff3-f9066d31c867",
            "adb5e96a-2d8c-4560-9f9a-899b2fb8ed2f",
            "9632953a-fca3-4b99-8a8f-ee04355bb613",
            "37b0213b-dd7c-4078-ab1c-1952d25cf4c2",
            "7af1d49b-5088-4393-aefe-b2e90f84966e",
            "19e71cb8-ea4c-4487-94f0-d8b5cb1309fa",
            "dc90a573-2de0-4aee-8835-545f00c02f92",
            "bcf82c15-0749-465f-9cc7-3ac7c474e0b6",
            "0972e040-5160-48a4-b34a-ab6bc50fa617",
            "203a1532-be83-435e-92d0-7f4c005aa1e2",
            "cbeae155-1709-49e8-8079-ae6082ac9b77",
            "c8d394bb-8ce5-4bd4-8599-0df9c56e7a46",
            "cd5bf402-2a5a-4e14-8a20-9f403c453034",
            "41679b4e-d0a5-49ad-b571-1c1846afde93"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
          "title": "Test 10Lines game: 20, 36 -  38",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 285,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "3eb358a4-ce0e-432d-b64e-14724f7ae78c",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "9f6cc052-c648-4af9-809e-11aee0e902d6",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "64deac69-448a-41b8-ad8f-8a26f344b32d",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "90c8d8d1-f423-4137-904a-e767476ff059",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "8d581759-1e23-417f-a81d-ea55ef1e3b68",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d1556acf-da5b-414d-94f4-675527ed7249",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "05eddc43-56a1-4f18-b48d-57462f2e1394",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "6a22ac1f-2660-4d68-9bd9-d96a2ddee3c2",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "44ade08f-38a1-49f0-9a4d-ae3a57637ecd",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "f537e50e-7ed2-43f9-90ec-3f33bd2fcf96",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e069ba41-c859-4563-90a4-d503d4cf707e",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b3adc39d-8561-43f9-b528-633fde7081a0",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "4f5c9f01-0054-4ad2-bb39-1f6ada840866",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "d37c3d57-3216-472e-a35f-14d843a0a57f",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "cc0c2735-e8eb-48ca-a2c9-a501dff18cf5",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "fb5b2c64-41ae-45f1-9ec6-a33fbd682450",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "1979efe4-d475-4610-91d9-f3a760939968",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ceb14526-afb3-4801-9d89-2b2fa49f6f03",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  38 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "9af0f1d7-7d63-45c1-9775-55d4c67101cc",
              "parentUUID": "3fa47f33-1ee2-4b4e-81f0-84b148f00731",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64deac69-448a-41b8-ad8f-8a26f344b32d",
            "90c8d8d1-f423-4137-904a-e767476ff059",
            "8d581759-1e23-417f-a81d-ea55ef1e3b68",
            "d1556acf-da5b-414d-94f4-675527ed7249",
            "05eddc43-56a1-4f18-b48d-57462f2e1394",
            "6a22ac1f-2660-4d68-9bd9-d96a2ddee3c2",
            "44ade08f-38a1-49f0-9a4d-ae3a57637ecd",
            "f537e50e-7ed2-43f9-90ec-3f33bd2fcf96",
            "e069ba41-c859-4563-90a4-d503d4cf707e",
            "b3adc39d-8561-43f9-b528-633fde7081a0",
            "4f5c9f01-0054-4ad2-bb39-1f6ada840866",
            "d37c3d57-3216-472e-a35f-14d843a0a57f",
            "cc0c2735-e8eb-48ca-a2c9-a501dff18cf5",
            "fb5b2c64-41ae-45f1-9ec6-a33fbd682450",
            "1979efe4-d475-4610-91d9-f3a760939968",
            "ceb14526-afb3-4801-9d89-2b2fa49f6f03",
            "9af0f1d7-7d63-45c1-9775-55d4c67101cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
          "title": "Test 10Lines game: 20, 36 -  39",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 293,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "bd3f00d3-f4cd-43c9-a274-7fcf0a3e7011",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "62578a7a-319c-42d6-904b-92a6eceaad15",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "b9754fa7-aee3-4ef5-9b67-a713a3bd1946",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "0081ac33-c829-4eb4-9430-6bdcbbe23703",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "84c2fe4a-baca-4021-8396-a554e32a1453",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "779f9af2-0ed0-4ae6-9b86-4cde3969cff0",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "800ff7e8-6d7c-4c56-8978-a4b0ddd26010",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "32f8cf81-2b66-4410-b260-8ff4debf36e4",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6ce1ca54-451d-4b28-a5c1-ee69e0175d24",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "3e6f725d-13cb-4cbb-84a4-792507f7de5c",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "29f81ae4-6509-407b-b1bb-e40258c5dee8",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "88f521fc-94f4-448a-a806-3cf964ad7652",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "99884600-9f3c-46e4-ad8e-563ef04a3b97",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "32d7a848-ab0e-45b5-9bd3-c8ffe607607b",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "9fc0b82a-abb2-41bc-b25b-8da328a18598",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "7e1bbf51-70a6-4616-b658-35e1d2544bf5",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "421f53a9-0eac-44c7-828d-19f84b4b8e36",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "78cac6f4-6c67-4700-b26f-0d207b4466bf",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  39 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "443ec39d-157a-4aa1-9467-263d87e91ee9",
              "parentUUID": "e3ee4924-ffca-4151-957a-c2a7a9f4fbd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9754fa7-aee3-4ef5-9b67-a713a3bd1946",
            "0081ac33-c829-4eb4-9430-6bdcbbe23703",
            "84c2fe4a-baca-4021-8396-a554e32a1453",
            "779f9af2-0ed0-4ae6-9b86-4cde3969cff0",
            "800ff7e8-6d7c-4c56-8978-a4b0ddd26010",
            "32f8cf81-2b66-4410-b260-8ff4debf36e4",
            "6ce1ca54-451d-4b28-a5c1-ee69e0175d24",
            "3e6f725d-13cb-4cbb-84a4-792507f7de5c",
            "29f81ae4-6509-407b-b1bb-e40258c5dee8",
            "88f521fc-94f4-448a-a806-3cf964ad7652",
            "99884600-9f3c-46e4-ad8e-563ef04a3b97",
            "32d7a848-ab0e-45b5-9bd3-c8ffe607607b",
            "9fc0b82a-abb2-41bc-b25b-8da328a18598",
            "7e1bbf51-70a6-4616-b658-35e1d2544bf5",
            "421f53a9-0eac-44c7-828d-19f84b4b8e36",
            "78cac6f4-6c67-4700-b26f-0d207b4466bf",
            "443ec39d-157a-4aa1-9467-263d87e91ee9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
          "title": "Test 10Lines game: 20, 36 -  40",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 275,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "cd45ac12-2c22-4f87-aa6c-af9f19d55533",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "947e54a3-b600-45ca-9e41-6da4068ec757",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "fab5ceb2-4aba-4c87-a83c-0e59fa67b9dc",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "3f5e82d9-aac8-4ec8-b370-15e5088c8b60",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "759bf678-4981-424d-b7ab-f15e628e1d4c",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "c3441c70-d7d1-4560-9dcf-50601afa2087",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "19232088-06c9-48f1-b1fb-ba46e96cab13",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "9ed76c40-23a0-4ec6-962b-5902464afc59",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9bb6a5ea-ddd8-49e4-8d1d-95ae4c99cd57",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "d77a462b-bdbc-404f-9666-991c55133430",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "18134e1e-09da-41cb-bae1-7ab97db635ec",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "30ff76ec-01ce-4558-8324-197d18ef24f4",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "0ba41b5c-01a8-4c58-a05a-f8f4b0f50e54",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5436cc0d-db15-41a4-b1f5-acd9e76bb45c",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "81f20156-592a-4618-893c-915ad15a02db",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "7a994f61-dbc2-427c-a125-18424718bbde",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "81ece9e2-f95b-4639-856d-6cd2afecbf85",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "123e3395-d61a-4360-bbf1-5f4001b010cc",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  40 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "29bf1e45-5592-4017-b0a0-56b3cfea36c4",
              "parentUUID": "ef7fc525-09cf-4f21-9798-3c3b7aa9ca6e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fab5ceb2-4aba-4c87-a83c-0e59fa67b9dc",
            "3f5e82d9-aac8-4ec8-b370-15e5088c8b60",
            "759bf678-4981-424d-b7ab-f15e628e1d4c",
            "c3441c70-d7d1-4560-9dcf-50601afa2087",
            "19232088-06c9-48f1-b1fb-ba46e96cab13",
            "9ed76c40-23a0-4ec6-962b-5902464afc59",
            "9bb6a5ea-ddd8-49e4-8d1d-95ae4c99cd57",
            "d77a462b-bdbc-404f-9666-991c55133430",
            "18134e1e-09da-41cb-bae1-7ab97db635ec",
            "30ff76ec-01ce-4558-8324-197d18ef24f4",
            "0ba41b5c-01a8-4c58-a05a-f8f4b0f50e54",
            "5436cc0d-db15-41a4-b1f5-acd9e76bb45c",
            "81f20156-592a-4618-893c-915ad15a02db",
            "7a994f61-dbc2-427c-a125-18424718bbde",
            "81ece9e2-f95b-4639-856d-6cd2afecbf85",
            "123e3395-d61a-4360-bbf1-5f4001b010cc",
            "29bf1e45-5592-4017-b0a0-56b3cfea36c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
          "title": "Test 10Lines game: 20, 36 -  41",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 281,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "74f2e7f1-c607-4531-8a4a-afedd87ba261",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "af75e16a-ca8c-4467-8ef6-ebd1082d45a2",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "5da15f34-14de-46e2-95bc-216a0c75d45b",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "5ccbaa26-c162-4ad0-b9dc-452de9f788e2",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "8f89527e-5f2b-4781-a67d-f97cc1ebf3b1",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "ec51f62b-3c69-4194-8743-b637eabca2c2",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "ea6ae598-0eec-47e1-9117-f472de4cc366",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "49fd8748-a7d3-4e94-8dbc-25c533c01ecd",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "da5cedc2-748f-4182-8860-6796956229a5",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "d08123db-8224-42d2-8bc5-ef818499b64d",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5770c777-64fc-4a2b-8529-956040d08f97",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a331c078-1aee-417e-a924-b1219b27429c",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "1ea13da7-bcfe-4eec-b670-a0f651120d1c",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "9fd5dce4-2756-4032-b775-a29daef817a0",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "f91558d8-3699-4d62-a8bf-709e94f5eacc",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "3f7436d3-0f99-41c7-9e1b-6913afc38d68",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "1403062e-586e-4014-b50e-f3834f876f00",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b623a10d-0519-4c92-9ebf-3846363364ac",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  41 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "33974840-a8e9-4653-b74e-699c7cab348d",
              "parentUUID": "5bbcf57b-5d18-4dba-b85a-712fd4ec89e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5da15f34-14de-46e2-95bc-216a0c75d45b",
            "5ccbaa26-c162-4ad0-b9dc-452de9f788e2",
            "8f89527e-5f2b-4781-a67d-f97cc1ebf3b1",
            "ec51f62b-3c69-4194-8743-b637eabca2c2",
            "ea6ae598-0eec-47e1-9117-f472de4cc366",
            "49fd8748-a7d3-4e94-8dbc-25c533c01ecd",
            "da5cedc2-748f-4182-8860-6796956229a5",
            "d08123db-8224-42d2-8bc5-ef818499b64d",
            "5770c777-64fc-4a2b-8529-956040d08f97",
            "a331c078-1aee-417e-a924-b1219b27429c",
            "1ea13da7-bcfe-4eec-b670-a0f651120d1c",
            "9fd5dce4-2756-4032-b775-a29daef817a0",
            "f91558d8-3699-4d62-a8bf-709e94f5eacc",
            "3f7436d3-0f99-41c7-9e1b-6913afc38d68",
            "1403062e-586e-4014-b50e-f3834f876f00",
            "b623a10d-0519-4c92-9ebf-3846363364ac",
            "33974840-a8e9-4653-b74e-699c7cab348d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
          "title": "Test 10Lines game: 20, 36 -  42",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 331,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c0ac69b0-1994-4463-bc42-9928f9f56de9",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "5c9d061f-55eb-4aea-9714-2adc5b73ec0e",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "53a5cd28-cba8-42b8-abe0-cd41e9ea8314",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "145f5499-93f7-48f6-9e64-6b33f6eb863d",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "83c2380b-2260-451c-ba2b-394ffac13a19",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d61add01-b8b0-47cd-bd01-f4029863803b",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "784bee8c-f2a2-44a9-991f-61ae57917db0",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "1b8fc41b-b69c-4a4c-a26a-c644e1311ef6",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ef1ce6a3-0866-4d3b-b35f-1afea5061ddb",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "38a23981-068e-4407-b4a5-ea1877977a87",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0bdc6221-d313-4c1b-b970-981195ff695a",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2f25b908-5596-4cfb-b19d-d246f956c965",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "aa492467-8d3f-4627-8632-e8683b1c7280",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "b923855d-dd8e-49de-9556-432a24b28bc5",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "5661deff-c21a-4a47-a154-ca557b0a16eb",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 check type of win Lines",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "1ecef2d5-7c00-4c3d-819e-82a9d3570f61",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "79eb43b1-d01f-408a-a6ce-d57960df2e63",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6872d935-01ca-4fac-baaa-ca10caf17c1d",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  42 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "0ad74bce-b5f2-4e43-8ce6-9047f6dbadfe",
              "parentUUID": "44adc9d1-c55c-4d55-a5d4-680e30885edc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53a5cd28-cba8-42b8-abe0-cd41e9ea8314",
            "145f5499-93f7-48f6-9e64-6b33f6eb863d",
            "83c2380b-2260-451c-ba2b-394ffac13a19",
            "d61add01-b8b0-47cd-bd01-f4029863803b",
            "784bee8c-f2a2-44a9-991f-61ae57917db0",
            "1b8fc41b-b69c-4a4c-a26a-c644e1311ef6",
            "ef1ce6a3-0866-4d3b-b35f-1afea5061ddb",
            "38a23981-068e-4407-b4a5-ea1877977a87",
            "0bdc6221-d313-4c1b-b970-981195ff695a",
            "2f25b908-5596-4cfb-b19d-d246f956c965",
            "aa492467-8d3f-4627-8632-e8683b1c7280",
            "b923855d-dd8e-49de-9556-432a24b28bc5",
            "5661deff-c21a-4a47-a154-ca557b0a16eb",
            "1ecef2d5-7c00-4c3d-819e-82a9d3570f61",
            "79eb43b1-d01f-408a-a6ce-d57960df2e63",
            "6872d935-01ca-4fac-baaa-ca10caf17c1d",
            "0ad74bce-b5f2-4e43-8ce6-9047f6dbadfe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
          "title": "Test 10Lines game: 20, 36 -  43",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 312,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "dbaf7a1e-d239-4b1b-bc15-c7568f94fb5e",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "9aea89b8-cf78-4eb7-b733-83b49510bd14",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d4170858-239e-4c72-aba8-f099f5e06b1d",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "b0b1a7d4-9ca8-4b0e-8390-a4c95610f890",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "4e3d7b2b-783a-4104-9871-5fc2c8eaefdc",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "549041c1-97e6-4879-844a-9b4b67891ec2",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "daeae203-d069-4a03-b74b-59aec56368b0",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a2a01443-680c-4820-ac2f-e1cfd2a80b63",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7a2e23f7-2b49-43b6-9999-049be8da86ad",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "d30290b4-d24d-4a1c-bd30-f15c0276e266",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f3e99a7c-012e-4b1e-be50-65dedee529cf",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1ccc0dda-f2f6-449f-b91d-d5cf65e9f46c",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "1a96f16d-3b48-4c64-a3f2-20726d4b06e1",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0e65f05f-de0e-4bdb-9391-94d23bccc05e",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "1f2a727c-591c-4860-8cf4-c1ae6f062a62",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "6d1a0054-9abb-47fd-961c-588e83465e35",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "c943de57-b7f9-4770-879a-bcad56ce003d",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "67b8f041-0b86-44c9-ae9e-f7c43fab2db5",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  43 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f39789b3-3f9f-4e76-9e78-48e381d8fadc",
              "parentUUID": "652b553b-de38-4b2a-a6a4-87325c6ab2ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4170858-239e-4c72-aba8-f099f5e06b1d",
            "b0b1a7d4-9ca8-4b0e-8390-a4c95610f890",
            "4e3d7b2b-783a-4104-9871-5fc2c8eaefdc",
            "549041c1-97e6-4879-844a-9b4b67891ec2",
            "daeae203-d069-4a03-b74b-59aec56368b0",
            "a2a01443-680c-4820-ac2f-e1cfd2a80b63",
            "7a2e23f7-2b49-43b6-9999-049be8da86ad",
            "d30290b4-d24d-4a1c-bd30-f15c0276e266",
            "f3e99a7c-012e-4b1e-be50-65dedee529cf",
            "1ccc0dda-f2f6-449f-b91d-d5cf65e9f46c",
            "1a96f16d-3b48-4c64-a3f2-20726d4b06e1",
            "0e65f05f-de0e-4bdb-9391-94d23bccc05e",
            "1f2a727c-591c-4860-8cf4-c1ae6f062a62",
            "6d1a0054-9abb-47fd-961c-588e83465e35",
            "c943de57-b7f9-4770-879a-bcad56ce003d",
            "67b8f041-0b86-44c9-ae9e-f7c43fab2db5",
            "f39789b3-3f9f-4e76-9e78-48e381d8fadc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
          "title": "Test 10Lines game: 20, 36 -  44",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 298,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "bdb388b3-5cc3-444a-a95b-dd801282591f",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "4ddee241-ccff-48d4-9485-db962daae4d7",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "948f63ee-4bf3-43e6-bd74-7f0323736a3e",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "f87e5aa8-bd72-41e8-8e6f-e0b85f29874b",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "0b4d5742-4b33-4acc-9983-154e8ffa4a61",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "a567f538-b333-497e-8845-1d62572721b0",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "ca534c90-9661-4e43-9ea7-00bd43dd9881",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "bcf9f627-486a-40df-8591-9e8eea10b73a",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2d129d2b-a842-4159-9ad4-97b5cd39fdba",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "a211142e-4269-4a22-81cb-2c1304f0726d",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b5136367-5ca8-4d29-9a18-3a2c7269d75a",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e032560e-3a17-48e7-bd21-b665166280b2",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "e51e3fec-7da9-455a-a9d8-9ac3d380a7bc",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "d761b58c-6bf9-4b25-9274-eeca343ae029",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "a5ade6e6-c629-4a4c-aa84-791e19501dbd",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "45a2ca7b-6979-47e1-8318-8c0b2e41e1ac",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "1f0613a3-75b1-4a53-b3fe-e5424b5c4c2e",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "5c96909c-acd3-4715-9707-104ebbeea818",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  44 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "5dba2b3f-fc87-48dd-a468-9ea0ff226485",
              "parentUUID": "1d731d9b-2c42-4815-b0cd-6db66a1221e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "948f63ee-4bf3-43e6-bd74-7f0323736a3e",
            "f87e5aa8-bd72-41e8-8e6f-e0b85f29874b",
            "0b4d5742-4b33-4acc-9983-154e8ffa4a61",
            "a567f538-b333-497e-8845-1d62572721b0",
            "ca534c90-9661-4e43-9ea7-00bd43dd9881",
            "bcf9f627-486a-40df-8591-9e8eea10b73a",
            "2d129d2b-a842-4159-9ad4-97b5cd39fdba",
            "a211142e-4269-4a22-81cb-2c1304f0726d",
            "b5136367-5ca8-4d29-9a18-3a2c7269d75a",
            "e032560e-3a17-48e7-bd21-b665166280b2",
            "e51e3fec-7da9-455a-a9d8-9ac3d380a7bc",
            "d761b58c-6bf9-4b25-9274-eeca343ae029",
            "a5ade6e6-c629-4a4c-aa84-791e19501dbd",
            "45a2ca7b-6979-47e1-8318-8c0b2e41e1ac",
            "1f0613a3-75b1-4a53-b3fe-e5424b5c4c2e",
            "5c96909c-acd3-4715-9707-104ebbeea818",
            "5dba2b3f-fc87-48dd-a468-9ea0ff226485"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
          "title": "Test 10Lines game: 20, 36 -  45",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 399,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5a7427f2-14fc-45e9-b1fc-367c53bb2c45",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "b8bd8048-8570-4c8f-bf9b-e456e6d2aedf",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "592ffc77-a4b4-48c4-9507-ddf9ca70fb1b",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "58b5b0a8-cd89-488b-9fea-ee0d03a198c8",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "db7e8c13-e5a3-42c8-9600-c1a255c69db0",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "08e7dd63-7d21-4422-b7e4-f4685614ef98",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "02cf0b1e-7a34-486e-b7e6-0bb7672dafc9",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "9d64661e-7b60-407c-9958-443b1681aa7b",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "656896d2-16e2-4e13-afe8-db75d7a28cbf",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "07112711-0cb2-415f-b0ab-8fed322fb945",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "051cf078-3a43-45c0-ae81-59a25816443f",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4eebd517-cdcf-47d0-8654-a2057a47b4f0",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "3d20495c-8cdc-43de-8752-fe72c0e9d279",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "49c50f98-d42e-4f59-a45d-14d0d866cda0",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "9e08e039-e65a-41c2-aaad-a0a31bbcad40",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e71387fb-babb-4a16-a40d-bac4c6bfa7eb",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "89dbc5ce-b418-4944-bd9e-d2153b527b1f",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c8e4aa37-b792-4f1e-a18b-32d141b1ab13",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  45 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e795c3dc-cdfe-4741-ac4d-dfdaa8f05e7c",
              "parentUUID": "ab9a0af8-3747-4daa-8608-1c6b0bdeeb56",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "592ffc77-a4b4-48c4-9507-ddf9ca70fb1b",
            "58b5b0a8-cd89-488b-9fea-ee0d03a198c8",
            "db7e8c13-e5a3-42c8-9600-c1a255c69db0",
            "08e7dd63-7d21-4422-b7e4-f4685614ef98",
            "02cf0b1e-7a34-486e-b7e6-0bb7672dafc9",
            "9d64661e-7b60-407c-9958-443b1681aa7b",
            "656896d2-16e2-4e13-afe8-db75d7a28cbf",
            "07112711-0cb2-415f-b0ab-8fed322fb945",
            "051cf078-3a43-45c0-ae81-59a25816443f",
            "4eebd517-cdcf-47d0-8654-a2057a47b4f0",
            "3d20495c-8cdc-43de-8752-fe72c0e9d279",
            "49c50f98-d42e-4f59-a45d-14d0d866cda0",
            "9e08e039-e65a-41c2-aaad-a0a31bbcad40",
            "e71387fb-babb-4a16-a40d-bac4c6bfa7eb",
            "89dbc5ce-b418-4944-bd9e-d2153b527b1f",
            "c8e4aa37-b792-4f1e-a18b-32d141b1ab13",
            "e795c3dc-cdfe-4741-ac4d-dfdaa8f05e7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d5fec194-58b9-4dae-8bab-44d641deb272",
          "title": "Test 10Lines game: 20, 36 -  46",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 279,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "674afd30-df55-448f-a913-7988e714fb3f",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "f69c6a62-b259-4d9e-b94c-c2e7f66e4859",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "6dcf9a51-cf30-434f-b766-86a4260a46c6",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "7d3f6c5f-8b82-497d-98f2-4924c3b44e51",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "56f7cdb6-3d38-4bf7-8e63-0ce6dfb936b8",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "9f75af51-7373-4b65-9cda-0697a2998bac",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "9c27517b-e425-47a9-bc8d-8a862c717a35",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "45a1b0e7-b36a-4b17-b745-8cc106927a21",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0d817174-1e98-495c-967e-8c57b0a77eee",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "42cd096a-228d-4cc3-ae16-693ff485d16e",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8221723e-29b2-473c-8520-aa468318aa45",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1ed3d8dc-bcd6-457d-943e-09bf4cd6fd55",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "04ac13bf-d5b2-4c9b-bdfe-ac9d5622935d",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5bf1f1af-9662-4e46-8da5-ce032d7b653d",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "164157bf-ff3f-4c65-8648-d4bc5e65879b",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "9d66759a-ce30-4635-a373-31f1d8054c75",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "7d757d6c-12fa-4a25-bea9-f5163339df75",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "81772ca8-6817-4e64-8eb7-2d7e600d7c69",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  46 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "1ca4ef10-5ace-448a-b303-53dc4caecc8c",
              "parentUUID": "d5fec194-58b9-4dae-8bab-44d641deb272",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6dcf9a51-cf30-434f-b766-86a4260a46c6",
            "7d3f6c5f-8b82-497d-98f2-4924c3b44e51",
            "56f7cdb6-3d38-4bf7-8e63-0ce6dfb936b8",
            "9f75af51-7373-4b65-9cda-0697a2998bac",
            "9c27517b-e425-47a9-bc8d-8a862c717a35",
            "45a1b0e7-b36a-4b17-b745-8cc106927a21",
            "0d817174-1e98-495c-967e-8c57b0a77eee",
            "42cd096a-228d-4cc3-ae16-693ff485d16e",
            "8221723e-29b2-473c-8520-aa468318aa45",
            "1ed3d8dc-bcd6-457d-943e-09bf4cd6fd55",
            "04ac13bf-d5b2-4c9b-bdfe-ac9d5622935d",
            "5bf1f1af-9662-4e46-8da5-ce032d7b653d",
            "164157bf-ff3f-4c65-8648-d4bc5e65879b",
            "9d66759a-ce30-4635-a373-31f1d8054c75",
            "7d757d6c-12fa-4a25-bea9-f5163339df75",
            "81772ca8-6817-4e64-8eb7-2d7e600d7c69",
            "1ca4ef10-5ace-448a-b303-53dc4caecc8c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
          "title": "Test 10Lines game: 20, 36 -  47",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 280,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9275cf15-7d8b-49af-aac0-6f7f5f35b280",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "6e722dad-27c3-4441-bb0b-957256fb4297",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "3e7f299f-5dc0-4652-8903-193801055298",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "3ea0664c-864c-4cb9-9326-8c00ac903603",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "298cca9b-95fa-41aa-ae3c-65a083a2c53f",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "0a0b481d-5589-484b-bd5f-4eddc4b3dc36",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "ba78f8aa-c420-4e2b-8038-1bb9aad422c2",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "670dd68d-fa21-44b5-823a-cca1c8ee58d2",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9024cf12-28ec-4fd3-8426-c5a9dc168350",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "2d5268c2-2a3e-42b3-8a0e-7ad7f6decedf",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "260875df-b256-481e-b405-7e87fe36e7b8",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "86d74258-aa6f-4e5e-aaf8-05fbc4c8242c",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "0c230bc8-6ce3-4841-bf52-c554c468aacd",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "bba80ba4-3b96-4dda-b8f2-3e4334cb78f5",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "9506f8c9-0a0a-4aca-a468-ac42de83849d",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "6a274a1b-1193-4412-a474-6b9c12542c85",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e6d62328-3236-40ec-a13d-dfffd5847964",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "dbc4acc0-07f2-42f4-a934-56f4cb691160",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  47 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "1a4325e4-90e6-4aac-8aef-2ad4d4cfa08d",
              "parentUUID": "5bf413ac-f3ee-4e8e-a188-4a2ab41e930b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e7f299f-5dc0-4652-8903-193801055298",
            "3ea0664c-864c-4cb9-9326-8c00ac903603",
            "298cca9b-95fa-41aa-ae3c-65a083a2c53f",
            "0a0b481d-5589-484b-bd5f-4eddc4b3dc36",
            "ba78f8aa-c420-4e2b-8038-1bb9aad422c2",
            "670dd68d-fa21-44b5-823a-cca1c8ee58d2",
            "9024cf12-28ec-4fd3-8426-c5a9dc168350",
            "2d5268c2-2a3e-42b3-8a0e-7ad7f6decedf",
            "260875df-b256-481e-b405-7e87fe36e7b8",
            "86d74258-aa6f-4e5e-aaf8-05fbc4c8242c",
            "0c230bc8-6ce3-4841-bf52-c554c468aacd",
            "bba80ba4-3b96-4dda-b8f2-3e4334cb78f5",
            "9506f8c9-0a0a-4aca-a468-ac42de83849d",
            "6a274a1b-1193-4412-a474-6b9c12542c85",
            "e6d62328-3236-40ec-a13d-dfffd5847964",
            "dbc4acc0-07f2-42f4-a934-56f4cb691160",
            "1a4325e4-90e6-4aac-8aef-2ad4d4cfa08d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
          "title": "Test 10Lines game: 20, 36 -  48",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 287,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "dad43daa-130a-4102-ab0b-766f9f03afe4",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "394ba2ac-c8f0-4a50-b865-ce7ed2eed21f",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "935102f8-77f3-4e12-81fa-60c01cd51a94",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "79ee8a29-0049-4d89-8d11-105d458304d4",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "26d42448-1eae-4b7f-b545-74335a1ad6ae",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "a3944129-d060-4f9d-8740-f86843b4c749",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "8cdad72b-1b5d-4124-b65e-4cc18687a660",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "9ecf37f5-dfb7-4d6e-aa62-4e40c3930bb0",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e99eac29-ebd2-4a1b-80ff-fecc3ea338cc",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "9899b627-5bb2-4cea-a46a-890cc6bb1b36",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "85768048-8ae0-411b-84af-32ee3331db87",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "05d2f552-3486-4789-a75c-83b898316134",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "e9f3e9c2-4f99-4482-8c31-73b0e38207c8",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "9e283e45-63a6-469e-bdbb-6917e0dca4b3",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "1244b282-a293-4837-b5eb-e32c1770f074",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "813760b8-af0c-4457-81a9-ff40dadf42e2",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "11335b24-4f9c-413e-a11b-2f9f73abeb9f",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3c73fa8d-a68d-4706-aff0-8b8fb7fd3032",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  48 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "0a81c447-622e-4508-9a56-8c47b817da90",
              "parentUUID": "c7a0901c-53f7-44c7-b0b7-bb170ec615de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "935102f8-77f3-4e12-81fa-60c01cd51a94",
            "79ee8a29-0049-4d89-8d11-105d458304d4",
            "26d42448-1eae-4b7f-b545-74335a1ad6ae",
            "a3944129-d060-4f9d-8740-f86843b4c749",
            "8cdad72b-1b5d-4124-b65e-4cc18687a660",
            "9ecf37f5-dfb7-4d6e-aa62-4e40c3930bb0",
            "e99eac29-ebd2-4a1b-80ff-fecc3ea338cc",
            "9899b627-5bb2-4cea-a46a-890cc6bb1b36",
            "85768048-8ae0-411b-84af-32ee3331db87",
            "05d2f552-3486-4789-a75c-83b898316134",
            "e9f3e9c2-4f99-4482-8c31-73b0e38207c8",
            "9e283e45-63a6-469e-bdbb-6917e0dca4b3",
            "1244b282-a293-4837-b5eb-e32c1770f074",
            "813760b8-af0c-4457-81a9-ff40dadf42e2",
            "11335b24-4f9c-413e-a11b-2f9f73abeb9f",
            "3c73fa8d-a68d-4706-aff0-8b8fb7fd3032",
            "0a81c447-622e-4508-9a56-8c47b817da90"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
          "title": "Test 10Lines game: 20, 36 -  49",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 315,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "dc9f44d8-1007-4a59-a126-c75539bf699f",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "11554e15-2645-4377-997b-1f78c0aa0477",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "8cd1d206-6824-4d46-9333-d0ab0b822345",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "49d08bf1-a374-46fc-b534-36ab8f0a4490",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "a6809852-9a57-4caf-b451-516db65a1386",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6b9e42a0-c712-4237-b7f5-4f41892b78b3",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "b77d6a97-7e35-454b-9679-789d9595b279",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "4b7e65e6-8c9d-4548-a04c-1377460a6648",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "513b56dd-c550-408f-80b4-310bf993d1b3",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "b1ac12d8-0620-4613-8348-878da2bbef02",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cb609b2d-4006-4d85-a944-c59a32eb3ece",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "30c827c4-8126-4790-80c4-609fe86dff01",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "cacc8a04-1015-4740-85d5-dbb4acdbc16a",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "9d2e75e3-39b2-469d-89a8-a01b4a0a0393",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "1018345c-3c77-4d29-8024-8b3005b65c7f",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "bf4eef05-1d30-4d99-bfb6-6499dfc62429",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0ad4e704-a54b-49af-9344-6ef684519848",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "167f6afa-136c-45cb-9356-20370072178d",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  49 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "4a9d72e6-2387-443c-a8f0-acb6f259b5fb",
              "parentUUID": "bf196a01-8c0c-4f92-bbe9-8d6f47b9d483",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8cd1d206-6824-4d46-9333-d0ab0b822345",
            "49d08bf1-a374-46fc-b534-36ab8f0a4490",
            "a6809852-9a57-4caf-b451-516db65a1386",
            "6b9e42a0-c712-4237-b7f5-4f41892b78b3",
            "b77d6a97-7e35-454b-9679-789d9595b279",
            "4b7e65e6-8c9d-4548-a04c-1377460a6648",
            "513b56dd-c550-408f-80b4-310bf993d1b3",
            "b1ac12d8-0620-4613-8348-878da2bbef02",
            "cb609b2d-4006-4d85-a944-c59a32eb3ece",
            "30c827c4-8126-4790-80c4-609fe86dff01",
            "cacc8a04-1015-4740-85d5-dbb4acdbc16a",
            "9d2e75e3-39b2-469d-89a8-a01b4a0a0393",
            "1018345c-3c77-4d29-8024-8b3005b65c7f",
            "bf4eef05-1d30-4d99-bfb6-6499dfc62429",
            "0ad4e704-a54b-49af-9344-6ef684519848",
            "167f6afa-136c-45cb-9356-20370072178d",
            "4a9d72e6-2387-443c-a8f0-acb6f259b5fb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
          "title": "Test 10Lines game: 20, 36 -  50",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 290,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "967b072c-fa3a-444a-aba9-319402541f72",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "f962781a-5eaf-413a-9177-338b2994064e",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "17f53f26-ffcb-4a1d-8e8c-7d51bbaf1a8f",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "edd0db9a-0c3b-4270-9b18-6302cb9935b9",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "1532f5d2-eab6-441c-9d45-157a7149fd74",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "01df9aa3-5e15-49b8-a3a6-1a3b4326eb53",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "3cb80b82-57ba-4bc0-8d1c-d96eba024626",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "c05eb1a1-6684-4a93-91fd-31eb46c7653e",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "89609873-efc7-4fc9-9965-d4948a84d5fb",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "827a9be4-a356-44db-97e0-d858fcc3c2f1",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a7a5f32f-c1f7-43e3-9c2b-eb2ab227c7c4",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bf8f87b4-6aca-47e3-93e6-321bd2e289a9",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "d2d68200-c384-4a38-8d04-2afd828e709f",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "c4aa549c-f072-43f0-aa9f-9105d1972ce5",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "d2d4d51f-634f-443e-acbc-aafedfa73934",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "be554663-bb18-4ef9-9445-aaa59301f5b1",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "bf76debb-76e4-43a0-9743-580b0d4efd9b",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "d6f932b0-8de8-45ce-8711-f8a352d051b0",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  50 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "0de9c9fd-fc63-4e73-b0fe-baf3bc3b052e",
              "parentUUID": "b325dc89-a40f-474d-a36b-c0f8e87d0500",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17f53f26-ffcb-4a1d-8e8c-7d51bbaf1a8f",
            "edd0db9a-0c3b-4270-9b18-6302cb9935b9",
            "1532f5d2-eab6-441c-9d45-157a7149fd74",
            "01df9aa3-5e15-49b8-a3a6-1a3b4326eb53",
            "3cb80b82-57ba-4bc0-8d1c-d96eba024626",
            "c05eb1a1-6684-4a93-91fd-31eb46c7653e",
            "89609873-efc7-4fc9-9965-d4948a84d5fb",
            "827a9be4-a356-44db-97e0-d858fcc3c2f1",
            "a7a5f32f-c1f7-43e3-9c2b-eb2ab227c7c4",
            "bf8f87b4-6aca-47e3-93e6-321bd2e289a9",
            "d2d68200-c384-4a38-8d04-2afd828e709f",
            "c4aa549c-f072-43f0-aa9f-9105d1972ce5",
            "d2d4d51f-634f-443e-acbc-aafedfa73934",
            "be554663-bb18-4ef9-9445-aaa59301f5b1",
            "bf76debb-76e4-43a0-9743-580b0d4efd9b",
            "d6f932b0-8de8-45ce-8711-f8a352d051b0",
            "0de9c9fd-fc63-4e73-b0fe-baf3bc3b052e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "82ca267a-b076-49a1-b8c7-0f555827b005",
          "title": "Test 10Lines game: 20, 36 -  51",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 287,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "75c69e96-27c4-41d2-bc86-d561a1a6669a",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "8fd9c5a0-d446-427f-b42e-cd7beaae5662",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e41385e0-8fcf-4ce9-b6f2-b9a94bf9ff35",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "adb22c9b-4abe-4058-889a-fd6b9e998d9c",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "76404e14-81a0-4e54-bcd4-c4a19b24a5d1",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "cdf8483b-9f09-4e03-be99-d4cb48c100e3",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "5d6c597a-78f3-426d-909f-a99f9e962607",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d0d0f00c-3ee0-4957-8ee4-d2a269b8e5ff",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "827bba7a-a61b-4ec2-bbc0-63dface09b60",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "08ab4c7d-ee67-4530-96cb-79db6b5b523a",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "67a4bb96-0ae7-45cd-bd2b-3d7f37253d5a",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a48114ed-39cc-4bea-82b0-eadfc265b907",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "acd4893d-61db-4b71-863a-9a93beaa3a6c",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "d13e50b8-8cf4-4149-9b79-086f40c50c58",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "3602a16e-3289-4e81-b41c-db19fe026b98",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "152a6ffa-dc84-4aff-bcfb-f69acbc2430e",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e143df59-7af5-4b95-aa2f-101eab254ed5",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "31435cbd-ab9a-4df6-89bb-1027566e5dc1",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  51 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "37d45365-b3eb-40e7-9e4f-b0390d2d9f5c",
              "parentUUID": "82ca267a-b076-49a1-b8c7-0f555827b005",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e41385e0-8fcf-4ce9-b6f2-b9a94bf9ff35",
            "adb22c9b-4abe-4058-889a-fd6b9e998d9c",
            "76404e14-81a0-4e54-bcd4-c4a19b24a5d1",
            "cdf8483b-9f09-4e03-be99-d4cb48c100e3",
            "5d6c597a-78f3-426d-909f-a99f9e962607",
            "d0d0f00c-3ee0-4957-8ee4-d2a269b8e5ff",
            "827bba7a-a61b-4ec2-bbc0-63dface09b60",
            "08ab4c7d-ee67-4530-96cb-79db6b5b523a",
            "67a4bb96-0ae7-45cd-bd2b-3d7f37253d5a",
            "a48114ed-39cc-4bea-82b0-eadfc265b907",
            "acd4893d-61db-4b71-863a-9a93beaa3a6c",
            "d13e50b8-8cf4-4149-9b79-086f40c50c58",
            "3602a16e-3289-4e81-b41c-db19fe026b98",
            "152a6ffa-dc84-4aff-bcfb-f69acbc2430e",
            "e143df59-7af5-4b95-aa2f-101eab254ed5",
            "31435cbd-ab9a-4df6-89bb-1027566e5dc1",
            "37d45365-b3eb-40e7-9e4f-b0390d2d9f5c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
          "title": "Test 10Lines game: 20, 36 -  52",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 277,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e683f40f-9f3e-497b-9bef-78fca00e6bc0",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "60cca650-5d06-4a90-9e71-00b385a914aa",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "fb6bfa84-0f70-4574-93d9-b0aaf97a2423",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "3dca0c36-03f8-418f-9db4-c83038ca1af5",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "6d366d41-5ccf-436a-81c9-fb58cac95ce2",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "df09ef90-58d7-4f69-ba56-3ef282286e74",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "7abd65e2-27ce-411a-9480-d0eacac49453",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f5c9f2b5-6c11-43da-9865-e66169d985b6",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e4b47b13-daed-4115-a4ca-3243062444e2",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "8529d187-db08-4fa6-8261-76a21082c082",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3d3c3f84-c38d-491a-9680-3ac5d64f546d",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f8dd5dd4-965d-42da-bd1f-cf3cdabbe553",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "b57d837a-0175-433f-b18f-801394dddb1f",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "7608ef8f-6234-458e-854a-9a3e8949a0e0",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "63504fc9-7b45-4628-b8c3-f886a2398e6f",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "ff1fc930-7a65-4bb2-815a-2295b8550070",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "fc828fc6-3107-412c-a373-c0260a0f1f8c",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "fb7dbfc1-f28d-4d59-b410-a327f4a04512",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  52 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a63b7cf5-b2c5-4a2f-a6d9-b5b99d9624df",
              "parentUUID": "fd33a822-9a77-4af2-8015-aad8bb9ac514",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb6bfa84-0f70-4574-93d9-b0aaf97a2423",
            "3dca0c36-03f8-418f-9db4-c83038ca1af5",
            "6d366d41-5ccf-436a-81c9-fb58cac95ce2",
            "df09ef90-58d7-4f69-ba56-3ef282286e74",
            "7abd65e2-27ce-411a-9480-d0eacac49453",
            "f5c9f2b5-6c11-43da-9865-e66169d985b6",
            "e4b47b13-daed-4115-a4ca-3243062444e2",
            "8529d187-db08-4fa6-8261-76a21082c082",
            "3d3c3f84-c38d-491a-9680-3ac5d64f546d",
            "f8dd5dd4-965d-42da-bd1f-cf3cdabbe553",
            "b57d837a-0175-433f-b18f-801394dddb1f",
            "7608ef8f-6234-458e-854a-9a3e8949a0e0",
            "63504fc9-7b45-4628-b8c3-f886a2398e6f",
            "ff1fc930-7a65-4bb2-815a-2295b8550070",
            "fc828fc6-3107-412c-a373-c0260a0f1f8c",
            "fb7dbfc1-f28d-4d59-b410-a327f4a04512",
            "a63b7cf5-b2c5-4a2f-a6d9-b5b99d9624df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
          "title": "Test 10Lines game: 20, 36 -  53",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 295,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a9e8c33c-e1fc-460a-8535-981aaa37ab94",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "aec4d179-f83d-4f7d-bdaf-b3ee575a296c",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "57a06f2d-c3a6-4874-834f-b1d3e1598f76",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "44d57499-0c4b-439c-9087-47fcffc787ff",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "0e843184-af75-44e4-9781-3b83f6b8f7fa",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "9708a68b-c8b5-4f95-81ce-cf392e659da4",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "62678998-b6d0-48ee-ae63-d06c1379fb52",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "43adf9f6-d8c6-45f8-bfd2-91e0b6785fef",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1366472e-a5a7-447c-9b5a-0263d4b650eb",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "deb6b339-aaaa-4281-92b5-daaf11381e36",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0cdade3e-da79-4a90-89ad-c7f2b02abb3c",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f695192f-0085-4ad1-a107-ad9d2e28ffc4",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "0c98a226-5ccc-4107-9a4c-391d83e2bba2",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "de7b9429-cfb5-42b1-8499-abca319afe03",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "3dbe2b9e-4e34-42e7-a4cc-36fdbf2bb741",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "f7872528-ec23-4e86-bf76-477c71b7bc6f",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0a2fe2a8-d18e-45b3-b0c2-2bedb57b384c",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6f897c6d-868d-406b-9984-589baccc2c76",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  53 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ee683800-9057-4614-ba17-55e8a67fad0b",
              "parentUUID": "f8b8b391-789b-4c80-8eed-0859ea0b6347",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57a06f2d-c3a6-4874-834f-b1d3e1598f76",
            "44d57499-0c4b-439c-9087-47fcffc787ff",
            "0e843184-af75-44e4-9781-3b83f6b8f7fa",
            "9708a68b-c8b5-4f95-81ce-cf392e659da4",
            "62678998-b6d0-48ee-ae63-d06c1379fb52",
            "43adf9f6-d8c6-45f8-bfd2-91e0b6785fef",
            "1366472e-a5a7-447c-9b5a-0263d4b650eb",
            "deb6b339-aaaa-4281-92b5-daaf11381e36",
            "0cdade3e-da79-4a90-89ad-c7f2b02abb3c",
            "f695192f-0085-4ad1-a107-ad9d2e28ffc4",
            "0c98a226-5ccc-4107-9a4c-391d83e2bba2",
            "de7b9429-cfb5-42b1-8499-abca319afe03",
            "3dbe2b9e-4e34-42e7-a4cc-36fdbf2bb741",
            "f7872528-ec23-4e86-bf76-477c71b7bc6f",
            "0a2fe2a8-d18e-45b3-b0c2-2bedb57b384c",
            "6f897c6d-868d-406b-9984-589baccc2c76",
            "ee683800-9057-4614-ba17-55e8a67fad0b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
          "title": "Test 10Lines game: 20, 36 -  54",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 292,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9495bf10-fa2c-4a23-aa4f-98321b0ab129",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "4c45d2dc-2696-4140-8212-b04acb97ec5e",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "19f454a9-3ab5-492f-8d46-65eb2d78daea",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "bae51504-37e4-4398-8a20-19f21d2d9772",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "6c9e2d52-8496-45dd-b629-2626ffe24a6e",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "794af12f-99cc-4773-83b4-73d2f054f4d0",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "5f6b7e9b-0e34-43af-9f2f-59badfdf407c",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "b2fc28e6-d170-4f76-9800-c40191196853",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "22353beb-574a-453d-a805-1896fa320c0e",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "0c164f99-60bb-4d72-ae05-955037014687",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8593819c-abfc-4087-8b42-5f47efee9bab",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "317538be-dc5a-4be4-9eae-5b7488994fcf",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "5a63e862-a0bb-4f88-ad1b-ed06e5780ae1",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "d5397284-a37f-4282-9173-14cdcafdf887",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "3bc5160c-20cc-43bf-8610-e102c1805a90",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "d5479ff8-dd96-42e8-9bc7-4b9261e43f73",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "aba78e17-3319-4788-97a4-2de66f337d1d",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "991ee677-2a2a-4ebb-b3c2-bf1336ba4430",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  54 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6aa075d0-1663-49b0-a2d2-09cd898132b7",
              "parentUUID": "3925536c-4b8b-4659-ab1a-6a1b4718648c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19f454a9-3ab5-492f-8d46-65eb2d78daea",
            "bae51504-37e4-4398-8a20-19f21d2d9772",
            "6c9e2d52-8496-45dd-b629-2626ffe24a6e",
            "794af12f-99cc-4773-83b4-73d2f054f4d0",
            "5f6b7e9b-0e34-43af-9f2f-59badfdf407c",
            "b2fc28e6-d170-4f76-9800-c40191196853",
            "22353beb-574a-453d-a805-1896fa320c0e",
            "0c164f99-60bb-4d72-ae05-955037014687",
            "8593819c-abfc-4087-8b42-5f47efee9bab",
            "317538be-dc5a-4be4-9eae-5b7488994fcf",
            "5a63e862-a0bb-4f88-ad1b-ed06e5780ae1",
            "d5397284-a37f-4282-9173-14cdcafdf887",
            "3bc5160c-20cc-43bf-8610-e102c1805a90",
            "d5479ff8-dd96-42e8-9bc7-4b9261e43f73",
            "aba78e17-3319-4788-97a4-2de66f337d1d",
            "991ee677-2a2a-4ebb-b3c2-bf1336ba4430",
            "6aa075d0-1663-49b0-a2d2-09cd898132b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
          "title": "Test 10Lines game: 20, 36 -  55",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 279,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "df7ff25b-0415-45fe-80fb-711a2845ac28",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "279d09b3-0b5b-4084-a162-3675885f15bc",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e9eb6232-3d0f-40fc-8a82-f6a918bdd76c",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "2dbe172e-2188-4f67-83e4-ed7020877a7b",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "40be36e7-8399-4717-8314-e9fecd4e861d",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 check correct position of winning symbol",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "e564dd36-cc5e-4922-b253-bdad3e7a37ed",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "918f2c5d-396b-4f08-9af2-048ae0ff30f1",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "efbeef2f-0349-4cab-a1cb-d68f7040422f",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9c3aeff9-2232-4ad4-b693-968363b969b9",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "9b50b719-4cb2-4541-b334-cd0f8ed4201b",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "34e8eb28-0e0c-448f-93aa-e80ce292f942",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "fee5d597-993b-4072-b4f2-34e18b4e49be",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "fc72990e-1dd4-4d1d-87d8-3a280e0d7214",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "090936bd-8746-4790-8fd4-7e27b4648890",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "961f2dcc-8416-4131-8ffe-409bb7c1c53e",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 check type of win Lines",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "d01662bc-b4e7-4bc9-8fcc-e43aa5804395",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "23e5430b-0b40-469a-88de-6448bc18f23e",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6cadd892-6495-466d-8d8c-ba441c0e849d",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  55 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "2818c2e6-1e62-420f-9927-9c6a9c243058",
              "parentUUID": "140cadf3-52c3-4dff-908c-19b3e8b9f6e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9eb6232-3d0f-40fc-8a82-f6a918bdd76c",
            "2dbe172e-2188-4f67-83e4-ed7020877a7b",
            "40be36e7-8399-4717-8314-e9fecd4e861d",
            "e564dd36-cc5e-4922-b253-bdad3e7a37ed",
            "918f2c5d-396b-4f08-9af2-048ae0ff30f1",
            "efbeef2f-0349-4cab-a1cb-d68f7040422f",
            "9c3aeff9-2232-4ad4-b693-968363b969b9",
            "9b50b719-4cb2-4541-b334-cd0f8ed4201b",
            "34e8eb28-0e0c-448f-93aa-e80ce292f942",
            "fee5d597-993b-4072-b4f2-34e18b4e49be",
            "fc72990e-1dd4-4d1d-87d8-3a280e0d7214",
            "090936bd-8746-4790-8fd4-7e27b4648890",
            "961f2dcc-8416-4131-8ffe-409bb7c1c53e",
            "d01662bc-b4e7-4bc9-8fcc-e43aa5804395",
            "23e5430b-0b40-469a-88de-6448bc18f23e",
            "6cadd892-6495-466d-8d8c-ba441c0e849d",
            "2818c2e6-1e62-420f-9927-9c6a9c243058"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "82d0706a-6c15-40d8-bae1-d752264f86ec",
          "title": "Test 10Lines game: 20, 36 -  56",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 285,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ed5cd90a-6939-4109-a548-cd610288fbe9",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "05bb4db6-b0bb-497c-91e6-b9c0df170a83",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "2edcb678-0424-4901-8409-1cf15906ad9e",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "8e60dfec-fdce-4080-ba92-e56606b53ae1",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "0f4725ae-30de-4e58-a515-80901de1fbaf",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "610e1aef-9679-40ce-9f0c-c86b621d568b",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "c41d5566-eac0-490f-9341-2c49676dd276",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "36f0d86b-a357-436c-ae8d-b7a309c6e904",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ead23191-70c3-4099-821c-e1e1223c11d3",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "fb610f18-38d0-4d21-a5fb-1e4fc6c0f9ee",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "132ef9c3-dfd5-4e1d-94ee-28d793adb3b7",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6bb38c68-525c-49b1-8d93-cc1c7739c822",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "ecdd216e-c874-43c8-8f17-3b6f3be5377c",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "d65ed5f3-a9ca-4cec-8f40-d494d0336773",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "358d85c0-d780-46bc-ab57-b419563e4855",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "b03105a2-86d2-43ca-abd8-41d72323fe84",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "75f391c7-f223-4ade-b225-ff8e442214a3",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "4e6edcbc-890c-4c8b-90e8-084e5c3fffc3",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  56 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "de3138ce-4cce-4cfe-8a24-b4d3fbd83fbc",
              "parentUUID": "82d0706a-6c15-40d8-bae1-d752264f86ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2edcb678-0424-4901-8409-1cf15906ad9e",
            "8e60dfec-fdce-4080-ba92-e56606b53ae1",
            "0f4725ae-30de-4e58-a515-80901de1fbaf",
            "610e1aef-9679-40ce-9f0c-c86b621d568b",
            "c41d5566-eac0-490f-9341-2c49676dd276",
            "36f0d86b-a357-436c-ae8d-b7a309c6e904",
            "ead23191-70c3-4099-821c-e1e1223c11d3",
            "fb610f18-38d0-4d21-a5fb-1e4fc6c0f9ee",
            "132ef9c3-dfd5-4e1d-94ee-28d793adb3b7",
            "6bb38c68-525c-49b1-8d93-cc1c7739c822",
            "ecdd216e-c874-43c8-8f17-3b6f3be5377c",
            "d65ed5f3-a9ca-4cec-8f40-d494d0336773",
            "358d85c0-d780-46bc-ab57-b419563e4855",
            "b03105a2-86d2-43ca-abd8-41d72323fe84",
            "75f391c7-f223-4ade-b225-ff8e442214a3",
            "4e6edcbc-890c-4c8b-90e8-084e5c3fffc3",
            "de3138ce-4cce-4cfe-8a24-b4d3fbd83fbc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
          "title": "Test 10Lines game: 20, 36 -  57",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 289,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0a87bfd2-ebdd-4aec-8e1f-ef5e22fb0fd8",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "da420e67-89e0-46c4-8bdc-eb57ffc38b2e",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "39896982-4395-45f8-955c-fee80d823c15",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "eea4b027-10c0-41ac-8d70-aab7db884825",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ad0634e2-3be6-4b35-97b3-109a988ca484",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "831a84ab-67cb-447c-9337-62a44864e7e6",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "36d3a616-d974-44ec-967b-9b1aa8f7d7a4",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "0536c650-e5d8-40f3-aaef-95d686b1d66f",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cbea8a69-e070-44f0-afe8-e9cb59094b24",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "d33bc034-fe61-415e-a677-cc93063bd34d",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a6d4e549-ff2c-4a50-a197-4dca897d28ae",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d6597bc9-c721-4acd-9048-1b1b45bad8bd",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "a319c3b0-b7c3-4789-ad1e-a67a73864129",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "f3b28333-9da4-4a50-a324-08577942a966",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "a717939f-fb55-433f-921d-bec2eae9767e",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "4d2fff6a-0c08-4717-9ed2-70583663504f",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "47f32d5d-5fc1-4c76-8a13-66a4cfd369fe",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e29f8859-68a2-4a50-8ef1-03c7cd056768",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  57 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3533d56c-b705-489f-81bc-1fd43c3815e2",
              "parentUUID": "c4748cfd-a22a-4263-a371-f3bdfbc1cd6b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39896982-4395-45f8-955c-fee80d823c15",
            "eea4b027-10c0-41ac-8d70-aab7db884825",
            "ad0634e2-3be6-4b35-97b3-109a988ca484",
            "831a84ab-67cb-447c-9337-62a44864e7e6",
            "36d3a616-d974-44ec-967b-9b1aa8f7d7a4",
            "0536c650-e5d8-40f3-aaef-95d686b1d66f",
            "cbea8a69-e070-44f0-afe8-e9cb59094b24",
            "d33bc034-fe61-415e-a677-cc93063bd34d",
            "a6d4e549-ff2c-4a50-a197-4dca897d28ae",
            "d6597bc9-c721-4acd-9048-1b1b45bad8bd",
            "a319c3b0-b7c3-4789-ad1e-a67a73864129",
            "f3b28333-9da4-4a50-a324-08577942a966",
            "a717939f-fb55-433f-921d-bec2eae9767e",
            "4d2fff6a-0c08-4717-9ed2-70583663504f",
            "47f32d5d-5fc1-4c76-8a13-66a4cfd369fe",
            "e29f8859-68a2-4a50-8ef1-03c7cd056768",
            "3533d56c-b705-489f-81bc-1fd43c3815e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
          "title": "Test 10Lines game: 20, 36 -  58",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 242,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4abc98a0-5994-4441-b731-6f3df17f9621",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "d6a5077b-5c1e-4c54-801f-c7ab1f47dc0d",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e6797e7b-3b6c-498a-af62-383dcc0617f9",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "814f075e-486c-48db-bf55-391bdc99c6ed",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "2f651e9d-78d1-4421-a42c-b5a59237bf54",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "97445b57-7f9a-47ae-96e6-7117a657d22e",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "ce8e9449-c59a-4b37-b916-0ffd5b474541",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "3c2baf2b-fffe-479c-bd2f-8028bd17bb66",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4a2d47de-c2a4-42af-bc21-fb6c84f97789",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "2ed0f306-eaad-4bc8-9385-fbf4617ee60e",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ebee334b-7254-45ab-ae45-0ae39ab04b90",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cc5cb4dc-3389-4141-bf13-b276e938f48f",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "0dfe0995-e596-4d14-b807-91ec399213e4",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "2cc5f77b-8b37-400f-bb50-444c3a37fcc0",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "f48cb6e3-ad9f-446e-8c66-7b25985a08be",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "614f6e35-58d7-463d-8917-f3fe742de5d3",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "a15431bf-f7fb-4f2e-901a-3042d5fcd986",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "850e7f47-ddbb-4824-8f80-695a57ea58f9",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  58 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "91b467b0-7b1d-4742-b9ce-baf3c32c3f57",
              "parentUUID": "6cbc84d6-3e67-4a8d-b98e-5f2c50b5cf43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e6797e7b-3b6c-498a-af62-383dcc0617f9",
            "814f075e-486c-48db-bf55-391bdc99c6ed",
            "2f651e9d-78d1-4421-a42c-b5a59237bf54",
            "97445b57-7f9a-47ae-96e6-7117a657d22e",
            "ce8e9449-c59a-4b37-b916-0ffd5b474541",
            "3c2baf2b-fffe-479c-bd2f-8028bd17bb66",
            "4a2d47de-c2a4-42af-bc21-fb6c84f97789",
            "2ed0f306-eaad-4bc8-9385-fbf4617ee60e",
            "ebee334b-7254-45ab-ae45-0ae39ab04b90",
            "cc5cb4dc-3389-4141-bf13-b276e938f48f",
            "0dfe0995-e596-4d14-b807-91ec399213e4",
            "2cc5f77b-8b37-400f-bb50-444c3a37fcc0",
            "f48cb6e3-ad9f-446e-8c66-7b25985a08be",
            "614f6e35-58d7-463d-8917-f3fe742de5d3",
            "a15431bf-f7fb-4f2e-901a-3042d5fcd986",
            "850e7f47-ddbb-4824-8f80-695a57ea58f9",
            "91b467b0-7b1d-4742-b9ce-baf3c32c3f57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
          "title": "Test 10Lines game: 20, 36 -  59",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 289,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "974f6134-ffe1-467e-b19e-2302369f1b50",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "92fb421a-5df6-438c-80ef-2e11f929be3b",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "4b8d0acc-fb80-434f-ba49-f59c3459f5c6",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "b13d8dcb-dfff-4bfe-8290-4ef4b938c336",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "4280eefd-fc50-4d9b-91aa-5ba8dfa70d4c",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6bb485ef-d3c2-4d09-8717-1c09d05160dd",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "5599f23d-a387-4216-9487-4f620ace5b7b",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "70e4d975-d833-46a5-b68a-c652756dbfee",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ef19b1f9-11fb-441b-8923-d022ffd2ea1b",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "1ba8203d-f2b6-4604-9f6c-aff1538d9f72",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e7630d39-468d-4f20-95b7-120e2d5cad73",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "913a7e54-ea96-424c-882e-b9ce2e4531ae",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "7ba40521-ce7d-440e-8796-a5461da2bc01",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "fa22d63e-9dc6-442e-b054-23675320b246",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "65f0e328-8006-4420-b3d2-3aabbe895a83",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "27041e74-9e8a-4985-977e-8fe95bf6cd19",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "eb6324cf-38d9-47ed-984f-2f31f1fc22eb",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "8356c3bb-c266-43ca-8e49-1f874fe223a9",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  59 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "55056c72-3f4f-4622-9fc2-b8eda950be30",
              "parentUUID": "2fc0c880-bf18-403f-8456-9b0e23c228e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b8d0acc-fb80-434f-ba49-f59c3459f5c6",
            "b13d8dcb-dfff-4bfe-8290-4ef4b938c336",
            "4280eefd-fc50-4d9b-91aa-5ba8dfa70d4c",
            "6bb485ef-d3c2-4d09-8717-1c09d05160dd",
            "5599f23d-a387-4216-9487-4f620ace5b7b",
            "70e4d975-d833-46a5-b68a-c652756dbfee",
            "ef19b1f9-11fb-441b-8923-d022ffd2ea1b",
            "1ba8203d-f2b6-4604-9f6c-aff1538d9f72",
            "e7630d39-468d-4f20-95b7-120e2d5cad73",
            "913a7e54-ea96-424c-882e-b9ce2e4531ae",
            "7ba40521-ce7d-440e-8796-a5461da2bc01",
            "fa22d63e-9dc6-442e-b054-23675320b246",
            "65f0e328-8006-4420-b3d2-3aabbe895a83",
            "27041e74-9e8a-4985-977e-8fe95bf6cd19",
            "eb6324cf-38d9-47ed-984f-2f31f1fc22eb",
            "8356c3bb-c266-43ca-8e49-1f874fe223a9",
            "55056c72-3f4f-4622-9fc2-b8eda950be30"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
          "title": "Test 10Lines game: 20, 36 -  60",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 332,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ffe303d5-541e-40c8-ab6b-3085c9d30cd2",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "01535bbe-67ed-4b22-9ee0-0f0b10304058",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "3749356d-1cbc-4dc2-8619-ca3acdb471c0",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "34c30793-7dc1-4584-ae76-351ad8588970",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "307fe81b-cddf-4d66-a7aa-4c002423e7ad",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "bcd18ca1-5921-4ca7-b3f0-9a87aad0397a",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "f228ff3e-8238-4509-8922-8052e5185a15",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "23650b24-10ec-424e-b42e-2cdc7cb00627",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9a9aca66-83eb-41e4-b52d-95813a50c5b2",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "c2b2f24e-822e-447d-80c0-a816566b110e",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bcec82fa-3aad-4f14-b069-fdf1da54a696",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "28177d65-0e33-43b7-8ee8-fb97e4b82601",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "2ea3dccf-134b-4d1a-ba90-01cccc3c7bda",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "6ad1f417-3bfe-4685-9f48-e752ac039dfc",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "c3c6a697-ec66-4577-89b9-3068da76ca6a",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "b9252d6a-b3fb-4a70-94d6-2e5f620f2a04",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "17609db6-1a2e-4d48-a31b-4cda358893d1",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "59bc19ab-4aee-4cfc-a2d4-5d21100abb56",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  60 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b77e6f7c-84c0-4bd6-81f9-f511c33d02e0",
              "parentUUID": "1e7b16d8-3c7c-44e2-85b3-b990ce9b590e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3749356d-1cbc-4dc2-8619-ca3acdb471c0",
            "34c30793-7dc1-4584-ae76-351ad8588970",
            "307fe81b-cddf-4d66-a7aa-4c002423e7ad",
            "bcd18ca1-5921-4ca7-b3f0-9a87aad0397a",
            "f228ff3e-8238-4509-8922-8052e5185a15",
            "23650b24-10ec-424e-b42e-2cdc7cb00627",
            "9a9aca66-83eb-41e4-b52d-95813a50c5b2",
            "c2b2f24e-822e-447d-80c0-a816566b110e",
            "bcec82fa-3aad-4f14-b069-fdf1da54a696",
            "28177d65-0e33-43b7-8ee8-fb97e4b82601",
            "2ea3dccf-134b-4d1a-ba90-01cccc3c7bda",
            "6ad1f417-3bfe-4685-9f48-e752ac039dfc",
            "c3c6a697-ec66-4577-89b9-3068da76ca6a",
            "b9252d6a-b3fb-4a70-94d6-2e5f620f2a04",
            "17609db6-1a2e-4d48-a31b-4cda358893d1",
            "59bc19ab-4aee-4cfc-a2d4-5d21100abb56",
            "b77e6f7c-84c0-4bd6-81f9-f511c33d02e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
          "title": "Test 10Lines game: 20, 36 -  61",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 294,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "15289fca-6318-46b9-bef8-2e4d6d4f35cc",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "5e0eec01-133f-44cc-b06f-65dbb25383a0",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e2528aef-9d85-4263-a576-933ff5616856",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 check correct accrual Scatter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "5dc5e53d-beea-43c1-9cea-65d593f78d11",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "4b27ed02-6a35-435f-a673-69130394df7d",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6965ccb0-8dd1-4ece-8f55-512394cdbec8",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "9ba5fe33-55d8-4aa8-99cf-e34f254977cc",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "239103e0-e146-407b-9695-91fc5097f7ae",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cfe1957f-31aa-4126-8c93-f6242da97a8c",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "bf7742fa-8c84-4092-8b80-091fedcfc956",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f0fe5384-fdcb-4a74-b718-e41f8bdc321e",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "861d1b6c-a581-4d69-9bd6-a95a91dbb27d",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "78052643-8287-4683-9a3c-06a59cd414c3",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "c75a199a-f6ad-45b1-b439-7865f96c53cc",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "c650347c-f486-4f95-8cee-29b371bcf2ff",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "ff32c9d6-45cd-402e-9bbf-125c7dbcb7fe",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0ad92aed-eb9e-4f2b-a047-32777cb2d94d",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b79097be-019f-40e4-bb38-549b72089591",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  61 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f3a96f03-0e41-4543-8f46-26e8d8ffcfd6",
              "parentUUID": "e849b04e-b2a9-42db-80f9-2ca9dd64856f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2528aef-9d85-4263-a576-933ff5616856",
            "5dc5e53d-beea-43c1-9cea-65d593f78d11",
            "4b27ed02-6a35-435f-a673-69130394df7d",
            "6965ccb0-8dd1-4ece-8f55-512394cdbec8",
            "9ba5fe33-55d8-4aa8-99cf-e34f254977cc",
            "239103e0-e146-407b-9695-91fc5097f7ae",
            "cfe1957f-31aa-4126-8c93-f6242da97a8c",
            "bf7742fa-8c84-4092-8b80-091fedcfc956",
            "f0fe5384-fdcb-4a74-b718-e41f8bdc321e",
            "861d1b6c-a581-4d69-9bd6-a95a91dbb27d",
            "78052643-8287-4683-9a3c-06a59cd414c3",
            "c75a199a-f6ad-45b1-b439-7865f96c53cc",
            "c650347c-f486-4f95-8cee-29b371bcf2ff",
            "ff32c9d6-45cd-402e-9bbf-125c7dbcb7fe",
            "0ad92aed-eb9e-4f2b-a047-32777cb2d94d",
            "b79097be-019f-40e4-bb38-549b72089591",
            "f3a96f03-0e41-4543-8f46-26e8d8ffcfd6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a18a0933-df4f-433f-be62-3bc96f38d52c",
          "title": "Test 10Lines game: 20, 36 -  62",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 169,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d855c07f-eefc-4570-be18-67bc63e76b9f",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "4400333b-b73f-4362-85de-18f7aed8411f",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "f740206b-aa6d-41ee-91c4-474b94e2e10b",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "b413ae18-7a29-4780-b88d-c83a7d77a56e",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "96f6a498-2e9e-4339-8a7a-13415623fb4b",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "f4d00b46-fa56-403b-9379-b1aeae0d2fd5",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "297b93e5-43ba-45e9-9b64-703285a6aacb",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "4d48e23d-6b64-400b-a1cc-a046ce5eec55",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a7248334-e6e9-4eab-9318-827ba5f872f0",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "f56b8a83-f8db-4977-b9f1-5c9a36f7c2fb",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1e85c9a8-9d94-42be-aefe-00a752616272",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "be9f7212-ba6c-4156-a1be-b015c7238a65",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "192191ec-9337-447e-a91b-7da30eefb9b7",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "bdec21f5-8e3e-4a11-a53c-b21e0fc711c4",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "5f111be2-e881-4b89-b920-1d64a26ecbdf",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "9e6b0ddc-f8ba-43bc-8bb1-014a16b4a8e3",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "c3a3b055-1a02-4274-b980-185bafdd4521",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b9a07f04-ffd9-4dba-871f-852cdfd68de8",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  62 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "980d1ec3-4ea9-4fd9-8762-367a7546b5a8",
              "parentUUID": "a18a0933-df4f-433f-be62-3bc96f38d52c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f740206b-aa6d-41ee-91c4-474b94e2e10b",
            "b413ae18-7a29-4780-b88d-c83a7d77a56e",
            "96f6a498-2e9e-4339-8a7a-13415623fb4b",
            "f4d00b46-fa56-403b-9379-b1aeae0d2fd5",
            "297b93e5-43ba-45e9-9b64-703285a6aacb",
            "4d48e23d-6b64-400b-a1cc-a046ce5eec55",
            "a7248334-e6e9-4eab-9318-827ba5f872f0",
            "f56b8a83-f8db-4977-b9f1-5c9a36f7c2fb",
            "1e85c9a8-9d94-42be-aefe-00a752616272",
            "be9f7212-ba6c-4156-a1be-b015c7238a65",
            "192191ec-9337-447e-a91b-7da30eefb9b7",
            "bdec21f5-8e3e-4a11-a53c-b21e0fc711c4",
            "5f111be2-e881-4b89-b920-1d64a26ecbdf",
            "9e6b0ddc-f8ba-43bc-8bb1-014a16b4a8e3",
            "c3a3b055-1a02-4274-b980-185bafdd4521",
            "b9a07f04-ffd9-4dba-871f-852cdfd68de8",
            "980d1ec3-4ea9-4fd9-8762-367a7546b5a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
          "title": "Test 10Lines game: 20, 36 -  63",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 166,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e8046310-1b00-4a72-bea5-8bc99d2aae3c",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "f0321a5c-829a-4f96-bcc8-641a936d3c20",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "b9d43385-0f6b-4f39-a336-3cd8c0c2d8e2",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "49ee9345-7048-48f8-a8b1-574a3563ea69",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "313f4437-353f-4384-9242-80814c329fce",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 check correct position of winning symbol",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6bb82dcf-1555-4cc3-bdfb-a7d677726a04",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "09b3b2dd-b699-4b32-8dc9-4bdff2453799",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d60ba967-7e22-4239-977e-c71788a87e22",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8bd09597-c9dc-44b7-bc6b-ad41f4271d5e",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 check correct total FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "65a5f5e8-3d28-4edd-8104-6eab28eda216",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1b5ddc08-11ae-4072-91ac-355e7d66822d",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d39f0b3f-308e-452c-979c-5ac5876b5846",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "5ba1f1ef-04cd-44e7-9fd3-aa8d3f3e771f",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "b9fcd8da-8b21-4f91-9959-11da47d6ec7d",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "77aa2baa-b0d3-4c25-bcf5-6c1ee2ba508e",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "a5f39384-5d54-46fa-bbbb-57ba04e97952",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "aa8eca23-acbb-4fc1-9bda-72c7dd6978f3",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f8aa4a76-cfdb-456e-b28d-5ef6a76ebbf2",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  63 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "d0a07846-f673-4fc4-8013-0033b470f80c",
              "parentUUID": "9b94b23e-4dd4-4b0b-9710-5d1e51ed3613",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9d43385-0f6b-4f39-a336-3cd8c0c2d8e2",
            "49ee9345-7048-48f8-a8b1-574a3563ea69",
            "313f4437-353f-4384-9242-80814c329fce",
            "6bb82dcf-1555-4cc3-bdfb-a7d677726a04",
            "09b3b2dd-b699-4b32-8dc9-4bdff2453799",
            "d60ba967-7e22-4239-977e-c71788a87e22",
            "8bd09597-c9dc-44b7-bc6b-ad41f4271d5e",
            "65a5f5e8-3d28-4edd-8104-6eab28eda216",
            "1b5ddc08-11ae-4072-91ac-355e7d66822d",
            "d39f0b3f-308e-452c-979c-5ac5876b5846",
            "5ba1f1ef-04cd-44e7-9fd3-aa8d3f3e771f",
            "b9fcd8da-8b21-4f91-9959-11da47d6ec7d",
            "77aa2baa-b0d3-4c25-bcf5-6c1ee2ba508e",
            "a5f39384-5d54-46fa-bbbb-57ba04e97952",
            "aa8eca23-acbb-4fc1-9bda-72c7dd6978f3",
            "f8aa4a76-cfdb-456e-b28d-5ef6a76ebbf2",
            "d0a07846-f673-4fc4-8013-0033b470f80c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "483a451e-2050-4083-ba29-ed047c540fa6",
          "title": "Test 10Lines game: 20, 36 -  64",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 168,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4b5ce27f-f277-4fa7-9400-b54f6c2c4751",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "646c5c82-6194-463a-9d23-cf074b5e8ccd",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "6400e894-d5e3-45fc-b0cd-f1d16d4dbd18",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "c2a9ecc3-06c9-4dc7-a426-7f7ae7dd5d01",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "e5195504-a536-4b78-a765-81e147feb1f6",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "f286c321-e817-4a3e-991b-1e421c9dae97",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "53207f7f-bfc8-4f47-a8f2-7ede687cfde9",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "6b1187a5-fca1-49c8-83b3-845319b1c912",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b2b56f85-0b4a-4c39-b327-cfc9ce53de2e",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "cdbd41f4-9bb9-4ca5-8acd-5f7a68fc4d6e",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7c0f1c5d-adab-4796-abfb-f3a1846438b8",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "75931933-cdc9-4a37-a707-1e6bae0d2644",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "490368b8-db37-45ff-94ba-071ee22651bf",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a6631e30-3521-40e5-bcc9-5d24ab5be727",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "d6a95cf4-9461-431a-805a-4926816b627b",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "4fcc1dfa-bc94-40f5-8482-c8efde2a005a",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0d6f5652-111a-4e96-b591-564ad08f6e7e",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "457ae6c4-3488-44c9-82d5-33c0f0d5fe94",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  64 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a6ed56d8-57c8-47bf-9238-5fd69497b82c",
              "parentUUID": "483a451e-2050-4083-ba29-ed047c540fa6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6400e894-d5e3-45fc-b0cd-f1d16d4dbd18",
            "c2a9ecc3-06c9-4dc7-a426-7f7ae7dd5d01",
            "e5195504-a536-4b78-a765-81e147feb1f6",
            "f286c321-e817-4a3e-991b-1e421c9dae97",
            "53207f7f-bfc8-4f47-a8f2-7ede687cfde9",
            "6b1187a5-fca1-49c8-83b3-845319b1c912",
            "b2b56f85-0b4a-4c39-b327-cfc9ce53de2e",
            "cdbd41f4-9bb9-4ca5-8acd-5f7a68fc4d6e",
            "7c0f1c5d-adab-4796-abfb-f3a1846438b8",
            "75931933-cdc9-4a37-a707-1e6bae0d2644",
            "490368b8-db37-45ff-94ba-071ee22651bf",
            "a6631e30-3521-40e5-bcc9-5d24ab5be727",
            "d6a95cf4-9461-431a-805a-4926816b627b",
            "4fcc1dfa-bc94-40f5-8482-c8efde2a005a",
            "0d6f5652-111a-4e96-b591-564ad08f6e7e",
            "457ae6c4-3488-44c9-82d5-33c0f0d5fe94",
            "a6ed56d8-57c8-47bf-9238-5fd69497b82c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8c1b1cce-8444-4519-840f-57ffb5211985",
          "title": "Test 10Lines game: 20, 36 -  65",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 174,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f18c0ba1-a083-4e17-b4e0-a7f5f94d5333",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "5ba2a083-f0d2-41f0-aadc-caab54536af9",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "65faf3c3-b60b-454b-95d9-708de3c80c26",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "a28b4125-1c49-4218-b7df-a5b15ad30e9a",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "7b8fa325-a14f-4845-bfa1-ae46b0f89ff0",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6c218048-f3be-4512-a986-4bbb8b3b58fe",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "ed74d465-8733-4d80-ab8c-9376c7f98948",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "44e31d9e-afc2-4e7a-b8d4-a3f578cc8b0f",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "38d9dff1-44cb-4027-ab1f-9cd0cf8d603b",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "5ff2d573-d6e5-4eb9-81c1-4e5a94c21b7d",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9fff82c6-fbad-4c17-b86e-1aedfbcf1005",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4945d654-e4d9-48c0-80fc-0720b446ca85",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "e6341149-1a06-4af4-bf43-dfc8ae9d36f7",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0d248369-5862-42d3-b3db-27ce7bd8951c",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "f26e1b67-5afe-49bd-b572-f053c12fbb59",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "bd314baa-5298-4ab9-a304-c253c5351661",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "79f11c87-fdde-4e50-bf1f-630e1b2dbd31",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "624fc198-0684-4afc-82bf-dba8ef8212b1",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  65 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ec93c498-505a-4128-a1ab-1e45c21b415a",
              "parentUUID": "8c1b1cce-8444-4519-840f-57ffb5211985",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "65faf3c3-b60b-454b-95d9-708de3c80c26",
            "a28b4125-1c49-4218-b7df-a5b15ad30e9a",
            "7b8fa325-a14f-4845-bfa1-ae46b0f89ff0",
            "6c218048-f3be-4512-a986-4bbb8b3b58fe",
            "ed74d465-8733-4d80-ab8c-9376c7f98948",
            "44e31d9e-afc2-4e7a-b8d4-a3f578cc8b0f",
            "38d9dff1-44cb-4027-ab1f-9cd0cf8d603b",
            "5ff2d573-d6e5-4eb9-81c1-4e5a94c21b7d",
            "9fff82c6-fbad-4c17-b86e-1aedfbcf1005",
            "4945d654-e4d9-48c0-80fc-0720b446ca85",
            "e6341149-1a06-4af4-bf43-dfc8ae9d36f7",
            "0d248369-5862-42d3-b3db-27ce7bd8951c",
            "f26e1b67-5afe-49bd-b572-f053c12fbb59",
            "bd314baa-5298-4ab9-a304-c253c5351661",
            "79f11c87-fdde-4e50-bf1f-630e1b2dbd31",
            "624fc198-0684-4afc-82bf-dba8ef8212b1",
            "ec93c498-505a-4128-a1ab-1e45c21b415a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
          "title": "Test 10Lines game: 20, 36 -  66",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 289,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6936bb97-002a-4856-9ff6-3dc84c400179",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "64f7a939-7d42-4b03-bd59-618fc5869864",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "34b70a06-e7ab-4394-b758-107687f8558e",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "08a1769b-0089-4bf0-baf3-30ee7e395c81",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "708fcbc4-9047-4569-b813-bd890c526052",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "29d75326-5259-4dc6-9bb9-4ebb0b9eb20d",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "92d60760-f6e8-4279-96ff-bde6280c2336",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "584df7e3-7603-437f-8014-3660e8e813aa",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0106789b-c96f-47bb-b8a5-61a32b58cc9b",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 check correct total FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "bb446b8d-b09f-43f9-b4c4-f07283578fdb",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "252900bc-4a63-4c80-881d-29cb3509b4f2",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1425e2c4-20e1-4e00-8678-1b905758bb4b",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "10edca3c-9611-4d07-8375-2ddc2d78816d",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "df0ffccd-95b2-43c0-b435-14190897d330",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "b280011e-b513-4803-8eeb-4f4104c1fb4b",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "70770863-76c5-438a-b553-12da86423c3b",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "269429bf-a548-4fed-ad4b-10b493111589",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f9cd36e0-0532-4275-8f62-ec4ad4e50b11",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  66 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ed30fec3-d60b-4b16-acac-a41ecb9acf76",
              "parentUUID": "00eb7fbc-551d-45e4-b6cf-bf336663776e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34b70a06-e7ab-4394-b758-107687f8558e",
            "08a1769b-0089-4bf0-baf3-30ee7e395c81",
            "708fcbc4-9047-4569-b813-bd890c526052",
            "29d75326-5259-4dc6-9bb9-4ebb0b9eb20d",
            "92d60760-f6e8-4279-96ff-bde6280c2336",
            "584df7e3-7603-437f-8014-3660e8e813aa",
            "0106789b-c96f-47bb-b8a5-61a32b58cc9b",
            "bb446b8d-b09f-43f9-b4c4-f07283578fdb",
            "252900bc-4a63-4c80-881d-29cb3509b4f2",
            "1425e2c4-20e1-4e00-8678-1b905758bb4b",
            "10edca3c-9611-4d07-8375-2ddc2d78816d",
            "df0ffccd-95b2-43c0-b435-14190897d330",
            "b280011e-b513-4803-8eeb-4f4104c1fb4b",
            "70770863-76c5-438a-b553-12da86423c3b",
            "269429bf-a548-4fed-ad4b-10b493111589",
            "f9cd36e0-0532-4275-8f62-ec4ad4e50b11",
            "ed30fec3-d60b-4b16-acac-a41ecb9acf76"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "184021bd-54f3-4785-bb74-ba82d5165efa",
          "title": "Test 10Lines game: 20, 36 -  67",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 168,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c789393c-0e04-45e4-897e-ed93afa11245",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "7e4eb630-ae73-44fd-988b-e97daf72550a",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "fc081629-837a-4830-9af1-975382762071",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "076cedfe-62b6-49ee-96a9-75371924d120",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "304fbd6f-6167-4f28-8703-9c888eaa735d",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "a7722508-ee3e-4b79-a932-527fa45fd1ad",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "c4a3c868-0084-456d-b81a-7065b56b5e65",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "3329c051-dd59-406a-aef2-192794c72169",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "de5ee4e6-b8bf-4d44-ba87-3d705f1aa7c6",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 check correct total FS",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "ae903980-56a6-4f21-af3e-d3d152e6e893",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f6f04af9-6ef8-49f6-ba4a-663698e4aa71",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "512822ee-dc54-4b2c-a25f-65ab984d1ba5",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "761a39b0-6fbe-41cd-ab2f-047ac9e4bffc",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0f98bec3-76c4-443d-8a0c-640437dd8387",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "23eb6d84-b54f-4ef9-94bd-5eb2780b066a",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "98aa850c-b26c-4bdb-83bf-8f0e8dbdffe5",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "31952346-d899-44e8-91d1-4bb8f6c7a15b",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "67f26caf-8faa-4cc4-9852-56319d42322f",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  67 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "89405824-d188-4aaa-b092-4ccd6b69fd2a",
              "parentUUID": "184021bd-54f3-4785-bb74-ba82d5165efa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc081629-837a-4830-9af1-975382762071",
            "076cedfe-62b6-49ee-96a9-75371924d120",
            "304fbd6f-6167-4f28-8703-9c888eaa735d",
            "a7722508-ee3e-4b79-a932-527fa45fd1ad",
            "c4a3c868-0084-456d-b81a-7065b56b5e65",
            "3329c051-dd59-406a-aef2-192794c72169",
            "de5ee4e6-b8bf-4d44-ba87-3d705f1aa7c6",
            "ae903980-56a6-4f21-af3e-d3d152e6e893",
            "f6f04af9-6ef8-49f6-ba4a-663698e4aa71",
            "512822ee-dc54-4b2c-a25f-65ab984d1ba5",
            "761a39b0-6fbe-41cd-ab2f-047ac9e4bffc",
            "0f98bec3-76c4-443d-8a0c-640437dd8387",
            "23eb6d84-b54f-4ef9-94bd-5eb2780b066a",
            "98aa850c-b26c-4bdb-83bf-8f0e8dbdffe5",
            "31952346-d899-44e8-91d1-4bb8f6c7a15b",
            "67f26caf-8faa-4cc4-9852-56319d42322f",
            "89405824-d188-4aaa-b092-4ccd6b69fd2a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
          "title": "Test 10Lines game: 20, 36 -  68",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 169,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b88b396d-c6e5-4a63-bde0-588fa0c43816",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "74032140-1ce1-4399-9bf6-c20f723716dd",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "2ececa6b-1648-4baf-9b5f-bc8d85541e23",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "4bbe1488-875d-4e89-976f-a729c7ba5c66",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "0205d439-9744-4c7b-bcf6-b04c408e2d7a",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "069891c3-d1fb-497f-a596-624acaf5fef1",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "15ce5f2a-9632-45a5-ae48-0cc4bd9e653d",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "aba4f104-f7aa-4b13-83cf-d69eceee7d8d",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "db89f30d-d300-41b8-9183-799beddc3902",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "86f609c4-f596-43d2-9a9a-064edb1f0367",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5b3faca8-7473-4a1f-a10b-74ab9f21e443",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "638e0b72-c47f-48cf-a236-9ab66ba810e9",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "1a559867-6c2b-4760-8a8d-914851b5edb7",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "d923cb22-fc38-4244-85b4-9c32ee49d16f",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "78922c34-7595-4a92-a40a-77351214926a",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e4f126e4-51df-430d-a229-04813b624a90",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "81cb7d7b-5b6b-44e3-909a-4f9fcf5e4996",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b0fe35a4-e232-469d-a243-1a2a82b05da0",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  68 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "fa509110-7759-4c31-a265-32cb02d2915a",
              "parentUUID": "3e29c390-b5fd-4aaf-9397-478326cb22a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ececa6b-1648-4baf-9b5f-bc8d85541e23",
            "4bbe1488-875d-4e89-976f-a729c7ba5c66",
            "0205d439-9744-4c7b-bcf6-b04c408e2d7a",
            "069891c3-d1fb-497f-a596-624acaf5fef1",
            "15ce5f2a-9632-45a5-ae48-0cc4bd9e653d",
            "aba4f104-f7aa-4b13-83cf-d69eceee7d8d",
            "db89f30d-d300-41b8-9183-799beddc3902",
            "86f609c4-f596-43d2-9a9a-064edb1f0367",
            "5b3faca8-7473-4a1f-a10b-74ab9f21e443",
            "638e0b72-c47f-48cf-a236-9ab66ba810e9",
            "1a559867-6c2b-4760-8a8d-914851b5edb7",
            "d923cb22-fc38-4244-85b4-9c32ee49d16f",
            "78922c34-7595-4a92-a40a-77351214926a",
            "e4f126e4-51df-430d-a229-04813b624a90",
            "81cb7d7b-5b6b-44e3-909a-4f9fcf5e4996",
            "b0fe35a4-e232-469d-a243-1a2a82b05da0",
            "fa509110-7759-4c31-a265-32cb02d2915a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
          "title": "Test 10Lines game: 20, 36 -  69",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 297,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e2c923ea-57d7-4c27-aa72-eccba85dc727",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "2bce54a3-6be5-4fbc-be0c-332d3db3c630",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e70178f9-53dd-4d83-970f-13e820b85d0c",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "361975ce-8f40-4cce-8dc8-673d8250dafa",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "60c75312-3740-4e99-b5dc-05a80fda2f77",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "4bd0033c-3bbe-47b3-897b-2b686ef9a0b2",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "77b09cd9-5be3-4415-ad3a-c39943481b2a",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "c6683d53-aeb7-432f-9762-1c3fe03e826b",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cebf5e52-b40c-4d1c-b242-9e9095d813fc",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "6b25ec27-9230-4a80-a3f4-3910b75039a9",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0ce7c457-aa4f-44f6-838a-a3248faa53c8",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5c225e00-35ab-4d4a-b6b5-a6d8c7359189",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 balance is not change",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "9b529f0f-464e-49b1-b4db-0d7cd94680e0",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a16b0401-c3cd-4abe-b669-90f9a4a14389",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ef52b5c3-7503-4762-a4f6-36f29e013810",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "11581e23-8f4c-40eb-9c28-d1b0851f9c3c",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "a4f35223-cc1b-4444-811b-ce4b3c016665",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "7170ee21-5063-404c-81e3-1017f81f3e44",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  69 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "345db3d8-75fb-4ecb-b98b-3b9f19686da8",
              "parentUUID": "3b0ce976-c3ba-4b97-8d38-aaa7fc122cb6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e70178f9-53dd-4d83-970f-13e820b85d0c",
            "361975ce-8f40-4cce-8dc8-673d8250dafa",
            "60c75312-3740-4e99-b5dc-05a80fda2f77",
            "4bd0033c-3bbe-47b3-897b-2b686ef9a0b2",
            "77b09cd9-5be3-4415-ad3a-c39943481b2a",
            "c6683d53-aeb7-432f-9762-1c3fe03e826b",
            "cebf5e52-b40c-4d1c-b242-9e9095d813fc",
            "6b25ec27-9230-4a80-a3f4-3910b75039a9",
            "0ce7c457-aa4f-44f6-838a-a3248faa53c8",
            "5c225e00-35ab-4d4a-b6b5-a6d8c7359189",
            "9b529f0f-464e-49b1-b4db-0d7cd94680e0",
            "a16b0401-c3cd-4abe-b669-90f9a4a14389",
            "ef52b5c3-7503-4762-a4f6-36f29e013810",
            "11581e23-8f4c-40eb-9c28-d1b0851f9c3c",
            "a4f35223-cc1b-4444-811b-ce4b3c016665",
            "7170ee21-5063-404c-81e3-1017f81f3e44",
            "345db3d8-75fb-4ecb-b98b-3b9f19686da8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
          "title": "Test 10Lines game: 20, 36 -  70",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 169,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "33a32dd5-542a-4ded-94d4-f4fc71ab1020",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "d495daff-7815-471d-a5f5-fae16324a576",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d0dbf02b-9f82-4608-b6c9-348e079d3512",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "cc6b1734-182b-4b2f-ab68-8adf7e26fe77",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "3529a9d1-49a3-4df8-a840-4f4b3f534512",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "9a45e2df-b8c2-46ee-b54e-c89cf51c846a",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "ff7b03e5-5c7e-4b16-92fa-f668f8e743c0",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "3982b60d-a645-43c0-8c42-b4f0cac68f50",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "478ea6c4-9167-4790-ab78-e34344763718",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "b5d91f39-b713-4cb0-8f33-0d090bed51ba",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "fdeaf8d9-3efb-49fc-935c-053a2516191e",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ee917128-dbc8-450b-aac6-69994fdfbef0",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 balance is not change",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "9db537b8-063b-4bab-b4ce-fead7d6743b2",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "00a36e41-9b81-476d-b772-d7693dcaea10",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "f6d1262d-7abf-489d-b3e5-c650044e863d",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "313f0f4b-0044-4c6e-95f9-25fcc1b39c44",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "f2f3451b-e3d4-44d3-a623-dc900d573a22",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "4daf12e1-6be8-4a10-983b-10fd553f9d1d",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  70 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a8de4211-c98f-4d01-8f7a-403c2967db41",
              "parentUUID": "af78604b-65ef-4fb0-9ec3-f9c408446bf2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0dbf02b-9f82-4608-b6c9-348e079d3512",
            "cc6b1734-182b-4b2f-ab68-8adf7e26fe77",
            "3529a9d1-49a3-4df8-a840-4f4b3f534512",
            "9a45e2df-b8c2-46ee-b54e-c89cf51c846a",
            "ff7b03e5-5c7e-4b16-92fa-f668f8e743c0",
            "3982b60d-a645-43c0-8c42-b4f0cac68f50",
            "478ea6c4-9167-4790-ab78-e34344763718",
            "b5d91f39-b713-4cb0-8f33-0d090bed51ba",
            "fdeaf8d9-3efb-49fc-935c-053a2516191e",
            "ee917128-dbc8-450b-aac6-69994fdfbef0",
            "9db537b8-063b-4bab-b4ce-fead7d6743b2",
            "00a36e41-9b81-476d-b772-d7693dcaea10",
            "f6d1262d-7abf-489d-b3e5-c650044e863d",
            "313f0f4b-0044-4c6e-95f9-25fcc1b39c44",
            "f2f3451b-e3d4-44d3-a623-dc900d573a22",
            "4daf12e1-6be8-4a10-983b-10fd553f9d1d",
            "a8de4211-c98f-4d01-8f7a-403c2967db41"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
          "title": "Test 10Lines game: 20, 36 -  71",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 170,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c4853659-158d-4dcf-87f4-e01d5c3edafa",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "c69677bc-dc27-41d2-b4c1-4229a69bc28a",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "0630f641-2e59-4e15-a8e3-de7939d6bdd0",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "eaa9f83d-4e07-4c9e-95e7-6298c3a166db",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "b8883975-5a50-4965-8683-6fc442a1d49f",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "2aeb724d-4e08-4d6f-991d-a0ba0e7d344d",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "514caf04-47bb-47a3-886a-2e5dfd47ccd0",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "5a4623f1-0c79-40be-958c-158776efade5",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "38700435-3cc1-41d7-9c92-6b231a330d48",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "12f2b7de-0bac-4f7b-89b6-74bac8ce1618",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5f75b7a5-e3ae-4947-a77b-a49022926731",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "aa7c3731-1d5e-42e8-8526-d16f58812779",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "902176e5-af1c-424a-a433-ba794e046212",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "b1ad1cbd-c060-4a03-9945-ecb796ab3fa8",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "b0206d95-47b2-4a8d-bbb6-8a9ba5276269",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "1e0fe596-e3c8-4f9a-a1c3-45f707d4fbc2",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "937b1883-e40c-436d-bbd4-e081367b4ed7",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a72b0b66-ea96-4b2b-a6e7-a00a4c9b4144",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  71 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3f5d7331-4413-4889-95f6-96894f9c578a",
              "parentUUID": "11c4b1cb-8cbe-4cdd-9cfb-422500e253d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0630f641-2e59-4e15-a8e3-de7939d6bdd0",
            "eaa9f83d-4e07-4c9e-95e7-6298c3a166db",
            "b8883975-5a50-4965-8683-6fc442a1d49f",
            "2aeb724d-4e08-4d6f-991d-a0ba0e7d344d",
            "514caf04-47bb-47a3-886a-2e5dfd47ccd0",
            "5a4623f1-0c79-40be-958c-158776efade5",
            "38700435-3cc1-41d7-9c92-6b231a330d48",
            "12f2b7de-0bac-4f7b-89b6-74bac8ce1618",
            "5f75b7a5-e3ae-4947-a77b-a49022926731",
            "aa7c3731-1d5e-42e8-8526-d16f58812779",
            "902176e5-af1c-424a-a433-ba794e046212",
            "b1ad1cbd-c060-4a03-9945-ecb796ab3fa8",
            "b0206d95-47b2-4a8d-bbb6-8a9ba5276269",
            "1e0fe596-e3c8-4f9a-a1c3-45f707d4fbc2",
            "937b1883-e40c-436d-bbd4-e081367b4ed7",
            "a72b0b66-ea96-4b2b-a6e7-a00a4c9b4144",
            "3f5d7331-4413-4889-95f6-96894f9c578a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
          "title": "Test 10Lines game: 20, 36 -  72",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 178,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "123c97ca-b9b3-4b39-9874-7d7bebe9542e",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "fbfc9917-bbf6-4887-b30f-7dcd015bc82a",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "6a155f05-b9df-4f1a-980d-3f9f3ad10863",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "21062500-8902-4bb3-bdae-b9e5c97ef71b",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "f1528d1f-46c0-4778-9295-52dab7f8602a",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "9b21d39d-8397-41ee-a478-039d444baa38",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "b4923267-0317-47a8-b4d9-529a3ee9f37f",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "3013541f-4762-4b13-a643-c8812d4dd970",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 check correct add count of FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "fabf8f55-e5a6-420e-aa71-f36e23de20d3",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "504c16e0-2b52-4be9-a8b3-d47a7f0f3699",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "57f486b8-da19-4012-8967-e6758f5ffb4d",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "baa2520d-9258-4777-ae30-e67e4a39d0e5",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "9fe8ad8b-3ceb-497b-a29f-d162f9b5916e",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "555edfc9-4bd7-4cdf-8f0d-536ac8e87b2e",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "2f483dfc-311b-4b16-b00b-c655c90b1b22",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "c4c136da-ec9c-4e23-8b49-1623183bb0a2",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "16279a74-b48d-497f-adf7-038aa522f641",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "35649c63-4dd3-4c80-ac35-8c7831c43dc6",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  72 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a9f1f33b-4403-4d69-9911-df5ee1027b91",
              "parentUUID": "0e09d9d3-39e4-4ba8-b855-846cf0fbb359",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a155f05-b9df-4f1a-980d-3f9f3ad10863",
            "21062500-8902-4bb3-bdae-b9e5c97ef71b",
            "f1528d1f-46c0-4778-9295-52dab7f8602a",
            "9b21d39d-8397-41ee-a478-039d444baa38",
            "b4923267-0317-47a8-b4d9-529a3ee9f37f",
            "3013541f-4762-4b13-a643-c8812d4dd970",
            "fabf8f55-e5a6-420e-aa71-f36e23de20d3",
            "504c16e0-2b52-4be9-a8b3-d47a7f0f3699",
            "57f486b8-da19-4012-8967-e6758f5ffb4d",
            "baa2520d-9258-4777-ae30-e67e4a39d0e5",
            "9fe8ad8b-3ceb-497b-a29f-d162f9b5916e",
            "555edfc9-4bd7-4cdf-8f0d-536ac8e87b2e",
            "2f483dfc-311b-4b16-b00b-c655c90b1b22",
            "c4c136da-ec9c-4e23-8b49-1623183bb0a2",
            "16279a74-b48d-497f-adf7-038aa522f641",
            "35649c63-4dd3-4c80-ac35-8c7831c43dc6",
            "a9f1f33b-4403-4d69-9911-df5ee1027b91"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
          "title": "Test 10Lines game: 20, 36 -  73",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 172,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b47c76dc-9045-4567-afd7-df77bca4ff54",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "16928353-772e-43ab-80b8-ce68ee5df291",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "8851adc9-8adb-4cba-9f9b-f4deca27aadc",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "bf6a59f9-cd4e-415e-9c71-f624574e07ce",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "71776255-d2c9-49c9-a0a4-4044852e164e",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "be31646e-8022-493a-a4c0-b36736df9199",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "66349d79-7f92-41e7-92ab-a3fc42308701",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "9bbb9fc6-b75f-4bb6-8e8c-4e6b76e145d0",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 check correct add count of FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c1a99704-64ce-46db-bea0-263344efa03c",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "59cebc23-f3c8-43ed-9516-4afc366a38c3",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "27a1d6b0-0e26-4ff8-bcec-65cdf673432f",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "189bc8b5-ea8f-484a-a51d-a7f7bef99803",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "ce505e13-5c27-4424-95fa-764c1219b1e6",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "520100cb-7f48-477c-b169-e3cd1d63a3ee",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "d4db7c83-7a1e-401d-abc5-f1022c56a92c",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "5597db4c-5bea-48d7-80dc-596df2aa6720",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "1a02555c-550e-4f33-afd4-3390770fe786",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e8493f40-83ef-4f52-b354-df797b2492dc",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  73 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c7cc1616-9267-4021-a22f-ddeb29a231df",
              "parentUUID": "150ec3d7-effb-4f8d-a25a-a432e02ed3a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8851adc9-8adb-4cba-9f9b-f4deca27aadc",
            "bf6a59f9-cd4e-415e-9c71-f624574e07ce",
            "71776255-d2c9-49c9-a0a4-4044852e164e",
            "be31646e-8022-493a-a4c0-b36736df9199",
            "66349d79-7f92-41e7-92ab-a3fc42308701",
            "9bbb9fc6-b75f-4bb6-8e8c-4e6b76e145d0",
            "c1a99704-64ce-46db-bea0-263344efa03c",
            "59cebc23-f3c8-43ed-9516-4afc366a38c3",
            "27a1d6b0-0e26-4ff8-bcec-65cdf673432f",
            "189bc8b5-ea8f-484a-a51d-a7f7bef99803",
            "ce505e13-5c27-4424-95fa-764c1219b1e6",
            "520100cb-7f48-477c-b169-e3cd1d63a3ee",
            "d4db7c83-7a1e-401d-abc5-f1022c56a92c",
            "5597db4c-5bea-48d7-80dc-596df2aa6720",
            "1a02555c-550e-4f33-afd4-3390770fe786",
            "e8493f40-83ef-4f52-b354-df797b2492dc",
            "c7cc1616-9267-4021-a22f-ddeb29a231df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
          "title": "Test 10Lines game: 20, 36 -  74",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 174,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1f085fa9-6097-4593-b193-d0f999b34273",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "16a3c546-255b-43b2-b2ed-5ff4af5b4f4b",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "0c803af0-b3e8-49e3-bdcc-b45b49772687",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "945b64c0-508b-4bad-a2a0-aee091b3b996",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "15f92d28-567a-4d38-8257-748932aa03ac",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d722d559-0027-4c71-a418-055f2bc1b176",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "1e9a9ee8-2da0-44f7-bc41-a5683b6c43ca",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 check total amount is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d09f900f-cf69-49c5-9cc9-5b61ed789aa2",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "eb87abd1-e4a7-45cb-9836-6b5198b1d145",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "fc5addb9-ef82-411a-bbfe-f0c8cc833333",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9d9e2ab6-9974-4b69-ae97-1066a617aa60",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7c67f36a-c31e-4aca-9983-056817eed467",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "d453b863-db5d-4b0a-b41f-820a9d9b4524",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0a182807-13c2-4c3c-8cc6-e5a3f3721d4f",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "f6ad60f0-ee36-44a1-91ca-3d5f86776b29",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "18d5a379-a154-4dea-8818-fae3507e78f8",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "978224c0-d910-44b1-ae2d-38a181fdab01",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "50b281e1-e3c4-4c2e-846d-69f94623a877",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  74 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "9361d183-3d37-4b1a-b207-e37d07a72dfd",
              "parentUUID": "bd57fba4-b948-4dbe-bb10-c150b4f6191e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c803af0-b3e8-49e3-bdcc-b45b49772687",
            "945b64c0-508b-4bad-a2a0-aee091b3b996",
            "15f92d28-567a-4d38-8257-748932aa03ac",
            "d722d559-0027-4c71-a418-055f2bc1b176",
            "1e9a9ee8-2da0-44f7-bc41-a5683b6c43ca",
            "d09f900f-cf69-49c5-9cc9-5b61ed789aa2",
            "eb87abd1-e4a7-45cb-9836-6b5198b1d145",
            "fc5addb9-ef82-411a-bbfe-f0c8cc833333",
            "9d9e2ab6-9974-4b69-ae97-1066a617aa60",
            "7c67f36a-c31e-4aca-9983-056817eed467",
            "d453b863-db5d-4b0a-b41f-820a9d9b4524",
            "0a182807-13c2-4c3c-8cc6-e5a3f3721d4f",
            "f6ad60f0-ee36-44a1-91ca-3d5f86776b29",
            "18d5a379-a154-4dea-8818-fae3507e78f8",
            "978224c0-d910-44b1-ae2d-38a181fdab01",
            "50b281e1-e3c4-4c2e-846d-69f94623a877",
            "9361d183-3d37-4b1a-b207-e37d07a72dfd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
          "title": "Test 10Lines game: 20, 36 -  75",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 287,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "03f2d503-2522-4ba4-910a-edcf43ea64f9",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "5c75023f-ec41-4b23-a106-18507129c4db",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "155d1632-630e-4dae-aacd-fe1e868c2bbf",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "6b47aa04-e1be-40c5-962b-57f9100ae9c3",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "a2d7bad5-53cf-43e9-a5ed-a89bfa058755",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6e2ae9ff-3db9-46a4-9375-78b67451bb61",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "a1aaacc3-d2ef-412b-85f8-c0142104c92d",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "604bca75-77ed-4564-bbe8-1f9a393c4912",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "96bb1848-4862-41eb-9d0c-d7fe5c47b564",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "314a2d79-4463-435a-8236-20aabcee9288",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "16407d79-11b0-4323-b7ad-d3f6d7fc3c32",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cb683a1e-37a8-4c72-9966-6a86bfa3bd20",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "16ca3ee1-98dd-4e4f-af97-c78f601bbb1d",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "9d79444f-1c47-4be1-b4cb-982ffef6e2e8",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "e196e903-c026-4ab5-aa20-750798c73ced",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "01e30d15-405b-44f0-8305-795d76cad71f",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "5166cac7-ccd1-44e8-99a6-f571be7ae8d0",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "241a81de-6917-440f-b498-43fa1cdd36c5",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  75 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c8001e26-03e4-4906-8784-30cd1d32a03b",
              "parentUUID": "45ca5906-d30b-41e8-830c-33fcf4afe3e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "155d1632-630e-4dae-aacd-fe1e868c2bbf",
            "6b47aa04-e1be-40c5-962b-57f9100ae9c3",
            "a2d7bad5-53cf-43e9-a5ed-a89bfa058755",
            "6e2ae9ff-3db9-46a4-9375-78b67451bb61",
            "a1aaacc3-d2ef-412b-85f8-c0142104c92d",
            "604bca75-77ed-4564-bbe8-1f9a393c4912",
            "96bb1848-4862-41eb-9d0c-d7fe5c47b564",
            "314a2d79-4463-435a-8236-20aabcee9288",
            "16407d79-11b0-4323-b7ad-d3f6d7fc3c32",
            "cb683a1e-37a8-4c72-9966-6a86bfa3bd20",
            "16ca3ee1-98dd-4e4f-af97-c78f601bbb1d",
            "9d79444f-1c47-4be1-b4cb-982ffef6e2e8",
            "e196e903-c026-4ab5-aa20-750798c73ced",
            "01e30d15-405b-44f0-8305-795d76cad71f",
            "5166cac7-ccd1-44e8-99a6-f571be7ae8d0",
            "241a81de-6917-440f-b498-43fa1cdd36c5",
            "c8001e26-03e4-4906-8784-30cd1d32a03b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a6eacd96-0f43-4920-9a78-90cf082342c9",
          "title": "Test 10Lines game: 20, 36 -  76",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 170,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8d9455f5-dd1f-4de7-94a1-6ee1f2039636",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "febd0477-61d4-4e7b-9b9a-e3b24f05dcb1",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "02003a9b-d6c7-4770-983a-b9b026fc8661",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "9eded7b0-ae8b-4a9c-a779-83378e1cec03",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "2c231440-7957-4900-8d6c-1efc9741ffec",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "50584b03-b1d3-472c-b039-19e0f78665c1",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "5f2d1e3d-263c-41ba-8596-019547df7ddf",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "db05c138-668e-4008-ac8e-3ee68627be55",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ae57caad-70f4-44ee-a5ff-a871382e3d1c",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 check correct total FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "7cf16572-0a5d-49bf-8aec-c00ea302393c",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b5cab83b-47f1-454f-a21d-a010917e5d1e",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "466e1bb7-2c1e-4af1-8d7a-a199aeea2faa",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "85f3eba6-cdd8-4366-8673-a8276f0d850a",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 check correct accrual FSWin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0ed63f13-292a-4da5-bf2f-d787402eb89d",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "dcbc8c66-1762-4b87-90f9-7086160ff763",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "2f065ec9-2d34-47b3-876e-aa8758cbb9cf",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "56968c08-a3fa-4363-9971-f2953ce278e9",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "26b2625c-628f-4a9d-ad47-a83d0bb4abba",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  76 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c191b309-c6f3-4160-b60d-48548b4fdb99",
              "parentUUID": "a6eacd96-0f43-4920-9a78-90cf082342c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02003a9b-d6c7-4770-983a-b9b026fc8661",
            "9eded7b0-ae8b-4a9c-a779-83378e1cec03",
            "2c231440-7957-4900-8d6c-1efc9741ffec",
            "50584b03-b1d3-472c-b039-19e0f78665c1",
            "5f2d1e3d-263c-41ba-8596-019547df7ddf",
            "db05c138-668e-4008-ac8e-3ee68627be55",
            "ae57caad-70f4-44ee-a5ff-a871382e3d1c",
            "7cf16572-0a5d-49bf-8aec-c00ea302393c",
            "b5cab83b-47f1-454f-a21d-a010917e5d1e",
            "466e1bb7-2c1e-4af1-8d7a-a199aeea2faa",
            "85f3eba6-cdd8-4366-8673-a8276f0d850a",
            "0ed63f13-292a-4da5-bf2f-d787402eb89d",
            "dcbc8c66-1762-4b87-90f9-7086160ff763",
            "2f065ec9-2d34-47b3-876e-aa8758cbb9cf",
            "56968c08-a3fa-4363-9971-f2953ce278e9",
            "26b2625c-628f-4a9d-ad47-a83d0bb4abba",
            "c191b309-c6f3-4160-b60d-48548b4fdb99"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
          "title": "Test 10Lines game: 20, 36 -  77",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1178,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b799dc15-9fa9-4c09-80d5-cd58a0b40df3",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "9c270c39-7f76-4b86-9ca5-dd1bb1426191",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "9fddf8dc-3174-4a14-89a1-1132b3c161c3",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "c521738b-6204-4a30-9ba1-c37f36c07a32",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "001b0b46-08f7-43c7-996f-41342c154ae6",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "acae3dfa-1a86-4114-a366-e5708f0733ea",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "acf6433c-2705-4cb7-b239-94b0b8a0c1bd",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "1057752a-5a7f-41ae-8c40-6dc339e4380c",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9d1d6a2c-59a1-4f6d-b1db-556457a400df",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "5c73a2eb-59a2-4dd8-88fa-267185e8f3ae",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "980d0692-365e-471e-b79b-62bc0fe4d399",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 check rest FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9f7a77f0-9b5a-4de4-995b-40e2c6f68430",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "01a46c89-62e7-4130-8ff6-657afb2b63d2",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "1f08ed13-2f4f-4c59-ab15-1362e87553ea",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "a13135fb-0511-4401-bde5-9e4726e595b1",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "9f5ca8c3-36d0-4a07-91a1-1c3d1a6dd9e4",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "454be969-92f1-433a-8885-422a8c3bcc82",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "612540b2-2f3e-4a26-9e93-55c141776623",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  77 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "7492ad41-d8c3-4dcf-a31a-99f6190e9db3",
              "parentUUID": "dd339710-2aec-4ec6-b4fe-f4fe2a530893",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9fddf8dc-3174-4a14-89a1-1132b3c161c3",
            "c521738b-6204-4a30-9ba1-c37f36c07a32",
            "001b0b46-08f7-43c7-996f-41342c154ae6",
            "acae3dfa-1a86-4114-a366-e5708f0733ea",
            "acf6433c-2705-4cb7-b239-94b0b8a0c1bd",
            "1057752a-5a7f-41ae-8c40-6dc339e4380c",
            "9d1d6a2c-59a1-4f6d-b1db-556457a400df",
            "5c73a2eb-59a2-4dd8-88fa-267185e8f3ae",
            "980d0692-365e-471e-b79b-62bc0fe4d399",
            "9f7a77f0-9b5a-4de4-995b-40e2c6f68430",
            "01a46c89-62e7-4130-8ff6-657afb2b63d2",
            "1f08ed13-2f4f-4c59-ab15-1362e87553ea",
            "a13135fb-0511-4401-bde5-9e4726e595b1",
            "9f5ca8c3-36d0-4a07-91a1-1c3d1a6dd9e4",
            "454be969-92f1-433a-8885-422a8c3bcc82",
            "612540b2-2f3e-4a26-9e93-55c141776623",
            "7492ad41-d8c3-4dcf-a31a-99f6190e9db3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e10c197c-d36e-446a-8392-f17984f05087",
          "title": "Test 10Lines game: 20, 36 -  78",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 174,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1a586e89-c58a-45c5-bfc8-adb89b874f0d",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "ebf72d04-618d-42dc-a159-fb7a892dcee1",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "dab7c96d-94f9-4cba-b905-068bf266b07e",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "05bc553d-eb1e-4419-8c61-36b98a9f3c63",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "7ee077ea-2768-49ae-b1aa-8964a1c080a9",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "8ce12851-567a-4209-98f8-bc0167308822",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "27147e04-2ba0-471e-b5e0-aa7044315302",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "ff90d92d-8eee-444d-ac33-f53519f70b00",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bf64e2db-c0a1-42d6-827f-88e20c8b9c9d",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "9fcf8a5c-b455-4b34-9595-c28795c744d9",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "47100727-2404-40ba-99f8-6457ca7b5f9e",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ed75c2c8-5b56-492c-af13-e859ad1f65e4",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "18b2b4a1-f39c-4224-9e2d-e3af2ee2bc62",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "7b61cf65-a838-4132-bf93-b9cc42795098",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "d084777e-4987-47a4-be4d-cc230e5be361",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "b087d5d3-ba4f-431c-9a95-6b66f44c0a0f",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "ca89b276-2a16-44c4-b830-6d67259315f8",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3c8b4e2e-bea5-4997-92b3-4a842d88c00e",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  78 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "bbb12f9c-1b7d-4e42-b926-a76acd47c898",
              "parentUUID": "e10c197c-d36e-446a-8392-f17984f05087",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dab7c96d-94f9-4cba-b905-068bf266b07e",
            "05bc553d-eb1e-4419-8c61-36b98a9f3c63",
            "7ee077ea-2768-49ae-b1aa-8964a1c080a9",
            "8ce12851-567a-4209-98f8-bc0167308822",
            "27147e04-2ba0-471e-b5e0-aa7044315302",
            "ff90d92d-8eee-444d-ac33-f53519f70b00",
            "bf64e2db-c0a1-42d6-827f-88e20c8b9c9d",
            "9fcf8a5c-b455-4b34-9595-c28795c744d9",
            "47100727-2404-40ba-99f8-6457ca7b5f9e",
            "ed75c2c8-5b56-492c-af13-e859ad1f65e4",
            "18b2b4a1-f39c-4224-9e2d-e3af2ee2bc62",
            "7b61cf65-a838-4132-bf93-b9cc42795098",
            "d084777e-4987-47a4-be4d-cc230e5be361",
            "b087d5d3-ba4f-431c-9a95-6b66f44c0a0f",
            "ca89b276-2a16-44c4-b830-6d67259315f8",
            "3c8b4e2e-bea5-4997-92b3-4a842d88c00e",
            "bbb12f9c-1b7d-4e42-b926-a76acd47c898"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
          "title": "Test 10Lines game: 20, 36 -  79",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 174,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a8e886de-a219-4649-981d-d4ac2f8092a1",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "b9d33ede-501f-479b-b84e-96eb047a218d",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "64b1edac-99ff-42b6-aa1e-5edab01c0ecb",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "af5d1735-fd81-4cc2-a9e5-7d1ec7f027b6",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "d25a719b-cb12-4ae8-bd3e-45b05e337051",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "5de099e8-d810-47e8-a4f3-e6da1235257a",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "156555d0-25be-4174-89b1-fa3c0305436f",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "5ee13ede-6bc2-478b-8e93-5b809aa28c7e",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8aa31e48-49cb-4f38-8014-31d1b5caac16",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "2187748b-86fe-429b-a987-339efc82bf16",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6c827719-1a42-4c21-8d92-ab7ea06e6bc3",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8a10f85f-d89e-46ea-8a48-a4f525ea2044",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "fe755d32-e5c5-424d-9b97-bff43b628e8f",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 check correct accrual FSWin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "ce45dcb2-957e-4349-a264-089e3246c585",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "c9bb3030-45aa-4af0-b966-be67884cf77d",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "9d56d559-5304-4748-bbbf-5be082cbc52c",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "dd2853b8-d8a3-4928-babb-e42ecac9751c",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3b80e78c-b879-4343-b879-9c7a1afe06b3",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  79 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e53b0a91-c0b3-4cc5-bccb-652a8444e6a1",
              "parentUUID": "e15cfd98-66c7-4714-839d-b1c35d4da16f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64b1edac-99ff-42b6-aa1e-5edab01c0ecb",
            "af5d1735-fd81-4cc2-a9e5-7d1ec7f027b6",
            "d25a719b-cb12-4ae8-bd3e-45b05e337051",
            "5de099e8-d810-47e8-a4f3-e6da1235257a",
            "156555d0-25be-4174-89b1-fa3c0305436f",
            "5ee13ede-6bc2-478b-8e93-5b809aa28c7e",
            "8aa31e48-49cb-4f38-8014-31d1b5caac16",
            "2187748b-86fe-429b-a987-339efc82bf16",
            "6c827719-1a42-4c21-8d92-ab7ea06e6bc3",
            "8a10f85f-d89e-46ea-8a48-a4f525ea2044",
            "fe755d32-e5c5-424d-9b97-bff43b628e8f",
            "ce45dcb2-957e-4349-a264-089e3246c585",
            "c9bb3030-45aa-4af0-b966-be67884cf77d",
            "9d56d559-5304-4748-bbbf-5be082cbc52c",
            "dd2853b8-d8a3-4928-babb-e42ecac9751c",
            "3b80e78c-b879-4343-b879-9c7a1afe06b3",
            "e53b0a91-c0b3-4cc5-bccb-652a8444e6a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
          "title": "Test 10Lines game: 20, 36 -  80",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 168,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "855eb126-6bd6-40a5-a46e-6aa8406498b5",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "b98e3195-a3d5-474d-a2c0-0dc290a7c99d",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "10039c55-a358-4713-8352-b36f01e0bb2f",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "383b83b1-53c5-479a-bd0c-238c690afeae",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "80382bc3-37ef-4be2-b811-5ce1de80f79e",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "5dc2b18e-561e-408c-8367-45ef01df93dc",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "d889845d-de7b-4425-b91e-7c2ff04bbe77",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d0f89309-f8e1-4989-b934-01027fdabd50",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e87f0e28-942b-46e9-9b27-de12ea354e2b",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 check correct total FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "dc8a9c68-f5a8-4ecd-ab0c-e09ef99e4021",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "96dbf243-e775-4acd-a42f-ca6e0ea6f555",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ddc4f109-6840-499b-ae9b-7358b70b846c",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "4f39ccdc-eac2-4688-ac13-f76d8f4ff76b",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a4e33c88-881d-46fe-b068-51117b682baf",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "a8f61873-bb3d-4374-9f7d-22aca6c03c9f",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "25cd0bc0-e633-4e14-8c5d-43bcf9977597",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "4111f63c-d97d-475a-ba18-e0062318e964",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "10eb687f-c235-4e69-b082-50bc398a0c39",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  80 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6297b733-da40-4551-8d12-4bc19ddc9137",
              "parentUUID": "768abdf0-33d7-4b67-8d0c-95ba5193a8e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10039c55-a358-4713-8352-b36f01e0bb2f",
            "383b83b1-53c5-479a-bd0c-238c690afeae",
            "80382bc3-37ef-4be2-b811-5ce1de80f79e",
            "5dc2b18e-561e-408c-8367-45ef01df93dc",
            "d889845d-de7b-4425-b91e-7c2ff04bbe77",
            "d0f89309-f8e1-4989-b934-01027fdabd50",
            "e87f0e28-942b-46e9-9b27-de12ea354e2b",
            "dc8a9c68-f5a8-4ecd-ab0c-e09ef99e4021",
            "96dbf243-e775-4acd-a42f-ca6e0ea6f555",
            "ddc4f109-6840-499b-ae9b-7358b70b846c",
            "4f39ccdc-eac2-4688-ac13-f76d8f4ff76b",
            "a4e33c88-881d-46fe-b068-51117b682baf",
            "a8f61873-bb3d-4374-9f7d-22aca6c03c9f",
            "25cd0bc0-e633-4e14-8c5d-43bcf9977597",
            "4111f63c-d97d-475a-ba18-e0062318e964",
            "10eb687f-c235-4e69-b082-50bc398a0c39",
            "6297b733-da40-4551-8d12-4bc19ddc9137"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a818837c-f046-4463-bd91-f3b277358bcd",
          "title": "Test 10Lines game: 20, 36 -  81",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 175,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9206809e-b8c5-4a9a-bd5e-6a19886f9b45",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "bc1a41e5-8a1d-4eb1-9319-8ac2f5039dae",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "96b5b130-6b37-46a6-a61d-16b8b01bf386",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "1d1470e3-9331-4a8a-9612-02841e72c39c",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "3ca70661-3b9e-4808-8218-0d8bf0e633c7",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "3b47507d-839e-4f24-99a5-9df10ee7e76f",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "d7ec9e88-9ea5-48b1-acaf-9d435352a06b",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "5569d443-90b6-431b-9daa-ffde0669eb7c",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2dfd5711-503b-4f08-a955-63e749d4570b",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "1b9b9bea-99bb-4693-87ff-481234296fd3",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8c2a70a9-37ff-4e96-ae65-4fb9d3e8ba55",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ec135088-21a4-427c-ab32-4f5215dfe223",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "903f0c7f-9a61-46a1-97c2-d8608506e269",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "aaf7d30c-2155-46d1-b3bf-17527220c5a2",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "1fd8b160-ab5b-4764-a56c-3f8e67a75857",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "6e18dfeb-0946-4ad1-b854-d7051873054b",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "f070671e-423c-4949-b1ff-f686a6890b52",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "1d1afeee-5a99-4e44-9321-dd1833f0a993",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  81 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "48149ca3-4cce-4c1d-950b-f21e4c791adf",
              "parentUUID": "a818837c-f046-4463-bd91-f3b277358bcd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96b5b130-6b37-46a6-a61d-16b8b01bf386",
            "1d1470e3-9331-4a8a-9612-02841e72c39c",
            "3ca70661-3b9e-4808-8218-0d8bf0e633c7",
            "3b47507d-839e-4f24-99a5-9df10ee7e76f",
            "d7ec9e88-9ea5-48b1-acaf-9d435352a06b",
            "5569d443-90b6-431b-9daa-ffde0669eb7c",
            "2dfd5711-503b-4f08-a955-63e749d4570b",
            "1b9b9bea-99bb-4693-87ff-481234296fd3",
            "8c2a70a9-37ff-4e96-ae65-4fb9d3e8ba55",
            "ec135088-21a4-427c-ab32-4f5215dfe223",
            "903f0c7f-9a61-46a1-97c2-d8608506e269",
            "aaf7d30c-2155-46d1-b3bf-17527220c5a2",
            "1fd8b160-ab5b-4764-a56c-3f8e67a75857",
            "6e18dfeb-0946-4ad1-b854-d7051873054b",
            "f070671e-423c-4949-b1ff-f686a6890b52",
            "1d1afeee-5a99-4e44-9321-dd1833f0a993",
            "48149ca3-4cce-4c1d-950b-f21e4c791adf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
          "title": "Test 10Lines game: 20, 36 -  82",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 296,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d4b60419-20dc-44f3-841b-db62e062ee3e",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "de2f3874-74d1-487c-a190-2b62c0593771",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "11e7f385-e2d7-4e7c-9acd-0575c1f7bb56",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "d2f2d273-4fae-4cd7-93aa-7a00def02a31",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "58150767-ab4c-41bb-b334-e733b99f2fe2",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 check correct position of winning symbol",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "20d79653-e2cf-4c06-979c-b310e68df6ae",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "e6c13456-f55a-436f-a44c-1acb1f6588e1",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "607ede30-27cc-4e87-8fea-76d35d43a37e",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "54d8f52d-db11-4239-bfdf-71f591ee7305",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "a61a6c45-c752-4dfe-beb3-3bb631015ac6",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "693a393f-c958-4113-ac04-7c5b00b10de4",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "50e1fbec-22b8-4c19-b540-866b3726eb3d",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 balance is not change",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "e1865281-24f0-46d2-8e71-4486df9bddb4",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "7b8b1ab2-35e7-4dc1-a87b-bc344b1b79dc",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "49261d4d-feed-46a0-8c4a-a05a0a1604f3",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "0f9be1be-18b6-4d5c-811d-4bba1e1fbb9b",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "78e5c863-5029-4d4c-a6b8-ccd8fce0caff",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ee1a7718-8a2a-4426-bbbc-cb6994326f3f",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  82 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "2fe027e3-c818-4a82-9427-7ba1799ff735",
              "parentUUID": "c8c606a3-bc5d-4337-9c80-9af8ecf1cf13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11e7f385-e2d7-4e7c-9acd-0575c1f7bb56",
            "d2f2d273-4fae-4cd7-93aa-7a00def02a31",
            "58150767-ab4c-41bb-b334-e733b99f2fe2",
            "20d79653-e2cf-4c06-979c-b310e68df6ae",
            "e6c13456-f55a-436f-a44c-1acb1f6588e1",
            "607ede30-27cc-4e87-8fea-76d35d43a37e",
            "54d8f52d-db11-4239-bfdf-71f591ee7305",
            "a61a6c45-c752-4dfe-beb3-3bb631015ac6",
            "693a393f-c958-4113-ac04-7c5b00b10de4",
            "50e1fbec-22b8-4c19-b540-866b3726eb3d",
            "e1865281-24f0-46d2-8e71-4486df9bddb4",
            "7b8b1ab2-35e7-4dc1-a87b-bc344b1b79dc",
            "49261d4d-feed-46a0-8c4a-a05a0a1604f3",
            "0f9be1be-18b6-4d5c-811d-4bba1e1fbb9b",
            "78e5c863-5029-4d4c-a6b8-ccd8fce0caff",
            "ee1a7718-8a2a-4426-bbbc-cb6994326f3f",
            "2fe027e3-c818-4a82-9427-7ba1799ff735"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
          "title": "Test 10Lines game: 20, 36 -  83",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 321,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "cc00e9cd-223d-4842-b06c-a79556fdda33",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "8322a8a1-0361-43ce-bfbf-f0f6fd3ad32d",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "991ae8f0-e776-4b86-9dee-2af32a522334",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 check correct accrual Scatter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "386553df-6fd5-467f-9eb1-2476b16aaba4",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "094d9114-f6a8-4d0f-89e5-73dc710a6efa",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "73f4dd01-fa06-497d-9796-d0ceefabb02a",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "0d2145cd-50fb-4660-98d0-0470e27a08fc",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a45d1322-ea76-4410-aa28-d9254e7b6009",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "11bbafa3-1291-44cf-99bf-cbfc26a2497e",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "94580cd8-45d3-417b-b549-0bd42c3e7459",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "53eeafae-d59a-4888-9c12-457a4bc001f2",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a48c72f2-d6d6-4526-a5ec-e238c9e0926a",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "cf3ae8d2-0b87-45c7-8c53-089b78a2cc2d",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "75e85bcf-5773-4762-861f-0f91d38e9ab4",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "3ecb9edd-5208-4e53-b943-3539e3df585f",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "639100f5-50a2-4520-b5b4-b2adaf7035dd",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0d6a3e4a-3fd5-4388-9daa-b63b808e0abf",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e292f879-205d-43e9-b226-858e3e39b972",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  83 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a101b056-d1cc-411d-9009-8577f0048a8c",
              "parentUUID": "149dbe4c-6d25-48ac-8d36-6a6a89298c6f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "991ae8f0-e776-4b86-9dee-2af32a522334",
            "386553df-6fd5-467f-9eb1-2476b16aaba4",
            "094d9114-f6a8-4d0f-89e5-73dc710a6efa",
            "73f4dd01-fa06-497d-9796-d0ceefabb02a",
            "0d2145cd-50fb-4660-98d0-0470e27a08fc",
            "a45d1322-ea76-4410-aa28-d9254e7b6009",
            "11bbafa3-1291-44cf-99bf-cbfc26a2497e",
            "94580cd8-45d3-417b-b549-0bd42c3e7459",
            "53eeafae-d59a-4888-9c12-457a4bc001f2",
            "a48c72f2-d6d6-4526-a5ec-e238c9e0926a",
            "cf3ae8d2-0b87-45c7-8c53-089b78a2cc2d",
            "75e85bcf-5773-4762-861f-0f91d38e9ab4",
            "3ecb9edd-5208-4e53-b943-3539e3df585f",
            "639100f5-50a2-4520-b5b4-b2adaf7035dd",
            "0d6a3e4a-3fd5-4388-9daa-b63b808e0abf",
            "e292f879-205d-43e9-b226-858e3e39b972",
            "a101b056-d1cc-411d-9009-8577f0048a8c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5dacd918-a619-4566-bbdf-626734508b25",
          "title": "Test 10Lines game: 20, 36 -  84",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 278,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "abbb5214-6d1b-4315-ab52-f9df94746d0e",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "64bfb022-6a53-4d29-8a0f-4474e17d0c87",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "b377828f-1a21-4243-b760-6f5f735fb049",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "9dd90aed-47e9-480b-ae55-c2e55ab69de3",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "3cf11d2d-704f-4dde-9fb5-4075ac548498",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "ea551c3c-3ce2-49f4-ac74-227fe571eb3f",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "1c965cc1-866f-42fb-a309-3c51668fb2c8",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "af8e5680-3b54-4e43-a798-4902ae93ce31",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f499212b-5896-4ec4-a8f8-e193c70494ab",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "b1e98750-a7c5-476a-814e-468ffae245a0",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3c69e88d-4723-406d-8541-7af494cecbb9",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "41ed8c60-0e7c-4ae2-921c-e536dd4e308d",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "fe4bf5bb-0f82-40f4-ba68-bdf7538a3554",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "1f7e50cf-663f-4d2f-aff6-2b89f98f5a73",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "164f28eb-4930-4127-9639-944510d514bc",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "f3107192-d527-4d4e-973c-5ca81a30e31e",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "31bb64fd-6016-442a-aaaf-d1a825a79297",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "83f4fc0b-0f1f-4be1-b4f7-f1d75b136f31",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  84 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a7d759a0-83a6-43c5-b2d9-dbbcebc6d26f",
              "parentUUID": "5dacd918-a619-4566-bbdf-626734508b25",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b377828f-1a21-4243-b760-6f5f735fb049",
            "9dd90aed-47e9-480b-ae55-c2e55ab69de3",
            "3cf11d2d-704f-4dde-9fb5-4075ac548498",
            "ea551c3c-3ce2-49f4-ac74-227fe571eb3f",
            "1c965cc1-866f-42fb-a309-3c51668fb2c8",
            "af8e5680-3b54-4e43-a798-4902ae93ce31",
            "f499212b-5896-4ec4-a8f8-e193c70494ab",
            "b1e98750-a7c5-476a-814e-468ffae245a0",
            "3c69e88d-4723-406d-8541-7af494cecbb9",
            "41ed8c60-0e7c-4ae2-921c-e536dd4e308d",
            "fe4bf5bb-0f82-40f4-ba68-bdf7538a3554",
            "1f7e50cf-663f-4d2f-aff6-2b89f98f5a73",
            "164f28eb-4930-4127-9639-944510d514bc",
            "f3107192-d527-4d4e-973c-5ca81a30e31e",
            "31bb64fd-6016-442a-aaaf-d1a825a79297",
            "83f4fc0b-0f1f-4be1-b4f7-f1d75b136f31",
            "a7d759a0-83a6-43c5-b2d9-dbbcebc6d26f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
          "title": "Test 10Lines game: 20, 36 -  85",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 286,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1e8dee91-364a-40db-82a5-02a404f04c1c",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "5a8a50bb-2d95-4040-bad3-2f310713e2f0",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "4e64dd72-ee1b-4c31-9206-c83d61aabd89",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "595460fe-a99c-4cbd-9119-4d9cb30c4d86",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "2f0ee4ca-250c-475c-be2b-df0c5e99f19a",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "65b640dd-8177-4796-9751-7bb5454bb15c",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "97fdfe15-fe15-41c7-a7d9-668f0adc1927",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "23e9bf91-6506-4c70-9691-905b5fe99c18",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "368a75d9-b1fd-4494-9a14-21da1fa47d05",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "ddb5b154-62cf-4566-bf9f-acd0b50ad967",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0b831828-6e97-49c8-ab73-52155d2310d3",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "96d13f26-e35a-4f72-b046-bad25b048a9b",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "049bb7cb-3ae3-417b-9c25-3885930648e5",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "b8fd8f16-9937-4b15-913d-f6a65a17f9e6",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "1805cddf-f9df-42e9-8878-e601b9974127",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "7d870c46-b763-4b10-ac9e-797f8996cf0a",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "b943261e-2fc8-4732-b47b-6e1b224c53b0",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "1cc2ff7b-c081-4fd2-a72c-9de9cd804db7",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  85 RespinModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "1779608b-a6d4-4bb3-8d66-eb862051f176",
              "parentUUID": "92e91d6a-d63c-4ee5-b513-fe3784b48848",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e64dd72-ee1b-4c31-9206-c83d61aabd89",
            "595460fe-a99c-4cbd-9119-4d9cb30c4d86",
            "2f0ee4ca-250c-475c-be2b-df0c5e99f19a",
            "65b640dd-8177-4796-9751-7bb5454bb15c",
            "97fdfe15-fe15-41c7-a7d9-668f0adc1927",
            "23e9bf91-6506-4c70-9691-905b5fe99c18",
            "368a75d9-b1fd-4494-9a14-21da1fa47d05",
            "ddb5b154-62cf-4566-bf9f-acd0b50ad967",
            "0b831828-6e97-49c8-ab73-52155d2310d3",
            "96d13f26-e35a-4f72-b046-bad25b048a9b",
            "049bb7cb-3ae3-417b-9c25-3885930648e5",
            "b8fd8f16-9937-4b15-913d-f6a65a17f9e6",
            "1805cddf-f9df-42e9-8878-e601b9974127",
            "7d870c46-b763-4b10-ac9e-797f8996cf0a",
            "b943261e-2fc8-4732-b47b-6e1b224c53b0",
            "1cc2ff7b-c081-4fd2-a72c-9de9cd804db7",
            "1779608b-a6d4-4bb3-8d66-eb862051f176"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
          "title": "Test 10Lines game: 20, 36 -  86",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 565,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a84f71f3-9a10-4681-b3f0-d58e658e5cd3",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "9d71fd52-b5b2-4143-b0ac-f5510b4fa211",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "648a4715-7392-4eac-b57f-c934599cbd06",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "c5aac2ed-d370-409d-b075-c1ca0a506326",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "7084f2f4-9777-4900-8eaa-1cc3a4d9150d",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "51bf8d15-8a41-4f84-8245-b7ce85954551",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "f14e2138-5ad9-403b-98c0-1ba2bb302c61",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "442abe14-4964-4c59-bf42-99203498c5a4",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f5cb0ea6-7916-481f-9013-c8b2c0cb229d",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "3a68ff78-17ac-4ea2-aa0f-1db7cd31477b",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0dd2068f-27b3-45cf-ab61-6e03610766c7",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "31783856-f09e-49ef-bda2-1f6b78f35e07",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "5df3bd37-8bf9-48d9-803c-d739120da49a",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "061972df-c084-4d4b-ace3-a4807dbd12d0",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "6c49823f-f7c3-46da-a23c-f5f1fb1a1cbb",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e66203f5-9248-4bca-b708-a77dcd2bb441",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "caa3ece2-f415-4d85-86c9-8e9d72e24910",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "22fe1130-d7a6-4eb1-875d-2cb37034e214",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  86 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3956b00f-d8b9-4704-b345-d03c59d728f7",
              "parentUUID": "8da4b93c-75a2-4f8d-a613-2a1024dae213",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "648a4715-7392-4eac-b57f-c934599cbd06",
            "c5aac2ed-d370-409d-b075-c1ca0a506326",
            "7084f2f4-9777-4900-8eaa-1cc3a4d9150d",
            "51bf8d15-8a41-4f84-8245-b7ce85954551",
            "f14e2138-5ad9-403b-98c0-1ba2bb302c61",
            "442abe14-4964-4c59-bf42-99203498c5a4",
            "f5cb0ea6-7916-481f-9013-c8b2c0cb229d",
            "3a68ff78-17ac-4ea2-aa0f-1db7cd31477b",
            "0dd2068f-27b3-45cf-ab61-6e03610766c7",
            "31783856-f09e-49ef-bda2-1f6b78f35e07",
            "5df3bd37-8bf9-48d9-803c-d739120da49a",
            "061972df-c084-4d4b-ace3-a4807dbd12d0",
            "6c49823f-f7c3-46da-a23c-f5f1fb1a1cbb",
            "e66203f5-9248-4bca-b708-a77dcd2bb441",
            "caa3ece2-f415-4d85-86c9-8e9d72e24910",
            "22fe1130-d7a6-4eb1-875d-2cb37034e214",
            "3956b00f-d8b9-4704-b345-d03c59d728f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
          "title": "Test 10Lines game: 20, 36 -  87",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 277,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "fd49ce97-502a-4b45-98f3-c277fa784e5f",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "387ea70d-dd4d-492c-9c93-ee675503c4a1",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "f8236f54-aa0d-4f26-94fe-4ab3df0c51a1",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "b6d1d24e-e84b-4fac-a9f8-1499d90071de",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "cbbd941c-8241-412a-ad03-0c84e7da1757",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "36956a12-c57a-481e-8ad8-487c9f74c5d8",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "eed650cf-c43a-4507-b903-c9c37eaaa0b1",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "9f5a3bdd-1ee2-4ab4-af17-fd36ba8a9561",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e2138de5-052c-410a-8896-80e0f3fbed97",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "aaa8bdc3-542a-4b1d-969a-30910064e0f5",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f99cbb3e-7a82-4f1c-bd06-9b1cd2644ebf",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b3d28695-f9d9-4579-a239-bc8d86bc89a2",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "1bdf4ee6-bed9-4edd-acce-a4dbb51a3538",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "f153c562-07f3-408b-b263-db3900e7de54",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "62300b6a-0592-4563-b7c7-f8037ea5d167",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e8d6c883-c4e0-4e39-b170-c707df5b5268",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0090560a-38b5-495e-a3b3-8ac39417f76e",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "658aba13-a9b2-4d7a-97d6-e5e655e9cfc5",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  87 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "5d62b74c-6f2e-47d7-a4a2-1d54596ecccb",
              "parentUUID": "52a4064b-8e45-4d03-9495-3b4b6e5687e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8236f54-aa0d-4f26-94fe-4ab3df0c51a1",
            "b6d1d24e-e84b-4fac-a9f8-1499d90071de",
            "cbbd941c-8241-412a-ad03-0c84e7da1757",
            "36956a12-c57a-481e-8ad8-487c9f74c5d8",
            "eed650cf-c43a-4507-b903-c9c37eaaa0b1",
            "9f5a3bdd-1ee2-4ab4-af17-fd36ba8a9561",
            "e2138de5-052c-410a-8896-80e0f3fbed97",
            "aaa8bdc3-542a-4b1d-969a-30910064e0f5",
            "f99cbb3e-7a82-4f1c-bd06-9b1cd2644ebf",
            "b3d28695-f9d9-4579-a239-bc8d86bc89a2",
            "1bdf4ee6-bed9-4edd-acce-a4dbb51a3538",
            "f153c562-07f3-408b-b263-db3900e7de54",
            "62300b6a-0592-4563-b7c7-f8037ea5d167",
            "e8d6c883-c4e0-4e39-b170-c707df5b5268",
            "0090560a-38b5-495e-a3b3-8ac39417f76e",
            "658aba13-a9b2-4d7a-97d6-e5e655e9cfc5",
            "5d62b74c-6f2e-47d7-a4a2-1d54596ecccb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
          "title": "Test 10Lines game: 20, 36 -  88",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 283,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "223cfe47-e776-43ba-a6a6-46677ac72792",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "409491af-1dda-4705-b27e-d9fa72812e4a",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "3f3a8246-5469-4234-8803-887615727efb",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "f6c5d44f-02f8-4471-9d81-2a1728b20994",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "6afcb522-1712-4be3-b085-c97d31863683",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "f4173af1-88e5-4e07-868e-ba843bf0c354",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "a0a7d551-b957-459e-99f1-daae5135c80d",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "c7b6f4c8-7372-4865-a657-94024b412737",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0970218e-90e6-410e-a6b9-81c1f47925e2",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "5e022772-992a-417b-8a38-014b506f40be",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "71904705-81e7-487c-854d-418d82dbd204",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d9eeab2a-a824-4348-a55a-f449dfe0dfde",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "57a817b0-9328-4c4a-a777-ad957323cb10",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "ad4d5567-dcb7-4a93-9e9d-810439ccac07",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "14022689-d01b-420a-b9f6-030d30ee25bd",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "3c85c7cd-7312-4228-ba6a-a3aeaa2fa203",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "9e5332ed-441c-44e8-9355-254a38dcf6e1",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "aaf5d3fc-d9d0-4dcd-81ea-4922024569a6",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  88 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "d62ec8f0-167d-4523-837b-e44959805b89",
              "parentUUID": "709d0656-d8db-421a-a44d-ec6bdccf8ccb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f3a8246-5469-4234-8803-887615727efb",
            "f6c5d44f-02f8-4471-9d81-2a1728b20994",
            "6afcb522-1712-4be3-b085-c97d31863683",
            "f4173af1-88e5-4e07-868e-ba843bf0c354",
            "a0a7d551-b957-459e-99f1-daae5135c80d",
            "c7b6f4c8-7372-4865-a657-94024b412737",
            "0970218e-90e6-410e-a6b9-81c1f47925e2",
            "5e022772-992a-417b-8a38-014b506f40be",
            "71904705-81e7-487c-854d-418d82dbd204",
            "d9eeab2a-a824-4348-a55a-f449dfe0dfde",
            "57a817b0-9328-4c4a-a777-ad957323cb10",
            "ad4d5567-dcb7-4a93-9e9d-810439ccac07",
            "14022689-d01b-420a-b9f6-030d30ee25bd",
            "3c85c7cd-7312-4228-ba6a-a3aeaa2fa203",
            "9e5332ed-441c-44e8-9355-254a38dcf6e1",
            "aaf5d3fc-d9d0-4dcd-81ea-4922024569a6",
            "d62ec8f0-167d-4523-837b-e44959805b89"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "338f023d-8650-4523-9e78-40665acd9998",
          "title": "Test 10Lines game: 20, 36 -  89",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 284,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "63d7e621-cec2-4da6-915b-9403e15d31b5",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "09a68403-a35e-438c-beaa-1a3fad9ce779",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "683809d2-cf5f-4827-9273-c404e7602042",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "1628de09-3fd8-458f-98e1-477a23af8982",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "acfe3029-52b6-4dad-9a3a-b4d549dc8316",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "59c44c4f-cd43-4845-bdc8-6f16f2622bfd",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "f0d1ebb8-0deb-4201-96bf-e6d0605d0be8",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f5fb4bf1-8376-4372-9fd3-0cad983b2c11",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "fefe54a5-3648-4551-bfdc-e35f905143a3",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "82743469-0e5f-49dd-b6c1-d4302509325b",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f3485f8b-33d2-4e1a-927c-154f472ac744",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0a77a00d-47c8-492b-86b5-465ad89a4e40",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "120ee1b7-d157-45af-bd7c-c4c1bcf3c87a",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "04bc52bc-616c-4ba6-ad03-f51182437780",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ed9aa915-9eac-4b39-a218-0560a78bd58c",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "82b0a36a-4296-4618-b836-8ed0c22d51df",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "51e3118f-99b7-4ad8-b65c-544cdc21328d",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "01668d7c-6ab3-470b-b436-29fddd8161df",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  89 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "134da0fc-bca1-41c6-a235-e0aa1f5ea893",
              "parentUUID": "338f023d-8650-4523-9e78-40665acd9998",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "683809d2-cf5f-4827-9273-c404e7602042",
            "1628de09-3fd8-458f-98e1-477a23af8982",
            "acfe3029-52b6-4dad-9a3a-b4d549dc8316",
            "59c44c4f-cd43-4845-bdc8-6f16f2622bfd",
            "f0d1ebb8-0deb-4201-96bf-e6d0605d0be8",
            "f5fb4bf1-8376-4372-9fd3-0cad983b2c11",
            "fefe54a5-3648-4551-bfdc-e35f905143a3",
            "82743469-0e5f-49dd-b6c1-d4302509325b",
            "f3485f8b-33d2-4e1a-927c-154f472ac744",
            "0a77a00d-47c8-492b-86b5-465ad89a4e40",
            "120ee1b7-d157-45af-bd7c-c4c1bcf3c87a",
            "04bc52bc-616c-4ba6-ad03-f51182437780",
            "ed9aa915-9eac-4b39-a218-0560a78bd58c",
            "82b0a36a-4296-4618-b836-8ed0c22d51df",
            "51e3118f-99b7-4ad8-b65c-544cdc21328d",
            "01668d7c-6ab3-470b-b436-29fddd8161df",
            "134da0fc-bca1-41c6-a235-e0aa1f5ea893"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
          "title": "Test 10Lines game: 20, 36 -  90",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 2453,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0a61768c-950c-434b-a223-5817850b6ab8",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "aae4c1f8-9cb1-4959-a068-e597244a9f56",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d069a5a6-5fff-4595-866d-2ff9885193f0",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "03620a01-da40-41bf-9949-89602c1d9fe0",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "26ef4f97-3443-45ca-8fd9-e165fb2db116",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6efaa8e9-9f4d-4ac4-8019-1d1789e51053",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "0e635563-28be-4cd5-a056-3f8220fed21e",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "5fef0f63-add5-43f5-ad86-979138d48e26",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "debc8b5d-bb4b-4465-b7f5-40102ed66fc2",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "bc414ce7-5510-49a6-98a9-d982e106880b",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bc3d1088-839a-44db-be35-0f20d51a1f3f",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b35b3fed-bc76-4ac1-9cdb-a7f20c391c82",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "56dc4d4c-de54-41a6-bae6-778c9c53ab77",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "ab84d78c-687b-4eff-b48f-dd11947e24b7",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "64ed8c8c-cf05-48ff-ada1-e2dfb90a2257",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "9b2529fb-b1e0-4923-86de-f7637dccb1cc",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "bcc8363d-c7f6-42f7-b88e-f834a6c11ad2",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "51402fbd-c855-42aa-87ad-b9878e988261",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  90 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "70ddaebd-1e3c-4f58-9440-1e84f8a669cf",
              "parentUUID": "c68a29f9-b99b-4894-9c04-2b8f70a34ceb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d069a5a6-5fff-4595-866d-2ff9885193f0",
            "03620a01-da40-41bf-9949-89602c1d9fe0",
            "26ef4f97-3443-45ca-8fd9-e165fb2db116",
            "6efaa8e9-9f4d-4ac4-8019-1d1789e51053",
            "0e635563-28be-4cd5-a056-3f8220fed21e",
            "5fef0f63-add5-43f5-ad86-979138d48e26",
            "debc8b5d-bb4b-4465-b7f5-40102ed66fc2",
            "bc414ce7-5510-49a6-98a9-d982e106880b",
            "bc3d1088-839a-44db-be35-0f20d51a1f3f",
            "b35b3fed-bc76-4ac1-9cdb-a7f20c391c82",
            "56dc4d4c-de54-41a6-bae6-778c9c53ab77",
            "ab84d78c-687b-4eff-b48f-dd11947e24b7",
            "64ed8c8c-cf05-48ff-ada1-e2dfb90a2257",
            "9b2529fb-b1e0-4923-86de-f7637dccb1cc",
            "bcc8363d-c7f6-42f7-b88e-f834a6c11ad2",
            "51402fbd-c855-42aa-87ad-b9878e988261",
            "70ddaebd-1e3c-4f58-9440-1e84f8a669cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d07f4fff-f42f-4b55-b093-77846c18338f",
          "title": "Test 10Lines game: 20, 36 -  91",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 297,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "3dd925f0-bf80-4fbc-9b80-14d6e3e514ed",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "e69d19cd-321e-4823-966c-16fcb4ef5ce2",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "42fd4f4a-31a4-4808-832e-c373bf5d5817",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "0f2b280e-7cc6-415c-b0de-ab0a1adc35d3",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "123f03bf-81aa-49fe-9895-07c58579dceb",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "e363f1b0-403b-4149-a49c-9603e2b25f70",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "0a703b18-4af7-4d97-ac23-6dddfe53e147",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "916fc7f0-bb7e-4e73-b3aa-bb94b1e5af23",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7fe87ff2-3c4f-4f68-8e02-f3132d79fd3d",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "aafe6889-e79e-4bb7-968e-55f66b2ff0e1",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ec77ddf5-46e7-4843-8d6b-243c3a193ff8",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f666c705-72d5-4f23-879e-ad7e047d2797",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "6586e60e-3b07-4807-9df4-411d180e7005",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "d37cdc2c-32a9-4e09-8131-1b3418d69333",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "6526eb4e-7e02-40af-8ab3-8574a67ade8b",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "32535032-69c1-45d5-a747-8059a3896c16",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "7aec1ed5-bf34-4af5-9f32-b3abe136fe20",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a0e9ed21-6385-46e2-b3d1-8e02587d8f3f",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  91 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "d8a772d5-89f1-4964-a525-6d943f4d0ae3",
              "parentUUID": "d07f4fff-f42f-4b55-b093-77846c18338f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42fd4f4a-31a4-4808-832e-c373bf5d5817",
            "0f2b280e-7cc6-415c-b0de-ab0a1adc35d3",
            "123f03bf-81aa-49fe-9895-07c58579dceb",
            "e363f1b0-403b-4149-a49c-9603e2b25f70",
            "0a703b18-4af7-4d97-ac23-6dddfe53e147",
            "916fc7f0-bb7e-4e73-b3aa-bb94b1e5af23",
            "7fe87ff2-3c4f-4f68-8e02-f3132d79fd3d",
            "aafe6889-e79e-4bb7-968e-55f66b2ff0e1",
            "ec77ddf5-46e7-4843-8d6b-243c3a193ff8",
            "f666c705-72d5-4f23-879e-ad7e047d2797",
            "6586e60e-3b07-4807-9df4-411d180e7005",
            "d37cdc2c-32a9-4e09-8131-1b3418d69333",
            "6526eb4e-7e02-40af-8ab3-8574a67ade8b",
            "32535032-69c1-45d5-a747-8059a3896c16",
            "7aec1ed5-bf34-4af5-9f32-b3abe136fe20",
            "a0e9ed21-6385-46e2-b3d1-8e02587d8f3f",
            "d8a772d5-89f1-4964-a525-6d943f4d0ae3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
          "title": "Test 10Lines game: 20, 36 -  92",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1194,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1b26e4fc-0fcb-4ca2-b1bd-cf83a7812870",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "a81b3839-6835-4f3a-8d68-8c6a7d75c4d1",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "cc577811-1dba-427e-b7ef-593952252b76",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "722f9f64-dfa7-477a-8f3f-795e7ea8a2ec",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "86989fe7-43c8-4d1f-9d4f-4399cfefa79b",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "b39cd477-2739-4557-a079-76f829a1150b",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "37bab96b-dbef-419d-b029-8de3bbdb8d70",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "55988137-14fe-4b7d-aa5a-965c76c631eb",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "27abb778-fee0-4686-9356-76ef465a144f",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "098e0bcd-926a-4aea-89ff-cc0cf3c3e772",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b5acb596-6bb4-45b7-b370-2d58035645fd",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cb722d1b-a2e4-4d73-b7d9-1ac430c91e6d",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 balance is not change",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "959bdabc-ab9c-45fc-a9a3-f987e2de75bb",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "fac11c00-c330-4667-b4f4-141074a75c6a",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "5f432ce0-c8c3-4db5-a307-318274094333",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "66f5bfff-dd15-4028-8662-7b85f8471b50",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e431ed87-82c7-4bb9-81a3-4e477941a6c7",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "5e4c0947-38de-4232-bce8-8b40faeb0bc7",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  92 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "87f6629a-806c-400c-85d8-6fd454bb04d1",
              "parentUUID": "fec6a9a2-30c1-4145-bfd8-0f7615a90e0a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc577811-1dba-427e-b7ef-593952252b76",
            "722f9f64-dfa7-477a-8f3f-795e7ea8a2ec",
            "86989fe7-43c8-4d1f-9d4f-4399cfefa79b",
            "b39cd477-2739-4557-a079-76f829a1150b",
            "37bab96b-dbef-419d-b029-8de3bbdb8d70",
            "55988137-14fe-4b7d-aa5a-965c76c631eb",
            "27abb778-fee0-4686-9356-76ef465a144f",
            "098e0bcd-926a-4aea-89ff-cc0cf3c3e772",
            "b5acb596-6bb4-45b7-b370-2d58035645fd",
            "cb722d1b-a2e4-4d73-b7d9-1ac430c91e6d",
            "959bdabc-ab9c-45fc-a9a3-f987e2de75bb",
            "fac11c00-c330-4667-b4f4-141074a75c6a",
            "5f432ce0-c8c3-4db5-a307-318274094333",
            "66f5bfff-dd15-4028-8662-7b85f8471b50",
            "e431ed87-82c7-4bb9-81a3-4e477941a6c7",
            "5e4c0947-38de-4232-bce8-8b40faeb0bc7",
            "87f6629a-806c-400c-85d8-6fd454bb04d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
          "title": "Test 10Lines game: 20, 36 -  93",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 166,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ade977a8-1d7a-4d2d-9244-d2c0e7f9a258",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "87a07da7-c13e-4b2c-97c1-dce16b02545e",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "56f0183e-33f7-4adc-b13d-2340a52f38c7",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "8043e7e7-8ba8-4149-8152-3cdd600660ea",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "20192093-8c90-46de-ae5a-748e63203f5a",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "ead8b48d-777f-4d22-9896-b030dc9e2cc3",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "ef8760cc-ce84-4f3d-851c-273cc4cd0a73",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "784561e4-8ba3-4dc8-a9c8-b14c0fb2a4a0",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0b7f459a-0361-43fe-9ecc-ab93471fc2a7",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "3709c0ee-9796-47d0-a410-30fae28519fc",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d63dfb14-c687-4445-bddf-a4a298e65224",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a0a63ae5-d9be-47ca-8745-6caaf772bb46",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "7b06c511-dcb2-4ed7-81a1-b2a2b6b4426c",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "dacd62a7-d0de-4563-a0a0-76b80e5822c0",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "b9503974-4703-492d-9cff-2f508eab32ae",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "1521cc09-4030-43db-b179-1c9114eb88f8",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "dbb01240-2fa9-4b27-bbea-47a7cab941eb",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 BookModule",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c2486928-b8f5-4654-8f30-59aa3fe533e4",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  93 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "8e6dae67-1298-4040-83db-700eb51ee7ec",
              "parentUUID": "441fc9b2-41ee-4063-b86b-c691c224ca6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56f0183e-33f7-4adc-b13d-2340a52f38c7",
            "8043e7e7-8ba8-4149-8152-3cdd600660ea",
            "20192093-8c90-46de-ae5a-748e63203f5a",
            "ead8b48d-777f-4d22-9896-b030dc9e2cc3",
            "ef8760cc-ce84-4f3d-851c-273cc4cd0a73",
            "784561e4-8ba3-4dc8-a9c8-b14c0fb2a4a0",
            "0b7f459a-0361-43fe-9ecc-ab93471fc2a7",
            "3709c0ee-9796-47d0-a410-30fae28519fc",
            "d63dfb14-c687-4445-bddf-a4a298e65224",
            "a0a63ae5-d9be-47ca-8745-6caaf772bb46",
            "7b06c511-dcb2-4ed7-81a1-b2a2b6b4426c",
            "dacd62a7-d0de-4563-a0a0-76b80e5822c0",
            "b9503974-4703-492d-9cff-2f508eab32ae",
            "1521cc09-4030-43db-b179-1c9114eb88f8",
            "dbb01240-2fa9-4b27-bbea-47a7cab941eb",
            "c2486928-b8f5-4654-8f30-59aa3fe533e4",
            "8e6dae67-1298-4040-83db-700eb51ee7ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
          "title": "Test 10Lines game: 20, 36 -  94",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 167,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "da021654-d1a9-414b-9137-3356eae355b7",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "bad4c97e-2b09-42d5-804d-a9bf5b1776d9",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "9f0e92bc-aeb8-4919-b242-f85911d45b97",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "5288afdf-5045-4832-ab9a-84342bf6db25",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "9a2476b6-ba58-4d3e-bb83-a9f8432025ee",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "983b26e6-a1ff-4905-aded-28685889894c",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "bd694b24-d297-40e6-a1a9-b84b3c737c3a",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "05a26e2c-f8b0-486c-9aec-3b15b9a532f2",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e26e098e-e4d3-4312-b13e-d7bd7822427d",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "5b564708-5037-4da2-b5be-9c746a18bc60",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 Check the number of free spins",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a3e43c70-b183-43d1-8ed6-66f7e463c771",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e4d2b0aa-1e8a-48b6-bdd6-dd1611da4136",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "f8cac444-62b4-41c5-9de5-496d0d979f83",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "4e21ab48-f62a-4e78-8dc2-20ef3a9e5479",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "9081ce73-a7d6-405f-bdae-2ea4afd28881",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "aee78368-21dc-4a1a-b584-404deb6aad3d",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "5643518e-9ff3-46e7-82fa-7edc6e5a64cd",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "b707c742-644c-4783-8ed3-0d5d4a41f1d0",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  94 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "9291e436-a085-4472-a0b1-50b7ba0d1da0",
              "parentUUID": "95e877b2-e9aa-4d9f-921b-3fc729301fff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f0e92bc-aeb8-4919-b242-f85911d45b97",
            "5288afdf-5045-4832-ab9a-84342bf6db25",
            "9a2476b6-ba58-4d3e-bb83-a9f8432025ee",
            "983b26e6-a1ff-4905-aded-28685889894c",
            "bd694b24-d297-40e6-a1a9-b84b3c737c3a",
            "05a26e2c-f8b0-486c-9aec-3b15b9a532f2",
            "e26e098e-e4d3-4312-b13e-d7bd7822427d",
            "5b564708-5037-4da2-b5be-9c746a18bc60",
            "a3e43c70-b183-43d1-8ed6-66f7e463c771",
            "e4d2b0aa-1e8a-48b6-bdd6-dd1611da4136",
            "f8cac444-62b4-41c5-9de5-496d0d979f83",
            "4e21ab48-f62a-4e78-8dc2-20ef3a9e5479",
            "9081ce73-a7d6-405f-bdae-2ea4afd28881",
            "aee78368-21dc-4a1a-b584-404deb6aad3d",
            "5643518e-9ff3-46e7-82fa-7edc6e5a64cd",
            "b707c742-644c-4783-8ed3-0d5d4a41f1d0",
            "9291e436-a085-4472-a0b1-50b7ba0d1da0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
          "title": "Test 10Lines game: 20, 36 -  95",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 309,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d6427902-27c7-4689-b236-ca6cd60a5b3f",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "bb8ff73b-81d2-46a6-929e-a6130380c696",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "f1ad1b73-c69c-4a52-97b4-6941eaf92b7d",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "443e4d26-2351-43bc-a214-8c85cc52a09c",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ac1830d5-c9ea-40f6-8ec8-9b3e72d2d805",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "53b13a27-98c2-4344-9a69-9c020890ce5a",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "bb57ae13-19b3-4f9c-b832-b58fe394e189",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "7a76e698-18a0-4f52-9d71-77224148d94a",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d5c27c5c-88fa-4b52-a799-e1b49c6c07e4",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 check correct total FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "1a888579-b322-4463-ba80-ba657023ee07",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c7cf63e1-c04e-4d06-96eb-b8848706064f",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f64edd7c-dda8-4d6c-8c0f-912ce70bf90b",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "ffff18b3-d09c-4a66-95e8-c756e76f190e",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "3c011d60-09c0-409d-9334-7e128f98d177",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "6ace6267-caab-4521-aad4-a0204c924215",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "ff6d0391-84b9-4a2d-995e-0d9a9c8b0280",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "009cb1f1-a40d-4841-9f4c-7ed51ae17eea",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "9bb56cc0-8c3a-43c0-a7fc-c96e1aef9a63",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  95 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "07f33fb0-6bbb-4538-90cf-2a65b549278c",
              "parentUUID": "c73dc23b-5dfc-45bd-bf93-ed1a22791607",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1ad1b73-c69c-4a52-97b4-6941eaf92b7d",
            "443e4d26-2351-43bc-a214-8c85cc52a09c",
            "ac1830d5-c9ea-40f6-8ec8-9b3e72d2d805",
            "53b13a27-98c2-4344-9a69-9c020890ce5a",
            "bb57ae13-19b3-4f9c-b832-b58fe394e189",
            "7a76e698-18a0-4f52-9d71-77224148d94a",
            "d5c27c5c-88fa-4b52-a799-e1b49c6c07e4",
            "1a888579-b322-4463-ba80-ba657023ee07",
            "c7cf63e1-c04e-4d06-96eb-b8848706064f",
            "f64edd7c-dda8-4d6c-8c0f-912ce70bf90b",
            "ffff18b3-d09c-4a66-95e8-c756e76f190e",
            "3c011d60-09c0-409d-9334-7e128f98d177",
            "6ace6267-caab-4521-aad4-a0204c924215",
            "ff6d0391-84b9-4a2d-995e-0d9a9c8b0280",
            "009cb1f1-a40d-4841-9f4c-7ed51ae17eea",
            "9bb56cc0-8c3a-43c0-a7fc-c96e1aef9a63",
            "07f33fb0-6bbb-4538-90cf-2a65b549278c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f93c1015-8952-4311-aa14-ce4962802d3d",
          "title": "Test 10Lines game: 20, 36 -  96",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 173,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8a68ca71-4393-4cd9-95c8-6f050150f727",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "28a79478-a048-43c2-90ee-eba6e5be4a7d",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "8e82771e-80a2-4079-a22f-3a526219ce9b",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "bbc3ab69-930b-4a3a-a350-f4bcbfb46ee2",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "9ccbe865-796c-4e6b-9b62-03f08c8abf6b",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "5cdb7e0f-c0e3-441e-a353-11b068deb728",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "e9b4decc-8a84-456c-bb67-698e6e20658e",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d45502f7-7920-4f71-9169-874518844959",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "60f5ed61-b659-4f04-91bf-acc45fefeaef",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "fa5a6d1f-e3e3-4183-91ab-4fc36d17398b",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "96dfa926-0f02-40e4-97ae-23696c7266b1",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 check rest FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c6132b48-0a74-4d6c-b402-0db2f129b126",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "3f67c484-cc30-4404-90ef-d2d31eb8c046",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "7789f373-87f1-450e-bcfd-cbff2672c95e",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "2b44f550-cd31-4aac-b251-16d74aef358f",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "64169916-ce06-416a-915b-cf321b0cc47b",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "82c25c0b-f5bf-482f-8980-535569a38d7b",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "f2b13d2e-9bea-44f7-91ea-4ea7e461632a",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  96 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e203b019-397c-4eaa-8aeb-17d32f827cb7",
              "parentUUID": "f93c1015-8952-4311-aa14-ce4962802d3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e82771e-80a2-4079-a22f-3a526219ce9b",
            "bbc3ab69-930b-4a3a-a350-f4bcbfb46ee2",
            "9ccbe865-796c-4e6b-9b62-03f08c8abf6b",
            "5cdb7e0f-c0e3-441e-a353-11b068deb728",
            "e9b4decc-8a84-456c-bb67-698e6e20658e",
            "d45502f7-7920-4f71-9169-874518844959",
            "60f5ed61-b659-4f04-91bf-acc45fefeaef",
            "fa5a6d1f-e3e3-4183-91ab-4fc36d17398b",
            "96dfa926-0f02-40e4-97ae-23696c7266b1",
            "c6132b48-0a74-4d6c-b402-0db2f129b126",
            "3f67c484-cc30-4404-90ef-d2d31eb8c046",
            "7789f373-87f1-450e-bcfd-cbff2672c95e",
            "2b44f550-cd31-4aac-b251-16d74aef358f",
            "64169916-ce06-416a-915b-cf321b0cc47b",
            "82c25c0b-f5bf-482f-8980-535569a38d7b",
            "f2b13d2e-9bea-44f7-91ea-4ea7e461632a",
            "e203b019-397c-4eaa-8aeb-17d32f827cb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
          "title": "Test 10Lines game: 20, 36 -  97",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 164,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "75655304-2e2c-4355-9b6f-dcc48bbfc671",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "592d1f75-53a5-4de5-922f-7db0a9373cf5",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "18f7c0df-ae8b-4eb6-a5bb-4114df9026c3",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "9b15ac45-6ea9-4a4e-8161-ab73058f5076",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "37b2f2c3-1b0e-494c-8a6e-4d1321c2af8f",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "67bb24a0-8ae8-4fa0-be71-d658d2347d10",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "dec3f48e-701c-4a2d-bcf7-c5620d1e065e",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f376908a-7c1b-4379-afa1-5a4cc2124d2a",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7b538959-50bb-4101-b661-e2edba932685",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "3fd70f8d-0261-4dbd-9d30-639538ca98ef",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6965df01-77da-4162-a5f9-6bb645a095a6",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7fa4f271-b3f7-4b97-bed6-ae547a49f126",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "1c4ea1d9-2575-4088-979e-d67b6816a0ed",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "10fe61a3-f868-418c-98f8-c0fb28e010ef",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "b2b848d0-2abe-4ca7-b9e5-034187869ede",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "5b232a18-0075-4a38-90de-2c998974a93b",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "6a1df8c0-831f-41b7-b8df-e7b83a6c04d8",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "05d9d822-3cb4-43cb-8608-06c3b16e6605",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  97 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "d9794a21-764f-4fcb-8c62-f82deb8432c9",
              "parentUUID": "7c873f4a-c82b-40d0-9d5d-45f4dd49eb79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18f7c0df-ae8b-4eb6-a5bb-4114df9026c3",
            "9b15ac45-6ea9-4a4e-8161-ab73058f5076",
            "37b2f2c3-1b0e-494c-8a6e-4d1321c2af8f",
            "67bb24a0-8ae8-4fa0-be71-d658d2347d10",
            "dec3f48e-701c-4a2d-bcf7-c5620d1e065e",
            "f376908a-7c1b-4379-afa1-5a4cc2124d2a",
            "7b538959-50bb-4101-b661-e2edba932685",
            "3fd70f8d-0261-4dbd-9d30-639538ca98ef",
            "6965df01-77da-4162-a5f9-6bb645a095a6",
            "7fa4f271-b3f7-4b97-bed6-ae547a49f126",
            "1c4ea1d9-2575-4088-979e-d67b6816a0ed",
            "10fe61a3-f868-418c-98f8-c0fb28e010ef",
            "b2b848d0-2abe-4ca7-b9e5-034187869ede",
            "5b232a18-0075-4a38-90de-2c998974a93b",
            "6a1df8c0-831f-41b7-b8df-e7b83a6c04d8",
            "05d9d822-3cb4-43cb-8608-06c3b16e6605",
            "d9794a21-764f-4fcb-8c62-f82deb8432c9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1daecc00-8328-458d-9c19-6401ad190e52",
          "title": "Test 10Lines game: 20, 36 -  98",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 325,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9e4cb2b2-91c5-4fcc-9675-f28dce9960ba",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "46cadd81-39a2-4991-91c9-4626996cbf13",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "f8a3e395-791b-4264-b1ed-8f61b62259ca",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "54af8715-87d3-40e5-8e63-9da9a14e35b2",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "aec06178-774f-4fe2-bd97-f1c19d459b0e",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "682c1d51-d412-41cc-b829-ef1c80c85374",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "1268d65c-b994-419c-b9d3-5ef8789075f5",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f68924bc-7c3f-4572-9908-1b31b9159038",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "14ea4a24-a3c9-4038-a2ca-f9f467780276",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "552d1e4e-18be-4067-9603-b5195c5a99e0",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9f5135f4-cb15-416e-9aeb-a064c43fbc5d",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9b165f3b-4f55-4e00-af50-883765afa29c",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "a5900708-710c-4d48-9002-3ce5bcf14c0f",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "99434c5a-6f91-4b22-80b3-c8db8dc4583a",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "2f392086-a855-4d3f-b5e3-59c8eba6dbad",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "5288a3d8-2d17-4ab8-85fc-fc3dfe501e49",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "135155e9-1409-415d-9745-9424e57e8143",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "2eebc763-6131-4963-951d-dcd4d1727d53",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  98 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "196b145a-f59b-48ca-8b88-2c0ddcaebb02",
              "parentUUID": "1daecc00-8328-458d-9c19-6401ad190e52",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8a3e395-791b-4264-b1ed-8f61b62259ca",
            "54af8715-87d3-40e5-8e63-9da9a14e35b2",
            "aec06178-774f-4fe2-bd97-f1c19d459b0e",
            "682c1d51-d412-41cc-b829-ef1c80c85374",
            "1268d65c-b994-419c-b9d3-5ef8789075f5",
            "f68924bc-7c3f-4572-9908-1b31b9159038",
            "14ea4a24-a3c9-4038-a2ca-f9f467780276",
            "552d1e4e-18be-4067-9603-b5195c5a99e0",
            "9f5135f4-cb15-416e-9aeb-a064c43fbc5d",
            "9b165f3b-4f55-4e00-af50-883765afa29c",
            "a5900708-710c-4d48-9002-3ce5bcf14c0f",
            "99434c5a-6f91-4b22-80b3-c8db8dc4583a",
            "2f392086-a855-4d3f-b5e3-59c8eba6dbad",
            "5288a3d8-2d17-4ab8-85fc-fc3dfe501e49",
            "135155e9-1409-415d-9745-9424e57e8143",
            "2eebc763-6131-4963-951d-dcd4d1727d53",
            "196b145a-f59b-48ca-8b88-2c0ddcaebb02"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
          "title": "Test 10Lines game: 20, 36 -  99",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 283,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n    const funcResultRSpin = await CheckWildRSpin(res, UseMathModele, actionsSpin);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, funcResultRSpin, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "3e8ff118-6147-4b09-881f-2f0a1d7b2e94",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, funcResultRSpin, FSChangeMultipl } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "4742e837-6c54-44a2-9550-2b3b17d28e86",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "5a6dc2d5-18b1-47af-9c85-70d46c1a6175",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "5b046d15-237c-4a1b-b84e-cf174d0fa435",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "7fed502b-c2ab-42af-9775-cd28768f9d42",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "22926d3b-7e77-4d6a-adc3-d155b6189eec",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl, FSCount } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, UseMathModele.numberFS, Usepaytable, UseMathModele, FSCount, FSChangeMultipl);",
              "err": {},
              "uuid": "93c382b4-b01b-4338-b3c7-23e5e75097f9",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "5cfeada9-f155-4d07-9695-b5f5b3b8877c",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 check correct add count of FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "97510464-b8df-4755-8b0a-474cc547a0cd",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "1cf8b32a-9dbf-4ff3-9721-9fa549f3c591",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "255e132e-0040-4a7c-89fe-e5584c6f7a01",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5bd31ddd-b7ac-4503-8b29-12fc662d5cf1",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "c561e244-0bdc-47e4-8643-de1a411f697a",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "f5541a55-53ce-4ae2-a2f0-53256c31f6e9",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "39962ef8-3d56-4402-8c6b-bef8c6213ce2",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 check type of win Lines",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "0a15736c-15c8-4218-9178-cb69e80053b3",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "fad04f24-c011-40fa-9191-5c51da940813",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3946a8be-6095-4e7e-9ad3-ac1acf6e2f52",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "RespinModule",
              "fullTitle": "Test 10Lines game: 20, 36 -  99 RespinModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "RespinModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6700a9b6-d2c1-4cef-a17c-8b6b8206af3c",
              "parentUUID": "2ebf5c03-0198-4aa4-a59a-5dc89cc942ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a6dc2d5-18b1-47af-9c85-70d46c1a6175",
            "5b046d15-237c-4a1b-b84e-cf174d0fa435",
            "7fed502b-c2ab-42af-9775-cd28768f9d42",
            "22926d3b-7e77-4d6a-adc3-d155b6189eec",
            "93c382b4-b01b-4338-b3c7-23e5e75097f9",
            "5cfeada9-f155-4d07-9695-b5f5b3b8877c",
            "97510464-b8df-4755-8b0a-474cc547a0cd",
            "1cf8b32a-9dbf-4ff3-9721-9fa549f3c591",
            "255e132e-0040-4a7c-89fe-e5584c6f7a01",
            "5bd31ddd-b7ac-4503-8b29-12fc662d5cf1",
            "c561e244-0bdc-47e4-8643-de1a411f697a",
            "f5541a55-53ce-4ae2-a2f0-53256c31f6e9",
            "39962ef8-3d56-4402-8c6b-bef8c6213ce2",
            "0a15736c-15c8-4218-9178-cb69e80053b3",
            "fad04f24-c011-40fa-9191-5c51da940813",
            "3946a8be-6095-4e7e-9ad3-ac1acf6e2f52",
            "6700a9b6-d2c1-4cef-a17c-8b6b8206af3c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "de437da3-d44d-441a-9666-19d8f341a6f1",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "58514f91-94e4-4b5d-a7ed-e996b3c149ec",
              "parentUUID": "de437da3-d44d-441a-9666-19d8f341a6f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "c04d5e41-71c7-4fb2-be6f-780884ffc138",
              "parentUUID": "de437da3-d44d-441a-9666-19d8f341a6f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "efb5612d-43b6-458e-9516-f880733ae625",
              "parentUUID": "de437da3-d44d-441a-9666-19d8f341a6f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "7c1175f1-0e67-4d9b-ae5b-2248d79c947b",
              "parentUUID": "de437da3-d44d-441a-9666-19d8f341a6f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "70ea2a02-49d5-47f5-9923-a6f3a6a7c62c",
              "parentUUID": "de437da3-d44d-441a-9666-19d8f341a6f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "bcec4a9e-d547-4543-8061-9861086c6d87",
              "parentUUID": "de437da3-d44d-441a-9666-19d8f341a6f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "60fffc5b-bcbe-4313-88f0-8755161d36d0",
              "parentUUID": "de437da3-d44d-441a-9666-19d8f341a6f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "d7961b70-7a1d-41de-b757-d2baed1ae124",
              "parentUUID": "de437da3-d44d-441a-9666-19d8f341a6f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "f1b3ae40-11e9-4d17-a469-29a043b3807c",
              "parentUUID": "de437da3-d44d-441a-9666-19d8f341a6f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "665109de-e075-4868-99a2-c50a4c4721c7",
              "parentUUID": "de437da3-d44d-441a-9666-19d8f341a6f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58514f91-94e4-4b5d-a7ed-e996b3c149ec",
            "c04d5e41-71c7-4fb2-be6f-780884ffc138",
            "efb5612d-43b6-458e-9516-f880733ae625",
            "7c1175f1-0e67-4d9b-ae5b-2248d79c947b",
            "70ea2a02-49d5-47f5-9923-a6f3a6a7c62c",
            "bcec4a9e-d547-4543-8061-9861086c6d87",
            "60fffc5b-bcbe-4313-88f0-8755161d36d0",
            "d7961b70-7a1d-41de-b757-d2baed1ae124",
            "f1b3ae40-11e9-4d17-a469-29a043b3807c",
            "665109de-e075-4868-99a2-c50a4c4721c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "fdbf5bd7-4528-4b8a-b1eb-24961dce5157",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "b32f7598-644a-48e4-bc06-acac2262ee7a",
              "parentUUID": "fdbf5bd7-4528-4b8a-b1eb-24961dce5157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "21a80df7-6d65-4d3d-8691-e9dd54d2dce0",
              "parentUUID": "fdbf5bd7-4528-4b8a-b1eb-24961dce5157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "440d8690-a5f4-4b44-8364-8f06bbb4f11f",
              "parentUUID": "fdbf5bd7-4528-4b8a-b1eb-24961dce5157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "f929ce38-7fb3-40de-89f9-0bd66c3c3095",
              "parentUUID": "fdbf5bd7-4528-4b8a-b1eb-24961dce5157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "3bb0b5ae-f10b-4a80-911f-d4911167e19c",
              "parentUUID": "fdbf5bd7-4528-4b8a-b1eb-24961dce5157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "7e945ff7-2df7-4985-82b2-6830c145ede5",
              "parentUUID": "fdbf5bd7-4528-4b8a-b1eb-24961dce5157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "558ad515-1250-4374-9978-c176a022882a",
              "parentUUID": "fdbf5bd7-4528-4b8a-b1eb-24961dce5157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "fd4c6852-e311-4e86-b8de-dc149059d23b",
              "parentUUID": "fdbf5bd7-4528-4b8a-b1eb-24961dce5157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "89bdc427-c2b6-4590-8d43-b49c95857ff3",
              "parentUUID": "fdbf5bd7-4528-4b8a-b1eb-24961dce5157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "2b12b5d0-42a2-40a9-9ad4-7ffe8936d151",
              "parentUUID": "fdbf5bd7-4528-4b8a-b1eb-24961dce5157",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b32f7598-644a-48e4-bc06-acac2262ee7a",
            "21a80df7-6d65-4d3d-8691-e9dd54d2dce0",
            "440d8690-a5f4-4b44-8364-8f06bbb4f11f",
            "f929ce38-7fb3-40de-89f9-0bd66c3c3095",
            "3bb0b5ae-f10b-4a80-911f-d4911167e19c",
            "7e945ff7-2df7-4985-82b2-6830c145ede5",
            "558ad515-1250-4374-9978-c176a022882a",
            "fd4c6852-e311-4e86-b8de-dc149059d23b",
            "89bdc427-c2b6-4590-8d43-b49c95857ff3",
            "2b12b5d0-42a2-40a9-9ad4-7ffe8936d151"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "861bb6a4-2d87-4a1d-9cd6-896235bb814e",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "795ac613-d4db-4b12-81f0-1cd4d6ce0a57",
              "parentUUID": "861bb6a4-2d87-4a1d-9cd6-896235bb814e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "37b83d7b-f883-489a-a872-61446fa5aca8",
              "parentUUID": "861bb6a4-2d87-4a1d-9cd6-896235bb814e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "644ab7b0-12d5-4ec1-8985-3c593ae82577",
              "parentUUID": "861bb6a4-2d87-4a1d-9cd6-896235bb814e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "124daabe-8eef-448e-906d-da67b6910ea7",
              "parentUUID": "861bb6a4-2d87-4a1d-9cd6-896235bb814e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "f55a119b-c754-4c82-acc2-3c7bc9c00e38",
              "parentUUID": "861bb6a4-2d87-4a1d-9cd6-896235bb814e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "7418556a-c9fc-40d2-83b9-2825bd8dca54",
              "parentUUID": "861bb6a4-2d87-4a1d-9cd6-896235bb814e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "57987f64-fc4a-413c-ba3d-e7ba4dd8a683",
              "parentUUID": "861bb6a4-2d87-4a1d-9cd6-896235bb814e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "3479dd1c-f8bf-44e5-835f-f8ef23a914d9",
              "parentUUID": "861bb6a4-2d87-4a1d-9cd6-896235bb814e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "9eff25f4-0133-4947-9522-952565c47382",
              "parentUUID": "861bb6a4-2d87-4a1d-9cd6-896235bb814e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "5f41a086-470f-409c-8030-153ca81dd70c",
              "parentUUID": "861bb6a4-2d87-4a1d-9cd6-896235bb814e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "795ac613-d4db-4b12-81f0-1cd4d6ce0a57",
            "37b83d7b-f883-489a-a872-61446fa5aca8",
            "644ab7b0-12d5-4ec1-8985-3c593ae82577",
            "124daabe-8eef-448e-906d-da67b6910ea7",
            "f55a119b-c754-4c82-acc2-3c7bc9c00e38",
            "7418556a-c9fc-40d2-83b9-2825bd8dca54",
            "57987f64-fc4a-413c-ba3d-e7ba4dd8a683",
            "3479dd1c-f8bf-44e5-835f-f8ef23a914d9",
            "9eff25f4-0133-4947-9522-952565c47382",
            "5f41a086-470f-409c-8030-153ca81dd70c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "316c2c26-68ab-4a65-ab79-f8aad0ce98e2",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "ef19b7be-1022-4637-85c9-b1116e25acb1",
              "parentUUID": "316c2c26-68ab-4a65-ab79-f8aad0ce98e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "0bb9c6eb-85f3-45cb-9cc8-462cbecade49",
              "parentUUID": "316c2c26-68ab-4a65-ab79-f8aad0ce98e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "24c66914-4acb-4359-9633-3ae03f3620e9",
              "parentUUID": "316c2c26-68ab-4a65-ab79-f8aad0ce98e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "7e8012f3-ae03-4e4f-8809-0d28182c5377",
              "parentUUID": "316c2c26-68ab-4a65-ab79-f8aad0ce98e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "4655eabc-1319-4095-a545-b02a3f6e1aff",
              "parentUUID": "316c2c26-68ab-4a65-ab79-f8aad0ce98e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "9255e485-a959-4a1c-9a41-a4c82755fd3f",
              "parentUUID": "316c2c26-68ab-4a65-ab79-f8aad0ce98e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "e0a98e89-7af6-4624-9ee6-cc10dd51b03a",
              "parentUUID": "316c2c26-68ab-4a65-ab79-f8aad0ce98e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "84d70c46-9343-4561-b93a-f4f6a928e59e",
              "parentUUID": "316c2c26-68ab-4a65-ab79-f8aad0ce98e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "8bd554af-0024-4f04-ac6f-c2999eacefbf",
              "parentUUID": "316c2c26-68ab-4a65-ab79-f8aad0ce98e2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "bc8be014-30d7-45a2-b8d6-aa162a36bb38",
              "parentUUID": "316c2c26-68ab-4a65-ab79-f8aad0ce98e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef19b7be-1022-4637-85c9-b1116e25acb1",
            "0bb9c6eb-85f3-45cb-9cc8-462cbecade49",
            "24c66914-4acb-4359-9633-3ae03f3620e9",
            "7e8012f3-ae03-4e4f-8809-0d28182c5377",
            "4655eabc-1319-4095-a545-b02a3f6e1aff",
            "9255e485-a959-4a1c-9a41-a4c82755fd3f",
            "e0a98e89-7af6-4624-9ee6-cc10dd51b03a",
            "84d70c46-9343-4561-b93a-f4f6a928e59e",
            "8bd554af-0024-4f04-ac6f-c2999eacefbf",
            "bc8be014-30d7-45a2-b8d6-aa162a36bb38"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7b0e9636-7aaa-4f5f-bdc7-93e66682c80c",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "c546ba06-f733-4db8-a75d-3a2294fc7916",
              "parentUUID": "7b0e9636-7aaa-4f5f-bdc7-93e66682c80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "80084205-e720-48ac-9d9b-937d9f85dc58",
              "parentUUID": "7b0e9636-7aaa-4f5f-bdc7-93e66682c80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "ab4badcd-2ee5-4221-a2b7-128c84d0f7e4",
              "parentUUID": "7b0e9636-7aaa-4f5f-bdc7-93e66682c80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "56688686-a8e2-439c-b778-74da28060d03",
              "parentUUID": "7b0e9636-7aaa-4f5f-bdc7-93e66682c80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "ebdc0a64-386a-470f-9ab6-9cb7b072a4e9",
              "parentUUID": "7b0e9636-7aaa-4f5f-bdc7-93e66682c80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "d04b9e79-5d8b-4686-a2eb-27fc1a8d32a6",
              "parentUUID": "7b0e9636-7aaa-4f5f-bdc7-93e66682c80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "312845a8-d04c-426b-b7a4-cc9920f60b9f",
              "parentUUID": "7b0e9636-7aaa-4f5f-bdc7-93e66682c80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "95a81195-eaae-4afe-95f9-2093763ca4f1",
              "parentUUID": "7b0e9636-7aaa-4f5f-bdc7-93e66682c80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "63ae6c51-4ee0-4b38-8b38-5efc75228333",
              "parentUUID": "7b0e9636-7aaa-4f5f-bdc7-93e66682c80c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "d2d42918-13f8-41a2-bee5-143f24ba1f14",
              "parentUUID": "7b0e9636-7aaa-4f5f-bdc7-93e66682c80c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c546ba06-f733-4db8-a75d-3a2294fc7916",
            "80084205-e720-48ac-9d9b-937d9f85dc58",
            "ab4badcd-2ee5-4221-a2b7-128c84d0f7e4",
            "56688686-a8e2-439c-b778-74da28060d03",
            "ebdc0a64-386a-470f-9ab6-9cb7b072a4e9",
            "d04b9e79-5d8b-4686-a2eb-27fc1a8d32a6",
            "312845a8-d04c-426b-b7a4-cc9920f60b9f",
            "95a81195-eaae-4afe-95f9-2093763ca4f1",
            "63ae6c51-4ee0-4b38-8b38-5efc75228333",
            "d2d42918-13f8-41a2-bee5-143f24ba1f14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4cceb9d5-4886-439e-b0fa-5cf3985b3c21",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "1a4ff6cf-e10a-4c3e-9a1b-b2feacf5d656",
              "parentUUID": "4cceb9d5-4886-439e-b0fa-5cf3985b3c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "1b36f23d-f2c5-4fdd-8b1e-995012b6028d",
              "parentUUID": "4cceb9d5-4886-439e-b0fa-5cf3985b3c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "703f2843-6079-4ea3-9d19-cec434f3bd13",
              "parentUUID": "4cceb9d5-4886-439e-b0fa-5cf3985b3c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "27cff1ae-275b-4d1b-8eaf-3e0e059ade7f",
              "parentUUID": "4cceb9d5-4886-439e-b0fa-5cf3985b3c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "99ff0f2e-d77b-4e35-98f8-f78726a7e509",
              "parentUUID": "4cceb9d5-4886-439e-b0fa-5cf3985b3c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "64608805-c0d6-4bed-82ff-e6f48e75beb6",
              "parentUUID": "4cceb9d5-4886-439e-b0fa-5cf3985b3c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "6c0c231f-07cb-4944-bcef-0e8d34f498e1",
              "parentUUID": "4cceb9d5-4886-439e-b0fa-5cf3985b3c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "144d67e2-49d9-495d-936d-2a8e6116b24d",
              "parentUUID": "4cceb9d5-4886-439e-b0fa-5cf3985b3c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "d0ddd186-a53f-448a-8c95-23044f3cf4bf",
              "parentUUID": "4cceb9d5-4886-439e-b0fa-5cf3985b3c21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "02cba0ab-3402-44d1-b3d3-469057937099",
              "parentUUID": "4cceb9d5-4886-439e-b0fa-5cf3985b3c21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a4ff6cf-e10a-4c3e-9a1b-b2feacf5d656",
            "1b36f23d-f2c5-4fdd-8b1e-995012b6028d",
            "703f2843-6079-4ea3-9d19-cec434f3bd13",
            "27cff1ae-275b-4d1b-8eaf-3e0e059ade7f",
            "99ff0f2e-d77b-4e35-98f8-f78726a7e509",
            "64608805-c0d6-4bed-82ff-e6f48e75beb6",
            "6c0c231f-07cb-4944-bcef-0e8d34f498e1",
            "144d67e2-49d9-495d-936d-2a8e6116b24d",
            "d0ddd186-a53f-448a-8c95-23044f3cf4bf",
            "02cba0ab-3402-44d1-b3d3-469057937099"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3e59a82c-dd9b-4e18-b102-4be4237f54cb",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "fd576569-66b8-4555-be48-f076c5c70027",
              "parentUUID": "3e59a82c-dd9b-4e18-b102-4be4237f54cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "205e3cc8-c68f-47aa-9c7e-db8a1bff1e58",
              "parentUUID": "3e59a82c-dd9b-4e18-b102-4be4237f54cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "0bf49aa9-dfa2-4aa5-9366-51e7fc58f4a4",
              "parentUUID": "3e59a82c-dd9b-4e18-b102-4be4237f54cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "bf48fbdb-42b8-43c2-bdc7-62c29a4c7229",
              "parentUUID": "3e59a82c-dd9b-4e18-b102-4be4237f54cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "3f6a768f-b07b-4b7c-ab75-b49453659aee",
              "parentUUID": "3e59a82c-dd9b-4e18-b102-4be4237f54cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "ca9382f9-0412-4328-a598-0fe4a7c01cb5",
              "parentUUID": "3e59a82c-dd9b-4e18-b102-4be4237f54cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "8171f180-6dbe-429c-bba7-e4212884a7cc",
              "parentUUID": "3e59a82c-dd9b-4e18-b102-4be4237f54cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "6f914f0f-51ad-4e14-98f7-b00f4ac84d48",
              "parentUUID": "3e59a82c-dd9b-4e18-b102-4be4237f54cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "9fa33166-8b97-436e-8426-5ca34504c881",
              "parentUUID": "3e59a82c-dd9b-4e18-b102-4be4237f54cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "bd958e57-f14a-419b-96cc-372e3186ecc5",
              "parentUUID": "3e59a82c-dd9b-4e18-b102-4be4237f54cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd576569-66b8-4555-be48-f076c5c70027",
            "205e3cc8-c68f-47aa-9c7e-db8a1bff1e58",
            "0bf49aa9-dfa2-4aa5-9366-51e7fc58f4a4",
            "bf48fbdb-42b8-43c2-bdc7-62c29a4c7229",
            "3f6a768f-b07b-4b7c-ab75-b49453659aee",
            "ca9382f9-0412-4328-a598-0fe4a7c01cb5",
            "8171f180-6dbe-429c-bba7-e4212884a7cc",
            "6f914f0f-51ad-4e14-98f7-b00f4ac84d48",
            "9fa33166-8b97-436e-8426-5ca34504c881",
            "bd958e57-f14a-419b-96cc-372e3186ecc5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "25ab8c76-2910-4539-9740-0802f87faf07",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "960d9eb7-0fa5-4508-9de7-1f5f1d732ace",
              "parentUUID": "25ab8c76-2910-4539-9740-0802f87faf07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "41b77e06-e810-449a-8ccd-a823348b0c08",
              "parentUUID": "25ab8c76-2910-4539-9740-0802f87faf07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "68aed9d0-778a-40b8-a1d6-f6397e18929d",
              "parentUUID": "25ab8c76-2910-4539-9740-0802f87faf07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "e9492022-a3fb-48f2-a663-52cc56918815",
              "parentUUID": "25ab8c76-2910-4539-9740-0802f87faf07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "01319e09-ec1c-43bf-bc3d-68ed2b94f9e9",
              "parentUUID": "25ab8c76-2910-4539-9740-0802f87faf07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "a132fb8d-4b5a-4c3a-95f1-23ce2e9d35b1",
              "parentUUID": "25ab8c76-2910-4539-9740-0802f87faf07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "de08f498-82c5-4540-95f3-1f90ba55ad75",
              "parentUUID": "25ab8c76-2910-4539-9740-0802f87faf07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "0605a2d2-ac54-4c26-96d4-23f2bba8c2b3",
              "parentUUID": "25ab8c76-2910-4539-9740-0802f87faf07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "07df463c-666a-422c-a6d2-26c630f5585a",
              "parentUUID": "25ab8c76-2910-4539-9740-0802f87faf07",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "91916164-5596-45a3-9262-e9bb195d2f71",
              "parentUUID": "25ab8c76-2910-4539-9740-0802f87faf07",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "960d9eb7-0fa5-4508-9de7-1f5f1d732ace",
            "41b77e06-e810-449a-8ccd-a823348b0c08",
            "68aed9d0-778a-40b8-a1d6-f6397e18929d",
            "e9492022-a3fb-48f2-a663-52cc56918815",
            "01319e09-ec1c-43bf-bc3d-68ed2b94f9e9",
            "a132fb8d-4b5a-4c3a-95f1-23ce2e9d35b1",
            "de08f498-82c5-4540-95f3-1f90ba55ad75",
            "0605a2d2-ac54-4c26-96d4-23f2bba8c2b3",
            "07df463c-666a-422c-a6d2-26c630f5585a",
            "91916164-5596-45a3-9262-e9bb195d2f71"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "db2d0e4c-a7e3-4d8a-af51-56c92d1735f6",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "25a178ba-709d-47e3-8765-89dda808ae85",
              "parentUUID": "db2d0e4c-a7e3-4d8a-af51-56c92d1735f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "6f2dc155-bb21-41f6-8745-51d8ec71e93f",
              "parentUUID": "db2d0e4c-a7e3-4d8a-af51-56c92d1735f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "86ad6cd2-129b-474c-bc5e-9b13a51e241f",
              "parentUUID": "db2d0e4c-a7e3-4d8a-af51-56c92d1735f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "0d6c084c-5833-437c-95e6-855c77645f66",
              "parentUUID": "db2d0e4c-a7e3-4d8a-af51-56c92d1735f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "a440ef47-1e1c-431f-b9f3-30aa923982ce",
              "parentUUID": "db2d0e4c-a7e3-4d8a-af51-56c92d1735f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "eeb77401-bf2c-42f1-8666-bf96cb22ffc6",
              "parentUUID": "db2d0e4c-a7e3-4d8a-af51-56c92d1735f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "b8b2365f-d5ab-46f4-ad27-fe37b98d2140",
              "parentUUID": "db2d0e4c-a7e3-4d8a-af51-56c92d1735f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "b89661a2-e747-4b6e-acbe-7913b4444a7d",
              "parentUUID": "db2d0e4c-a7e3-4d8a-af51-56c92d1735f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "a86dfc3a-1cf1-44ca-b935-4c810b32caca",
              "parentUUID": "db2d0e4c-a7e3-4d8a-af51-56c92d1735f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "dfef9f2a-e602-40d2-ac24-f40658ce3771",
              "parentUUID": "db2d0e4c-a7e3-4d8a-af51-56c92d1735f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "25a178ba-709d-47e3-8765-89dda808ae85",
            "6f2dc155-bb21-41f6-8745-51d8ec71e93f",
            "86ad6cd2-129b-474c-bc5e-9b13a51e241f",
            "0d6c084c-5833-437c-95e6-855c77645f66",
            "a440ef47-1e1c-431f-b9f3-30aa923982ce",
            "eeb77401-bf2c-42f1-8666-bf96cb22ffc6",
            "b8b2365f-d5ab-46f4-ad27-fe37b98d2140",
            "b89661a2-e747-4b6e-acbe-7913b4444a7d",
            "a86dfc3a-1cf1-44ca-b935-4c810b32caca",
            "dfef9f2a-e602-40d2-ac24-f40658ce3771"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "fded05aa-91b5-4230-bd00-020383f9dfab",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "69858519-70a6-448e-bb2a-43f82d956fbc",
              "parentUUID": "fded05aa-91b5-4230-bd00-020383f9dfab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "bf274440-0771-45e0-9034-de9e74686f3e",
              "parentUUID": "fded05aa-91b5-4230-bd00-020383f9dfab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "9fcefea0-f3c3-4c87-8a7e-796ee5faa1ab",
              "parentUUID": "fded05aa-91b5-4230-bd00-020383f9dfab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "44cc7f3e-d415-46dd-a832-edaef4c83319",
              "parentUUID": "fded05aa-91b5-4230-bd00-020383f9dfab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "2c94be07-b0be-4c85-977e-c9cef2704210",
              "parentUUID": "fded05aa-91b5-4230-bd00-020383f9dfab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "f1950481-2bd7-4b3a-8c08-31e70cb4f127",
              "parentUUID": "fded05aa-91b5-4230-bd00-020383f9dfab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "3086639c-5a17-44b1-8320-783f2a8bae04",
              "parentUUID": "fded05aa-91b5-4230-bd00-020383f9dfab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "05f5cee9-f97b-4485-b4c4-5f5d760ec017",
              "parentUUID": "fded05aa-91b5-4230-bd00-020383f9dfab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "e86bbe7d-3f5e-4597-8976-9e363f9bfdb8",
              "parentUUID": "fded05aa-91b5-4230-bd00-020383f9dfab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "fc0b791f-4e18-49a7-b8ad-897a9bab24c4",
              "parentUUID": "fded05aa-91b5-4230-bd00-020383f9dfab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "69858519-70a6-448e-bb2a-43f82d956fbc",
            "bf274440-0771-45e0-9034-de9e74686f3e",
            "9fcefea0-f3c3-4c87-8a7e-796ee5faa1ab",
            "44cc7f3e-d415-46dd-a832-edaef4c83319",
            "2c94be07-b0be-4c85-977e-c9cef2704210",
            "f1950481-2bd7-4b3a-8c08-31e70cb4f127",
            "3086639c-5a17-44b1-8320-783f2a8bae04",
            "05f5cee9-f97b-4485-b4c4-5f5d760ec017",
            "e86bbe7d-3f5e-4597-8976-9e363f9bfdb8",
            "fc0b791f-4e18-49a7-b8ad-897a9bab24c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "16f21694-29b5-4def-be91-7785a51e3c90",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "a5e17f66-616e-4488-a6aa-4021f022613b",
              "parentUUID": "16f21694-29b5-4def-be91-7785a51e3c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "cbdb6afb-bf5b-46ce-b105-b9d05b83c374",
              "parentUUID": "16f21694-29b5-4def-be91-7785a51e3c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "cb3f4069-a2c7-4db2-9b7c-edcf4348bb0f",
              "parentUUID": "16f21694-29b5-4def-be91-7785a51e3c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "9353e251-d34b-4467-928b-e25a99a8fb31",
              "parentUUID": "16f21694-29b5-4def-be91-7785a51e3c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "77b1fc10-93d0-41a7-b46b-c41fe468bd91",
              "parentUUID": "16f21694-29b5-4def-be91-7785a51e3c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "4d074bef-6d44-4f6f-84bc-d9c1698ffadd",
              "parentUUID": "16f21694-29b5-4def-be91-7785a51e3c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "71758831-d5b6-422c-bc64-9543eed1f58b",
              "parentUUID": "16f21694-29b5-4def-be91-7785a51e3c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "c30c8473-826d-4172-af55-ed16a007d77e",
              "parentUUID": "16f21694-29b5-4def-be91-7785a51e3c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "cdce6e8e-7e8f-4250-9dc4-c9d21e004220",
              "parentUUID": "16f21694-29b5-4def-be91-7785a51e3c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "b5bc2090-42b3-40bd-8039-5661dceb5b26",
              "parentUUID": "16f21694-29b5-4def-be91-7785a51e3c90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5e17f66-616e-4488-a6aa-4021f022613b",
            "cbdb6afb-bf5b-46ce-b105-b9d05b83c374",
            "cb3f4069-a2c7-4db2-9b7c-edcf4348bb0f",
            "9353e251-d34b-4467-928b-e25a99a8fb31",
            "77b1fc10-93d0-41a7-b46b-c41fe468bd91",
            "4d074bef-6d44-4f6f-84bc-d9c1698ffadd",
            "71758831-d5b6-422c-bc64-9543eed1f58b",
            "c30c8473-826d-4172-af55-ed16a007d77e",
            "cdce6e8e-7e8f-4250-9dc4-c9d21e004220",
            "b5bc2090-42b3-40bd-8039-5661dceb5b26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e9c64ee6-2297-42f5-9835-f6cf70ecb0ee",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "a5802a7e-a5a5-482a-95cb-bb76a2206d9d",
              "parentUUID": "e9c64ee6-2297-42f5-9835-f6cf70ecb0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "5e11f62b-0858-4c0e-8bea-e95df179bd3e",
              "parentUUID": "e9c64ee6-2297-42f5-9835-f6cf70ecb0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "f1118f69-f272-4815-abf5-b0d8c39626d9",
              "parentUUID": "e9c64ee6-2297-42f5-9835-f6cf70ecb0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "ba0c3395-25f9-4d9c-a914-e1511740ae70",
              "parentUUID": "e9c64ee6-2297-42f5-9835-f6cf70ecb0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "82777d7a-9497-4b5d-9184-1b5f5889ca86",
              "parentUUID": "e9c64ee6-2297-42f5-9835-f6cf70ecb0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "aa727308-e60f-4fe6-bc61-ab5179e73572",
              "parentUUID": "e9c64ee6-2297-42f5-9835-f6cf70ecb0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "cf7be74a-ce3f-4bbf-9003-71c7b0cf00b1",
              "parentUUID": "e9c64ee6-2297-42f5-9835-f6cf70ecb0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "01e2ae3e-cf1a-4830-9d1d-117417048eec",
              "parentUUID": "e9c64ee6-2297-42f5-9835-f6cf70ecb0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "a34c0a21-0293-45a1-bf06-1102d3cae53f",
              "parentUUID": "e9c64ee6-2297-42f5-9835-f6cf70ecb0ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "fec087cd-65fd-4239-9d04-34ea28ea399e",
              "parentUUID": "e9c64ee6-2297-42f5-9835-f6cf70ecb0ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5802a7e-a5a5-482a-95cb-bb76a2206d9d",
            "5e11f62b-0858-4c0e-8bea-e95df179bd3e",
            "f1118f69-f272-4815-abf5-b0d8c39626d9",
            "ba0c3395-25f9-4d9c-a914-e1511740ae70",
            "82777d7a-9497-4b5d-9184-1b5f5889ca86",
            "aa727308-e60f-4fe6-bc61-ab5179e73572",
            "cf7be74a-ce3f-4bbf-9003-71c7b0cf00b1",
            "01e2ae3e-cf1a-4830-9d1d-117417048eec",
            "a34c0a21-0293-45a1-bf06-1102d3cae53f",
            "fec087cd-65fd-4239-9d04-34ea28ea399e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e0a38e7d-8a93-4214-9841-b52122a5273e",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "903fc63a-0ddd-453a-a4bc-c38e48f3925c",
              "parentUUID": "e0a38e7d-8a93-4214-9841-b52122a5273e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "eeef64db-41ec-44c8-ac32-1ff8247dc203",
              "parentUUID": "e0a38e7d-8a93-4214-9841-b52122a5273e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "5e947db3-c6c0-4025-abe1-cf081514f26b",
              "parentUUID": "e0a38e7d-8a93-4214-9841-b52122a5273e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "3055d868-4e80-4aef-a0b7-fbcece0f8dc9",
              "parentUUID": "e0a38e7d-8a93-4214-9841-b52122a5273e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "bba6778f-38f7-4bef-ab9c-6ff01c5d1d06",
              "parentUUID": "e0a38e7d-8a93-4214-9841-b52122a5273e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "0631669f-cc8c-401c-b30e-a1b4ef0b7dbb",
              "parentUUID": "e0a38e7d-8a93-4214-9841-b52122a5273e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "36e008e6-979d-4cfc-ba82-cad8f7b24227",
              "parentUUID": "e0a38e7d-8a93-4214-9841-b52122a5273e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "8170b4fe-590d-4fcb-8238-fb18dd4956d4",
              "parentUUID": "e0a38e7d-8a93-4214-9841-b52122a5273e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "3ad673bf-c1fe-4eb5-a028-66c09bbcc106",
              "parentUUID": "e0a38e7d-8a93-4214-9841-b52122a5273e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "20246878-a9bf-43bb-922e-c102e9c2d9e9",
              "parentUUID": "e0a38e7d-8a93-4214-9841-b52122a5273e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "903fc63a-0ddd-453a-a4bc-c38e48f3925c",
            "eeef64db-41ec-44c8-ac32-1ff8247dc203",
            "5e947db3-c6c0-4025-abe1-cf081514f26b",
            "3055d868-4e80-4aef-a0b7-fbcece0f8dc9",
            "bba6778f-38f7-4bef-ab9c-6ff01c5d1d06",
            "0631669f-cc8c-401c-b30e-a1b4ef0b7dbb",
            "36e008e6-979d-4cfc-ba82-cad8f7b24227",
            "8170b4fe-590d-4fcb-8238-fb18dd4956d4",
            "3ad673bf-c1fe-4eb5-a028-66c09bbcc106",
            "20246878-a9bf-43bb-922e-c102e9c2d9e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5ce498a2-79d9-483c-8d25-fcd3dc9e1ba1",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "3e82d239-1141-4d0f-b829-8afe639ebb9d",
              "parentUUID": "5ce498a2-79d9-483c-8d25-fcd3dc9e1ba1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "cacb8149-aaff-4a74-9d8d-332955c4ab7c",
              "parentUUID": "5ce498a2-79d9-483c-8d25-fcd3dc9e1ba1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "af9e420e-7080-4541-ab15-8f59262c80bc",
              "parentUUID": "5ce498a2-79d9-483c-8d25-fcd3dc9e1ba1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "08aec207-ecd2-4faf-b30a-6aec572489df",
              "parentUUID": "5ce498a2-79d9-483c-8d25-fcd3dc9e1ba1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "097fb368-3a5f-4166-a2f3-725e18a0bd01",
              "parentUUID": "5ce498a2-79d9-483c-8d25-fcd3dc9e1ba1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "f73cabee-9f94-4517-ace2-c29d8ec898e9",
              "parentUUID": "5ce498a2-79d9-483c-8d25-fcd3dc9e1ba1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "e12172d9-cec3-4b69-b044-616f151bcad3",
              "parentUUID": "5ce498a2-79d9-483c-8d25-fcd3dc9e1ba1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "5bc0ff20-3387-433f-b562-b5dc1c6c2e46",
              "parentUUID": "5ce498a2-79d9-483c-8d25-fcd3dc9e1ba1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "b60a4cea-053d-4496-a73e-c3bfb31db42c",
              "parentUUID": "5ce498a2-79d9-483c-8d25-fcd3dc9e1ba1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "b6527000-1282-4ac8-befc-7545f6cd8e56",
              "parentUUID": "5ce498a2-79d9-483c-8d25-fcd3dc9e1ba1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e82d239-1141-4d0f-b829-8afe639ebb9d",
            "cacb8149-aaff-4a74-9d8d-332955c4ab7c",
            "af9e420e-7080-4541-ab15-8f59262c80bc",
            "08aec207-ecd2-4faf-b30a-6aec572489df",
            "097fb368-3a5f-4166-a2f3-725e18a0bd01",
            "f73cabee-9f94-4517-ace2-c29d8ec898e9",
            "e12172d9-cec3-4b69-b044-616f151bcad3",
            "5bc0ff20-3387-433f-b562-b5dc1c6c2e46",
            "b60a4cea-053d-4496-a73e-c3bfb31db42c",
            "b6527000-1282-4ac8-befc-7545f6cd8e56"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a5a9da1d-f11b-44d7-a6e9-8720a2274047",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "a2bf55de-4b28-4cc9-8de3-9572c0479d12",
              "parentUUID": "a5a9da1d-f11b-44d7-a6e9-8720a2274047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "c316e9b9-4eb4-4aed-9148-4e004dfa83b4",
              "parentUUID": "a5a9da1d-f11b-44d7-a6e9-8720a2274047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "7e85421b-0190-4409-aea1-83c886e0255d",
              "parentUUID": "a5a9da1d-f11b-44d7-a6e9-8720a2274047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "58d33825-6c12-4b00-9aa3-263a50969fa9",
              "parentUUID": "a5a9da1d-f11b-44d7-a6e9-8720a2274047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "fb334b4f-9b09-4f3a-b551-cda857a9082e",
              "parentUUID": "a5a9da1d-f11b-44d7-a6e9-8720a2274047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "dcfea3dd-a289-423d-a053-a4a49de09823",
              "parentUUID": "a5a9da1d-f11b-44d7-a6e9-8720a2274047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "ee07271f-6f9d-45cb-a218-713946fe429d",
              "parentUUID": "a5a9da1d-f11b-44d7-a6e9-8720a2274047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "e6369b30-5f86-4068-acbf-4a75c7dcba2c",
              "parentUUID": "a5a9da1d-f11b-44d7-a6e9-8720a2274047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "4956e05e-e246-4635-9370-aa4bdfdf7295",
              "parentUUID": "a5a9da1d-f11b-44d7-a6e9-8720a2274047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "60f0ba7a-16b8-431d-8705-f64c61d32500",
              "parentUUID": "a5a9da1d-f11b-44d7-a6e9-8720a2274047",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2bf55de-4b28-4cc9-8de3-9572c0479d12",
            "c316e9b9-4eb4-4aed-9148-4e004dfa83b4",
            "7e85421b-0190-4409-aea1-83c886e0255d",
            "58d33825-6c12-4b00-9aa3-263a50969fa9",
            "fb334b4f-9b09-4f3a-b551-cda857a9082e",
            "dcfea3dd-a289-423d-a053-a4a49de09823",
            "ee07271f-6f9d-45cb-a218-713946fe429d",
            "e6369b30-5f86-4068-acbf-4a75c7dcba2c",
            "4956e05e-e246-4635-9370-aa4bdfdf7295",
            "60f0ba7a-16b8-431d-8705-f64c61d32500"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b7fd5685-8c0d-42d2-9da2-2739ac5c6d5b",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "23872206-3a52-439a-99a2-636a90f9e070",
              "parentUUID": "b7fd5685-8c0d-42d2-9da2-2739ac5c6d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "82509d66-99fd-40b6-8bff-fb7f3c5894fa",
              "parentUUID": "b7fd5685-8c0d-42d2-9da2-2739ac5c6d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "17b29c0d-fd88-4750-95d5-5c52e89d25f3",
              "parentUUID": "b7fd5685-8c0d-42d2-9da2-2739ac5c6d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "605de806-a416-4da7-a6db-59f7abd49879",
              "parentUUID": "b7fd5685-8c0d-42d2-9da2-2739ac5c6d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "885612dc-2ee9-4c01-9946-bda16dc606e9",
              "parentUUID": "b7fd5685-8c0d-42d2-9da2-2739ac5c6d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "1b9d07e6-acf7-409f-90ca-a93cfffc6234",
              "parentUUID": "b7fd5685-8c0d-42d2-9da2-2739ac5c6d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "78bc2a75-bdf5-40d5-8cce-b76b5be6d23e",
              "parentUUID": "b7fd5685-8c0d-42d2-9da2-2739ac5c6d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "bcec6918-f6fe-46e7-aa27-fdcc166e9e2c",
              "parentUUID": "b7fd5685-8c0d-42d2-9da2-2739ac5c6d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "59b2e8ad-04f1-4907-b939-fe2dccc7bf2c",
              "parentUUID": "b7fd5685-8c0d-42d2-9da2-2739ac5c6d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "ea7fed8a-8489-41a0-b842-c08db1f179fe",
              "parentUUID": "b7fd5685-8c0d-42d2-9da2-2739ac5c6d5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23872206-3a52-439a-99a2-636a90f9e070",
            "82509d66-99fd-40b6-8bff-fb7f3c5894fa",
            "17b29c0d-fd88-4750-95d5-5c52e89d25f3",
            "605de806-a416-4da7-a6db-59f7abd49879",
            "885612dc-2ee9-4c01-9946-bda16dc606e9",
            "1b9d07e6-acf7-409f-90ca-a93cfffc6234",
            "78bc2a75-bdf5-40d5-8cce-b76b5be6d23e",
            "bcec6918-f6fe-46e7-aa27-fdcc166e9e2c",
            "59b2e8ad-04f1-4907-b939-fe2dccc7bf2c",
            "ea7fed8a-8489-41a0-b842-c08db1f179fe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8aa7fcc9-5311-41f1-b2be-47a4d2d563a3",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "dbe28216-325a-49be-af4a-f9452bd9fe0b",
              "parentUUID": "8aa7fcc9-5311-41f1-b2be-47a4d2d563a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "3f385cd4-cd41-42e6-9fff-586528cf68a4",
              "parentUUID": "8aa7fcc9-5311-41f1-b2be-47a4d2d563a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "7a19d450-224c-45cd-9067-9acf107c6ca9",
              "parentUUID": "8aa7fcc9-5311-41f1-b2be-47a4d2d563a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "7325683d-e932-42c0-ad3a-9e39d77fdc38",
              "parentUUID": "8aa7fcc9-5311-41f1-b2be-47a4d2d563a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "6c30322e-2d16-48fa-8361-674e126d78e0",
              "parentUUID": "8aa7fcc9-5311-41f1-b2be-47a4d2d563a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "fd2b1df4-c410-4e81-af48-8784bf135c41",
              "parentUUID": "8aa7fcc9-5311-41f1-b2be-47a4d2d563a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "3d10eac3-4258-419c-be7d-c77cab15febd",
              "parentUUID": "8aa7fcc9-5311-41f1-b2be-47a4d2d563a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "1b736a2d-f07a-49c8-aabb-4c64c0c87123",
              "parentUUID": "8aa7fcc9-5311-41f1-b2be-47a4d2d563a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "9721c29c-0b1c-4a96-8e75-219e831cff2d",
              "parentUUID": "8aa7fcc9-5311-41f1-b2be-47a4d2d563a3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "bf2ea82d-9ad9-4e07-9de9-ff4f69eb819d",
              "parentUUID": "8aa7fcc9-5311-41f1-b2be-47a4d2d563a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dbe28216-325a-49be-af4a-f9452bd9fe0b",
            "3f385cd4-cd41-42e6-9fff-586528cf68a4",
            "7a19d450-224c-45cd-9067-9acf107c6ca9",
            "7325683d-e932-42c0-ad3a-9e39d77fdc38",
            "6c30322e-2d16-48fa-8361-674e126d78e0",
            "fd2b1df4-c410-4e81-af48-8784bf135c41",
            "3d10eac3-4258-419c-be7d-c77cab15febd",
            "1b736a2d-f07a-49c8-aabb-4c64c0c87123",
            "9721c29c-0b1c-4a96-8e75-219e831cff2d",
            "bf2ea82d-9ad9-4e07-9de9-ff4f69eb819d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8358f3eb-b1df-48dc-a51c-3b899d5290d6",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "31d75be8-6f05-46c6-bd1f-b642dc625316",
              "parentUUID": "8358f3eb-b1df-48dc-a51c-3b899d5290d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "af991132-4368-4fde-b80e-7149afee04ac",
              "parentUUID": "8358f3eb-b1df-48dc-a51c-3b899d5290d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "728a16dc-3aec-41b1-bbea-50ce562d61ee",
              "parentUUID": "8358f3eb-b1df-48dc-a51c-3b899d5290d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "c0b1323c-4192-467b-b539-75bd76de5672",
              "parentUUID": "8358f3eb-b1df-48dc-a51c-3b899d5290d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "f79f60b8-43ca-4360-b7f5-32771161e987",
              "parentUUID": "8358f3eb-b1df-48dc-a51c-3b899d5290d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "7fce76e7-afbe-4047-a071-93372676139d",
              "parentUUID": "8358f3eb-b1df-48dc-a51c-3b899d5290d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "53342771-e3b7-40cd-b3ae-c08fa9bc3759",
              "parentUUID": "8358f3eb-b1df-48dc-a51c-3b899d5290d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "ad554b36-d86c-4c9d-880a-510ccaa89d34",
              "parentUUID": "8358f3eb-b1df-48dc-a51c-3b899d5290d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "47e51c63-2aae-4969-a309-fb05adfd3792",
              "parentUUID": "8358f3eb-b1df-48dc-a51c-3b899d5290d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "480a2177-fcfe-477b-b956-c012410c3a4e",
              "parentUUID": "8358f3eb-b1df-48dc-a51c-3b899d5290d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31d75be8-6f05-46c6-bd1f-b642dc625316",
            "af991132-4368-4fde-b80e-7149afee04ac",
            "728a16dc-3aec-41b1-bbea-50ce562d61ee",
            "c0b1323c-4192-467b-b539-75bd76de5672",
            "f79f60b8-43ca-4360-b7f5-32771161e987",
            "7fce76e7-afbe-4047-a071-93372676139d",
            "53342771-e3b7-40cd-b3ae-c08fa9bc3759",
            "ad554b36-d86c-4c9d-880a-510ccaa89d34",
            "47e51c63-2aae-4969-a309-fb05adfd3792",
            "480a2177-fcfe-477b-b956-c012410c3a4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4bfc7213-b0a1-435d-bd99-af27a76b5206",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "bbb9d8d6-613d-455c-8174-173dfa41d16d",
              "parentUUID": "4bfc7213-b0a1-435d-bd99-af27a76b5206",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "bfbbb57f-839f-4922-a0c0-c3049415f83d",
              "parentUUID": "4bfc7213-b0a1-435d-bd99-af27a76b5206",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "5ec46621-7ecc-4065-a59d-39b7b1811b41",
              "parentUUID": "4bfc7213-b0a1-435d-bd99-af27a76b5206",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "e13c4707-9262-49b1-8d6f-4536e6a773ac",
              "parentUUID": "4bfc7213-b0a1-435d-bd99-af27a76b5206",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "d6ee8798-e669-4122-83a4-cf2a7772464d",
              "parentUUID": "4bfc7213-b0a1-435d-bd99-af27a76b5206",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "061b66a1-394a-47cf-bbb4-fd190182f1fb",
              "parentUUID": "4bfc7213-b0a1-435d-bd99-af27a76b5206",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "50ec9163-a199-4dd5-a3d2-a9c74606e6b4",
              "parentUUID": "4bfc7213-b0a1-435d-bd99-af27a76b5206",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "c0575628-eb35-462f-9d1c-1d27d21f178f",
              "parentUUID": "4bfc7213-b0a1-435d-bd99-af27a76b5206",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "fdfa6baf-7692-4bc7-8b16-8dd7ce9da047",
              "parentUUID": "4bfc7213-b0a1-435d-bd99-af27a76b5206",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "25038f4a-d94d-4b4d-b417-6774ad7dff3b",
              "parentUUID": "4bfc7213-b0a1-435d-bd99-af27a76b5206",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbb9d8d6-613d-455c-8174-173dfa41d16d",
            "bfbbb57f-839f-4922-a0c0-c3049415f83d",
            "5ec46621-7ecc-4065-a59d-39b7b1811b41",
            "e13c4707-9262-49b1-8d6f-4536e6a773ac",
            "d6ee8798-e669-4122-83a4-cf2a7772464d",
            "061b66a1-394a-47cf-bbb4-fd190182f1fb",
            "50ec9163-a199-4dd5-a3d2-a9c74606e6b4",
            "c0575628-eb35-462f-9d1c-1d27d21f178f",
            "fdfa6baf-7692-4bc7-8b16-8dd7ce9da047",
            "25038f4a-d94d-4b4d-b417-6774ad7dff3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "79665652-0f5c-4183-8734-70815654f042",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "466894d1-1627-4e7e-b089-02e82fa81114",
              "parentUUID": "79665652-0f5c-4183-8734-70815654f042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "80f93939-db04-45f8-9a3e-7e8a68b2408a",
              "parentUUID": "79665652-0f5c-4183-8734-70815654f042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "3273e26c-c044-4046-a1f6-9178cf18eaa1",
              "parentUUID": "79665652-0f5c-4183-8734-70815654f042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "925eaf90-6b2b-4a22-8683-fa25f519957d",
              "parentUUID": "79665652-0f5c-4183-8734-70815654f042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "e0c96547-4487-4fb7-a32e-2af1b5fdd219",
              "parentUUID": "79665652-0f5c-4183-8734-70815654f042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "5f4cb310-a041-4275-b029-2ed57bf9fdab",
              "parentUUID": "79665652-0f5c-4183-8734-70815654f042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "380350df-a4a6-41c2-a966-05e83f2b9e48",
              "parentUUID": "79665652-0f5c-4183-8734-70815654f042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "227fb9dc-c878-4caf-9d03-20c54e2c0a53",
              "parentUUID": "79665652-0f5c-4183-8734-70815654f042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "b27276e0-cf35-48e3-ba08-f3cb80b06b73",
              "parentUUID": "79665652-0f5c-4183-8734-70815654f042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "70ad9384-6a23-4847-88ff-c03c54a2767d",
              "parentUUID": "79665652-0f5c-4183-8734-70815654f042",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "466894d1-1627-4e7e-b089-02e82fa81114",
            "80f93939-db04-45f8-9a3e-7e8a68b2408a",
            "3273e26c-c044-4046-a1f6-9178cf18eaa1",
            "925eaf90-6b2b-4a22-8683-fa25f519957d",
            "e0c96547-4487-4fb7-a32e-2af1b5fdd219",
            "5f4cb310-a041-4275-b029-2ed57bf9fdab",
            "380350df-a4a6-41c2-a966-05e83f2b9e48",
            "227fb9dc-c878-4caf-9d03-20c54e2c0a53",
            "b27276e0-cf35-48e3-ba08-f3cb80b06b73",
            "70ad9384-6a23-4847-88ff-c03c54a2767d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7b4d6fa9-80e6-4856-b00a-2aa6b40abb93",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "f4d5e3fb-f813-4e92-890d-de6ffd58e534",
              "parentUUID": "7b4d6fa9-80e6-4856-b00a-2aa6b40abb93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "3228ac68-381d-4585-8e98-db4909210336",
              "parentUUID": "7b4d6fa9-80e6-4856-b00a-2aa6b40abb93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "678b8853-76fc-498c-8505-f5efe3d7fba1",
              "parentUUID": "7b4d6fa9-80e6-4856-b00a-2aa6b40abb93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "c341de6e-0c86-428a-92a5-d932fe94444d",
              "parentUUID": "7b4d6fa9-80e6-4856-b00a-2aa6b40abb93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "fd644000-fff8-478e-8b60-234613f94655",
              "parentUUID": "7b4d6fa9-80e6-4856-b00a-2aa6b40abb93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "9b66cb96-4242-437e-bc1f-8681de950f29",
              "parentUUID": "7b4d6fa9-80e6-4856-b00a-2aa6b40abb93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "1a0f2349-f7d1-4cd3-9fb1-704a04e0a62c",
              "parentUUID": "7b4d6fa9-80e6-4856-b00a-2aa6b40abb93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "be1f914b-c4a8-4c50-8fc8-cc915882c540",
              "parentUUID": "7b4d6fa9-80e6-4856-b00a-2aa6b40abb93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "e1ccdb81-1161-4b62-ac0c-090d1cdb5b0e",
              "parentUUID": "7b4d6fa9-80e6-4856-b00a-2aa6b40abb93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "b930e320-f179-4742-844a-0cb9e3c77915",
              "parentUUID": "7b4d6fa9-80e6-4856-b00a-2aa6b40abb93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4d5e3fb-f813-4e92-890d-de6ffd58e534",
            "3228ac68-381d-4585-8e98-db4909210336",
            "678b8853-76fc-498c-8505-f5efe3d7fba1",
            "c341de6e-0c86-428a-92a5-d932fe94444d",
            "fd644000-fff8-478e-8b60-234613f94655",
            "9b66cb96-4242-437e-bc1f-8681de950f29",
            "1a0f2349-f7d1-4cd3-9fb1-704a04e0a62c",
            "be1f914b-c4a8-4c50-8fc8-cc915882c540",
            "e1ccdb81-1161-4b62-ac0c-090d1cdb5b0e",
            "b930e320-f179-4742-844a-0cb9e3c77915"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "67a66fe3-9a9b-4ab6-9c76-6fd0fb8da0d6",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "11dd0dc3-ec16-4ed6-8de2-9d391046d4ea",
              "parentUUID": "67a66fe3-9a9b-4ab6-9c76-6fd0fb8da0d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "de834f34-44f2-41f1-8474-741783d2e346",
              "parentUUID": "67a66fe3-9a9b-4ab6-9c76-6fd0fb8da0d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "cbc1dd86-725e-42ce-924a-287252aada31",
              "parentUUID": "67a66fe3-9a9b-4ab6-9c76-6fd0fb8da0d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "9ada67f2-6b2d-4132-b645-8bf95c0ca780",
              "parentUUID": "67a66fe3-9a9b-4ab6-9c76-6fd0fb8da0d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "e556348d-9f5e-402b-a0d1-d6322e318ec0",
              "parentUUID": "67a66fe3-9a9b-4ab6-9c76-6fd0fb8da0d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "3180359b-2f04-4da1-8715-d2b6bba45ba9",
              "parentUUID": "67a66fe3-9a9b-4ab6-9c76-6fd0fb8da0d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "f65e47ea-5e49-4339-a595-b1c12d62153a",
              "parentUUID": "67a66fe3-9a9b-4ab6-9c76-6fd0fb8da0d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "08199ef9-67a3-4815-947a-5ea14ecba3d4",
              "parentUUID": "67a66fe3-9a9b-4ab6-9c76-6fd0fb8da0d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "03c870ec-0daa-4af4-8eba-cd8f496b827f",
              "parentUUID": "67a66fe3-9a9b-4ab6-9c76-6fd0fb8da0d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "1b983e37-ebb8-4a01-b844-9c0c5d02b97d",
              "parentUUID": "67a66fe3-9a9b-4ab6-9c76-6fd0fb8da0d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11dd0dc3-ec16-4ed6-8de2-9d391046d4ea",
            "de834f34-44f2-41f1-8474-741783d2e346",
            "cbc1dd86-725e-42ce-924a-287252aada31",
            "9ada67f2-6b2d-4132-b645-8bf95c0ca780",
            "e556348d-9f5e-402b-a0d1-d6322e318ec0",
            "3180359b-2f04-4da1-8715-d2b6bba45ba9",
            "f65e47ea-5e49-4339-a595-b1c12d62153a",
            "08199ef9-67a3-4815-947a-5ea14ecba3d4",
            "03c870ec-0daa-4af4-8eba-cd8f496b827f",
            "1b983e37-ebb8-4a01-b844-9c0c5d02b97d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7f9bb210-ad61-4982-9b51-e21cfde25fc5",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "3f37f511-366a-4f78-9a20-f9bda172c44b",
              "parentUUID": "7f9bb210-ad61-4982-9b51-e21cfde25fc5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "d589ce8b-7cff-4ea0-87b3-962f73178052",
              "parentUUID": "7f9bb210-ad61-4982-9b51-e21cfde25fc5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "a1166a8f-b685-43d6-a2c5-592a6de8cf3b",
              "parentUUID": "7f9bb210-ad61-4982-9b51-e21cfde25fc5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "793b7453-c235-47f9-9f31-5195029983ba",
              "parentUUID": "7f9bb210-ad61-4982-9b51-e21cfde25fc5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "bb286321-efd9-4206-8b87-aec5017ec7b4",
              "parentUUID": "7f9bb210-ad61-4982-9b51-e21cfde25fc5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "4f2e7574-4303-4092-be6c-c9661a8f662a",
              "parentUUID": "7f9bb210-ad61-4982-9b51-e21cfde25fc5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "486f05af-4674-4b9c-8a3d-577d2e64136f",
              "parentUUID": "7f9bb210-ad61-4982-9b51-e21cfde25fc5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "4772268e-a58f-458e-87d0-803bd93a90fe",
              "parentUUID": "7f9bb210-ad61-4982-9b51-e21cfde25fc5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "d6a59cd4-4311-46c9-a7fb-bf78cb8aa2c8",
              "parentUUID": "7f9bb210-ad61-4982-9b51-e21cfde25fc5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "912894e8-ddb7-43ee-a1cb-5039a6d40124",
              "parentUUID": "7f9bb210-ad61-4982-9b51-e21cfde25fc5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f37f511-366a-4f78-9a20-f9bda172c44b",
            "d589ce8b-7cff-4ea0-87b3-962f73178052",
            "a1166a8f-b685-43d6-a2c5-592a6de8cf3b",
            "793b7453-c235-47f9-9f31-5195029983ba",
            "bb286321-efd9-4206-8b87-aec5017ec7b4",
            "4f2e7574-4303-4092-be6c-c9661a8f662a",
            "486f05af-4674-4b9c-8a3d-577d2e64136f",
            "4772268e-a58f-458e-87d0-803bd93a90fe",
            "d6a59cd4-4311-46c9-a7fb-bf78cb8aa2c8",
            "912894e8-ddb7-43ee-a1cb-5039a6d40124"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "15ac0efe-b929-4c92-88bd-3a1d05298b27",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "9c77d887-86d0-4217-aa92-2bb4ee6745c8",
              "parentUUID": "15ac0efe-b929-4c92-88bd-3a1d05298b27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "fabe2dee-ea7a-44a8-95e2-64391f845a05",
              "parentUUID": "15ac0efe-b929-4c92-88bd-3a1d05298b27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "5192391b-f4d4-4dca-aad0-75efe205904f",
              "parentUUID": "15ac0efe-b929-4c92-88bd-3a1d05298b27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "f03ffbc1-9c30-494c-ba03-940a968822f9",
              "parentUUID": "15ac0efe-b929-4c92-88bd-3a1d05298b27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "92763810-ba28-4366-87be-bac0cf2f5e0c",
              "parentUUID": "15ac0efe-b929-4c92-88bd-3a1d05298b27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "10a368dd-cbbe-497a-93aa-f4201da8367d",
              "parentUUID": "15ac0efe-b929-4c92-88bd-3a1d05298b27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "244155b1-ae99-41a2-8592-bcb98eb0afed",
              "parentUUID": "15ac0efe-b929-4c92-88bd-3a1d05298b27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "1ed479b7-5863-4f51-9b48-e149b09399ff",
              "parentUUID": "15ac0efe-b929-4c92-88bd-3a1d05298b27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "7f330a36-9baa-4b6e-b8e1-7ca5eb74870a",
              "parentUUID": "15ac0efe-b929-4c92-88bd-3a1d05298b27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "89553f61-034e-4882-9df1-020e36c284f6",
              "parentUUID": "15ac0efe-b929-4c92-88bd-3a1d05298b27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c77d887-86d0-4217-aa92-2bb4ee6745c8",
            "fabe2dee-ea7a-44a8-95e2-64391f845a05",
            "5192391b-f4d4-4dca-aad0-75efe205904f",
            "f03ffbc1-9c30-494c-ba03-940a968822f9",
            "92763810-ba28-4366-87be-bac0cf2f5e0c",
            "10a368dd-cbbe-497a-93aa-f4201da8367d",
            "244155b1-ae99-41a2-8592-bcb98eb0afed",
            "1ed479b7-5863-4f51-9b48-e149b09399ff",
            "7f330a36-9baa-4b6e-b8e1-7ca5eb74870a",
            "89553f61-034e-4882-9df1-020e36c284f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f615b2bb-1383-4e12-a57e-af17bdc7a632",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "c71250bc-1881-4e5f-b942-35998d3db066",
              "parentUUID": "f615b2bb-1383-4e12-a57e-af17bdc7a632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "789fbcdc-ad36-477c-bbfb-657e06e5758b",
              "parentUUID": "f615b2bb-1383-4e12-a57e-af17bdc7a632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "d31ea3bb-a353-47d0-938c-aa208e19ebe8",
              "parentUUID": "f615b2bb-1383-4e12-a57e-af17bdc7a632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "386f77d0-a442-4e04-88bd-634865389d55",
              "parentUUID": "f615b2bb-1383-4e12-a57e-af17bdc7a632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "0868bd68-9776-4482-8df1-61b620731574",
              "parentUUID": "f615b2bb-1383-4e12-a57e-af17bdc7a632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "c1d2abc3-ffcc-4b73-8dd0-514fa323c21e",
              "parentUUID": "f615b2bb-1383-4e12-a57e-af17bdc7a632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "d57c5021-6272-4ff3-9fb9-4919abc9a016",
              "parentUUID": "f615b2bb-1383-4e12-a57e-af17bdc7a632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "5269231f-6755-450c-b7c8-e29a367460b4",
              "parentUUID": "f615b2bb-1383-4e12-a57e-af17bdc7a632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "7f1f0f7a-3ee6-46cb-b5fe-128c234bbaed",
              "parentUUID": "f615b2bb-1383-4e12-a57e-af17bdc7a632",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "4812be43-3edc-426d-965e-7f9c8bf7a12d",
              "parentUUID": "f615b2bb-1383-4e12-a57e-af17bdc7a632",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c71250bc-1881-4e5f-b942-35998d3db066",
            "789fbcdc-ad36-477c-bbfb-657e06e5758b",
            "d31ea3bb-a353-47d0-938c-aa208e19ebe8",
            "386f77d0-a442-4e04-88bd-634865389d55",
            "0868bd68-9776-4482-8df1-61b620731574",
            "c1d2abc3-ffcc-4b73-8dd0-514fa323c21e",
            "d57c5021-6272-4ff3-9fb9-4919abc9a016",
            "5269231f-6755-450c-b7c8-e29a367460b4",
            "7f1f0f7a-3ee6-46cb-b5fe-128c234bbaed",
            "4812be43-3edc-426d-965e-7f9c8bf7a12d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f09d28c0-7d88-4ddb-963b-7ab705a60cd1",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "d88b7c24-d528-4b2c-bceb-b526c085d8cf",
              "parentUUID": "f09d28c0-7d88-4ddb-963b-7ab705a60cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "2bfa4d69-ebbc-496d-8a1e-ec039b5cb0ac",
              "parentUUID": "f09d28c0-7d88-4ddb-963b-7ab705a60cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "91afafe4-19dc-4b6a-8d27-53be2679fe5b",
              "parentUUID": "f09d28c0-7d88-4ddb-963b-7ab705a60cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "5d02b083-8779-4106-a230-9a9e50cc6e80",
              "parentUUID": "f09d28c0-7d88-4ddb-963b-7ab705a60cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "f86a290e-dc64-40fb-965c-79424a72199f",
              "parentUUID": "f09d28c0-7d88-4ddb-963b-7ab705a60cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "1f603525-acde-44b8-8595-0c3720a7f1e8",
              "parentUUID": "f09d28c0-7d88-4ddb-963b-7ab705a60cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "008a94cd-2a1c-431c-b3e5-f213e0d729b6",
              "parentUUID": "f09d28c0-7d88-4ddb-963b-7ab705a60cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "c2eaddd3-b8ae-42fc-92d4-8feb8772d99d",
              "parentUUID": "f09d28c0-7d88-4ddb-963b-7ab705a60cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "1b8f628d-1405-4ef6-951b-0314eebbdc99",
              "parentUUID": "f09d28c0-7d88-4ddb-963b-7ab705a60cd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "9ff9f7cb-881d-42d8-8766-e47e2f2246ae",
              "parentUUID": "f09d28c0-7d88-4ddb-963b-7ab705a60cd1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d88b7c24-d528-4b2c-bceb-b526c085d8cf",
            "2bfa4d69-ebbc-496d-8a1e-ec039b5cb0ac",
            "91afafe4-19dc-4b6a-8d27-53be2679fe5b",
            "5d02b083-8779-4106-a230-9a9e50cc6e80",
            "f86a290e-dc64-40fb-965c-79424a72199f",
            "1f603525-acde-44b8-8595-0c3720a7f1e8",
            "008a94cd-2a1c-431c-b3e5-f213e0d729b6",
            "c2eaddd3-b8ae-42fc-92d4-8feb8772d99d",
            "1b8f628d-1405-4ef6-951b-0314eebbdc99",
            "9ff9f7cb-881d-42d8-8766-e47e2f2246ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "53151df0-5ce2-463d-bd4d-a31404f8fb36",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "adc47a24-5d36-4826-a6ec-aeea0ff2a356",
              "parentUUID": "53151df0-5ce2-463d-bd4d-a31404f8fb36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "12ba820c-803f-437e-99c7-b32cc4da3423",
              "parentUUID": "53151df0-5ce2-463d-bd4d-a31404f8fb36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "69a4238e-0536-43ad-8881-6d728e4c029f",
              "parentUUID": "53151df0-5ce2-463d-bd4d-a31404f8fb36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "3dc69d15-2d6a-4448-a2a2-6e06c05bbd2e",
              "parentUUID": "53151df0-5ce2-463d-bd4d-a31404f8fb36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "fc71a110-4dd2-46c0-a92f-d2ec82aafeda",
              "parentUUID": "53151df0-5ce2-463d-bd4d-a31404f8fb36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "49697531-cbdc-4e4b-a6aa-121b65dbf6ae",
              "parentUUID": "53151df0-5ce2-463d-bd4d-a31404f8fb36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "5e627da7-9b2f-4c95-9d6d-a7b6f5dfaccb",
              "parentUUID": "53151df0-5ce2-463d-bd4d-a31404f8fb36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "2f60abec-1334-4cf8-80b3-9bd8c6d25713",
              "parentUUID": "53151df0-5ce2-463d-bd4d-a31404f8fb36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "8f1724a0-1bc6-4ece-88ee-a78448e262cc",
              "parentUUID": "53151df0-5ce2-463d-bd4d-a31404f8fb36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "49ea91d2-6253-4b7f-a996-de2608fd3999",
              "parentUUID": "53151df0-5ce2-463d-bd4d-a31404f8fb36",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "adc47a24-5d36-4826-a6ec-aeea0ff2a356",
            "12ba820c-803f-437e-99c7-b32cc4da3423",
            "69a4238e-0536-43ad-8881-6d728e4c029f",
            "3dc69d15-2d6a-4448-a2a2-6e06c05bbd2e",
            "fc71a110-4dd2-46c0-a92f-d2ec82aafeda",
            "49697531-cbdc-4e4b-a6aa-121b65dbf6ae",
            "5e627da7-9b2f-4c95-9d6d-a7b6f5dfaccb",
            "2f60abec-1334-4cf8-80b3-9bd8c6d25713",
            "8f1724a0-1bc6-4ece-88ee-a78448e262cc",
            "49ea91d2-6253-4b7f-a996-de2608fd3999"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d489851e-d957-4100-808c-a66cac785a42",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "84626342-c97b-49a6-92a3-ed21b603a068",
              "parentUUID": "d489851e-d957-4100-808c-a66cac785a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "181cd6ed-6037-4304-8b7f-44f59d4029f2",
              "parentUUID": "d489851e-d957-4100-808c-a66cac785a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "0dc891d7-6a79-4c67-abf6-b1c541ca49ef",
              "parentUUID": "d489851e-d957-4100-808c-a66cac785a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "d8bd6a0f-1b02-4c4e-9682-df5fe4125125",
              "parentUUID": "d489851e-d957-4100-808c-a66cac785a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "69e37c5f-23e0-4198-b535-089b981de97f",
              "parentUUID": "d489851e-d957-4100-808c-a66cac785a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "db1d622a-9a38-4d8a-ae75-5b6ca8a2202b",
              "parentUUID": "d489851e-d957-4100-808c-a66cac785a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "7912df4f-8f14-4d82-be8e-e4c575ea3361",
              "parentUUID": "d489851e-d957-4100-808c-a66cac785a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "d6be9b6a-a6fc-4999-b438-7220bf1f7683",
              "parentUUID": "d489851e-d957-4100-808c-a66cac785a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "3f8d6a2b-26c7-4cda-8a2f-5262e18aadae",
              "parentUUID": "d489851e-d957-4100-808c-a66cac785a42",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "ca5a6aee-e27e-4a67-aa8e-b45c74a74354",
              "parentUUID": "d489851e-d957-4100-808c-a66cac785a42",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84626342-c97b-49a6-92a3-ed21b603a068",
            "181cd6ed-6037-4304-8b7f-44f59d4029f2",
            "0dc891d7-6a79-4c67-abf6-b1c541ca49ef",
            "d8bd6a0f-1b02-4c4e-9682-df5fe4125125",
            "69e37c5f-23e0-4198-b535-089b981de97f",
            "db1d622a-9a38-4d8a-ae75-5b6ca8a2202b",
            "7912df4f-8f14-4d82-be8e-e4c575ea3361",
            "d6be9b6a-a6fc-4999-b438-7220bf1f7683",
            "3f8d6a2b-26c7-4cda-8a2f-5262e18aadae",
            "ca5a6aee-e27e-4a67-aa8e-b45c74a74354"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "dbfa354f-e873-41cd-b17c-8fbf03b2ca94",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "50f69d00-cc90-45b9-af18-3a8bcd1c93f2",
              "parentUUID": "dbfa354f-e873-41cd-b17c-8fbf03b2ca94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "516e72d8-5c02-4f4b-a20f-9bdf6b1a3df4",
              "parentUUID": "dbfa354f-e873-41cd-b17c-8fbf03b2ca94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "22bc48a2-5b79-4c79-b960-c6ba062fabc8",
              "parentUUID": "dbfa354f-e873-41cd-b17c-8fbf03b2ca94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "98e732da-d69b-4c9a-9b84-46ef5c65688e",
              "parentUUID": "dbfa354f-e873-41cd-b17c-8fbf03b2ca94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "5f905eae-156a-42b7-98e6-3cb99da6341e",
              "parentUUID": "dbfa354f-e873-41cd-b17c-8fbf03b2ca94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "b2a01804-f933-4c3a-90d8-015e91fc7bf2",
              "parentUUID": "dbfa354f-e873-41cd-b17c-8fbf03b2ca94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "54ab039a-b385-4d2b-ad2b-6c8ca0fca502",
              "parentUUID": "dbfa354f-e873-41cd-b17c-8fbf03b2ca94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "73e11ac9-cde5-47ed-bb7f-be13f1a8dbda",
              "parentUUID": "dbfa354f-e873-41cd-b17c-8fbf03b2ca94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "abaa157f-7d61-419f-9660-e2aadc17e314",
              "parentUUID": "dbfa354f-e873-41cd-b17c-8fbf03b2ca94",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "c867f8d1-099f-4e8f-a5d3-c748c9eb3199",
              "parentUUID": "dbfa354f-e873-41cd-b17c-8fbf03b2ca94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50f69d00-cc90-45b9-af18-3a8bcd1c93f2",
            "516e72d8-5c02-4f4b-a20f-9bdf6b1a3df4",
            "22bc48a2-5b79-4c79-b960-c6ba062fabc8",
            "98e732da-d69b-4c9a-9b84-46ef5c65688e",
            "5f905eae-156a-42b7-98e6-3cb99da6341e",
            "b2a01804-f933-4c3a-90d8-015e91fc7bf2",
            "54ab039a-b385-4d2b-ad2b-6c8ca0fca502",
            "73e11ac9-cde5-47ed-bb7f-be13f1a8dbda",
            "abaa157f-7d61-419f-9660-e2aadc17e314",
            "c867f8d1-099f-4e8f-a5d3-c748c9eb3199"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9b681c6f-53a3-4efb-8344-163658c7b5f6",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "4cd094f7-de2e-435c-91d8-36df637602f4",
              "parentUUID": "9b681c6f-53a3-4efb-8344-163658c7b5f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "758dbd20-07aa-4c4a-9eb9-7ffcb99d7d94",
              "parentUUID": "9b681c6f-53a3-4efb-8344-163658c7b5f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "ff86a469-1928-4aab-8e96-585fa97d4e0f",
              "parentUUID": "9b681c6f-53a3-4efb-8344-163658c7b5f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "c7423864-7825-4cd1-9bfd-df8061b6aaf7",
              "parentUUID": "9b681c6f-53a3-4efb-8344-163658c7b5f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "e4682858-1a6a-4fe7-a5ee-c0121b550021",
              "parentUUID": "9b681c6f-53a3-4efb-8344-163658c7b5f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "f5bbb021-4973-4cb4-93a9-350d74d11c14",
              "parentUUID": "9b681c6f-53a3-4efb-8344-163658c7b5f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "49fa2f05-2a51-46e3-b001-165da225941e",
              "parentUUID": "9b681c6f-53a3-4efb-8344-163658c7b5f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "bcbc410b-5f37-4d12-9e3b-ad7a61bc5445",
              "parentUUID": "9b681c6f-53a3-4efb-8344-163658c7b5f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "7d45fab4-c7e0-4827-9391-3883e9ff3784",
              "parentUUID": "9b681c6f-53a3-4efb-8344-163658c7b5f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "f69b0fba-536a-4145-8615-b661c05d17f5",
              "parentUUID": "9b681c6f-53a3-4efb-8344-163658c7b5f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4cd094f7-de2e-435c-91d8-36df637602f4",
            "758dbd20-07aa-4c4a-9eb9-7ffcb99d7d94",
            "ff86a469-1928-4aab-8e96-585fa97d4e0f",
            "c7423864-7825-4cd1-9bfd-df8061b6aaf7",
            "e4682858-1a6a-4fe7-a5ee-c0121b550021",
            "f5bbb021-4973-4cb4-93a9-350d74d11c14",
            "49fa2f05-2a51-46e3-b001-165da225941e",
            "bcbc410b-5f37-4d12-9e3b-ad7a61bc5445",
            "7d45fab4-c7e0-4827-9391-3883e9ff3784",
            "f69b0fba-536a-4145-8615-b661c05d17f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "91487f38-5900-49ea-9069-e2ee1ecd0712",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "69ae0e3c-61c3-41c4-9458-568968bf1828",
              "parentUUID": "91487f38-5900-49ea-9069-e2ee1ecd0712",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "c34575be-6cd8-4155-9bae-1d713d4ef65b",
              "parentUUID": "91487f38-5900-49ea-9069-e2ee1ecd0712",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "c85498b4-e43f-47a4-b39d-22980b0cbf10",
              "parentUUID": "91487f38-5900-49ea-9069-e2ee1ecd0712",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "82160179-5a56-4e7c-8a9a-a6df29f7f2e8",
              "parentUUID": "91487f38-5900-49ea-9069-e2ee1ecd0712",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "1b916a0c-9f72-4ede-aeac-749d5398a83a",
              "parentUUID": "91487f38-5900-49ea-9069-e2ee1ecd0712",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "a4a0100a-d14b-48b7-aca6-1fcf5e545b1a",
              "parentUUID": "91487f38-5900-49ea-9069-e2ee1ecd0712",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "06e0134c-9bde-464b-aa96-e9a95423f2ed",
              "parentUUID": "91487f38-5900-49ea-9069-e2ee1ecd0712",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "eae3d579-8ad7-480f-84da-18681df0ea4e",
              "parentUUID": "91487f38-5900-49ea-9069-e2ee1ecd0712",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "e5ca1439-562e-4b40-b5ea-653c427694ef",
              "parentUUID": "91487f38-5900-49ea-9069-e2ee1ecd0712",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "9f39afe6-9924-4de5-968f-22840450409d",
              "parentUUID": "91487f38-5900-49ea-9069-e2ee1ecd0712",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "69ae0e3c-61c3-41c4-9458-568968bf1828",
            "c34575be-6cd8-4155-9bae-1d713d4ef65b",
            "c85498b4-e43f-47a4-b39d-22980b0cbf10",
            "82160179-5a56-4e7c-8a9a-a6df29f7f2e8",
            "1b916a0c-9f72-4ede-aeac-749d5398a83a",
            "a4a0100a-d14b-48b7-aca6-1fcf5e545b1a",
            "06e0134c-9bde-464b-aa96-e9a95423f2ed",
            "eae3d579-8ad7-480f-84da-18681df0ea4e",
            "e5ca1439-562e-4b40-b5ea-653c427694ef",
            "9f39afe6-9924-4de5-968f-22840450409d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "cef20fda-f8d4-4f15-a3cc-db06940ada48",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "9b578e4d-142c-4212-8d65-10eebae73c23",
              "parentUUID": "cef20fda-f8d4-4f15-a3cc-db06940ada48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "6daa2501-e470-44b0-bf18-6bebe4463557",
              "parentUUID": "cef20fda-f8d4-4f15-a3cc-db06940ada48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "1a26e3cd-07ce-4d97-9830-488b3f3c909b",
              "parentUUID": "cef20fda-f8d4-4f15-a3cc-db06940ada48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "8c786201-4cb8-43f0-941b-13c09da560b0",
              "parentUUID": "cef20fda-f8d4-4f15-a3cc-db06940ada48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "0e140f1b-6c4f-44e8-8c4b-6a16997cad65",
              "parentUUID": "cef20fda-f8d4-4f15-a3cc-db06940ada48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "27e5002a-f994-4bdf-ab0a-c916553f3a2d",
              "parentUUID": "cef20fda-f8d4-4f15-a3cc-db06940ada48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "fd4fc8c6-78cb-4f45-b062-a7dbc663d00d",
              "parentUUID": "cef20fda-f8d4-4f15-a3cc-db06940ada48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "62a3151d-2cf4-4eba-b06d-2d7e7169d3a6",
              "parentUUID": "cef20fda-f8d4-4f15-a3cc-db06940ada48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "33465f65-de3d-4548-bec3-a4d1a6df7dfa",
              "parentUUID": "cef20fda-f8d4-4f15-a3cc-db06940ada48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "d164efc0-6b37-401a-9068-fa66828ca92c",
              "parentUUID": "cef20fda-f8d4-4f15-a3cc-db06940ada48",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b578e4d-142c-4212-8d65-10eebae73c23",
            "6daa2501-e470-44b0-bf18-6bebe4463557",
            "1a26e3cd-07ce-4d97-9830-488b3f3c909b",
            "8c786201-4cb8-43f0-941b-13c09da560b0",
            "0e140f1b-6c4f-44e8-8c4b-6a16997cad65",
            "27e5002a-f994-4bdf-ab0a-c916553f3a2d",
            "fd4fc8c6-78cb-4f45-b062-a7dbc663d00d",
            "62a3151d-2cf4-4eba-b06d-2d7e7169d3a6",
            "33465f65-de3d-4548-bec3-a4d1a6df7dfa",
            "d164efc0-6b37-401a-9068-fa66828ca92c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "96ab664a-3339-47a6-84e7-2754784a9dd7",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "db2e0f84-6909-4c70-abcc-9abcdcae0a85",
              "parentUUID": "96ab664a-3339-47a6-84e7-2754784a9dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "cf05d349-f8c8-464b-8b75-5f6f8854609f",
              "parentUUID": "96ab664a-3339-47a6-84e7-2754784a9dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "144c01a1-b60c-4599-bdef-8a18f91da7e9",
              "parentUUID": "96ab664a-3339-47a6-84e7-2754784a9dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "27f5ecac-35e8-4b54-a9b3-4b6448d8cf50",
              "parentUUID": "96ab664a-3339-47a6-84e7-2754784a9dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "3d634484-1f9b-48b4-a401-612ca5fef8f6",
              "parentUUID": "96ab664a-3339-47a6-84e7-2754784a9dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "9fe82787-6706-4aa6-a997-38f280d910fe",
              "parentUUID": "96ab664a-3339-47a6-84e7-2754784a9dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "c3ee4e24-9b9d-4eed-bc6c-2e759c72efe6",
              "parentUUID": "96ab664a-3339-47a6-84e7-2754784a9dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "c7d898ac-c549-4202-b2b0-2d04d7f56b77",
              "parentUUID": "96ab664a-3339-47a6-84e7-2754784a9dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "6c1a091e-54bf-4667-9206-a23e8cdcab3b",
              "parentUUID": "96ab664a-3339-47a6-84e7-2754784a9dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "a4494bbd-55ed-46b5-a42e-6f28ff882737",
              "parentUUID": "96ab664a-3339-47a6-84e7-2754784a9dd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db2e0f84-6909-4c70-abcc-9abcdcae0a85",
            "cf05d349-f8c8-464b-8b75-5f6f8854609f",
            "144c01a1-b60c-4599-bdef-8a18f91da7e9",
            "27f5ecac-35e8-4b54-a9b3-4b6448d8cf50",
            "3d634484-1f9b-48b4-a401-612ca5fef8f6",
            "9fe82787-6706-4aa6-a997-38f280d910fe",
            "c3ee4e24-9b9d-4eed-bc6c-2e759c72efe6",
            "c7d898ac-c549-4202-b2b0-2d04d7f56b77",
            "6c1a091e-54bf-4667-9206-a23e8cdcab3b",
            "a4494bbd-55ed-46b5-a42e-6f28ff882737"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c8deebce-ddc8-492f-b9be-f6bcf34d0c9e",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "74275bb7-6cc1-481c-b418-a67df8745949",
              "parentUUID": "c8deebce-ddc8-492f-b9be-f6bcf34d0c9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "7387f7f2-cd3a-42a3-894c-e9e507eba951",
              "parentUUID": "c8deebce-ddc8-492f-b9be-f6bcf34d0c9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "5532a251-d110-4531-b1dc-8f34ac15853a",
              "parentUUID": "c8deebce-ddc8-492f-b9be-f6bcf34d0c9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "df535708-d4f6-4b6a-a9f5-5109183c2db0",
              "parentUUID": "c8deebce-ddc8-492f-b9be-f6bcf34d0c9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "415f4ae5-93ef-4bb0-a130-f99e7e897db8",
              "parentUUID": "c8deebce-ddc8-492f-b9be-f6bcf34d0c9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "45c7dfcd-8147-40ed-9643-7cdbfe59e29a",
              "parentUUID": "c8deebce-ddc8-492f-b9be-f6bcf34d0c9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "5451e7c9-4e75-4f20-adf9-c225d364e3af",
              "parentUUID": "c8deebce-ddc8-492f-b9be-f6bcf34d0c9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "19d5ea8c-3a8e-4d69-a34e-b460c4e18893",
              "parentUUID": "c8deebce-ddc8-492f-b9be-f6bcf34d0c9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "2f536e7f-f1e0-4059-bfc3-e677f59829be",
              "parentUUID": "c8deebce-ddc8-492f-b9be-f6bcf34d0c9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "5ea7ff06-d525-484d-92e6-32111ec28059",
              "parentUUID": "c8deebce-ddc8-492f-b9be-f6bcf34d0c9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74275bb7-6cc1-481c-b418-a67df8745949",
            "7387f7f2-cd3a-42a3-894c-e9e507eba951",
            "5532a251-d110-4531-b1dc-8f34ac15853a",
            "df535708-d4f6-4b6a-a9f5-5109183c2db0",
            "415f4ae5-93ef-4bb0-a130-f99e7e897db8",
            "45c7dfcd-8147-40ed-9643-7cdbfe59e29a",
            "5451e7c9-4e75-4f20-adf9-c225d364e3af",
            "19d5ea8c-3a8e-4d69-a34e-b460c4e18893",
            "2f536e7f-f1e0-4059-bfc3-e677f59829be",
            "5ea7ff06-d525-484d-92e6-32111ec28059"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9eefa835-1b2f-4151-a31d-bd3f23802f13",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "a8c05a62-2660-4bc3-b11d-94480acfe810",
              "parentUUID": "9eefa835-1b2f-4151-a31d-bd3f23802f13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "0a175d5a-63a1-4b70-a1bd-be317957e88f",
              "parentUUID": "9eefa835-1b2f-4151-a31d-bd3f23802f13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "a6d2891e-bb97-4da4-baa3-9ac785a1654a",
              "parentUUID": "9eefa835-1b2f-4151-a31d-bd3f23802f13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "290c37fa-669e-49e3-82a6-64576561aae3",
              "parentUUID": "9eefa835-1b2f-4151-a31d-bd3f23802f13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "0ba7bb5f-d53f-4532-8ea8-21848192ab9e",
              "parentUUID": "9eefa835-1b2f-4151-a31d-bd3f23802f13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "21acdffd-5606-48f3-bac9-e55cfccbee21",
              "parentUUID": "9eefa835-1b2f-4151-a31d-bd3f23802f13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "07a57c69-ce02-46cc-9ef2-0e40448125d5",
              "parentUUID": "9eefa835-1b2f-4151-a31d-bd3f23802f13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "87514981-e80e-4c7e-90ff-86d2d4cfd5e2",
              "parentUUID": "9eefa835-1b2f-4151-a31d-bd3f23802f13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "2b7cc6a6-a216-4d37-a3e7-b1132edc3ac4",
              "parentUUID": "9eefa835-1b2f-4151-a31d-bd3f23802f13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "6220c9ba-211a-4c3b-b15b-6867ba4da6b7",
              "parentUUID": "9eefa835-1b2f-4151-a31d-bd3f23802f13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8c05a62-2660-4bc3-b11d-94480acfe810",
            "0a175d5a-63a1-4b70-a1bd-be317957e88f",
            "a6d2891e-bb97-4da4-baa3-9ac785a1654a",
            "290c37fa-669e-49e3-82a6-64576561aae3",
            "0ba7bb5f-d53f-4532-8ea8-21848192ab9e",
            "21acdffd-5606-48f3-bac9-e55cfccbee21",
            "07a57c69-ce02-46cc-9ef2-0e40448125d5",
            "87514981-e80e-4c7e-90ff-86d2d4cfd5e2",
            "2b7cc6a6-a216-4d37-a3e7-b1132edc3ac4",
            "6220c9ba-211a-4c3b-b15b-6867ba4da6b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8e5ba821-8e82-4bb8-bd37-f1a75e991d2b",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "6f24d819-2b59-40a2-b289-25bd8c74635d",
              "parentUUID": "8e5ba821-8e82-4bb8-bd37-f1a75e991d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "1f195f57-4e82-4974-ab81-b382b2c6e23e",
              "parentUUID": "8e5ba821-8e82-4bb8-bd37-f1a75e991d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "b847193e-d225-46dd-89c6-92d18c7f39f6",
              "parentUUID": "8e5ba821-8e82-4bb8-bd37-f1a75e991d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "64612655-17af-47f3-b054-371acfe38f01",
              "parentUUID": "8e5ba821-8e82-4bb8-bd37-f1a75e991d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "4e403adc-eabb-4c8e-bd14-0636823fa3e6",
              "parentUUID": "8e5ba821-8e82-4bb8-bd37-f1a75e991d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "21daa0f3-4175-4db5-946c-2a5f182772a6",
              "parentUUID": "8e5ba821-8e82-4bb8-bd37-f1a75e991d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "0b087c93-acae-4699-ada9-7ded13155857",
              "parentUUID": "8e5ba821-8e82-4bb8-bd37-f1a75e991d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "ddbaf4be-260d-48c5-bb95-55977e85154a",
              "parentUUID": "8e5ba821-8e82-4bb8-bd37-f1a75e991d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "47c686f6-b84b-462b-9ba7-78a8e66dae40",
              "parentUUID": "8e5ba821-8e82-4bb8-bd37-f1a75e991d2b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "357a248f-4108-49e0-a632-b6b6380d6c12",
              "parentUUID": "8e5ba821-8e82-4bb8-bd37-f1a75e991d2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f24d819-2b59-40a2-b289-25bd8c74635d",
            "1f195f57-4e82-4974-ab81-b382b2c6e23e",
            "b847193e-d225-46dd-89c6-92d18c7f39f6",
            "64612655-17af-47f3-b054-371acfe38f01",
            "4e403adc-eabb-4c8e-bd14-0636823fa3e6",
            "21daa0f3-4175-4db5-946c-2a5f182772a6",
            "0b087c93-acae-4699-ada9-7ded13155857",
            "ddbaf4be-260d-48c5-bb95-55977e85154a",
            "47c686f6-b84b-462b-9ba7-78a8e66dae40",
            "357a248f-4108-49e0-a632-b6b6380d6c12"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "de86b602-d0cd-46d8-9119-132561aae2e0",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "d133291c-77cf-4ee6-8103-0f0795f3e8a7",
              "parentUUID": "de86b602-d0cd-46d8-9119-132561aae2e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "93871ae2-eb2d-4677-ac89-57a4d348070a",
              "parentUUID": "de86b602-d0cd-46d8-9119-132561aae2e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "12598ac5-c2e6-46a7-9672-e5598efe219c",
              "parentUUID": "de86b602-d0cd-46d8-9119-132561aae2e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "57fcb193-e5e4-47fa-b32c-bf5e9091ea8c",
              "parentUUID": "de86b602-d0cd-46d8-9119-132561aae2e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "ca79f9d8-2b5b-4d94-8055-6ff641e76c8f",
              "parentUUID": "de86b602-d0cd-46d8-9119-132561aae2e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "66284d13-69f9-4b30-be56-2e6edc6066ba",
              "parentUUID": "de86b602-d0cd-46d8-9119-132561aae2e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "6488e73f-55e5-4144-97be-0c22805cce83",
              "parentUUID": "de86b602-d0cd-46d8-9119-132561aae2e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "6894fa13-5b74-4571-8a21-7f901a09d669",
              "parentUUID": "de86b602-d0cd-46d8-9119-132561aae2e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "583acf42-3454-4fd0-9b44-14df0e04f281",
              "parentUUID": "de86b602-d0cd-46d8-9119-132561aae2e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "aa486227-7fb5-41af-93bb-e6359036742a",
              "parentUUID": "de86b602-d0cd-46d8-9119-132561aae2e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d133291c-77cf-4ee6-8103-0f0795f3e8a7",
            "93871ae2-eb2d-4677-ac89-57a4d348070a",
            "12598ac5-c2e6-46a7-9672-e5598efe219c",
            "57fcb193-e5e4-47fa-b32c-bf5e9091ea8c",
            "ca79f9d8-2b5b-4d94-8055-6ff641e76c8f",
            "66284d13-69f9-4b30-be56-2e6edc6066ba",
            "6488e73f-55e5-4144-97be-0c22805cce83",
            "6894fa13-5b74-4571-8a21-7f901a09d669",
            "583acf42-3454-4fd0-9b44-14df0e04f281",
            "aa486227-7fb5-41af-93bb-e6359036742a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "0278e32c-30a1-4e2d-9081-0f4878d79645",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "f930ae86-778c-4cd4-8b01-abbb950275fb",
              "parentUUID": "0278e32c-30a1-4e2d-9081-0f4878d79645",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "53c4331f-896a-4f1e-bb6d-e97be4e1ad11",
              "parentUUID": "0278e32c-30a1-4e2d-9081-0f4878d79645",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "cc7b0abf-aff2-477d-9757-b4c69b7a8f28",
              "parentUUID": "0278e32c-30a1-4e2d-9081-0f4878d79645",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "9074f1bd-eb17-4fe9-aa06-6dcd14ffe926",
              "parentUUID": "0278e32c-30a1-4e2d-9081-0f4878d79645",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "f02c4584-a091-4074-a112-7b53f751f24e",
              "parentUUID": "0278e32c-30a1-4e2d-9081-0f4878d79645",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "b15dd1bf-bbdd-4faf-81d4-5faea83b7515",
              "parentUUID": "0278e32c-30a1-4e2d-9081-0f4878d79645",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "117a6532-8bb9-4e43-abb5-620adbfc4a95",
              "parentUUID": "0278e32c-30a1-4e2d-9081-0f4878d79645",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "5ffc7d4b-2b96-4fd0-85e3-a3794cdb1acd",
              "parentUUID": "0278e32c-30a1-4e2d-9081-0f4878d79645",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "54a9ca75-bdc7-4a81-8f51-9700844487ea",
              "parentUUID": "0278e32c-30a1-4e2d-9081-0f4878d79645",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "7603a191-e5b7-4874-8b62-8d732db02506",
              "parentUUID": "0278e32c-30a1-4e2d-9081-0f4878d79645",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f930ae86-778c-4cd4-8b01-abbb950275fb",
            "53c4331f-896a-4f1e-bb6d-e97be4e1ad11",
            "cc7b0abf-aff2-477d-9757-b4c69b7a8f28",
            "9074f1bd-eb17-4fe9-aa06-6dcd14ffe926",
            "f02c4584-a091-4074-a112-7b53f751f24e",
            "b15dd1bf-bbdd-4faf-81d4-5faea83b7515",
            "117a6532-8bb9-4e43-abb5-620adbfc4a95",
            "5ffc7d4b-2b96-4fd0-85e3-a3794cdb1acd",
            "54a9ca75-bdc7-4a81-8f51-9700844487ea",
            "7603a191-e5b7-4874-8b62-8d732db02506"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f823c19b-7819-42ee-acd2-0ee419b197f4",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "819327e6-8e38-40f5-96e8-e2cc165ea7c4",
              "parentUUID": "f823c19b-7819-42ee-acd2-0ee419b197f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "d43f3a4a-de2e-48f7-8e26-59702ab55c6f",
              "parentUUID": "f823c19b-7819-42ee-acd2-0ee419b197f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "e2c1a4e1-c497-4136-b8ce-27f4d2013cb9",
              "parentUUID": "f823c19b-7819-42ee-acd2-0ee419b197f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "833886bc-d777-4638-97f1-7d0b900fbdb9",
              "parentUUID": "f823c19b-7819-42ee-acd2-0ee419b197f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "880441da-316f-4d17-807a-36b423d87378",
              "parentUUID": "f823c19b-7819-42ee-acd2-0ee419b197f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "43cc373b-91e9-44af-9d87-fa3d987c062e",
              "parentUUID": "f823c19b-7819-42ee-acd2-0ee419b197f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "0eb6f532-f6bf-48a9-8c69-6f97b0222bd1",
              "parentUUID": "f823c19b-7819-42ee-acd2-0ee419b197f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "15105b20-fd5c-481b-ba43-8a0312036157",
              "parentUUID": "f823c19b-7819-42ee-acd2-0ee419b197f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "9f086bed-a0da-4c63-a272-9f4da0743aad",
              "parentUUID": "f823c19b-7819-42ee-acd2-0ee419b197f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "ef811cf6-88a3-467f-93e1-c138830f9590",
              "parentUUID": "f823c19b-7819-42ee-acd2-0ee419b197f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "819327e6-8e38-40f5-96e8-e2cc165ea7c4",
            "d43f3a4a-de2e-48f7-8e26-59702ab55c6f",
            "e2c1a4e1-c497-4136-b8ce-27f4d2013cb9",
            "833886bc-d777-4638-97f1-7d0b900fbdb9",
            "880441da-316f-4d17-807a-36b423d87378",
            "43cc373b-91e9-44af-9d87-fa3d987c062e",
            "0eb6f532-f6bf-48a9-8c69-6f97b0222bd1",
            "15105b20-fd5c-481b-ba43-8a0312036157",
            "9f086bed-a0da-4c63-a272-9f4da0743aad",
            "ef811cf6-88a3-467f-93e1-c138830f9590"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "763a757d-f0fe-43d7-849c-8601ca22512f",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "16ff96f0-c985-43a4-be04-6d0c5ef7c343",
              "parentUUID": "763a757d-f0fe-43d7-849c-8601ca22512f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "267ec08f-e001-46b1-b9e8-f55cc9e24166",
              "parentUUID": "763a757d-f0fe-43d7-849c-8601ca22512f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "85378d8b-6d3d-400d-a3a8-995dffd847aa",
              "parentUUID": "763a757d-f0fe-43d7-849c-8601ca22512f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "e897d580-632e-49b0-ba63-af4f951e891d",
              "parentUUID": "763a757d-f0fe-43d7-849c-8601ca22512f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "0f3f5c1d-d168-4c1d-a6f2-4e059aa0c6ff",
              "parentUUID": "763a757d-f0fe-43d7-849c-8601ca22512f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "e01a265f-9270-4a2a-b2ea-c945dacc0c19",
              "parentUUID": "763a757d-f0fe-43d7-849c-8601ca22512f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "2f42106d-cbc1-4555-a60d-fc5feb1b8c9d",
              "parentUUID": "763a757d-f0fe-43d7-849c-8601ca22512f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "ba1da868-bb48-4c09-8a9f-759cb458220b",
              "parentUUID": "763a757d-f0fe-43d7-849c-8601ca22512f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "380edfc5-5b80-4368-81bb-2b840d923bce",
              "parentUUID": "763a757d-f0fe-43d7-849c-8601ca22512f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "1a2c0b9f-0f2f-48cc-8979-55d8e298eb31",
              "parentUUID": "763a757d-f0fe-43d7-849c-8601ca22512f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16ff96f0-c985-43a4-be04-6d0c5ef7c343",
            "267ec08f-e001-46b1-b9e8-f55cc9e24166",
            "85378d8b-6d3d-400d-a3a8-995dffd847aa",
            "e897d580-632e-49b0-ba63-af4f951e891d",
            "0f3f5c1d-d168-4c1d-a6f2-4e059aa0c6ff",
            "e01a265f-9270-4a2a-b2ea-c945dacc0c19",
            "2f42106d-cbc1-4555-a60d-fc5feb1b8c9d",
            "ba1da868-bb48-4c09-8a9f-759cb458220b",
            "380edfc5-5b80-4368-81bb-2b840d923bce",
            "1a2c0b9f-0f2f-48cc-8979-55d8e298eb31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "fbe2ebad-af77-4815-a9c9-8a7b606f8f7b",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "a254e1a5-fd82-4743-9ca9-c4e03e8ba9d1",
              "parentUUID": "fbe2ebad-af77-4815-a9c9-8a7b606f8f7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "28897a6c-c6bb-45fa-8f35-0e09b0fa0a4a",
              "parentUUID": "fbe2ebad-af77-4815-a9c9-8a7b606f8f7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "39aca1c9-5a55-417d-a80a-4a2f99492cea",
              "parentUUID": "fbe2ebad-af77-4815-a9c9-8a7b606f8f7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "0c29d181-8820-4e8b-b6e0-100e29da0074",
              "parentUUID": "fbe2ebad-af77-4815-a9c9-8a7b606f8f7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "731e7ac3-905f-48ef-ba81-b7e773ee15e0",
              "parentUUID": "fbe2ebad-af77-4815-a9c9-8a7b606f8f7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "b3339a89-3c05-4028-b418-81cbcd85b91d",
              "parentUUID": "fbe2ebad-af77-4815-a9c9-8a7b606f8f7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "36f375a2-74e8-4e19-9c6d-f95e37f57df9",
              "parentUUID": "fbe2ebad-af77-4815-a9c9-8a7b606f8f7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "1247ae6b-b4bd-4656-a838-62934b4cee76",
              "parentUUID": "fbe2ebad-af77-4815-a9c9-8a7b606f8f7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "c58109d3-079d-46ac-9376-349dfb263dfc",
              "parentUUID": "fbe2ebad-af77-4815-a9c9-8a7b606f8f7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "ce7ca1e2-45f0-456b-a51e-ef0d5f1e2fdd",
              "parentUUID": "fbe2ebad-af77-4815-a9c9-8a7b606f8f7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a254e1a5-fd82-4743-9ca9-c4e03e8ba9d1",
            "28897a6c-c6bb-45fa-8f35-0e09b0fa0a4a",
            "39aca1c9-5a55-417d-a80a-4a2f99492cea",
            "0c29d181-8820-4e8b-b6e0-100e29da0074",
            "731e7ac3-905f-48ef-ba81-b7e773ee15e0",
            "b3339a89-3c05-4028-b418-81cbcd85b91d",
            "36f375a2-74e8-4e19-9c6d-f95e37f57df9",
            "1247ae6b-b4bd-4656-a838-62934b4cee76",
            "c58109d3-079d-46ac-9376-349dfb263dfc",
            "ce7ca1e2-45f0-456b-a51e-ef0d5f1e2fdd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "0894df13-f44a-4f1a-9f05-5a782305f934",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "543c1efc-3c99-4694-8795-e15c36411e60",
              "parentUUID": "0894df13-f44a-4f1a-9f05-5a782305f934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "67a8d175-14f2-47e3-84a3-93f2b2ebe462",
              "parentUUID": "0894df13-f44a-4f1a-9f05-5a782305f934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "11825034-ad92-43ea-89a3-1104956ccd25",
              "parentUUID": "0894df13-f44a-4f1a-9f05-5a782305f934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "55bf0029-a3c2-47bc-a004-ff9b27ae3fe8",
              "parentUUID": "0894df13-f44a-4f1a-9f05-5a782305f934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "1b16a5f2-4f1f-4237-85f9-f7ade804bb14",
              "parentUUID": "0894df13-f44a-4f1a-9f05-5a782305f934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "c06dd468-944d-4f18-8a0b-ef76ec58e00f",
              "parentUUID": "0894df13-f44a-4f1a-9f05-5a782305f934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "76419e32-2803-4d51-9ff2-7969bb729d15",
              "parentUUID": "0894df13-f44a-4f1a-9f05-5a782305f934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "b9a1b0df-af00-41c8-a840-6ece1d85f8ca",
              "parentUUID": "0894df13-f44a-4f1a-9f05-5a782305f934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "9f3499b8-ffb6-483c-b4ef-2aacfb8dc573",
              "parentUUID": "0894df13-f44a-4f1a-9f05-5a782305f934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "12c99052-bc7a-474a-ae4f-4f828c1cd466",
              "parentUUID": "0894df13-f44a-4f1a-9f05-5a782305f934",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "543c1efc-3c99-4694-8795-e15c36411e60",
            "67a8d175-14f2-47e3-84a3-93f2b2ebe462",
            "11825034-ad92-43ea-89a3-1104956ccd25",
            "55bf0029-a3c2-47bc-a004-ff9b27ae3fe8",
            "1b16a5f2-4f1f-4237-85f9-f7ade804bb14",
            "c06dd468-944d-4f18-8a0b-ef76ec58e00f",
            "76419e32-2803-4d51-9ff2-7969bb729d15",
            "b9a1b0df-af00-41c8-a840-6ece1d85f8ca",
            "9f3499b8-ffb6-483c-b4ef-2aacfb8dc573",
            "12c99052-bc7a-474a-ae4f-4f828c1cd466"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a34ef590-e39a-4741-858f-966bd32cf171",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "04b105b6-9837-4576-8eb8-d8ccfad6d113",
              "parentUUID": "a34ef590-e39a-4741-858f-966bd32cf171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "f82767cd-7981-4621-b82e-5f109c7010c0",
              "parentUUID": "a34ef590-e39a-4741-858f-966bd32cf171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "0a30daf6-51c7-453f-bea0-90c4cf8b5ee2",
              "parentUUID": "a34ef590-e39a-4741-858f-966bd32cf171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "3c680fd3-c7a5-4e78-b7e6-702277305657",
              "parentUUID": "a34ef590-e39a-4741-858f-966bd32cf171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "f5d2d157-372e-46a8-8074-7d445675634a",
              "parentUUID": "a34ef590-e39a-4741-858f-966bd32cf171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "1ce54da2-ce07-4b92-8d61-99fb57eae714",
              "parentUUID": "a34ef590-e39a-4741-858f-966bd32cf171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "7bb27b3a-a5bd-481e-92bf-52d136dfcf4d",
              "parentUUID": "a34ef590-e39a-4741-858f-966bd32cf171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "bcffe600-b567-4bae-93f1-896fbd3d482c",
              "parentUUID": "a34ef590-e39a-4741-858f-966bd32cf171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "01957b39-3a24-41bd-a070-fb931d05f943",
              "parentUUID": "a34ef590-e39a-4741-858f-966bd32cf171",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "93f1b02c-0d72-446a-bf59-642bc3b6cbbe",
              "parentUUID": "a34ef590-e39a-4741-858f-966bd32cf171",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04b105b6-9837-4576-8eb8-d8ccfad6d113",
            "f82767cd-7981-4621-b82e-5f109c7010c0",
            "0a30daf6-51c7-453f-bea0-90c4cf8b5ee2",
            "3c680fd3-c7a5-4e78-b7e6-702277305657",
            "f5d2d157-372e-46a8-8074-7d445675634a",
            "1ce54da2-ce07-4b92-8d61-99fb57eae714",
            "7bb27b3a-a5bd-481e-92bf-52d136dfcf4d",
            "bcffe600-b567-4bae-93f1-896fbd3d482c",
            "01957b39-3a24-41bd-a070-fb931d05f943",
            "93f1b02c-0d72-446a-bf59-642bc3b6cbbe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "33ac7cd1-850c-4a04-9273-eb867ea70157",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "1e98c316-e8ae-421f-b757-d154987b5894",
              "parentUUID": "33ac7cd1-850c-4a04-9273-eb867ea70157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "e45aab23-7a0a-4898-af23-de1cd402b208",
              "parentUUID": "33ac7cd1-850c-4a04-9273-eb867ea70157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "ff6daf6b-44f4-4526-8a35-0bfaefb8b83a",
              "parentUUID": "33ac7cd1-850c-4a04-9273-eb867ea70157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "75afd0c2-c620-4fa8-93e7-f21192dfcdfc",
              "parentUUID": "33ac7cd1-850c-4a04-9273-eb867ea70157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "44bfb63e-54d8-4745-8a4b-6badbbd69f84",
              "parentUUID": "33ac7cd1-850c-4a04-9273-eb867ea70157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "5ce053ca-1969-432f-b695-1cac6899fec7",
              "parentUUID": "33ac7cd1-850c-4a04-9273-eb867ea70157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "908feeee-e2ad-4e73-9771-c401acf5a3fc",
              "parentUUID": "33ac7cd1-850c-4a04-9273-eb867ea70157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "2aee20c2-fa8e-4959-8d85-d2dea3a9cb42",
              "parentUUID": "33ac7cd1-850c-4a04-9273-eb867ea70157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "f513e252-f89e-49ab-98ed-e7e88bd2b4c0",
              "parentUUID": "33ac7cd1-850c-4a04-9273-eb867ea70157",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "3f910db7-840c-4f05-b6c5-e3c28d2107f6",
              "parentUUID": "33ac7cd1-850c-4a04-9273-eb867ea70157",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e98c316-e8ae-421f-b757-d154987b5894",
            "e45aab23-7a0a-4898-af23-de1cd402b208",
            "ff6daf6b-44f4-4526-8a35-0bfaefb8b83a",
            "75afd0c2-c620-4fa8-93e7-f21192dfcdfc",
            "44bfb63e-54d8-4745-8a4b-6badbbd69f84",
            "5ce053ca-1969-432f-b695-1cac6899fec7",
            "908feeee-e2ad-4e73-9771-c401acf5a3fc",
            "2aee20c2-fa8e-4959-8d85-d2dea3a9cb42",
            "f513e252-f89e-49ab-98ed-e7e88bd2b4c0",
            "3f910db7-840c-4f05-b6c5-e3c28d2107f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "bf08e8f4-24d4-41d3-8944-ad880dd004bf",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "36de6ad1-7934-43a9-bcc8-6c4759a3298f",
              "parentUUID": "bf08e8f4-24d4-41d3-8944-ad880dd004bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "e4a69fd7-5d4d-4da9-b747-e777d509047d",
              "parentUUID": "bf08e8f4-24d4-41d3-8944-ad880dd004bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "c8b3fe4d-286c-4eb0-8379-200d02587e71",
              "parentUUID": "bf08e8f4-24d4-41d3-8944-ad880dd004bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "f504d3d8-357f-4b6c-949a-e0aa8f2d884b",
              "parentUUID": "bf08e8f4-24d4-41d3-8944-ad880dd004bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "f6277097-4c37-4b85-a39b-7ff045d8969b",
              "parentUUID": "bf08e8f4-24d4-41d3-8944-ad880dd004bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "85ad42ed-0764-47db-b472-a463932656d9",
              "parentUUID": "bf08e8f4-24d4-41d3-8944-ad880dd004bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "a5c6f1a4-4f70-453b-a933-cedfb4bb62d0",
              "parentUUID": "bf08e8f4-24d4-41d3-8944-ad880dd004bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "312cb081-ef2c-4dca-a273-be836c54386a",
              "parentUUID": "bf08e8f4-24d4-41d3-8944-ad880dd004bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "4d7e5386-3f1b-433f-ac29-fc388b848102",
              "parentUUID": "bf08e8f4-24d4-41d3-8944-ad880dd004bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "722dac67-5b00-460a-bef7-9b09b0971ce7",
              "parentUUID": "bf08e8f4-24d4-41d3-8944-ad880dd004bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36de6ad1-7934-43a9-bcc8-6c4759a3298f",
            "e4a69fd7-5d4d-4da9-b747-e777d509047d",
            "c8b3fe4d-286c-4eb0-8379-200d02587e71",
            "f504d3d8-357f-4b6c-949a-e0aa8f2d884b",
            "f6277097-4c37-4b85-a39b-7ff045d8969b",
            "85ad42ed-0764-47db-b472-a463932656d9",
            "a5c6f1a4-4f70-453b-a933-cedfb4bb62d0",
            "312cb081-ef2c-4dca-a273-be836c54386a",
            "4d7e5386-3f1b-433f-ac29-fc388b848102",
            "722dac67-5b00-460a-bef7-9b09b0971ce7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e91ebe7b-7bb4-4dd4-9bae-d701dc04255f",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "fb9254f4-6eb6-4d0d-bfe1-c2d7dce36e8d",
              "parentUUID": "e91ebe7b-7bb4-4dd4-9bae-d701dc04255f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "913b34d0-995c-4111-8bc9-8e19895786aa",
              "parentUUID": "e91ebe7b-7bb4-4dd4-9bae-d701dc04255f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "2f5a04c2-a55a-4c17-9d64-4a1a79a587d3",
              "parentUUID": "e91ebe7b-7bb4-4dd4-9bae-d701dc04255f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "d0de9ff4-d590-4ed5-a51c-37f9255d0310",
              "parentUUID": "e91ebe7b-7bb4-4dd4-9bae-d701dc04255f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "4a495829-56cc-4063-aa9c-9473a2598cc8",
              "parentUUID": "e91ebe7b-7bb4-4dd4-9bae-d701dc04255f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "5462d168-a1f1-4c86-9f98-54e083c21241",
              "parentUUID": "e91ebe7b-7bb4-4dd4-9bae-d701dc04255f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "b66427e2-57aa-4a9d-ab49-ce678c1e7d9e",
              "parentUUID": "e91ebe7b-7bb4-4dd4-9bae-d701dc04255f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "92e82c41-53dc-44ef-9744-d9ec1624cfb4",
              "parentUUID": "e91ebe7b-7bb4-4dd4-9bae-d701dc04255f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "5b7ef08a-ab60-47fa-b711-3f4e1d0e89ef",
              "parentUUID": "e91ebe7b-7bb4-4dd4-9bae-d701dc04255f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "302c5880-7452-444d-884c-81def5390045",
              "parentUUID": "e91ebe7b-7bb4-4dd4-9bae-d701dc04255f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb9254f4-6eb6-4d0d-bfe1-c2d7dce36e8d",
            "913b34d0-995c-4111-8bc9-8e19895786aa",
            "2f5a04c2-a55a-4c17-9d64-4a1a79a587d3",
            "d0de9ff4-d590-4ed5-a51c-37f9255d0310",
            "4a495829-56cc-4063-aa9c-9473a2598cc8",
            "5462d168-a1f1-4c86-9f98-54e083c21241",
            "b66427e2-57aa-4a9d-ab49-ce678c1e7d9e",
            "92e82c41-53dc-44ef-9744-d9ec1624cfb4",
            "5b7ef08a-ab60-47fa-b711-3f4e1d0e89ef",
            "302c5880-7452-444d-884c-81def5390045"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "94f3afd6-7784-4de3-8ead-f988e3f7b1e9",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "f17694b0-4c46-4a07-9fbf-fb4461f1fd39",
              "parentUUID": "94f3afd6-7784-4de3-8ead-f988e3f7b1e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "1f5a261c-7a94-4ee6-b897-5f2998622955",
              "parentUUID": "94f3afd6-7784-4de3-8ead-f988e3f7b1e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "df71b7ab-06fd-440b-9902-61805de49491",
              "parentUUID": "94f3afd6-7784-4de3-8ead-f988e3f7b1e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "2a3c9989-78e8-4d02-ab75-e5203722478d",
              "parentUUID": "94f3afd6-7784-4de3-8ead-f988e3f7b1e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "833f3741-3912-4f99-a2aa-f59eece57670",
              "parentUUID": "94f3afd6-7784-4de3-8ead-f988e3f7b1e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "6fc69943-5356-43af-93de-264cc1857852",
              "parentUUID": "94f3afd6-7784-4de3-8ead-f988e3f7b1e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "32b419c7-ebc4-46a8-bb38-d3d142d6197a",
              "parentUUID": "94f3afd6-7784-4de3-8ead-f988e3f7b1e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "d4963665-b5c8-4bdb-bb88-71fc55f381aa",
              "parentUUID": "94f3afd6-7784-4de3-8ead-f988e3f7b1e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "74b38677-4bba-40c7-bfaa-83802741ae61",
              "parentUUID": "94f3afd6-7784-4de3-8ead-f988e3f7b1e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "596bba94-06a4-46ea-a50a-8482402866f4",
              "parentUUID": "94f3afd6-7784-4de3-8ead-f988e3f7b1e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f17694b0-4c46-4a07-9fbf-fb4461f1fd39",
            "1f5a261c-7a94-4ee6-b897-5f2998622955",
            "df71b7ab-06fd-440b-9902-61805de49491",
            "2a3c9989-78e8-4d02-ab75-e5203722478d",
            "833f3741-3912-4f99-a2aa-f59eece57670",
            "6fc69943-5356-43af-93de-264cc1857852",
            "32b419c7-ebc4-46a8-bb38-d3d142d6197a",
            "d4963665-b5c8-4bdb-bb88-71fc55f381aa",
            "74b38677-4bba-40c7-bfaa-83802741ae61",
            "596bba94-06a4-46ea-a50a-8482402866f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1ce8f346-7416-4b91-88e5-4de909ab2e3f",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "dde4d26e-de20-43c4-a3c8-e37ab1a77730",
              "parentUUID": "1ce8f346-7416-4b91-88e5-4de909ab2e3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "44d78f27-b63a-4e80-940b-c8831884b7dd",
              "parentUUID": "1ce8f346-7416-4b91-88e5-4de909ab2e3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "4415df8c-c52d-4845-809b-3925703b9b1b",
              "parentUUID": "1ce8f346-7416-4b91-88e5-4de909ab2e3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "5c299845-7181-4a39-baa8-23fd2fbafb66",
              "parentUUID": "1ce8f346-7416-4b91-88e5-4de909ab2e3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "8b0f458a-ca34-46ee-b22a-bf15372a99c9",
              "parentUUID": "1ce8f346-7416-4b91-88e5-4de909ab2e3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "dc26b586-447f-4303-8519-13caa5a5a162",
              "parentUUID": "1ce8f346-7416-4b91-88e5-4de909ab2e3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "8fca7f70-7911-4aca-97c2-033084e935f6",
              "parentUUID": "1ce8f346-7416-4b91-88e5-4de909ab2e3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "f4ebc2c2-fa45-44ff-898e-febc5907f020",
              "parentUUID": "1ce8f346-7416-4b91-88e5-4de909ab2e3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "01ef170b-044b-4f00-b200-b9b675efd40a",
              "parentUUID": "1ce8f346-7416-4b91-88e5-4de909ab2e3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "936821ed-b0e8-4410-ac07-78da8f000018",
              "parentUUID": "1ce8f346-7416-4b91-88e5-4de909ab2e3f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dde4d26e-de20-43c4-a3c8-e37ab1a77730",
            "44d78f27-b63a-4e80-940b-c8831884b7dd",
            "4415df8c-c52d-4845-809b-3925703b9b1b",
            "5c299845-7181-4a39-baa8-23fd2fbafb66",
            "8b0f458a-ca34-46ee-b22a-bf15372a99c9",
            "dc26b586-447f-4303-8519-13caa5a5a162",
            "8fca7f70-7911-4aca-97c2-033084e935f6",
            "f4ebc2c2-fa45-44ff-898e-febc5907f020",
            "01ef170b-044b-4f00-b200-b9b675efd40a",
            "936821ed-b0e8-4410-ac07-78da8f000018"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8cca5867-41ed-4b36-a8f6-adcba96a111f",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "0ce15b2d-f222-42a3-9115-4d6dba4714d7",
              "parentUUID": "8cca5867-41ed-4b36-a8f6-adcba96a111f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "16275ef4-33a0-4cdd-947b-d7c9949e19eb",
              "parentUUID": "8cca5867-41ed-4b36-a8f6-adcba96a111f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "7495cb2a-74e1-487c-9949-1dfc0a762578",
              "parentUUID": "8cca5867-41ed-4b36-a8f6-adcba96a111f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "7d7c0edc-ad23-4f8f-8b09-fe14208a3186",
              "parentUUID": "8cca5867-41ed-4b36-a8f6-adcba96a111f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "6eab1e18-0c78-4881-8295-f07c1d1f0b6a",
              "parentUUID": "8cca5867-41ed-4b36-a8f6-adcba96a111f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "199492dd-b989-41a1-99c2-c4b0e1111d68",
              "parentUUID": "8cca5867-41ed-4b36-a8f6-adcba96a111f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "1d80db56-8bd6-4fc5-ab9b-958365f6535f",
              "parentUUID": "8cca5867-41ed-4b36-a8f6-adcba96a111f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "f3c5bb6b-f497-42a7-9306-75ef1bd13046",
              "parentUUID": "8cca5867-41ed-4b36-a8f6-adcba96a111f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "a621259f-9472-4c16-be91-39f00dfa4148",
              "parentUUID": "8cca5867-41ed-4b36-a8f6-adcba96a111f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "447699d7-5f04-4ef0-a188-449c32762b07",
              "parentUUID": "8cca5867-41ed-4b36-a8f6-adcba96a111f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ce15b2d-f222-42a3-9115-4d6dba4714d7",
            "16275ef4-33a0-4cdd-947b-d7c9949e19eb",
            "7495cb2a-74e1-487c-9949-1dfc0a762578",
            "7d7c0edc-ad23-4f8f-8b09-fe14208a3186",
            "6eab1e18-0c78-4881-8295-f07c1d1f0b6a",
            "199492dd-b989-41a1-99c2-c4b0e1111d68",
            "1d80db56-8bd6-4fc5-ab9b-958365f6535f",
            "f3c5bb6b-f497-42a7-9306-75ef1bd13046",
            "a621259f-9472-4c16-be91-39f00dfa4148",
            "447699d7-5f04-4ef0-a188-449c32762b07"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2ba888d1-21c3-4bb9-9ac6-8ca8c9611ef7",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "91c24b5f-10d9-4ebf-815f-2eb1fafa096f",
              "parentUUID": "2ba888d1-21c3-4bb9-9ac6-8ca8c9611ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "d55edfd6-87eb-43fb-ac94-ab78180a1c21",
              "parentUUID": "2ba888d1-21c3-4bb9-9ac6-8ca8c9611ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "d4bf5629-9899-48c4-b5e0-51bcd519dadc",
              "parentUUID": "2ba888d1-21c3-4bb9-9ac6-8ca8c9611ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "31cd61fd-0c61-4452-bc3c-ac80cf3a4253",
              "parentUUID": "2ba888d1-21c3-4bb9-9ac6-8ca8c9611ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "08a7a898-dd2b-4055-af39-1b2eb9032c5a",
              "parentUUID": "2ba888d1-21c3-4bb9-9ac6-8ca8c9611ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "dc96e50b-8e0f-408e-8dbf-e8fe01f55e95",
              "parentUUID": "2ba888d1-21c3-4bb9-9ac6-8ca8c9611ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "f68eabf7-c2f6-43f3-ab73-2901b4cd3251",
              "parentUUID": "2ba888d1-21c3-4bb9-9ac6-8ca8c9611ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "ed5c9469-091c-43ac-a906-012057f3cbea",
              "parentUUID": "2ba888d1-21c3-4bb9-9ac6-8ca8c9611ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "5f63367d-3e14-4f50-af13-5a8202bad5cf",
              "parentUUID": "2ba888d1-21c3-4bb9-9ac6-8ca8c9611ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "b395ea4b-1b87-43a1-a694-88a9e0809416",
              "parentUUID": "2ba888d1-21c3-4bb9-9ac6-8ca8c9611ef7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91c24b5f-10d9-4ebf-815f-2eb1fafa096f",
            "d55edfd6-87eb-43fb-ac94-ab78180a1c21",
            "d4bf5629-9899-48c4-b5e0-51bcd519dadc",
            "31cd61fd-0c61-4452-bc3c-ac80cf3a4253",
            "08a7a898-dd2b-4055-af39-1b2eb9032c5a",
            "dc96e50b-8e0f-408e-8dbf-e8fe01f55e95",
            "f68eabf7-c2f6-43f3-ab73-2901b4cd3251",
            "ed5c9469-091c-43ac-a906-012057f3cbea",
            "5f63367d-3e14-4f50-af13-5a8202bad5cf",
            "b395ea4b-1b87-43a1-a694-88a9e0809416"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "10e70fb1-8d55-44a8-b7d9-537c5c2f7337",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "bb9c5253-e779-4d86-91a5-1d71dccc6137",
              "parentUUID": "10e70fb1-8d55-44a8-b7d9-537c5c2f7337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "d259f710-fd30-4da4-a059-53463d973dae",
              "parentUUID": "10e70fb1-8d55-44a8-b7d9-537c5c2f7337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "fc04ef35-6511-4de2-a4f2-ceb441f8a3a7",
              "parentUUID": "10e70fb1-8d55-44a8-b7d9-537c5c2f7337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "4a1d5983-8749-48bb-8407-fb8c4727b499",
              "parentUUID": "10e70fb1-8d55-44a8-b7d9-537c5c2f7337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "d680a4ec-b331-4c3a-97f6-ab064a58a302",
              "parentUUID": "10e70fb1-8d55-44a8-b7d9-537c5c2f7337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "9c496bf6-4f40-41f3-9ac2-d726b581ae47",
              "parentUUID": "10e70fb1-8d55-44a8-b7d9-537c5c2f7337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "9559ff4d-73f8-482f-9472-90362585ad11",
              "parentUUID": "10e70fb1-8d55-44a8-b7d9-537c5c2f7337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "127ef6c2-fedb-4768-9c3f-451e282b9944",
              "parentUUID": "10e70fb1-8d55-44a8-b7d9-537c5c2f7337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "8794e8fe-ce09-4b77-8927-80fd828a39e5",
              "parentUUID": "10e70fb1-8d55-44a8-b7d9-537c5c2f7337",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "73a4f409-2a27-42ca-9214-027f52d18b29",
              "parentUUID": "10e70fb1-8d55-44a8-b7d9-537c5c2f7337",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb9c5253-e779-4d86-91a5-1d71dccc6137",
            "d259f710-fd30-4da4-a059-53463d973dae",
            "fc04ef35-6511-4de2-a4f2-ceb441f8a3a7",
            "4a1d5983-8749-48bb-8407-fb8c4727b499",
            "d680a4ec-b331-4c3a-97f6-ab064a58a302",
            "9c496bf6-4f40-41f3-9ac2-d726b581ae47",
            "9559ff4d-73f8-482f-9472-90362585ad11",
            "127ef6c2-fedb-4768-9c3f-451e282b9944",
            "8794e8fe-ce09-4b77-8927-80fd828a39e5",
            "73a4f409-2a27-42ca-9214-027f52d18b29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5638d1b6-634b-427b-a474-da139fb35b97",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "22d996f6-c671-409e-9efd-cd4adf3a8a28",
              "parentUUID": "5638d1b6-634b-427b-a474-da139fb35b97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "89734b6b-5aae-47cd-8260-555f74f03c41",
              "parentUUID": "5638d1b6-634b-427b-a474-da139fb35b97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "28924544-1458-409d-b100-fd0813948322",
              "parentUUID": "5638d1b6-634b-427b-a474-da139fb35b97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "4fee2734-40b2-41b7-9391-214a9dc4f611",
              "parentUUID": "5638d1b6-634b-427b-a474-da139fb35b97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "8c43973e-bcda-4ff9-ad4c-466ba5981175",
              "parentUUID": "5638d1b6-634b-427b-a474-da139fb35b97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "a0c8e8a4-cd1c-44cc-998c-77291b0cc4ea",
              "parentUUID": "5638d1b6-634b-427b-a474-da139fb35b97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "01167d90-2b02-4a20-957a-5f510b2a432f",
              "parentUUID": "5638d1b6-634b-427b-a474-da139fb35b97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "e66d4947-1418-4d50-a2be-d93bee31410d",
              "parentUUID": "5638d1b6-634b-427b-a474-da139fb35b97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "b773d0d1-0eb2-4f1d-a56a-a1f751ff9426",
              "parentUUID": "5638d1b6-634b-427b-a474-da139fb35b97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "92fa6266-600f-4f0a-8f10-7710089f63d6",
              "parentUUID": "5638d1b6-634b-427b-a474-da139fb35b97",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22d996f6-c671-409e-9efd-cd4adf3a8a28",
            "89734b6b-5aae-47cd-8260-555f74f03c41",
            "28924544-1458-409d-b100-fd0813948322",
            "4fee2734-40b2-41b7-9391-214a9dc4f611",
            "8c43973e-bcda-4ff9-ad4c-466ba5981175",
            "a0c8e8a4-cd1c-44cc-998c-77291b0cc4ea",
            "01167d90-2b02-4a20-957a-5f510b2a432f",
            "e66d4947-1418-4d50-a2be-d93bee31410d",
            "b773d0d1-0eb2-4f1d-a56a-a1f751ff9426",
            "92fa6266-600f-4f0a-8f10-7710089f63d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7eb776d5-a52d-4abb-a867-cac17b161a64",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "e27fbafa-fe9a-4cd6-bdf0-adcd79ee0aca",
              "parentUUID": "7eb776d5-a52d-4abb-a867-cac17b161a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "1c2618d0-5f23-46f8-9ddb-3d98eab7d0ac",
              "parentUUID": "7eb776d5-a52d-4abb-a867-cac17b161a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "400e3c67-019e-4c12-a808-eeccbc0aa8f3",
              "parentUUID": "7eb776d5-a52d-4abb-a867-cac17b161a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "e537b9b4-bce5-4f43-9b51-828f5d43eed3",
              "parentUUID": "7eb776d5-a52d-4abb-a867-cac17b161a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "5b8cea10-0a3a-450e-a665-1dde296f9f17",
              "parentUUID": "7eb776d5-a52d-4abb-a867-cac17b161a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "9865c1ba-9e92-49fe-8a73-16623ac18c37",
              "parentUUID": "7eb776d5-a52d-4abb-a867-cac17b161a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "1da2eb4b-35e4-476a-838e-9f69c907a90d",
              "parentUUID": "7eb776d5-a52d-4abb-a867-cac17b161a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "b490a856-1363-4e9d-b4fe-48765982e132",
              "parentUUID": "7eb776d5-a52d-4abb-a867-cac17b161a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "9abf8830-b256-4e24-975c-d458f340e31d",
              "parentUUID": "7eb776d5-a52d-4abb-a867-cac17b161a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "834c8eeb-6104-4aa0-9e99-2fbe75c337d9",
              "parentUUID": "7eb776d5-a52d-4abb-a867-cac17b161a64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e27fbafa-fe9a-4cd6-bdf0-adcd79ee0aca",
            "1c2618d0-5f23-46f8-9ddb-3d98eab7d0ac",
            "400e3c67-019e-4c12-a808-eeccbc0aa8f3",
            "e537b9b4-bce5-4f43-9b51-828f5d43eed3",
            "5b8cea10-0a3a-450e-a665-1dde296f9f17",
            "9865c1ba-9e92-49fe-8a73-16623ac18c37",
            "1da2eb4b-35e4-476a-838e-9f69c907a90d",
            "b490a856-1363-4e9d-b4fe-48765982e132",
            "9abf8830-b256-4e24-975c-d458f340e31d",
            "834c8eeb-6104-4aa0-9e99-2fbe75c337d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "36b905e7-ff39-4387-a62d-eea4af48a2da",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "5b0e1555-71d2-420c-b70d-21dbf4636877",
              "parentUUID": "36b905e7-ff39-4387-a62d-eea4af48a2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "8550282d-e290-43bd-a7b7-03ef673b458d",
              "parentUUID": "36b905e7-ff39-4387-a62d-eea4af48a2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "03b59518-acd9-4314-82e2-bfde59f287b3",
              "parentUUID": "36b905e7-ff39-4387-a62d-eea4af48a2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "6990fad5-5ecc-4138-a68b-e35e1c19052c",
              "parentUUID": "36b905e7-ff39-4387-a62d-eea4af48a2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "0d043b60-bbb2-45eb-9342-f310869fa115",
              "parentUUID": "36b905e7-ff39-4387-a62d-eea4af48a2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "6224ec88-c76b-4b75-a127-979479c2b648",
              "parentUUID": "36b905e7-ff39-4387-a62d-eea4af48a2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "1cb014bc-135e-4c58-9f92-54c039be959e",
              "parentUUID": "36b905e7-ff39-4387-a62d-eea4af48a2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "a49670aa-bd7f-4fa4-a0a8-954b15b4ba92",
              "parentUUID": "36b905e7-ff39-4387-a62d-eea4af48a2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "b6299b62-7517-4b8c-adf9-8cad30d83089",
              "parentUUID": "36b905e7-ff39-4387-a62d-eea4af48a2da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "61b4e337-4fe1-476c-89a8-113f381e12ce",
              "parentUUID": "36b905e7-ff39-4387-a62d-eea4af48a2da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b0e1555-71d2-420c-b70d-21dbf4636877",
            "8550282d-e290-43bd-a7b7-03ef673b458d",
            "03b59518-acd9-4314-82e2-bfde59f287b3",
            "6990fad5-5ecc-4138-a68b-e35e1c19052c",
            "0d043b60-bbb2-45eb-9342-f310869fa115",
            "6224ec88-c76b-4b75-a127-979479c2b648",
            "1cb014bc-135e-4c58-9f92-54c039be959e",
            "a49670aa-bd7f-4fa4-a0a8-954b15b4ba92",
            "b6299b62-7517-4b8c-adf9-8cad30d83089",
            "61b4e337-4fe1-476c-89a8-113f381e12ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1ef66166-01f6-4543-a49e-dca6a394a8cf",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "d34fa928-aed9-4616-b9b4-acf5a92f9083",
              "parentUUID": "1ef66166-01f6-4543-a49e-dca6a394a8cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "37b6b760-6de5-4c04-bf7d-2f46af68973e",
              "parentUUID": "1ef66166-01f6-4543-a49e-dca6a394a8cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "15cd491d-291f-4207-b6f5-4e6bb146ea0e",
              "parentUUID": "1ef66166-01f6-4543-a49e-dca6a394a8cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "5d46a4f2-a43e-4c18-be34-c6acfacf094d",
              "parentUUID": "1ef66166-01f6-4543-a49e-dca6a394a8cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "95fb6b87-f93c-4b41-9ee5-1cf7178818be",
              "parentUUID": "1ef66166-01f6-4543-a49e-dca6a394a8cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "ddd2430f-99a9-4b5d-8e87-6bdc73420496",
              "parentUUID": "1ef66166-01f6-4543-a49e-dca6a394a8cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "80d7f70a-8d60-457d-88e3-237cc4236588",
              "parentUUID": "1ef66166-01f6-4543-a49e-dca6a394a8cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "14451940-d670-43c7-b020-10bea62d30c0",
              "parentUUID": "1ef66166-01f6-4543-a49e-dca6a394a8cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "dc8406df-ace9-47f5-b5b2-3e62f1a745c5",
              "parentUUID": "1ef66166-01f6-4543-a49e-dca6a394a8cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "1204d3c6-4637-4ac3-aec4-8b58ce33da97",
              "parentUUID": "1ef66166-01f6-4543-a49e-dca6a394a8cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d34fa928-aed9-4616-b9b4-acf5a92f9083",
            "37b6b760-6de5-4c04-bf7d-2f46af68973e",
            "15cd491d-291f-4207-b6f5-4e6bb146ea0e",
            "5d46a4f2-a43e-4c18-be34-c6acfacf094d",
            "95fb6b87-f93c-4b41-9ee5-1cf7178818be",
            "ddd2430f-99a9-4b5d-8e87-6bdc73420496",
            "80d7f70a-8d60-457d-88e3-237cc4236588",
            "14451940-d670-43c7-b020-10bea62d30c0",
            "dc8406df-ace9-47f5-b5b2-3e62f1a745c5",
            "1204d3c6-4637-4ac3-aec4-8b58ce33da97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e9dd0ab0-8ce7-4133-bfc8-0b648dc5ff95",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "b9ef0f4c-ff8c-4cf7-9299-dae16242ebfa",
              "parentUUID": "e9dd0ab0-8ce7-4133-bfc8-0b648dc5ff95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "465411c6-68f5-4abf-8bff-dbebe1dc2ddf",
              "parentUUID": "e9dd0ab0-8ce7-4133-bfc8-0b648dc5ff95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "b1396dba-2937-49e6-8b71-96d0eabbb65d",
              "parentUUID": "e9dd0ab0-8ce7-4133-bfc8-0b648dc5ff95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "bb45c084-d99a-417e-8af6-66eb0fc9652f",
              "parentUUID": "e9dd0ab0-8ce7-4133-bfc8-0b648dc5ff95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "93c5a238-1a47-4b1f-bf90-f18b82b77d01",
              "parentUUID": "e9dd0ab0-8ce7-4133-bfc8-0b648dc5ff95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "524187d7-aed7-401e-b0d8-02fdbb7e656c",
              "parentUUID": "e9dd0ab0-8ce7-4133-bfc8-0b648dc5ff95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "13715f8e-fa5f-47b5-9196-1ed027d139ff",
              "parentUUID": "e9dd0ab0-8ce7-4133-bfc8-0b648dc5ff95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "7709cf70-0bab-4f84-9eb2-ac0b10ecc3bb",
              "parentUUID": "e9dd0ab0-8ce7-4133-bfc8-0b648dc5ff95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "2e547ad0-1a6d-4d90-9dbc-80dcb2e650fd",
              "parentUUID": "e9dd0ab0-8ce7-4133-bfc8-0b648dc5ff95",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "8b5c980c-a6bb-40a2-bde6-f2b18fdefa94",
              "parentUUID": "e9dd0ab0-8ce7-4133-bfc8-0b648dc5ff95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9ef0f4c-ff8c-4cf7-9299-dae16242ebfa",
            "465411c6-68f5-4abf-8bff-dbebe1dc2ddf",
            "b1396dba-2937-49e6-8b71-96d0eabbb65d",
            "bb45c084-d99a-417e-8af6-66eb0fc9652f",
            "93c5a238-1a47-4b1f-bf90-f18b82b77d01",
            "524187d7-aed7-401e-b0d8-02fdbb7e656c",
            "13715f8e-fa5f-47b5-9196-1ed027d139ff",
            "7709cf70-0bab-4f84-9eb2-ac0b10ecc3bb",
            "2e547ad0-1a6d-4d90-9dbc-80dcb2e650fd",
            "8b5c980c-a6bb-40a2-bde6-f2b18fdefa94"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "09541885-9b3d-4157-abe0-a96346f5b70b",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "f00df2f7-e813-4672-b1fe-e13a238a49c9",
              "parentUUID": "09541885-9b3d-4157-abe0-a96346f5b70b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "2cbee70c-00f0-4033-b83e-6fc07feb8bbf",
              "parentUUID": "09541885-9b3d-4157-abe0-a96346f5b70b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "5ff8b635-5baa-4c40-9f03-19afece60e4d",
              "parentUUID": "09541885-9b3d-4157-abe0-a96346f5b70b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "9873e7a5-27ca-4afe-b1d4-33b7504d60c5",
              "parentUUID": "09541885-9b3d-4157-abe0-a96346f5b70b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "0028162c-4c30-4834-a651-68ecd7fcd09a",
              "parentUUID": "09541885-9b3d-4157-abe0-a96346f5b70b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "7cd598cf-ce9d-44d8-8c4b-fe2010db33e9",
              "parentUUID": "09541885-9b3d-4157-abe0-a96346f5b70b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "5f9d2816-2149-4c81-bcd6-eee88f212291",
              "parentUUID": "09541885-9b3d-4157-abe0-a96346f5b70b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "5c58d475-500f-4d72-86ff-88e6329a712c",
              "parentUUID": "09541885-9b3d-4157-abe0-a96346f5b70b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "592e1a2b-955f-477a-89ee-b222d469b931",
              "parentUUID": "09541885-9b3d-4157-abe0-a96346f5b70b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "4670bbb1-ffd1-447b-bcc9-061d65da9bb7",
              "parentUUID": "09541885-9b3d-4157-abe0-a96346f5b70b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f00df2f7-e813-4672-b1fe-e13a238a49c9",
            "2cbee70c-00f0-4033-b83e-6fc07feb8bbf",
            "5ff8b635-5baa-4c40-9f03-19afece60e4d",
            "9873e7a5-27ca-4afe-b1d4-33b7504d60c5",
            "0028162c-4c30-4834-a651-68ecd7fcd09a",
            "7cd598cf-ce9d-44d8-8c4b-fe2010db33e9",
            "5f9d2816-2149-4c81-bcd6-eee88f212291",
            "5c58d475-500f-4d72-86ff-88e6329a712c",
            "592e1a2b-955f-477a-89ee-b222d469b931",
            "4670bbb1-ffd1-447b-bcc9-061d65da9bb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4c6f1097-1ae0-4fcd-8a46-13b88a7bf497",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "0a909396-bb72-46da-8599-36ecc5a71c7f",
              "parentUUID": "4c6f1097-1ae0-4fcd-8a46-13b88a7bf497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "a1569053-fdc2-4664-8274-19355db8a0f1",
              "parentUUID": "4c6f1097-1ae0-4fcd-8a46-13b88a7bf497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "a5b0ef6d-f7b0-460b-94f2-f493b4ac3fd0",
              "parentUUID": "4c6f1097-1ae0-4fcd-8a46-13b88a7bf497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "2fd218c2-caeb-4578-92a9-7dc9743427e5",
              "parentUUID": "4c6f1097-1ae0-4fcd-8a46-13b88a7bf497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "76fdea3f-59af-4262-adca-be862d1a1860",
              "parentUUID": "4c6f1097-1ae0-4fcd-8a46-13b88a7bf497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "d65ad533-f0be-46b8-a1ce-44b2336d1b8b",
              "parentUUID": "4c6f1097-1ae0-4fcd-8a46-13b88a7bf497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "89976401-aec2-42ea-b0bb-3a64771a6cb1",
              "parentUUID": "4c6f1097-1ae0-4fcd-8a46-13b88a7bf497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "13b67791-5ef4-4d14-b353-7faa28003337",
              "parentUUID": "4c6f1097-1ae0-4fcd-8a46-13b88a7bf497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "b724b6d0-43d6-4b69-b018-9de0a3b68573",
              "parentUUID": "4c6f1097-1ae0-4fcd-8a46-13b88a7bf497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "cb5087c4-ac20-45e9-a9b7-d91525c988c6",
              "parentUUID": "4c6f1097-1ae0-4fcd-8a46-13b88a7bf497",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a909396-bb72-46da-8599-36ecc5a71c7f",
            "a1569053-fdc2-4664-8274-19355db8a0f1",
            "a5b0ef6d-f7b0-460b-94f2-f493b4ac3fd0",
            "2fd218c2-caeb-4578-92a9-7dc9743427e5",
            "76fdea3f-59af-4262-adca-be862d1a1860",
            "d65ad533-f0be-46b8-a1ce-44b2336d1b8b",
            "89976401-aec2-42ea-b0bb-3a64771a6cb1",
            "13b67791-5ef4-4d14-b353-7faa28003337",
            "b724b6d0-43d6-4b69-b018-9de0a3b68573",
            "cb5087c4-ac20-45e9-a9b7-d91525c988c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "dab8c16e-b49c-4679-8c19-265861662e63",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "a601d9f3-9970-4c46-b15d-876a78d7d4c5",
              "parentUUID": "dab8c16e-b49c-4679-8c19-265861662e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "9abc8a9e-140d-4d49-8a03-666783a736f3",
              "parentUUID": "dab8c16e-b49c-4679-8c19-265861662e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "2ddc2660-b760-40c6-acfe-67a3c9f603cb",
              "parentUUID": "dab8c16e-b49c-4679-8c19-265861662e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "cc2de587-f414-492d-b424-3632ffcf4f8f",
              "parentUUID": "dab8c16e-b49c-4679-8c19-265861662e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "8ea55cdc-08c6-4c9d-839c-f1990a59811b",
              "parentUUID": "dab8c16e-b49c-4679-8c19-265861662e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "02478d99-2af3-485f-83a4-765972b1c8a8",
              "parentUUID": "dab8c16e-b49c-4679-8c19-265861662e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "3f691f2b-9838-45d2-b481-ebad7723d350",
              "parentUUID": "dab8c16e-b49c-4679-8c19-265861662e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "0172aa25-05b7-4d60-ad3d-bbd4550426fe",
              "parentUUID": "dab8c16e-b49c-4679-8c19-265861662e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "a1fa5390-9bb4-470c-96a9-62c435f01ea7",
              "parentUUID": "dab8c16e-b49c-4679-8c19-265861662e63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "4c762d1d-6ad5-42ef-9564-4ed7ccaefee6",
              "parentUUID": "dab8c16e-b49c-4679-8c19-265861662e63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a601d9f3-9970-4c46-b15d-876a78d7d4c5",
            "9abc8a9e-140d-4d49-8a03-666783a736f3",
            "2ddc2660-b760-40c6-acfe-67a3c9f603cb",
            "cc2de587-f414-492d-b424-3632ffcf4f8f",
            "8ea55cdc-08c6-4c9d-839c-f1990a59811b",
            "02478d99-2af3-485f-83a4-765972b1c8a8",
            "3f691f2b-9838-45d2-b481-ebad7723d350",
            "0172aa25-05b7-4d60-ad3d-bbd4550426fe",
            "a1fa5390-9bb4-470c-96a9-62c435f01ea7",
            "4c762d1d-6ad5-42ef-9564-4ed7ccaefee6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "10fc3a7b-ced4-4c01-aeee-bb6474d891f7",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "ba82fd80-e535-4ff2-8ab3-6c52d1103495",
              "parentUUID": "10fc3a7b-ced4-4c01-aeee-bb6474d891f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "c9b2cc8f-284d-4c1e-9db5-38e2045b315d",
              "parentUUID": "10fc3a7b-ced4-4c01-aeee-bb6474d891f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "0f6acb4d-7414-43db-a9fe-7d019dd23d10",
              "parentUUID": "10fc3a7b-ced4-4c01-aeee-bb6474d891f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "6ba3f5ef-6c4b-4194-bb54-a274e5a28d5a",
              "parentUUID": "10fc3a7b-ced4-4c01-aeee-bb6474d891f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "5ad7d504-ec43-42af-8815-240bfe7a86e6",
              "parentUUID": "10fc3a7b-ced4-4c01-aeee-bb6474d891f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "8ddda7e5-0d44-48f1-a9e5-dfef49594338",
              "parentUUID": "10fc3a7b-ced4-4c01-aeee-bb6474d891f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "808d15eb-0923-49b5-b133-b2d86d7af17b",
              "parentUUID": "10fc3a7b-ced4-4c01-aeee-bb6474d891f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "2c10670f-d38f-4e25-9ac9-dcd971ff78e7",
              "parentUUID": "10fc3a7b-ced4-4c01-aeee-bb6474d891f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "2ded3d3e-c7ee-4e9d-b170-f7d2d4e5ff6b",
              "parentUUID": "10fc3a7b-ced4-4c01-aeee-bb6474d891f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "9c408fe6-7d06-4b6b-a727-2fe8b1a23a14",
              "parentUUID": "10fc3a7b-ced4-4c01-aeee-bb6474d891f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba82fd80-e535-4ff2-8ab3-6c52d1103495",
            "c9b2cc8f-284d-4c1e-9db5-38e2045b315d",
            "0f6acb4d-7414-43db-a9fe-7d019dd23d10",
            "6ba3f5ef-6c4b-4194-bb54-a274e5a28d5a",
            "5ad7d504-ec43-42af-8815-240bfe7a86e6",
            "8ddda7e5-0d44-48f1-a9e5-dfef49594338",
            "808d15eb-0923-49b5-b133-b2d86d7af17b",
            "2c10670f-d38f-4e25-9ac9-dcd971ff78e7",
            "2ded3d3e-c7ee-4e9d-b170-f7d2d4e5ff6b",
            "9c408fe6-7d06-4b6b-a727-2fe8b1a23a14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "df320511-7094-47c1-9415-a4f19d8abc85",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "74082f54-c8bb-4855-982d-63903ce1f4d2",
              "parentUUID": "df320511-7094-47c1-9415-a4f19d8abc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "566af934-df00-43a7-8602-6c693adfb35c",
              "parentUUID": "df320511-7094-47c1-9415-a4f19d8abc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "e7a3e8a8-1822-49b8-8113-20443fa7c9d8",
              "parentUUID": "df320511-7094-47c1-9415-a4f19d8abc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "10cd11fb-46f5-4ed0-9ffc-f07b9c83fde6",
              "parentUUID": "df320511-7094-47c1-9415-a4f19d8abc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "8a5a8d31-a581-45eb-8256-1367146beb1f",
              "parentUUID": "df320511-7094-47c1-9415-a4f19d8abc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "e52027e2-504d-427b-a28c-fd79ff9718df",
              "parentUUID": "df320511-7094-47c1-9415-a4f19d8abc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "9ce9b47d-b7a0-49ba-b024-b53d3a8d7229",
              "parentUUID": "df320511-7094-47c1-9415-a4f19d8abc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "1f005904-478f-4934-bf01-890502fd49f1",
              "parentUUID": "df320511-7094-47c1-9415-a4f19d8abc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "d53ce269-f369-4e2a-aa89-bd6d000529af",
              "parentUUID": "df320511-7094-47c1-9415-a4f19d8abc85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "0d88faa6-3236-44c1-b44c-01694b02b40d",
              "parentUUID": "df320511-7094-47c1-9415-a4f19d8abc85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74082f54-c8bb-4855-982d-63903ce1f4d2",
            "566af934-df00-43a7-8602-6c693adfb35c",
            "e7a3e8a8-1822-49b8-8113-20443fa7c9d8",
            "10cd11fb-46f5-4ed0-9ffc-f07b9c83fde6",
            "8a5a8d31-a581-45eb-8256-1367146beb1f",
            "e52027e2-504d-427b-a28c-fd79ff9718df",
            "9ce9b47d-b7a0-49ba-b024-b53d3a8d7229",
            "1f005904-478f-4934-bf01-890502fd49f1",
            "d53ce269-f369-4e2a-aa89-bd6d000529af",
            "0d88faa6-3236-44c1-b44c-01694b02b40d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "43365561-961c-4dcb-a182-02576d18b20a",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "653f077f-70c5-4b68-9a1e-d05b34080b3f",
              "parentUUID": "43365561-961c-4dcb-a182-02576d18b20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "a29a50d5-a0f9-4157-b7d6-7021ecd77d40",
              "parentUUID": "43365561-961c-4dcb-a182-02576d18b20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "0a9b2a4a-1560-4146-a8b8-db95a0394016",
              "parentUUID": "43365561-961c-4dcb-a182-02576d18b20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "5f983c17-6cfa-497a-b2e1-221cb7578d49",
              "parentUUID": "43365561-961c-4dcb-a182-02576d18b20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "98182457-fa9e-4786-a9d0-c902232ad490",
              "parentUUID": "43365561-961c-4dcb-a182-02576d18b20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "d65c0e45-12ec-4a04-8c0e-28387842460d",
              "parentUUID": "43365561-961c-4dcb-a182-02576d18b20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "4128f239-f08c-48f9-b10f-1836969a6297",
              "parentUUID": "43365561-961c-4dcb-a182-02576d18b20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "4bfde4ba-c5db-4895-824a-f1d9be26262e",
              "parentUUID": "43365561-961c-4dcb-a182-02576d18b20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "2b9e6d78-7d78-4b27-9674-814634e3cf89",
              "parentUUID": "43365561-961c-4dcb-a182-02576d18b20a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "ddae5eee-77c8-4e8c-8ef2-1697c769c67c",
              "parentUUID": "43365561-961c-4dcb-a182-02576d18b20a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "653f077f-70c5-4b68-9a1e-d05b34080b3f",
            "a29a50d5-a0f9-4157-b7d6-7021ecd77d40",
            "0a9b2a4a-1560-4146-a8b8-db95a0394016",
            "5f983c17-6cfa-497a-b2e1-221cb7578d49",
            "98182457-fa9e-4786-a9d0-c902232ad490",
            "d65c0e45-12ec-4a04-8c0e-28387842460d",
            "4128f239-f08c-48f9-b10f-1836969a6297",
            "4bfde4ba-c5db-4895-824a-f1d9be26262e",
            "2b9e6d78-7d78-4b27-9674-814634e3cf89",
            "ddae5eee-77c8-4e8c-8ef2-1697c769c67c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7c495304-fb66-4f43-a8c5-d3996569b283",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "8c715837-ce9e-488b-970c-dfc549c65065",
              "parentUUID": "7c495304-fb66-4f43-a8c5-d3996569b283",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "de37b1c1-f0d9-4522-8a7f-20ca55bcb13e",
              "parentUUID": "7c495304-fb66-4f43-a8c5-d3996569b283",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "d54c9480-da6d-41db-b805-5cd5a1114c7a",
              "parentUUID": "7c495304-fb66-4f43-a8c5-d3996569b283",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "fd2b6a40-1fea-4da5-ac19-ef737b37ef66",
              "parentUUID": "7c495304-fb66-4f43-a8c5-d3996569b283",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "6eb12ae7-6bdc-41c1-939a-f09e93da61f2",
              "parentUUID": "7c495304-fb66-4f43-a8c5-d3996569b283",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "b27201e8-3fba-4b2f-8816-886545c0c5b9",
              "parentUUID": "7c495304-fb66-4f43-a8c5-d3996569b283",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "f3a20977-be12-4eb8-943c-d7dfab8bd928",
              "parentUUID": "7c495304-fb66-4f43-a8c5-d3996569b283",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "dcc7e6b0-d2af-4d10-b80c-812dec2d7782",
              "parentUUID": "7c495304-fb66-4f43-a8c5-d3996569b283",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "fa28d8f6-2377-4120-8788-a2a4b8f5c946",
              "parentUUID": "7c495304-fb66-4f43-a8c5-d3996569b283",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "6c8b039b-94ed-4343-9886-1277796dda0e",
              "parentUUID": "7c495304-fb66-4f43-a8c5-d3996569b283",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c715837-ce9e-488b-970c-dfc549c65065",
            "de37b1c1-f0d9-4522-8a7f-20ca55bcb13e",
            "d54c9480-da6d-41db-b805-5cd5a1114c7a",
            "fd2b6a40-1fea-4da5-ac19-ef737b37ef66",
            "6eb12ae7-6bdc-41c1-939a-f09e93da61f2",
            "b27201e8-3fba-4b2f-8816-886545c0c5b9",
            "f3a20977-be12-4eb8-943c-d7dfab8bd928",
            "dcc7e6b0-d2af-4d10-b80c-812dec2d7782",
            "fa28d8f6-2377-4120-8788-a2a4b8f5c946",
            "6c8b039b-94ed-4343-9886-1277796dda0e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "44e106f7-7bb8-410a-8970-1f80a16e69a7",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "765a4937-0d2c-4852-98c6-d74e926a6866",
              "parentUUID": "44e106f7-7bb8-410a-8970-1f80a16e69a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "038067bf-6d22-435b-a8a4-423d30b2f57f",
              "parentUUID": "44e106f7-7bb8-410a-8970-1f80a16e69a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "201fb91e-809e-4e83-86f9-eac41d96024e",
              "parentUUID": "44e106f7-7bb8-410a-8970-1f80a16e69a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "6d4ebb7e-7602-4548-873c-ae750905f6b4",
              "parentUUID": "44e106f7-7bb8-410a-8970-1f80a16e69a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "aba094d0-4393-4e08-b1ee-17ec7e0b47a6",
              "parentUUID": "44e106f7-7bb8-410a-8970-1f80a16e69a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "a73cfcfb-4e12-4127-9438-260629b5cc1b",
              "parentUUID": "44e106f7-7bb8-410a-8970-1f80a16e69a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "03367a58-b8e0-4abd-afa4-03e421869932",
              "parentUUID": "44e106f7-7bb8-410a-8970-1f80a16e69a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "2ee62cc3-1520-4c97-8432-6ce60a5ef734",
              "parentUUID": "44e106f7-7bb8-410a-8970-1f80a16e69a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "c062745e-b80c-41ed-a08b-513582226e71",
              "parentUUID": "44e106f7-7bb8-410a-8970-1f80a16e69a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "d40f2391-cbc9-4900-8ef0-602e0a2e8001",
              "parentUUID": "44e106f7-7bb8-410a-8970-1f80a16e69a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "765a4937-0d2c-4852-98c6-d74e926a6866",
            "038067bf-6d22-435b-a8a4-423d30b2f57f",
            "201fb91e-809e-4e83-86f9-eac41d96024e",
            "6d4ebb7e-7602-4548-873c-ae750905f6b4",
            "aba094d0-4393-4e08-b1ee-17ec7e0b47a6",
            "a73cfcfb-4e12-4127-9438-260629b5cc1b",
            "03367a58-b8e0-4abd-afa4-03e421869932",
            "2ee62cc3-1520-4c97-8432-6ce60a5ef734",
            "c062745e-b80c-41ed-a08b-513582226e71",
            "d40f2391-cbc9-4900-8ef0-602e0a2e8001"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "17e1a4e0-4ee5-4999-9b33-fc4c496bd58c",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "40080503-9c41-453b-8eab-6ba798426ce4",
              "parentUUID": "17e1a4e0-4ee5-4999-9b33-fc4c496bd58c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "4de0d387-e87f-4a37-828c-0c9f6121c3a4",
              "parentUUID": "17e1a4e0-4ee5-4999-9b33-fc4c496bd58c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "1d83da00-6fe6-4bbc-8a1f-e6cb5a77800f",
              "parentUUID": "17e1a4e0-4ee5-4999-9b33-fc4c496bd58c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "eaedd334-a711-4a37-baa4-2f8989f62315",
              "parentUUID": "17e1a4e0-4ee5-4999-9b33-fc4c496bd58c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "e6217e26-150f-4a34-80cd-00139dc6e51c",
              "parentUUID": "17e1a4e0-4ee5-4999-9b33-fc4c496bd58c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "38524e6a-2dd2-48b5-9936-01a65e64cf83",
              "parentUUID": "17e1a4e0-4ee5-4999-9b33-fc4c496bd58c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "8a43a42d-725a-476d-abde-e070c571e292",
              "parentUUID": "17e1a4e0-4ee5-4999-9b33-fc4c496bd58c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "e3b2daa4-bb20-4ab4-b946-1e8572ff346a",
              "parentUUID": "17e1a4e0-4ee5-4999-9b33-fc4c496bd58c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "51d5c417-63e4-4415-ad19-359903522bd4",
              "parentUUID": "17e1a4e0-4ee5-4999-9b33-fc4c496bd58c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "765e0413-6889-4a3f-ac17-68fdcd6f1faa",
              "parentUUID": "17e1a4e0-4ee5-4999-9b33-fc4c496bd58c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40080503-9c41-453b-8eab-6ba798426ce4",
            "4de0d387-e87f-4a37-828c-0c9f6121c3a4",
            "1d83da00-6fe6-4bbc-8a1f-e6cb5a77800f",
            "eaedd334-a711-4a37-baa4-2f8989f62315",
            "e6217e26-150f-4a34-80cd-00139dc6e51c",
            "38524e6a-2dd2-48b5-9936-01a65e64cf83",
            "8a43a42d-725a-476d-abde-e070c571e292",
            "e3b2daa4-bb20-4ab4-b946-1e8572ff346a",
            "51d5c417-63e4-4415-ad19-359903522bd4",
            "765e0413-6889-4a3f-ac17-68fdcd6f1faa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "dbf3a9b7-ef57-4971-acf9-c4db2b582260",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "af8128c1-ffc2-48b1-94b1-66f02c80a1fd",
              "parentUUID": "dbf3a9b7-ef57-4971-acf9-c4db2b582260",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "2c216cb8-b44d-45fa-87d9-bbb1aff0c56a",
              "parentUUID": "dbf3a9b7-ef57-4971-acf9-c4db2b582260",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "e1f21996-bae9-475b-862a-07fe330493a2",
              "parentUUID": "dbf3a9b7-ef57-4971-acf9-c4db2b582260",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "4785d572-c67d-46e4-8053-68fdd58e9b0b",
              "parentUUID": "dbf3a9b7-ef57-4971-acf9-c4db2b582260",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "7b107215-55d9-4511-8b74-811108f00b14",
              "parentUUID": "dbf3a9b7-ef57-4971-acf9-c4db2b582260",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "990b6eba-d57f-4731-baca-204da94960dd",
              "parentUUID": "dbf3a9b7-ef57-4971-acf9-c4db2b582260",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "f90b992e-d8f5-4d31-8bcf-930da5e722df",
              "parentUUID": "dbf3a9b7-ef57-4971-acf9-c4db2b582260",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "b1a88b9d-99ad-44df-b259-a57cf97c34a0",
              "parentUUID": "dbf3a9b7-ef57-4971-acf9-c4db2b582260",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "fed3d74f-7544-44ed-b053-d5507138e81a",
              "parentUUID": "dbf3a9b7-ef57-4971-acf9-c4db2b582260",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "7a021a3b-b257-48f0-b794-2227e22e75a0",
              "parentUUID": "dbf3a9b7-ef57-4971-acf9-c4db2b582260",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af8128c1-ffc2-48b1-94b1-66f02c80a1fd",
            "2c216cb8-b44d-45fa-87d9-bbb1aff0c56a",
            "e1f21996-bae9-475b-862a-07fe330493a2",
            "4785d572-c67d-46e4-8053-68fdd58e9b0b",
            "7b107215-55d9-4511-8b74-811108f00b14",
            "990b6eba-d57f-4731-baca-204da94960dd",
            "f90b992e-d8f5-4d31-8bcf-930da5e722df",
            "b1a88b9d-99ad-44df-b259-a57cf97c34a0",
            "fed3d74f-7544-44ed-b053-d5507138e81a",
            "7a021a3b-b257-48f0-b794-2227e22e75a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "fa39b7f8-0648-429e-96d8-c11a9a28411f",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "50e47529-8c67-428f-ad26-b7a9827f8800",
              "parentUUID": "fa39b7f8-0648-429e-96d8-c11a9a28411f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "f335d81c-2ece-403f-9483-33b05bccade2",
              "parentUUID": "fa39b7f8-0648-429e-96d8-c11a9a28411f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "e89bcef5-3e66-4bc6-8c6f-313149cd0f93",
              "parentUUID": "fa39b7f8-0648-429e-96d8-c11a9a28411f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "c0c4136c-5fca-41ea-afb9-528809c086f6",
              "parentUUID": "fa39b7f8-0648-429e-96d8-c11a9a28411f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "d730ec99-75b1-4601-896c-8a843756bcbd",
              "parentUUID": "fa39b7f8-0648-429e-96d8-c11a9a28411f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "f1437cba-b001-445e-9c86-5763286c5256",
              "parentUUID": "fa39b7f8-0648-429e-96d8-c11a9a28411f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "75ba563f-0b28-4eda-8c27-fb28dba9d105",
              "parentUUID": "fa39b7f8-0648-429e-96d8-c11a9a28411f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "0b7ba87f-784b-44c3-8878-ee505952c871",
              "parentUUID": "fa39b7f8-0648-429e-96d8-c11a9a28411f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "be595c55-5945-469b-bf7d-6de989669e31",
              "parentUUID": "fa39b7f8-0648-429e-96d8-c11a9a28411f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "0a002f06-ed86-44f4-b6dc-d0446d7ca1e2",
              "parentUUID": "fa39b7f8-0648-429e-96d8-c11a9a28411f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50e47529-8c67-428f-ad26-b7a9827f8800",
            "f335d81c-2ece-403f-9483-33b05bccade2",
            "e89bcef5-3e66-4bc6-8c6f-313149cd0f93",
            "c0c4136c-5fca-41ea-afb9-528809c086f6",
            "d730ec99-75b1-4601-896c-8a843756bcbd",
            "f1437cba-b001-445e-9c86-5763286c5256",
            "75ba563f-0b28-4eda-8c27-fb28dba9d105",
            "0b7ba87f-784b-44c3-8878-ee505952c871",
            "be595c55-5945-469b-bf7d-6de989669e31",
            "0a002f06-ed86-44f4-b6dc-d0446d7ca1e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2f4643a3-ada5-4f15-a388-888d77bf1275",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "5cfe5cc5-ae59-47d3-ad41-44b7a81e86d7",
              "parentUUID": "2f4643a3-ada5-4f15-a388-888d77bf1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "23a342e0-5790-4f56-89cb-7d85b5ff05c5",
              "parentUUID": "2f4643a3-ada5-4f15-a388-888d77bf1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "427751ae-f2c8-4526-8a29-2cb736b142cd",
              "parentUUID": "2f4643a3-ada5-4f15-a388-888d77bf1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "47c14acf-9833-4c71-8dac-beb75c493148",
              "parentUUID": "2f4643a3-ada5-4f15-a388-888d77bf1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "40e7c875-93cf-4a35-a191-d8792daeaea3",
              "parentUUID": "2f4643a3-ada5-4f15-a388-888d77bf1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "a0747ff6-b74a-42d4-ace1-df1868f80c4d",
              "parentUUID": "2f4643a3-ada5-4f15-a388-888d77bf1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "8ca4ed56-7eee-4b77-afd6-ed9291cc4eb5",
              "parentUUID": "2f4643a3-ada5-4f15-a388-888d77bf1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "478351fb-28a6-46b5-9689-351cd4dc0215",
              "parentUUID": "2f4643a3-ada5-4f15-a388-888d77bf1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "8375f28f-9864-4d98-9853-c6053f147714",
              "parentUUID": "2f4643a3-ada5-4f15-a388-888d77bf1275",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "fa466109-317c-4bb4-b28c-1a36eeaaca3a",
              "parentUUID": "2f4643a3-ada5-4f15-a388-888d77bf1275",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5cfe5cc5-ae59-47d3-ad41-44b7a81e86d7",
            "23a342e0-5790-4f56-89cb-7d85b5ff05c5",
            "427751ae-f2c8-4526-8a29-2cb736b142cd",
            "47c14acf-9833-4c71-8dac-beb75c493148",
            "40e7c875-93cf-4a35-a191-d8792daeaea3",
            "a0747ff6-b74a-42d4-ace1-df1868f80c4d",
            "8ca4ed56-7eee-4b77-afd6-ed9291cc4eb5",
            "478351fb-28a6-46b5-9689-351cd4dc0215",
            "8375f28f-9864-4d98-9853-c6053f147714",
            "fa466109-317c-4bb4-b28c-1a36eeaaca3a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2cac1d56-20f8-4ba3-8d7a-ada457e4b215",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "ec167796-0b0c-488d-a673-3c8bc2fbfa72",
              "parentUUID": "2cac1d56-20f8-4ba3-8d7a-ada457e4b215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "11ebc757-9d1a-47ec-a1dc-1a8ca80546cb",
              "parentUUID": "2cac1d56-20f8-4ba3-8d7a-ada457e4b215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "96a625cc-071a-4cc4-9c5d-245388cd3069",
              "parentUUID": "2cac1d56-20f8-4ba3-8d7a-ada457e4b215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "30722ad1-8101-4eba-b0ce-d8676d2e9839",
              "parentUUID": "2cac1d56-20f8-4ba3-8d7a-ada457e4b215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "42a774e1-f5db-4a20-9801-c5f23da0d7c4",
              "parentUUID": "2cac1d56-20f8-4ba3-8d7a-ada457e4b215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "61117ec3-8e57-4155-bec9-4b42951171fc",
              "parentUUID": "2cac1d56-20f8-4ba3-8d7a-ada457e4b215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "560b0c72-c114-4e79-bbb4-9d628fa0adf7",
              "parentUUID": "2cac1d56-20f8-4ba3-8d7a-ada457e4b215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "14393ea0-6e46-4351-bbed-d29b11ee8634",
              "parentUUID": "2cac1d56-20f8-4ba3-8d7a-ada457e4b215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "100da4b0-2b28-4bae-9cb3-9808372ccedf",
              "parentUUID": "2cac1d56-20f8-4ba3-8d7a-ada457e4b215",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "cb23547d-dcab-4c60-bfe7-e71e5b4a180d",
              "parentUUID": "2cac1d56-20f8-4ba3-8d7a-ada457e4b215",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec167796-0b0c-488d-a673-3c8bc2fbfa72",
            "11ebc757-9d1a-47ec-a1dc-1a8ca80546cb",
            "96a625cc-071a-4cc4-9c5d-245388cd3069",
            "30722ad1-8101-4eba-b0ce-d8676d2e9839",
            "42a774e1-f5db-4a20-9801-c5f23da0d7c4",
            "61117ec3-8e57-4155-bec9-4b42951171fc",
            "560b0c72-c114-4e79-bbb4-9d628fa0adf7",
            "14393ea0-6e46-4351-bbed-d29b11ee8634",
            "100da4b0-2b28-4bae-9cb3-9808372ccedf",
            "cb23547d-dcab-4c60-bfe7-e71e5b4a180d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b3e63a8b-fd88-4e04-bcd5-944f72f57ee1",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "5ef2f210-db6b-4122-9d52-6de86e211daa",
              "parentUUID": "b3e63a8b-fd88-4e04-bcd5-944f72f57ee1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "b312fbd8-a5fa-41ef-a5f4-0a3ea3c22de6",
              "parentUUID": "b3e63a8b-fd88-4e04-bcd5-944f72f57ee1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "c582445a-92d1-47c1-b425-9578a00f37a0",
              "parentUUID": "b3e63a8b-fd88-4e04-bcd5-944f72f57ee1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "099deebb-b0ef-4e72-ba1e-460596d79f85",
              "parentUUID": "b3e63a8b-fd88-4e04-bcd5-944f72f57ee1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "4de5fff4-57f2-493a-80fa-10a66d5f00a0",
              "parentUUID": "b3e63a8b-fd88-4e04-bcd5-944f72f57ee1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "cf4a4915-1863-4f7e-86da-7ae495d3b9ce",
              "parentUUID": "b3e63a8b-fd88-4e04-bcd5-944f72f57ee1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "58bd3d59-ec8b-43f6-88bb-148dab3b63d5",
              "parentUUID": "b3e63a8b-fd88-4e04-bcd5-944f72f57ee1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "d7b21730-7955-41e7-a96a-3e827a76db2f",
              "parentUUID": "b3e63a8b-fd88-4e04-bcd5-944f72f57ee1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "d05b8096-81c9-4983-9b14-1470fd8b696e",
              "parentUUID": "b3e63a8b-fd88-4e04-bcd5-944f72f57ee1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "70b5962c-d4cf-4eaa-a376-f574c8992da7",
              "parentUUID": "b3e63a8b-fd88-4e04-bcd5-944f72f57ee1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ef2f210-db6b-4122-9d52-6de86e211daa",
            "b312fbd8-a5fa-41ef-a5f4-0a3ea3c22de6",
            "c582445a-92d1-47c1-b425-9578a00f37a0",
            "099deebb-b0ef-4e72-ba1e-460596d79f85",
            "4de5fff4-57f2-493a-80fa-10a66d5f00a0",
            "cf4a4915-1863-4f7e-86da-7ae495d3b9ce",
            "58bd3d59-ec8b-43f6-88bb-148dab3b63d5",
            "d7b21730-7955-41e7-a96a-3e827a76db2f",
            "d05b8096-81c9-4983-9b14-1470fd8b696e",
            "70b5962c-d4cf-4eaa-a376-f574c8992da7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9d2ea99d-d75d-4b91-bfe6-d9ff00150aa6",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "23ef2c98-c8cb-4df5-8d96-5ba05e288407",
              "parentUUID": "9d2ea99d-d75d-4b91-bfe6-d9ff00150aa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "453f819f-27bc-4018-8d7f-8649cd8b0765",
              "parentUUID": "9d2ea99d-d75d-4b91-bfe6-d9ff00150aa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "23406576-4b79-479c-b3bf-04bb49eb4d0b",
              "parentUUID": "9d2ea99d-d75d-4b91-bfe6-d9ff00150aa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "a87d81e7-a4b1-43be-9125-3a3f8fa138e4",
              "parentUUID": "9d2ea99d-d75d-4b91-bfe6-d9ff00150aa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "65b6782f-a873-4541-9595-40aacfe4cc55",
              "parentUUID": "9d2ea99d-d75d-4b91-bfe6-d9ff00150aa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "c335dcb8-c344-4b5f-97e0-4683a84800c4",
              "parentUUID": "9d2ea99d-d75d-4b91-bfe6-d9ff00150aa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "54af11c0-5645-4913-9200-2ac3a1c6e135",
              "parentUUID": "9d2ea99d-d75d-4b91-bfe6-d9ff00150aa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "9b92297f-a664-41ba-9195-a502908a5f8e",
              "parentUUID": "9d2ea99d-d75d-4b91-bfe6-d9ff00150aa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "bcfcb701-b25e-47ac-bc2b-d637f6573747",
              "parentUUID": "9d2ea99d-d75d-4b91-bfe6-d9ff00150aa6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "3561d8e5-b39c-4054-bf63-d5d84c633170",
              "parentUUID": "9d2ea99d-d75d-4b91-bfe6-d9ff00150aa6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23ef2c98-c8cb-4df5-8d96-5ba05e288407",
            "453f819f-27bc-4018-8d7f-8649cd8b0765",
            "23406576-4b79-479c-b3bf-04bb49eb4d0b",
            "a87d81e7-a4b1-43be-9125-3a3f8fa138e4",
            "65b6782f-a873-4541-9595-40aacfe4cc55",
            "c335dcb8-c344-4b5f-97e0-4683a84800c4",
            "54af11c0-5645-4913-9200-2ac3a1c6e135",
            "9b92297f-a664-41ba-9195-a502908a5f8e",
            "bcfcb701-b25e-47ac-bc2b-d637f6573747",
            "3561d8e5-b39c-4054-bf63-d5d84c633170"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2bbd5e3f-19bd-4b30-9529-d0015e506690",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "b4e02d31-dbf8-4ec1-9e1e-5e7a079376be",
              "parentUUID": "2bbd5e3f-19bd-4b30-9529-d0015e506690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "9c25030e-8264-4e72-9929-0ea6a58e2e26",
              "parentUUID": "2bbd5e3f-19bd-4b30-9529-d0015e506690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "720952fa-7f6f-4387-9d85-13d2719216a0",
              "parentUUID": "2bbd5e3f-19bd-4b30-9529-d0015e506690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "215a6451-80b3-44a8-b34b-e8de48a0342d",
              "parentUUID": "2bbd5e3f-19bd-4b30-9529-d0015e506690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "0a940837-fd12-4b81-bfab-658bbed1bb3a",
              "parentUUID": "2bbd5e3f-19bd-4b30-9529-d0015e506690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "aa0e2981-a50e-4c29-ba97-6a43a6104e4c",
              "parentUUID": "2bbd5e3f-19bd-4b30-9529-d0015e506690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "3517e0e7-112b-4240-a04e-9850e1670f63",
              "parentUUID": "2bbd5e3f-19bd-4b30-9529-d0015e506690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "8e24ce16-a7ea-4720-9489-240a4a740ef0",
              "parentUUID": "2bbd5e3f-19bd-4b30-9529-d0015e506690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "b59ecb1f-bbf2-44e9-b792-c4e28544cd50",
              "parentUUID": "2bbd5e3f-19bd-4b30-9529-d0015e506690",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "696f2776-0f93-4798-bcc4-ebb16384dfe2",
              "parentUUID": "2bbd5e3f-19bd-4b30-9529-d0015e506690",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4e02d31-dbf8-4ec1-9e1e-5e7a079376be",
            "9c25030e-8264-4e72-9929-0ea6a58e2e26",
            "720952fa-7f6f-4387-9d85-13d2719216a0",
            "215a6451-80b3-44a8-b34b-e8de48a0342d",
            "0a940837-fd12-4b81-bfab-658bbed1bb3a",
            "aa0e2981-a50e-4c29-ba97-6a43a6104e4c",
            "3517e0e7-112b-4240-a04e-9850e1670f63",
            "8e24ce16-a7ea-4720-9489-240a4a740ef0",
            "b59ecb1f-bbf2-44e9-b792-c4e28544cd50",
            "696f2776-0f93-4798-bcc4-ebb16384dfe2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "0d4e8f0b-7a3f-41df-b967-ab92e549c1ab",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "016d49e2-3eed-4a46-9c4b-dc4ab3c4511e",
              "parentUUID": "0d4e8f0b-7a3f-41df-b967-ab92e549c1ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "f4a1ca6a-9e8c-42be-b15d-004fa0d741e2",
              "parentUUID": "0d4e8f0b-7a3f-41df-b967-ab92e549c1ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "8e4e0705-f431-4837-a8f2-f34cc0b37dc7",
              "parentUUID": "0d4e8f0b-7a3f-41df-b967-ab92e549c1ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "f02d5ffe-8038-428a-ab5f-7b193a259b22",
              "parentUUID": "0d4e8f0b-7a3f-41df-b967-ab92e549c1ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "dc76d8c7-1af7-4bfd-9a0c-b5a8e181b52b",
              "parentUUID": "0d4e8f0b-7a3f-41df-b967-ab92e549c1ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "acfec032-a68b-461f-87f1-398ba7d7f1a0",
              "parentUUID": "0d4e8f0b-7a3f-41df-b967-ab92e549c1ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "095ffabe-16fa-404c-af82-b709acf82a48",
              "parentUUID": "0d4e8f0b-7a3f-41df-b967-ab92e549c1ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "f72a62ed-7c5f-48a9-aee4-0fb35af0fa44",
              "parentUUID": "0d4e8f0b-7a3f-41df-b967-ab92e549c1ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "e0622cd9-df5c-4b75-84e6-9eb656dead84",
              "parentUUID": "0d4e8f0b-7a3f-41df-b967-ab92e549c1ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "9cf20510-e3e4-403d-961a-dda950685e65",
              "parentUUID": "0d4e8f0b-7a3f-41df-b967-ab92e549c1ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "016d49e2-3eed-4a46-9c4b-dc4ab3c4511e",
            "f4a1ca6a-9e8c-42be-b15d-004fa0d741e2",
            "8e4e0705-f431-4837-a8f2-f34cc0b37dc7",
            "f02d5ffe-8038-428a-ab5f-7b193a259b22",
            "dc76d8c7-1af7-4bfd-9a0c-b5a8e181b52b",
            "acfec032-a68b-461f-87f1-398ba7d7f1a0",
            "095ffabe-16fa-404c-af82-b709acf82a48",
            "f72a62ed-7c5f-48a9-aee4-0fb35af0fa44",
            "e0622cd9-df5c-4b75-84e6-9eb656dead84",
            "9cf20510-e3e4-403d-961a-dda950685e65"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "fe330a01-398e-484a-9d62-29ab9fbbd81c",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "f9b38cce-beba-47b0-8822-2f849ac4bb91",
              "parentUUID": "fe330a01-398e-484a-9d62-29ab9fbbd81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "b4c1dba0-f785-48e5-96d2-4d084ab5ec88",
              "parentUUID": "fe330a01-398e-484a-9d62-29ab9fbbd81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "3f5d0def-918d-422e-8b5a-c895986c5d06",
              "parentUUID": "fe330a01-398e-484a-9d62-29ab9fbbd81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "cfbe5a1c-79e4-401d-b513-bfed161689f0",
              "parentUUID": "fe330a01-398e-484a-9d62-29ab9fbbd81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "8e62bd58-6f03-4689-b332-53711a0ca6e8",
              "parentUUID": "fe330a01-398e-484a-9d62-29ab9fbbd81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "09f0f736-23e2-4e2d-8f26-8f26d643f149",
              "parentUUID": "fe330a01-398e-484a-9d62-29ab9fbbd81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "aba472d5-8c01-46cf-bd23-f70f7757779c",
              "parentUUID": "fe330a01-398e-484a-9d62-29ab9fbbd81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "a657464a-f697-438d-a270-9e6ebdf2fb5f",
              "parentUUID": "fe330a01-398e-484a-9d62-29ab9fbbd81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "9afacb60-443f-4400-9b05-883b557cb049",
              "parentUUID": "fe330a01-398e-484a-9d62-29ab9fbbd81c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "1e452abc-c384-4e2f-861f-325a0df4c50d",
              "parentUUID": "fe330a01-398e-484a-9d62-29ab9fbbd81c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9b38cce-beba-47b0-8822-2f849ac4bb91",
            "b4c1dba0-f785-48e5-96d2-4d084ab5ec88",
            "3f5d0def-918d-422e-8b5a-c895986c5d06",
            "cfbe5a1c-79e4-401d-b513-bfed161689f0",
            "8e62bd58-6f03-4689-b332-53711a0ca6e8",
            "09f0f736-23e2-4e2d-8f26-8f26d643f149",
            "aba472d5-8c01-46cf-bd23-f70f7757779c",
            "a657464a-f697-438d-a270-9e6ebdf2fb5f",
            "9afacb60-443f-4400-9b05-883b557cb049",
            "1e452abc-c384-4e2f-861f-325a0df4c50d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "483feba4-85da-4eea-8b85-9765085b9530",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "02e024cc-567f-4fc6-bbee-41df916828e4",
              "parentUUID": "483feba4-85da-4eea-8b85-9765085b9530",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "2bd9bd71-b4cf-4066-acbd-26421cf7db1e",
              "parentUUID": "483feba4-85da-4eea-8b85-9765085b9530",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "36827d29-33da-4073-a18c-c5e3b7a2c83b",
              "parentUUID": "483feba4-85da-4eea-8b85-9765085b9530",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "1f3d06e0-2127-4193-8f23-54183780ec30",
              "parentUUID": "483feba4-85da-4eea-8b85-9765085b9530",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "e274070c-e634-48b7-8e29-99732f2f99fe",
              "parentUUID": "483feba4-85da-4eea-8b85-9765085b9530",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "2ca1e6b4-42fa-4ee7-bcba-05adbde10b21",
              "parentUUID": "483feba4-85da-4eea-8b85-9765085b9530",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "c52ec7c3-7a93-4dbe-9e34-04f87d35a7d9",
              "parentUUID": "483feba4-85da-4eea-8b85-9765085b9530",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "aaa4ad6b-80af-413d-b871-6982b348f391",
              "parentUUID": "483feba4-85da-4eea-8b85-9765085b9530",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "5493b8c8-9304-4cde-943f-8b3457d1dfde",
              "parentUUID": "483feba4-85da-4eea-8b85-9765085b9530",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "4b21c1a2-159e-4063-b837-9e1fd0c5601d",
              "parentUUID": "483feba4-85da-4eea-8b85-9765085b9530",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02e024cc-567f-4fc6-bbee-41df916828e4",
            "2bd9bd71-b4cf-4066-acbd-26421cf7db1e",
            "36827d29-33da-4073-a18c-c5e3b7a2c83b",
            "1f3d06e0-2127-4193-8f23-54183780ec30",
            "e274070c-e634-48b7-8e29-99732f2f99fe",
            "2ca1e6b4-42fa-4ee7-bcba-05adbde10b21",
            "c52ec7c3-7a93-4dbe-9e34-04f87d35a7d9",
            "aaa4ad6b-80af-413d-b871-6982b348f391",
            "5493b8c8-9304-4cde-943f-8b3457d1dfde",
            "4b21c1a2-159e-4063-b837-9e1fd0c5601d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "808fd29f-d92b-484c-9bd1-85482274f4da",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "a420770e-bed1-44f6-beb2-8ff4e0b3fc69",
              "parentUUID": "808fd29f-d92b-484c-9bd1-85482274f4da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "1d6e5d56-23c3-42a0-a236-4f3a06fc96ad",
              "parentUUID": "808fd29f-d92b-484c-9bd1-85482274f4da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "c3ea3a93-ea7d-4872-af86-a922d171173f",
              "parentUUID": "808fd29f-d92b-484c-9bd1-85482274f4da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "d57b1d26-ab82-4393-ba51-0182b6173a30",
              "parentUUID": "808fd29f-d92b-484c-9bd1-85482274f4da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "b13bb184-746e-43d4-beb6-2aa5dfec23e3",
              "parentUUID": "808fd29f-d92b-484c-9bd1-85482274f4da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "9dfc9aff-2a53-4296-96c7-a2500ebfda4d",
              "parentUUID": "808fd29f-d92b-484c-9bd1-85482274f4da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "dfef563e-e819-438f-ad01-c3bc698e9a73",
              "parentUUID": "808fd29f-d92b-484c-9bd1-85482274f4da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "28e30058-47e7-453d-9edc-3a6b42cfbcb7",
              "parentUUID": "808fd29f-d92b-484c-9bd1-85482274f4da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "c43d1484-7d61-4f4a-8aff-e32fe8aad695",
              "parentUUID": "808fd29f-d92b-484c-9bd1-85482274f4da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "9f2c2cf3-bf1f-47f8-b34e-4683cf781510",
              "parentUUID": "808fd29f-d92b-484c-9bd1-85482274f4da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a420770e-bed1-44f6-beb2-8ff4e0b3fc69",
            "1d6e5d56-23c3-42a0-a236-4f3a06fc96ad",
            "c3ea3a93-ea7d-4872-af86-a922d171173f",
            "d57b1d26-ab82-4393-ba51-0182b6173a30",
            "b13bb184-746e-43d4-beb6-2aa5dfec23e3",
            "9dfc9aff-2a53-4296-96c7-a2500ebfda4d",
            "dfef563e-e819-438f-ad01-c3bc698e9a73",
            "28e30058-47e7-453d-9edc-3a6b42cfbcb7",
            "c43d1484-7d61-4f4a-8aff-e32fe8aad695",
            "9f2c2cf3-bf1f-47f8-b34e-4683cf781510"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c6a1ed12-e540-4ea0-8113-1ce65091cd37",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "c5232ca2-2aba-4fdc-985e-68d009ecb46f",
              "parentUUID": "c6a1ed12-e540-4ea0-8113-1ce65091cd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "64ab1a36-efdd-4342-8bef-da8e6fc3a3ae",
              "parentUUID": "c6a1ed12-e540-4ea0-8113-1ce65091cd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "f3ebd7d8-bf96-43e2-8916-8fcaa0823057",
              "parentUUID": "c6a1ed12-e540-4ea0-8113-1ce65091cd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "64291084-dce0-40fe-b202-4f02bad38142",
              "parentUUID": "c6a1ed12-e540-4ea0-8113-1ce65091cd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "ed94c284-3e91-4a5e-bbac-aa61ca1e52d3",
              "parentUUID": "c6a1ed12-e540-4ea0-8113-1ce65091cd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "fb418f34-61de-4daf-aab7-848eb4bb2a1b",
              "parentUUID": "c6a1ed12-e540-4ea0-8113-1ce65091cd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "fe554ed8-b4d1-4e49-a4e0-4d4d1e98a331",
              "parentUUID": "c6a1ed12-e540-4ea0-8113-1ce65091cd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "f17688d1-8800-4a98-99d2-a30933dc3967",
              "parentUUID": "c6a1ed12-e540-4ea0-8113-1ce65091cd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "bf66dbc5-f8fc-4f1b-8a36-0130af20a156",
              "parentUUID": "c6a1ed12-e540-4ea0-8113-1ce65091cd37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "df8121d3-81c4-4303-9af0-0a5a3f9e4731",
              "parentUUID": "c6a1ed12-e540-4ea0-8113-1ce65091cd37",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5232ca2-2aba-4fdc-985e-68d009ecb46f",
            "64ab1a36-efdd-4342-8bef-da8e6fc3a3ae",
            "f3ebd7d8-bf96-43e2-8916-8fcaa0823057",
            "64291084-dce0-40fe-b202-4f02bad38142",
            "ed94c284-3e91-4a5e-bbac-aa61ca1e52d3",
            "fb418f34-61de-4daf-aab7-848eb4bb2a1b",
            "fe554ed8-b4d1-4e49-a4e0-4d4d1e98a331",
            "f17688d1-8800-4a98-99d2-a30933dc3967",
            "bf66dbc5-f8fc-4f1b-8a36-0130af20a156",
            "df8121d3-81c4-4303-9af0-0a5a3f9e4731"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f76a6439-4b12-431e-959f-e9dff47d097f",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "e4ddf4d8-a154-47a1-93bb-1c39ecc3d8a4",
              "parentUUID": "f76a6439-4b12-431e-959f-e9dff47d097f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "e1a2b239-6d99-42b2-a579-90db90140325",
              "parentUUID": "f76a6439-4b12-431e-959f-e9dff47d097f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "386a723c-6469-40f6-a0e3-ac67d8683686",
              "parentUUID": "f76a6439-4b12-431e-959f-e9dff47d097f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "40fd2130-768b-41ef-9fb0-6f045704808b",
              "parentUUID": "f76a6439-4b12-431e-959f-e9dff47d097f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "c8fe0e2d-16c4-4ded-adbc-0fad16b3bbc4",
              "parentUUID": "f76a6439-4b12-431e-959f-e9dff47d097f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "2a50e8ae-b125-4e65-a4ca-90dac6700c3a",
              "parentUUID": "f76a6439-4b12-431e-959f-e9dff47d097f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "bb1a46e1-29ae-4529-8a54-1fd533015a9f",
              "parentUUID": "f76a6439-4b12-431e-959f-e9dff47d097f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "49161f91-b257-4414-ac58-83a4fa31c4f5",
              "parentUUID": "f76a6439-4b12-431e-959f-e9dff47d097f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "ca6fd60d-a591-44c4-bae4-c3334225b08b",
              "parentUUID": "f76a6439-4b12-431e-959f-e9dff47d097f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "5e0c656a-8c77-49dc-867a-57a9e5f0b133",
              "parentUUID": "f76a6439-4b12-431e-959f-e9dff47d097f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4ddf4d8-a154-47a1-93bb-1c39ecc3d8a4",
            "e1a2b239-6d99-42b2-a579-90db90140325",
            "386a723c-6469-40f6-a0e3-ac67d8683686",
            "40fd2130-768b-41ef-9fb0-6f045704808b",
            "c8fe0e2d-16c4-4ded-adbc-0fad16b3bbc4",
            "2a50e8ae-b125-4e65-a4ca-90dac6700c3a",
            "bb1a46e1-29ae-4529-8a54-1fd533015a9f",
            "49161f91-b257-4414-ac58-83a4fa31c4f5",
            "ca6fd60d-a591-44c4-bae4-c3334225b08b",
            "5e0c656a-8c77-49dc-867a-57a9e5f0b133"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "79029d9b-cfc7-4abb-9b18-7b80b4c82d77",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "1e946cfd-a9e7-4a62-ad8b-f3170232fc2d",
              "parentUUID": "79029d9b-cfc7-4abb-9b18-7b80b4c82d77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "cab784f5-06a5-4e43-b197-710894be9578",
              "parentUUID": "79029d9b-cfc7-4abb-9b18-7b80b4c82d77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "b6688833-e83d-4602-bdeb-d8d92edfe517",
              "parentUUID": "79029d9b-cfc7-4abb-9b18-7b80b4c82d77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "24146c69-b417-4505-aaab-155aec1ed7fa",
              "parentUUID": "79029d9b-cfc7-4abb-9b18-7b80b4c82d77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "d1896b43-fdc2-4d99-ad82-f6a2995f1e48",
              "parentUUID": "79029d9b-cfc7-4abb-9b18-7b80b4c82d77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "b1eca1e2-7da0-4a32-8e49-83d38e5069da",
              "parentUUID": "79029d9b-cfc7-4abb-9b18-7b80b4c82d77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "144d7b19-42c6-44e5-8155-808b93752131",
              "parentUUID": "79029d9b-cfc7-4abb-9b18-7b80b4c82d77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "250862ae-4ba7-4718-9b99-a642b3cab7e5",
              "parentUUID": "79029d9b-cfc7-4abb-9b18-7b80b4c82d77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "79c05828-9b7b-4da9-9f2f-a627610ba723",
              "parentUUID": "79029d9b-cfc7-4abb-9b18-7b80b4c82d77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "85d7c877-5917-46fa-b410-e0de7efdf599",
              "parentUUID": "79029d9b-cfc7-4abb-9b18-7b80b4c82d77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e946cfd-a9e7-4a62-ad8b-f3170232fc2d",
            "cab784f5-06a5-4e43-b197-710894be9578",
            "b6688833-e83d-4602-bdeb-d8d92edfe517",
            "24146c69-b417-4505-aaab-155aec1ed7fa",
            "d1896b43-fdc2-4d99-ad82-f6a2995f1e48",
            "b1eca1e2-7da0-4a32-8e49-83d38e5069da",
            "144d7b19-42c6-44e5-8155-808b93752131",
            "250862ae-4ba7-4718-9b99-a642b3cab7e5",
            "79c05828-9b7b-4da9-9f2f-a627610ba723",
            "85d7c877-5917-46fa-b410-e0de7efdf599"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "acfafebf-0185-42f9-a1fd-977e9f63a36d",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "347a98ed-f02f-4996-8de4-699f9695aef0",
              "parentUUID": "acfafebf-0185-42f9-a1fd-977e9f63a36d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "c4b03251-91e7-452c-8d27-f34b5f5c9a62",
              "parentUUID": "acfafebf-0185-42f9-a1fd-977e9f63a36d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "9816f307-2e74-4f9b-abef-33f666436308",
              "parentUUID": "acfafebf-0185-42f9-a1fd-977e9f63a36d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "8136a303-8d9c-428d-8bd8-bb8b2cc4bb91",
              "parentUUID": "acfafebf-0185-42f9-a1fd-977e9f63a36d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "0170f62d-4811-4c7a-9894-191edca351e8",
              "parentUUID": "acfafebf-0185-42f9-a1fd-977e9f63a36d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "230fdb54-b33d-4fa6-bc19-aba59400d968",
              "parentUUID": "acfafebf-0185-42f9-a1fd-977e9f63a36d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "92f03ff6-ab97-4b8f-8950-aaa6728eae65",
              "parentUUID": "acfafebf-0185-42f9-a1fd-977e9f63a36d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "501d05e8-1590-4b81-8711-b316010a522b",
              "parentUUID": "acfafebf-0185-42f9-a1fd-977e9f63a36d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "4da43fa2-e586-4ec9-8f65-7becaa7f3e9a",
              "parentUUID": "acfafebf-0185-42f9-a1fd-977e9f63a36d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "028a742c-0638-46e6-9c00-e26ba50522cc",
              "parentUUID": "acfafebf-0185-42f9-a1fd-977e9f63a36d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "347a98ed-f02f-4996-8de4-699f9695aef0",
            "c4b03251-91e7-452c-8d27-f34b5f5c9a62",
            "9816f307-2e74-4f9b-abef-33f666436308",
            "8136a303-8d9c-428d-8bd8-bb8b2cc4bb91",
            "0170f62d-4811-4c7a-9894-191edca351e8",
            "230fdb54-b33d-4fa6-bc19-aba59400d968",
            "92f03ff6-ab97-4b8f-8950-aaa6728eae65",
            "501d05e8-1590-4b81-8711-b316010a522b",
            "4da43fa2-e586-4ec9-8f65-7becaa7f3e9a",
            "028a742c-0638-46e6-9c00-e26ba50522cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "af59105c-de49-410b-bdfb-e27bd06298ad",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "ccb54d8d-c8ac-4d72-af6e-eaf0bd64696a",
              "parentUUID": "af59105c-de49-410b-bdfb-e27bd06298ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "9561ef46-e77b-46e3-a6b6-181a39703871",
              "parentUUID": "af59105c-de49-410b-bdfb-e27bd06298ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "59778630-843f-465b-b822-9fb146364c56",
              "parentUUID": "af59105c-de49-410b-bdfb-e27bd06298ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "af11692d-d984-4667-9581-db58b694523e",
              "parentUUID": "af59105c-de49-410b-bdfb-e27bd06298ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "0189ed12-c181-4c74-a3d1-f25e3e4400a8",
              "parentUUID": "af59105c-de49-410b-bdfb-e27bd06298ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "587af90f-1122-4b08-bf7a-1cae8f1f2437",
              "parentUUID": "af59105c-de49-410b-bdfb-e27bd06298ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "83ecafe2-67ab-4145-a67a-2265d90e4750",
              "parentUUID": "af59105c-de49-410b-bdfb-e27bd06298ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "4b472706-f8b3-4c3a-8511-b00b9e90b8ef",
              "parentUUID": "af59105c-de49-410b-bdfb-e27bd06298ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "8cdc770f-191e-4db2-9cb9-7990e7492ede",
              "parentUUID": "af59105c-de49-410b-bdfb-e27bd06298ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "ae5e67fc-944e-4e9f-91a1-f663354cfa12",
              "parentUUID": "af59105c-de49-410b-bdfb-e27bd06298ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ccb54d8d-c8ac-4d72-af6e-eaf0bd64696a",
            "9561ef46-e77b-46e3-a6b6-181a39703871",
            "59778630-843f-465b-b822-9fb146364c56",
            "af11692d-d984-4667-9581-db58b694523e",
            "0189ed12-c181-4c74-a3d1-f25e3e4400a8",
            "587af90f-1122-4b08-bf7a-1cae8f1f2437",
            "83ecafe2-67ab-4145-a67a-2265d90e4750",
            "4b472706-f8b3-4c3a-8511-b00b9e90b8ef",
            "8cdc770f-191e-4db2-9cb9-7990e7492ede",
            "ae5e67fc-944e-4e9f-91a1-f663354cfa12"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ffbce54f-79bc-423d-a76b-ef1a88e0cfd7",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "d4bf6627-68e6-4727-ac58-3298567cfeb0",
              "parentUUID": "ffbce54f-79bc-423d-a76b-ef1a88e0cfd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "7f77b56e-9c81-480b-a585-1238a47693be",
              "parentUUID": "ffbce54f-79bc-423d-a76b-ef1a88e0cfd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "a0a88ed8-4955-4e63-8fb7-01b598902a0a",
              "parentUUID": "ffbce54f-79bc-423d-a76b-ef1a88e0cfd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "1730a1a1-ab8b-4c54-90e9-af7d4830e09f",
              "parentUUID": "ffbce54f-79bc-423d-a76b-ef1a88e0cfd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "709ca877-84a9-45c8-ba94-1c861edbaa29",
              "parentUUID": "ffbce54f-79bc-423d-a76b-ef1a88e0cfd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "6e7960b4-f82f-4f1d-bb43-a979b7921e91",
              "parentUUID": "ffbce54f-79bc-423d-a76b-ef1a88e0cfd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "bb14679d-27c5-4111-b523-85807b484716",
              "parentUUID": "ffbce54f-79bc-423d-a76b-ef1a88e0cfd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "35c749fb-6f8f-49b5-b7af-42359414cf1b",
              "parentUUID": "ffbce54f-79bc-423d-a76b-ef1a88e0cfd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "1b73c822-e7e8-4ee6-8828-fe1e3441d33c",
              "parentUUID": "ffbce54f-79bc-423d-a76b-ef1a88e0cfd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "50e1d848-1c8c-4f6e-a5ab-ab864163a19b",
              "parentUUID": "ffbce54f-79bc-423d-a76b-ef1a88e0cfd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4bf6627-68e6-4727-ac58-3298567cfeb0",
            "7f77b56e-9c81-480b-a585-1238a47693be",
            "a0a88ed8-4955-4e63-8fb7-01b598902a0a",
            "1730a1a1-ab8b-4c54-90e9-af7d4830e09f",
            "709ca877-84a9-45c8-ba94-1c861edbaa29",
            "6e7960b4-f82f-4f1d-bb43-a979b7921e91",
            "bb14679d-27c5-4111-b523-85807b484716",
            "35c749fb-6f8f-49b5-b7af-42359414cf1b",
            "1b73c822-e7e8-4ee6-8828-fe1e3441d33c",
            "50e1d848-1c8c-4f6e-a5ab-ab864163a19b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c9ce1483-d2e4-468f-9bb0-3940b4409c09",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "c68e5ba2-59e4-4e0c-8d35-b7c2deb3b150",
              "parentUUID": "c9ce1483-d2e4-468f-9bb0-3940b4409c09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "4f77257e-e258-4985-8bd4-22d8f80f9512",
              "parentUUID": "c9ce1483-d2e4-468f-9bb0-3940b4409c09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "4fce3f42-df18-4569-aeda-d0b4d7727408",
              "parentUUID": "c9ce1483-d2e4-468f-9bb0-3940b4409c09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "95d602c0-2452-46b5-acf2-67499f2960ed",
              "parentUUID": "c9ce1483-d2e4-468f-9bb0-3940b4409c09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "f692e519-9859-4a9c-bb5c-278e75f6c477",
              "parentUUID": "c9ce1483-d2e4-468f-9bb0-3940b4409c09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "88d6977a-e786-4c13-9465-09dc72edda74",
              "parentUUID": "c9ce1483-d2e4-468f-9bb0-3940b4409c09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "6ac34611-df29-46bc-8d15-14086f92bc29",
              "parentUUID": "c9ce1483-d2e4-468f-9bb0-3940b4409c09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "af7b0d1d-df49-4d6f-8de5-204d82a50f9a",
              "parentUUID": "c9ce1483-d2e4-468f-9bb0-3940b4409c09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "09e86849-0ce8-42ac-833b-b7285164a7f2",
              "parentUUID": "c9ce1483-d2e4-468f-9bb0-3940b4409c09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "c26d7c9e-f373-488b-98fe-9d5b2995e1d4",
              "parentUUID": "c9ce1483-d2e4-468f-9bb0-3940b4409c09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c68e5ba2-59e4-4e0c-8d35-b7c2deb3b150",
            "4f77257e-e258-4985-8bd4-22d8f80f9512",
            "4fce3f42-df18-4569-aeda-d0b4d7727408",
            "95d602c0-2452-46b5-acf2-67499f2960ed",
            "f692e519-9859-4a9c-bb5c-278e75f6c477",
            "88d6977a-e786-4c13-9465-09dc72edda74",
            "6ac34611-df29-46bc-8d15-14086f92bc29",
            "af7b0d1d-df49-4d6f-8de5-204d82a50f9a",
            "09e86849-0ce8-42ac-833b-b7285164a7f2",
            "c26d7c9e-f373-488b-98fe-9d5b2995e1d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "797e879a-4c34-44e7-8917-152539b73d5b",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "51a95458-8fe0-4a6f-8e47-dcc93aa858c8",
              "parentUUID": "797e879a-4c34-44e7-8917-152539b73d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "b470f597-9e12-4bfa-9a75-3d1d2ac361e6",
              "parentUUID": "797e879a-4c34-44e7-8917-152539b73d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "b768f70e-fb92-44fc-914d-70d73b108b0d",
              "parentUUID": "797e879a-4c34-44e7-8917-152539b73d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "68f87503-223b-4844-9856-10e7275667b8",
              "parentUUID": "797e879a-4c34-44e7-8917-152539b73d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "31823bac-8c6d-494e-a2b8-702fa3aa39e9",
              "parentUUID": "797e879a-4c34-44e7-8917-152539b73d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "758699ec-13de-4183-b6bc-23c8bb982ba1",
              "parentUUID": "797e879a-4c34-44e7-8917-152539b73d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "6087ac0c-78f4-4413-9a74-17e4948844cf",
              "parentUUID": "797e879a-4c34-44e7-8917-152539b73d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "698539ba-ee02-48b6-8da5-16ab0a911c0c",
              "parentUUID": "797e879a-4c34-44e7-8917-152539b73d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "7a5bb2ac-9b30-4597-b98d-c686b69f0179",
              "parentUUID": "797e879a-4c34-44e7-8917-152539b73d5b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "3add7db7-7b03-4fad-b650-07b95023d21b",
              "parentUUID": "797e879a-4c34-44e7-8917-152539b73d5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51a95458-8fe0-4a6f-8e47-dcc93aa858c8",
            "b470f597-9e12-4bfa-9a75-3d1d2ac361e6",
            "b768f70e-fb92-44fc-914d-70d73b108b0d",
            "68f87503-223b-4844-9856-10e7275667b8",
            "31823bac-8c6d-494e-a2b8-702fa3aa39e9",
            "758699ec-13de-4183-b6bc-23c8bb982ba1",
            "6087ac0c-78f4-4413-9a74-17e4948844cf",
            "698539ba-ee02-48b6-8da5-16ab0a911c0c",
            "7a5bb2ac-9b30-4597-b98d-c686b69f0179",
            "3add7db7-7b03-4fad-b650-07b95023d21b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4952bc18-8209-4d73-b90f-76ea177efa55",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "4a338341-8dc6-4518-ade5-dc136c8248bf",
              "parentUUID": "4952bc18-8209-4d73-b90f-76ea177efa55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "4bcd2b2b-c426-42aa-8630-6615f8b86a08",
              "parentUUID": "4952bc18-8209-4d73-b90f-76ea177efa55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "48244eeb-da4f-46b1-aff8-36f1d0a247de",
              "parentUUID": "4952bc18-8209-4d73-b90f-76ea177efa55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "1c7fc1c5-2a1f-4dbd-bb9b-e969fbb95792",
              "parentUUID": "4952bc18-8209-4d73-b90f-76ea177efa55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "9c9232ad-3337-4b1f-89ae-86d466a92bac",
              "parentUUID": "4952bc18-8209-4d73-b90f-76ea177efa55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "7af04b15-a004-4d30-a924-00666f4407f6",
              "parentUUID": "4952bc18-8209-4d73-b90f-76ea177efa55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "21d3a38b-366e-4135-b292-6fef620ab63e",
              "parentUUID": "4952bc18-8209-4d73-b90f-76ea177efa55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "08c5636a-90b3-437b-bbb8-47e5db676a2f",
              "parentUUID": "4952bc18-8209-4d73-b90f-76ea177efa55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "1ae7f383-a717-401b-9e99-c227a4587464",
              "parentUUID": "4952bc18-8209-4d73-b90f-76ea177efa55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "3a8b212c-0688-4960-8631-1d63ffedbe7a",
              "parentUUID": "4952bc18-8209-4d73-b90f-76ea177efa55",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a338341-8dc6-4518-ade5-dc136c8248bf",
            "4bcd2b2b-c426-42aa-8630-6615f8b86a08",
            "48244eeb-da4f-46b1-aff8-36f1d0a247de",
            "1c7fc1c5-2a1f-4dbd-bb9b-e969fbb95792",
            "9c9232ad-3337-4b1f-89ae-86d466a92bac",
            "7af04b15-a004-4d30-a924-00666f4407f6",
            "21d3a38b-366e-4135-b292-6fef620ab63e",
            "08c5636a-90b3-437b-bbb8-47e5db676a2f",
            "1ae7f383-a717-401b-9e99-c227a4587464",
            "3a8b212c-0688-4960-8631-1d63ffedbe7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d7fb3c43-1cb3-4c97-8ded-0702df1e763c",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "c32987ee-9091-4725-9c37-f5181ff28333",
              "parentUUID": "d7fb3c43-1cb3-4c97-8ded-0702df1e763c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "69b6df4d-8bf5-4003-859d-b6b167c1fb51",
              "parentUUID": "d7fb3c43-1cb3-4c97-8ded-0702df1e763c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "7a8cf959-79ca-4047-84d1-f0f1c7428b50",
              "parentUUID": "d7fb3c43-1cb3-4c97-8ded-0702df1e763c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "4fe8016d-88c1-4fe2-94e6-d5e4f8c0399a",
              "parentUUID": "d7fb3c43-1cb3-4c97-8ded-0702df1e763c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "5cad049a-9130-4e57-93fb-657ceb2c2a46",
              "parentUUID": "d7fb3c43-1cb3-4c97-8ded-0702df1e763c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "f97479d9-7e45-4559-bf4c-c73dd26b2cc1",
              "parentUUID": "d7fb3c43-1cb3-4c97-8ded-0702df1e763c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "7d7b88c0-a26c-47d2-b9bf-49fc50351dcc",
              "parentUUID": "d7fb3c43-1cb3-4c97-8ded-0702df1e763c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "5a95fa4d-2fc7-496f-aca2-3fde129e609b",
              "parentUUID": "d7fb3c43-1cb3-4c97-8ded-0702df1e763c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "85a5e65c-ba0d-45b5-a178-4902616c592d",
              "parentUUID": "d7fb3c43-1cb3-4c97-8ded-0702df1e763c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "8cef63a1-0bfc-41c0-a7ec-504115d7caaa",
              "parentUUID": "d7fb3c43-1cb3-4c97-8ded-0702df1e763c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c32987ee-9091-4725-9c37-f5181ff28333",
            "69b6df4d-8bf5-4003-859d-b6b167c1fb51",
            "7a8cf959-79ca-4047-84d1-f0f1c7428b50",
            "4fe8016d-88c1-4fe2-94e6-d5e4f8c0399a",
            "5cad049a-9130-4e57-93fb-657ceb2c2a46",
            "f97479d9-7e45-4559-bf4c-c73dd26b2cc1",
            "7d7b88c0-a26c-47d2-b9bf-49fc50351dcc",
            "5a95fa4d-2fc7-496f-aca2-3fde129e609b",
            "85a5e65c-ba0d-45b5-a178-4902616c592d",
            "8cef63a1-0bfc-41c0-a7ec-504115d7caaa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "98ba854c-e219-479e-aa2e-dfcab876f06c",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "cbc07072-29ae-4241-90d5-ca65a2a5b3cd",
              "parentUUID": "98ba854c-e219-479e-aa2e-dfcab876f06c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "fc17ca6a-b3e9-4985-8ae0-3cf29602f256",
              "parentUUID": "98ba854c-e219-479e-aa2e-dfcab876f06c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "cb206f3d-e6af-41e9-a0c2-130786de6c99",
              "parentUUID": "98ba854c-e219-479e-aa2e-dfcab876f06c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "00985677-96ec-4a84-a326-92c4f777b880",
              "parentUUID": "98ba854c-e219-479e-aa2e-dfcab876f06c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "db7ee112-e5e9-48b8-bc5e-6a2a3d4967a6",
              "parentUUID": "98ba854c-e219-479e-aa2e-dfcab876f06c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "a970d187-6dc1-4c12-8e03-154a67f844c0",
              "parentUUID": "98ba854c-e219-479e-aa2e-dfcab876f06c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "2698b002-2e35-4deb-aacf-31e6ad1bbd22",
              "parentUUID": "98ba854c-e219-479e-aa2e-dfcab876f06c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "745fca91-1a4d-410e-a7f5-53a52423d16a",
              "parentUUID": "98ba854c-e219-479e-aa2e-dfcab876f06c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "4a059015-ad65-4e18-be52-63f218771aa7",
              "parentUUID": "98ba854c-e219-479e-aa2e-dfcab876f06c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "9f435a49-b9c1-4114-be45-8d1b3d40f807",
              "parentUUID": "98ba854c-e219-479e-aa2e-dfcab876f06c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cbc07072-29ae-4241-90d5-ca65a2a5b3cd",
            "fc17ca6a-b3e9-4985-8ae0-3cf29602f256",
            "cb206f3d-e6af-41e9-a0c2-130786de6c99",
            "00985677-96ec-4a84-a326-92c4f777b880",
            "db7ee112-e5e9-48b8-bc5e-6a2a3d4967a6",
            "a970d187-6dc1-4c12-8e03-154a67f844c0",
            "2698b002-2e35-4deb-aacf-31e6ad1bbd22",
            "745fca91-1a4d-410e-a7f5-53a52423d16a",
            "4a059015-ad65-4e18-be52-63f218771aa7",
            "9f435a49-b9c1-4114-be45-8d1b3d40f807"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7f68965b-4013-4589-9b88-2f54e71fb73b",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "4967ddae-1ca2-417a-9858-9b54c5717805",
              "parentUUID": "7f68965b-4013-4589-9b88-2f54e71fb73b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "7d065f63-5e42-48e8-9e7a-f8c9bac12469",
              "parentUUID": "7f68965b-4013-4589-9b88-2f54e71fb73b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "c78ff76d-67b8-4640-aa1a-a616aed6fc65",
              "parentUUID": "7f68965b-4013-4589-9b88-2f54e71fb73b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "5ca99d7e-5b7c-4ac9-abdd-062f4005a259",
              "parentUUID": "7f68965b-4013-4589-9b88-2f54e71fb73b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "a76f8ce0-d499-47ed-b5e4-46d24af30897",
              "parentUUID": "7f68965b-4013-4589-9b88-2f54e71fb73b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "0c00e8a1-2d38-4b34-a1d2-68b71b00a118",
              "parentUUID": "7f68965b-4013-4589-9b88-2f54e71fb73b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "95623ac1-4677-4547-ba3b-2c2eec7c45bd",
              "parentUUID": "7f68965b-4013-4589-9b88-2f54e71fb73b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "7dd32ba7-6a49-428e-bd8f-357c4cfd5bd1",
              "parentUUID": "7f68965b-4013-4589-9b88-2f54e71fb73b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "6054e9ed-23b7-460a-b8ee-521873699c6a",
              "parentUUID": "7f68965b-4013-4589-9b88-2f54e71fb73b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "b5d384ad-65fc-4576-bf59-d3537d02ed22",
              "parentUUID": "7f68965b-4013-4589-9b88-2f54e71fb73b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4967ddae-1ca2-417a-9858-9b54c5717805",
            "7d065f63-5e42-48e8-9e7a-f8c9bac12469",
            "c78ff76d-67b8-4640-aa1a-a616aed6fc65",
            "5ca99d7e-5b7c-4ac9-abdd-062f4005a259",
            "a76f8ce0-d499-47ed-b5e4-46d24af30897",
            "0c00e8a1-2d38-4b34-a1d2-68b71b00a118",
            "95623ac1-4677-4547-ba3b-2c2eec7c45bd",
            "7dd32ba7-6a49-428e-bd8f-357c4cfd5bd1",
            "6054e9ed-23b7-460a-b8ee-521873699c6a",
            "b5d384ad-65fc-4576-bf59-d3537d02ed22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7a1f355f-8370-48a5-8d00-db85200de397",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "338d96bf-2318-4f99-8555-6200136741ed",
              "parentUUID": "7a1f355f-8370-48a5-8d00-db85200de397",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "66f688c4-b2fc-4b1d-99fd-0cd81d67c187",
              "parentUUID": "7a1f355f-8370-48a5-8d00-db85200de397",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "204e1d62-d472-4f25-b6a7-12d2515f4c84",
              "parentUUID": "7a1f355f-8370-48a5-8d00-db85200de397",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "88881ec8-1e57-42ed-882c-94d81e743641",
              "parentUUID": "7a1f355f-8370-48a5-8d00-db85200de397",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "3ac809b5-7e9e-4f5d-8d67-a5afd582b371",
              "parentUUID": "7a1f355f-8370-48a5-8d00-db85200de397",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "1200ca6d-1403-4807-a71f-7a25e502f69f",
              "parentUUID": "7a1f355f-8370-48a5-8d00-db85200de397",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "0b07d3cc-7017-4e9e-8be3-4119a5cd1e79",
              "parentUUID": "7a1f355f-8370-48a5-8d00-db85200de397",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "50a1cc73-2c77-4bb3-9bf7-ba44105b4827",
              "parentUUID": "7a1f355f-8370-48a5-8d00-db85200de397",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "5f1e9216-2d9d-47a5-a15e-4ec8be38bbc5",
              "parentUUID": "7a1f355f-8370-48a5-8d00-db85200de397",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "d63b3e05-c941-43d1-a322-12f55d568682",
              "parentUUID": "7a1f355f-8370-48a5-8d00-db85200de397",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "338d96bf-2318-4f99-8555-6200136741ed",
            "66f688c4-b2fc-4b1d-99fd-0cd81d67c187",
            "204e1d62-d472-4f25-b6a7-12d2515f4c84",
            "88881ec8-1e57-42ed-882c-94d81e743641",
            "3ac809b5-7e9e-4f5d-8d67-a5afd582b371",
            "1200ca6d-1403-4807-a71f-7a25e502f69f",
            "0b07d3cc-7017-4e9e-8be3-4119a5cd1e79",
            "50a1cc73-2c77-4bb3-9bf7-ba44105b4827",
            "5f1e9216-2d9d-47a5-a15e-4ec8be38bbc5",
            "d63b3e05-c941-43d1-a322-12f55d568682"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9381ec55-b76d-4efe-96cf-22cdac5ac647",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "6a3cb3ff-6bf6-4b2b-bc9f-cd47af6bf9ce",
              "parentUUID": "9381ec55-b76d-4efe-96cf-22cdac5ac647",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "5b7964ff-dc9a-482a-b1ec-3adf85da5ac0",
              "parentUUID": "9381ec55-b76d-4efe-96cf-22cdac5ac647",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "172897fa-52bd-4f44-aaf5-fd7fec66b0b2",
              "parentUUID": "9381ec55-b76d-4efe-96cf-22cdac5ac647",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "03d7dab8-236c-43a0-9a41-bcc595398d2e",
              "parentUUID": "9381ec55-b76d-4efe-96cf-22cdac5ac647",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "9691d45d-dcd6-4e37-a0e9-a6839304896b",
              "parentUUID": "9381ec55-b76d-4efe-96cf-22cdac5ac647",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "d5ac8e34-64b8-4dde-8485-ab9f1fb7f6b0",
              "parentUUID": "9381ec55-b76d-4efe-96cf-22cdac5ac647",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "b56e247c-1087-42f9-a1e7-bc19ac34ef7f",
              "parentUUID": "9381ec55-b76d-4efe-96cf-22cdac5ac647",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "46aab08e-58cd-4349-8f71-10e15ae7fbf8",
              "parentUUID": "9381ec55-b76d-4efe-96cf-22cdac5ac647",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "1dc33e1c-fb2d-4be0-a36b-1e10eb05a86e",
              "parentUUID": "9381ec55-b76d-4efe-96cf-22cdac5ac647",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "6b86949a-301a-41ee-9b25-477031d98f5c",
              "parentUUID": "9381ec55-b76d-4efe-96cf-22cdac5ac647",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a3cb3ff-6bf6-4b2b-bc9f-cd47af6bf9ce",
            "5b7964ff-dc9a-482a-b1ec-3adf85da5ac0",
            "172897fa-52bd-4f44-aaf5-fd7fec66b0b2",
            "03d7dab8-236c-43a0-9a41-bcc595398d2e",
            "9691d45d-dcd6-4e37-a0e9-a6839304896b",
            "d5ac8e34-64b8-4dde-8485-ab9f1fb7f6b0",
            "b56e247c-1087-42f9-a1e7-bc19ac34ef7f",
            "46aab08e-58cd-4349-8f71-10e15ae7fbf8",
            "1dc33e1c-fb2d-4be0-a36b-1e10eb05a86e",
            "6b86949a-301a-41ee-9b25-477031d98f5c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5d70f7e0-79b9-4fe5-8562-2d6d9eda574d",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "6a259bea-0dec-4be2-9320-c79b95c426fc",
              "parentUUID": "5d70f7e0-79b9-4fe5-8562-2d6d9eda574d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "9547a3a2-c563-48d8-a9da-7fdcd353c735",
              "parentUUID": "5d70f7e0-79b9-4fe5-8562-2d6d9eda574d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "fc254fe0-827c-4e9e-9ec4-e5f8ac1c00a3",
              "parentUUID": "5d70f7e0-79b9-4fe5-8562-2d6d9eda574d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "a43c80cd-a058-457a-b894-3044ebf518d3",
              "parentUUID": "5d70f7e0-79b9-4fe5-8562-2d6d9eda574d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "14100dd8-0a70-4e00-9c14-c91d746019b8",
              "parentUUID": "5d70f7e0-79b9-4fe5-8562-2d6d9eda574d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "72039656-3fbc-46f5-ada4-04fb4a0dfd8f",
              "parentUUID": "5d70f7e0-79b9-4fe5-8562-2d6d9eda574d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "ac56cfd6-99d1-4b92-bfc9-b1465dd460d8",
              "parentUUID": "5d70f7e0-79b9-4fe5-8562-2d6d9eda574d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "490a2264-ebfc-42c4-aa39-c1824d3bba06",
              "parentUUID": "5d70f7e0-79b9-4fe5-8562-2d6d9eda574d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "91d49f39-23c3-459f-9c07-df9299636846",
              "parentUUID": "5d70f7e0-79b9-4fe5-8562-2d6d9eda574d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "af974e26-742f-4b7c-bce5-be9051389b31",
              "parentUUID": "5d70f7e0-79b9-4fe5-8562-2d6d9eda574d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a259bea-0dec-4be2-9320-c79b95c426fc",
            "9547a3a2-c563-48d8-a9da-7fdcd353c735",
            "fc254fe0-827c-4e9e-9ec4-e5f8ac1c00a3",
            "a43c80cd-a058-457a-b894-3044ebf518d3",
            "14100dd8-0a70-4e00-9c14-c91d746019b8",
            "72039656-3fbc-46f5-ada4-04fb4a0dfd8f",
            "ac56cfd6-99d1-4b92-bfc9-b1465dd460d8",
            "490a2264-ebfc-42c4-aa39-c1824d3bba06",
            "91d49f39-23c3-459f-9c07-df9299636846",
            "af974e26-742f-4b7c-bce5-be9051389b31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b54da81e-2b8e-4d9c-9da4-34353742a99e",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "8433b7d1-cb1d-44b9-81ab-2aeae765cf3b",
              "parentUUID": "b54da81e-2b8e-4d9c-9da4-34353742a99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "62a1209d-fd6b-4d84-80c9-b53a13d248d3",
              "parentUUID": "b54da81e-2b8e-4d9c-9da4-34353742a99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "d01638b1-8fb1-44cf-8a5a-d9a7614f754c",
              "parentUUID": "b54da81e-2b8e-4d9c-9da4-34353742a99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "789fe023-2094-4264-a8af-c569c0044eab",
              "parentUUID": "b54da81e-2b8e-4d9c-9da4-34353742a99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "4c970aaa-ea44-4d3c-8fc6-ba0a28f9985a",
              "parentUUID": "b54da81e-2b8e-4d9c-9da4-34353742a99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "ba2f652d-e834-4c9d-8adf-5ca460a813f1",
              "parentUUID": "b54da81e-2b8e-4d9c-9da4-34353742a99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "951c8fcc-4bce-4cf1-bd84-9716ef4d4692",
              "parentUUID": "b54da81e-2b8e-4d9c-9da4-34353742a99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "d69a3ef9-14ea-4b28-a9e3-6ef06b277e71",
              "parentUUID": "b54da81e-2b8e-4d9c-9da4-34353742a99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "815371c2-c92c-423c-8581-2ca6341a3b1e",
              "parentUUID": "b54da81e-2b8e-4d9c-9da4-34353742a99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "0086f111-59f3-43f3-815c-6b4bb0406706",
              "parentUUID": "b54da81e-2b8e-4d9c-9da4-34353742a99e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8433b7d1-cb1d-44b9-81ab-2aeae765cf3b",
            "62a1209d-fd6b-4d84-80c9-b53a13d248d3",
            "d01638b1-8fb1-44cf-8a5a-d9a7614f754c",
            "789fe023-2094-4264-a8af-c569c0044eab",
            "4c970aaa-ea44-4d3c-8fc6-ba0a28f9985a",
            "ba2f652d-e834-4c9d-8adf-5ca460a813f1",
            "951c8fcc-4bce-4cf1-bd84-9716ef4d4692",
            "d69a3ef9-14ea-4b28-a9e3-6ef06b277e71",
            "815371c2-c92c-423c-8581-2ca6341a3b1e",
            "0086f111-59f3-43f3-815c-6b4bb0406706"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "c62e8d64-e217-4e38-b99d-b0d8a6b3b61a",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "6f9d9265-8b78-4db3-885b-b48830cfd9b4",
              "parentUUID": "c62e8d64-e217-4e38-b99d-b0d8a6b3b61a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "c9781c8e-dd2a-438e-8950-850295dfd7a0",
              "parentUUID": "c62e8d64-e217-4e38-b99d-b0d8a6b3b61a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "5892377c-458f-4a82-9b78-48489f7dcb78",
              "parentUUID": "c62e8d64-e217-4e38-b99d-b0d8a6b3b61a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "9772144f-9b87-4f10-871c-1e9e55fac59d",
              "parentUUID": "c62e8d64-e217-4e38-b99d-b0d8a6b3b61a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "6d2d3553-2aa3-4468-b370-e49314da8d4a",
              "parentUUID": "c62e8d64-e217-4e38-b99d-b0d8a6b3b61a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "83ba4e44-d052-47ab-9af1-fad753134cce",
              "parentUUID": "c62e8d64-e217-4e38-b99d-b0d8a6b3b61a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "fdb40c91-f88f-4bbf-90d8-1f95bf4a408a",
              "parentUUID": "c62e8d64-e217-4e38-b99d-b0d8a6b3b61a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "239c894f-f93d-41b6-a677-ea913a04c032",
              "parentUUID": "c62e8d64-e217-4e38-b99d-b0d8a6b3b61a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "ecbaa95a-8122-46c3-84c0-cc0ced66f384",
              "parentUUID": "c62e8d64-e217-4e38-b99d-b0d8a6b3b61a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "4afcec17-a5ac-4f6b-bd14-dd124ee7fd27",
              "parentUUID": "c62e8d64-e217-4e38-b99d-b0d8a6b3b61a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f9d9265-8b78-4db3-885b-b48830cfd9b4",
            "c9781c8e-dd2a-438e-8950-850295dfd7a0",
            "5892377c-458f-4a82-9b78-48489f7dcb78",
            "9772144f-9b87-4f10-871c-1e9e55fac59d",
            "6d2d3553-2aa3-4468-b370-e49314da8d4a",
            "83ba4e44-d052-47ab-9af1-fad753134cce",
            "fdb40c91-f88f-4bbf-90d8-1f95bf4a408a",
            "239c894f-f93d-41b6-a677-ea913a04c032",
            "ecbaa95a-8122-46c3-84c0-cc0ced66f384",
            "4afcec17-a5ac-4f6b-bd14-dd124ee7fd27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "64cc9bd0-e8fa-471a-991f-5e158ab3de7c",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "83e53da3-ca09-4df5-aeb7-e8827cfb7bab",
              "parentUUID": "64cc9bd0-e8fa-471a-991f-5e158ab3de7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "7f4d9cb5-6e20-4776-88af-38035642219a",
              "parentUUID": "64cc9bd0-e8fa-471a-991f-5e158ab3de7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "080e7383-b7d2-4ad6-81d0-7ac34ac08636",
              "parentUUID": "64cc9bd0-e8fa-471a-991f-5e158ab3de7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "442afc7b-11e5-4a3e-a0d4-fbd5e7d241e0",
              "parentUUID": "64cc9bd0-e8fa-471a-991f-5e158ab3de7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "e20453cb-b7dd-441c-8024-cbbe8af4b87e",
              "parentUUID": "64cc9bd0-e8fa-471a-991f-5e158ab3de7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "96c72f41-f12c-4216-bd9b-38e2ba6755e3",
              "parentUUID": "64cc9bd0-e8fa-471a-991f-5e158ab3de7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "bb373773-8dae-41e0-b5be-2f1fada86b9c",
              "parentUUID": "64cc9bd0-e8fa-471a-991f-5e158ab3de7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "5b82fd8b-9ed5-43ce-9b30-a67e957a3939",
              "parentUUID": "64cc9bd0-e8fa-471a-991f-5e158ab3de7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "43734a33-d639-46cb-91e9-7b466408e458",
              "parentUUID": "64cc9bd0-e8fa-471a-991f-5e158ab3de7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "c606b10f-0ac0-4e07-89d0-88ab0faaa7f9",
              "parentUUID": "64cc9bd0-e8fa-471a-991f-5e158ab3de7c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83e53da3-ca09-4df5-aeb7-e8827cfb7bab",
            "7f4d9cb5-6e20-4776-88af-38035642219a",
            "080e7383-b7d2-4ad6-81d0-7ac34ac08636",
            "442afc7b-11e5-4a3e-a0d4-fbd5e7d241e0",
            "e20453cb-b7dd-441c-8024-cbbe8af4b87e",
            "96c72f41-f12c-4216-bd9b-38e2ba6755e3",
            "bb373773-8dae-41e0-b5be-2f1fada86b9c",
            "5b82fd8b-9ed5-43ce-9b30-a67e957a3939",
            "43734a33-d639-46cb-91e9-7b466408e458",
            "c606b10f-0ac0-4e07-89d0-88ab0faaa7f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8f43e918-117d-4ced-9610-0c762ca4a75c",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "ff5a8192-68b1-4007-97fe-b08a753fddad",
              "parentUUID": "8f43e918-117d-4ced-9610-0c762ca4a75c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "ecf05a53-ed7a-4ab4-af73-a4319084088a",
              "parentUUID": "8f43e918-117d-4ced-9610-0c762ca4a75c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "076a5cd0-8aae-4078-8441-7d7d014f34e3",
              "parentUUID": "8f43e918-117d-4ced-9610-0c762ca4a75c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "7cb0ec90-59f7-445e-b1db-02e67e98a239",
              "parentUUID": "8f43e918-117d-4ced-9610-0c762ca4a75c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "bb426747-edd3-4df1-81c7-6972a00f1d92",
              "parentUUID": "8f43e918-117d-4ced-9610-0c762ca4a75c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "95d3ec30-d8c2-4fd5-90c0-8b0353b589d7",
              "parentUUID": "8f43e918-117d-4ced-9610-0c762ca4a75c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "68720321-bc5d-4212-9acd-42e6277a1190",
              "parentUUID": "8f43e918-117d-4ced-9610-0c762ca4a75c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "261ba342-2b5d-4c1c-b02d-39554dd23225",
              "parentUUID": "8f43e918-117d-4ced-9610-0c762ca4a75c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "5b9f6cf9-fb4f-4577-9d20-190fc5579fa4",
              "parentUUID": "8f43e918-117d-4ced-9610-0c762ca4a75c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "06ea483f-d665-4488-9acc-7b2f79349835",
              "parentUUID": "8f43e918-117d-4ced-9610-0c762ca4a75c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff5a8192-68b1-4007-97fe-b08a753fddad",
            "ecf05a53-ed7a-4ab4-af73-a4319084088a",
            "076a5cd0-8aae-4078-8441-7d7d014f34e3",
            "7cb0ec90-59f7-445e-b1db-02e67e98a239",
            "bb426747-edd3-4df1-81c7-6972a00f1d92",
            "95d3ec30-d8c2-4fd5-90c0-8b0353b589d7",
            "68720321-bc5d-4212-9acd-42e6277a1190",
            "261ba342-2b5d-4c1c-b02d-39554dd23225",
            "5b9f6cf9-fb4f-4577-9d20-190fc5579fa4",
            "06ea483f-d665-4488-9acc-7b2f79349835"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "ba7fec47-0007-462b-9e00-b768a5ee687c",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "ad52003a-af26-4bf8-a5af-40ba36c9a191",
              "parentUUID": "ba7fec47-0007-462b-9e00-b768a5ee687c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "3b5077d1-2f82-4c75-827f-39f73083f931",
              "parentUUID": "ba7fec47-0007-462b-9e00-b768a5ee687c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "dbea82f0-0d74-4406-980e-ca148680de32",
              "parentUUID": "ba7fec47-0007-462b-9e00-b768a5ee687c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "76761688-369c-49cd-a1f9-5a741c48fdab",
              "parentUUID": "ba7fec47-0007-462b-9e00-b768a5ee687c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "d8d7e4d3-e27c-450e-969f-bb15239aa944",
              "parentUUID": "ba7fec47-0007-462b-9e00-b768a5ee687c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "49a5cdab-70f7-44e2-8860-db242a41e425",
              "parentUUID": "ba7fec47-0007-462b-9e00-b768a5ee687c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "1c577e51-f3f7-4ba8-962c-7b219affb9a1",
              "parentUUID": "ba7fec47-0007-462b-9e00-b768a5ee687c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "3d02f180-1f57-4a75-9556-c8e5de2cec6a",
              "parentUUID": "ba7fec47-0007-462b-9e00-b768a5ee687c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "6ec9ce59-76a3-4c1e-ac33-0eef6d506074",
              "parentUUID": "ba7fec47-0007-462b-9e00-b768a5ee687c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "c5f9fe89-766b-4da6-94b4-5e4289ebcd9a",
              "parentUUID": "ba7fec47-0007-462b-9e00-b768a5ee687c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad52003a-af26-4bf8-a5af-40ba36c9a191",
            "3b5077d1-2f82-4c75-827f-39f73083f931",
            "dbea82f0-0d74-4406-980e-ca148680de32",
            "76761688-369c-49cd-a1f9-5a741c48fdab",
            "d8d7e4d3-e27c-450e-969f-bb15239aa944",
            "49a5cdab-70f7-44e2-8860-db242a41e425",
            "1c577e51-f3f7-4ba8-962c-7b219affb9a1",
            "3d02f180-1f57-4a75-9556-c8e5de2cec6a",
            "6ec9ce59-76a3-4c1e-ac33-0eef6d506074",
            "c5f9fe89-766b-4da6-94b4-5e4289ebcd9a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1bc598d2-9128-47ca-9e80-92c3960c19fd",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "aadc6cd5-976b-41a3-9cfc-957bb1c0c20a",
              "parentUUID": "1bc598d2-9128-47ca-9e80-92c3960c19fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "735d6058-6a48-4416-b0fe-197ec841344b",
              "parentUUID": "1bc598d2-9128-47ca-9e80-92c3960c19fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "09df7450-a98f-4df4-b00a-631c14a67bcb",
              "parentUUID": "1bc598d2-9128-47ca-9e80-92c3960c19fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "57e0efce-032f-4080-bdb7-d915199e64da",
              "parentUUID": "1bc598d2-9128-47ca-9e80-92c3960c19fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "10d8e4db-3d6e-49da-8ee0-b397ebf359d6",
              "parentUUID": "1bc598d2-9128-47ca-9e80-92c3960c19fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "fc25818f-8ee7-4937-bfd8-3acd5a126f4a",
              "parentUUID": "1bc598d2-9128-47ca-9e80-92c3960c19fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "126befdd-7c5a-4dec-8269-6bb464deb465",
              "parentUUID": "1bc598d2-9128-47ca-9e80-92c3960c19fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "6eb5b66a-6efc-4806-8101-b185fce20725",
              "parentUUID": "1bc598d2-9128-47ca-9e80-92c3960c19fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "0df6265b-6a91-43dd-913f-c443b33a1bcc",
              "parentUUID": "1bc598d2-9128-47ca-9e80-92c3960c19fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "cc08b56d-5286-42af-a3cc-0a1de81dc5f4",
              "parentUUID": "1bc598d2-9128-47ca-9e80-92c3960c19fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aadc6cd5-976b-41a3-9cfc-957bb1c0c20a",
            "735d6058-6a48-4416-b0fe-197ec841344b",
            "09df7450-a98f-4df4-b00a-631c14a67bcb",
            "57e0efce-032f-4080-bdb7-d915199e64da",
            "10d8e4db-3d6e-49da-8ee0-b397ebf359d6",
            "fc25818f-8ee7-4937-bfd8-3acd5a126f4a",
            "126befdd-7c5a-4dec-8269-6bb464deb465",
            "6eb5b66a-6efc-4806-8101-b185fce20725",
            "0df6265b-6a91-43dd-913f-c443b33a1bcc",
            "cc08b56d-5286-42af-a3cc-0a1de81dc5f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "86fde0b4-cabf-4de3-a5ed-7604b05327e1",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "ea98543d-4983-4d09-b9f0-a90a9b8355b8",
              "parentUUID": "86fde0b4-cabf-4de3-a5ed-7604b05327e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "66db534d-8685-42c7-9e5f-1af83b480552",
              "parentUUID": "86fde0b4-cabf-4de3-a5ed-7604b05327e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "e06737f0-e3df-427b-8828-9cc35167af83",
              "parentUUID": "86fde0b4-cabf-4de3-a5ed-7604b05327e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "a0c9e9e6-692e-49bb-9c4a-e32090091bf1",
              "parentUUID": "86fde0b4-cabf-4de3-a5ed-7604b05327e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "e40bbda9-9d88-428c-8443-efdf39e15cee",
              "parentUUID": "86fde0b4-cabf-4de3-a5ed-7604b05327e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "3925fa83-e2f9-407b-925e-74104dba34bc",
              "parentUUID": "86fde0b4-cabf-4de3-a5ed-7604b05327e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "3623608b-cc7e-454b-a712-7814bcc1889c",
              "parentUUID": "86fde0b4-cabf-4de3-a5ed-7604b05327e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "7e4a1ca9-4469-455c-94f5-e949e696e5ce",
              "parentUUID": "86fde0b4-cabf-4de3-a5ed-7604b05327e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "4dbe38ac-237a-46bf-9d14-2cd53a5c0ee3",
              "parentUUID": "86fde0b4-cabf-4de3-a5ed-7604b05327e1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "721b029a-caf1-4f96-ad29-7a5b268bf2ee",
              "parentUUID": "86fde0b4-cabf-4de3-a5ed-7604b05327e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea98543d-4983-4d09-b9f0-a90a9b8355b8",
            "66db534d-8685-42c7-9e5f-1af83b480552",
            "e06737f0-e3df-427b-8828-9cc35167af83",
            "a0c9e9e6-692e-49bb-9c4a-e32090091bf1",
            "e40bbda9-9d88-428c-8443-efdf39e15cee",
            "3925fa83-e2f9-407b-925e-74104dba34bc",
            "3623608b-cc7e-454b-a712-7814bcc1889c",
            "7e4a1ca9-4469-455c-94f5-e949e696e5ce",
            "4dbe38ac-237a-46bf-9d14-2cd53a5c0ee3",
            "721b029a-caf1-4f96-ad29-7a5b268bf2ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "e126e425-ecd2-4cf5-abf3-f451eb3d0abc",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "8c769488-ae6e-4c34-b15b-15155e98e3d0",
              "parentUUID": "e126e425-ecd2-4cf5-abf3-f451eb3d0abc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "26d76ef1-e6ea-4294-9879-ddf70226b7cd",
              "parentUUID": "e126e425-ecd2-4cf5-abf3-f451eb3d0abc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "bd0cc63c-d44c-4c2e-a5b3-2664941c762e",
              "parentUUID": "e126e425-ecd2-4cf5-abf3-f451eb3d0abc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "3763784b-fce2-4ab2-8888-5799e7d51803",
              "parentUUID": "e126e425-ecd2-4cf5-abf3-f451eb3d0abc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "91a26b0d-d2de-4d73-ab63-55a11b1870e7",
              "parentUUID": "e126e425-ecd2-4cf5-abf3-f451eb3d0abc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "33683ff2-6dd7-4f37-9354-8fa260416e4d",
              "parentUUID": "e126e425-ecd2-4cf5-abf3-f451eb3d0abc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "8b418532-c254-4ced-9b01-a3fd8bdc7d31",
              "parentUUID": "e126e425-ecd2-4cf5-abf3-f451eb3d0abc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "52abe574-004e-42fb-9941-7708f9a3b50f",
              "parentUUID": "e126e425-ecd2-4cf5-abf3-f451eb3d0abc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "d7a90ee1-70b3-419f-b45f-8f72bc670d09",
              "parentUUID": "e126e425-ecd2-4cf5-abf3-f451eb3d0abc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "7a6e9bff-fb3b-4261-9586-3ccd8e749294",
              "parentUUID": "e126e425-ecd2-4cf5-abf3-f451eb3d0abc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c769488-ae6e-4c34-b15b-15155e98e3d0",
            "26d76ef1-e6ea-4294-9879-ddf70226b7cd",
            "bd0cc63c-d44c-4c2e-a5b3-2664941c762e",
            "3763784b-fce2-4ab2-8888-5799e7d51803",
            "91a26b0d-d2de-4d73-ab63-55a11b1870e7",
            "33683ff2-6dd7-4f37-9354-8fa260416e4d",
            "8b418532-c254-4ced-9b01-a3fd8bdc7d31",
            "52abe574-004e-42fb-9941-7708f9a3b50f",
            "d7a90ee1-70b3-419f-b45f-8f72bc670d09",
            "7a6e9bff-fb3b-4261-9586-3ccd8e749294"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "dbac2975-f0ec-4370-b233-bd71d0928963",
          "title": "Test Respin",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "check the wild is not appeared in 1 and 5 reels",
              "fullTitle": "Test Respin check the wild is not appeared in 1 and 5 reels",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\nCheckWildCome(funcResultRSpin);",
              "err": {},
              "uuid": "c41d034f-8642-4cb0-9ad4-87b029494e4f",
              "parentUUID": "dbac2975-f0ec-4370-b233-bd71d0928963",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has wild if there is feature \"respin\"",
              "fullTitle": "Test Respin check response has wild if there is feature \"respin\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckWildIfThereIsFeatureRespin(res, funcResultRSpin);",
              "err": {},
              "uuid": "fdf95d11-48ae-40fb-8796-0013b4aad217",
              "parentUUID": "dbac2975-f0ec-4370-b233-bd71d0928963",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check response has feature \"respin\" if there is Wild",
              "fullTitle": "Test Respin check response has feature \"respin\" if there is Wild",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResultRSpin } = data;\nCheckFeatureRespinIfThereIsWild(funcResultRSpin, res);",
              "err": {},
              "uuid": "66d86965-75e2-4ba8-a897-2b54bc23c206",
              "parentUUID": "dbac2975-f0ec-4370-b233-bd71d0928963",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check a maximum of 3 respins after a Wild activates a respin",
              "fullTitle": "Test Respin check a maximum of 3 respins after a Wild activates a respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin } = data;\ncheckMax3Respin(funcResultRSpin);",
              "err": {},
              "uuid": "cfe24482-26a9-4fe2-b7c6-f021cb5eaa9f",
              "parentUUID": "dbac2975-f0ec-4370-b233-bd71d0928963",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of Wild in respin",
              "fullTitle": "Test Respin check correct position of Wild in respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { actionsSpin, funcResultRSpin } = data;\nCheckPositionWild(actionsSpin, funcResultRSpin);",
              "err": {},
              "uuid": "e506378b-31ee-4dcc-8a6c-5d8e93bb91f0",
              "parentUUID": "dbac2975-f0ec-4370-b233-bd71d0928963",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "win is not added to balance before respin",
              "fullTitle": "Test Respin win is not added to balance before respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nChekBalanceBeforeRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "1c517330-edc3-4811-9b75-1dfa97524aa1",
              "parentUUID": "dbac2975-f0ec-4370-b233-bd71d0928963",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "respin win is added to balance",
              "fullTitle": "Test Respin respin win is added to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { funcResultRSpin, actionsSpin, nextActionsSpin, res } = data;\nCheckBalanceAfterRespin(funcResultRSpin, actionsSpin, nextActionsSpin, res);",
              "err": {},
              "uuid": "435abdb0-11a3-4b62-be29-4e8cbb4bab73",
              "parentUUID": "dbac2975-f0ec-4370-b233-bd71d0928963",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change during respin",
              "fullTitle": "Test Respin balance is not change during respin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, res, funcResultRSpin } = data;\nCheckBalanceDuringRespin(actionsSpin, nextActionsSpin, res, funcResultRSpin);",
              "err": {},
              "uuid": "ad7bbb99-d71a-43a9-8e84-25a99bca4eb2",
              "parentUUID": "dbac2975-f0ec-4370-b233-bd71d0928963",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check balance do not change respin => freespin",
              "fullTitle": "Test Respin  check balance do not change respin => freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { funcResultRSpin, nextActionsSpin, actionsSpin, res } = data;\nCheckBalanceRespinBeforFS(funcResultRSpin, nextActionsSpin, actionsSpin, res);",
              "err": {},
              "uuid": "c3f8aa22-6ce9-4347-9db8-75440cdf6cbc",
              "parentUUID": "dbac2975-f0ec-4370-b233-bd71d0928963",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual WinRSpin",
              "fullTitle": "Test Respin check correct accrual WinRSpin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { winLines, res, funcResultRSpin } = data;\nCheckCorrectAccrualWinRSpin(winLines, res, funcResultRSpin);",
              "err": {},
              "uuid": "faca96aa-4b31-405c-8c74-cd73b814b067",
              "parentUUID": "dbac2975-f0ec-4370-b233-bd71d0928963",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c41d034f-8642-4cb0-9ad4-87b029494e4f",
            "fdf95d11-48ae-40fb-8796-0013b4aad217",
            "66d86965-75e2-4ba8-a897-2b54bc23c206",
            "cfe24482-26a9-4fe2-b7c6-f021cb5eaa9f",
            "e506378b-31ee-4dcc-8a6c-5d8e93bb91f0",
            "1c517330-edc3-4811-9b75-1dfa97524aa1",
            "435abdb0-11a3-4b62-be29-4e8cbb4bab73",
            "ad7bbb99-d71a-43a9-8e84-25a99bca4eb2",
            "c3f8aa22-6ce9-4347-9db8-75440cdf6cbc",
            "faca96aa-4b31-405c-8c74-cd73b814b067"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 300000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}