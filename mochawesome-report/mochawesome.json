{
  "stats": {
    "suites": 50,
    "tests": 800,
    "passes": 800,
    "pending": 0,
    "failures": 0,
    "start": "2020-11-18T12:02:35.503Z",
    "end": "2020-11-18T12:03:15.391Z",
    "duration": 39888,
    "testsRegistered": 800,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "52f36185-a50f-440f-bc86-147452fb3fd7",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
          "title": "Test 10Lines game: 30, 34 -  0",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 801,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "26668022-8014-4154-a06c-a5da8d7ae748",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "16fb52e4-c01a-406a-85fe-2a4a5aaf6adf",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e15d177d-ab36-46f1-b2ea-781e8216bf36",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "15799b1b-a781-4815-a6b3-c419df769b37",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "e6fd304d-1b1b-4ea4-8626-7ef9ae1903b7",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "70f0cd38-8022-475c-a451-b39ddbc9a13f",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "2de84292-a12e-4009-83d9-2f8654cf9b88",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "7d077571-511e-47ef-8d09-92a62d4200c3",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8c07a9e3-c522-4d03-bc96-d015493e8081",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "08b9dcfe-28b6-4273-ae03-212f58c8fbaa",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6b865580-36a9-4576-89e0-e0abac8545ef",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "061a3200-a224-4bd7-9a28-0da071d9479f",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "ac16072f-41b3-4892-adab-fc8ad3ae9761",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "45a9b8e1-966c-441a-aa0b-39fae3d847f8",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "5dae323f-6dba-446e-9302-d0486ae0ccb0",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "9c130030-14d3-4cdf-b346-5ebf17a21a53",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e6bf94b2-7f17-4008-90d7-8f01047d3c4b",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  0 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "1065be8f-6d58-4710-a894-2537caad77e2",
              "parentUUID": "133c5d53-fef1-44fe-bca9-1d985e5f5adc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e15d177d-ab36-46f1-b2ea-781e8216bf36",
            "15799b1b-a781-4815-a6b3-c419df769b37",
            "e6fd304d-1b1b-4ea4-8626-7ef9ae1903b7",
            "70f0cd38-8022-475c-a451-b39ddbc9a13f",
            "2de84292-a12e-4009-83d9-2f8654cf9b88",
            "7d077571-511e-47ef-8d09-92a62d4200c3",
            "8c07a9e3-c522-4d03-bc96-d015493e8081",
            "08b9dcfe-28b6-4273-ae03-212f58c8fbaa",
            "6b865580-36a9-4576-89e0-e0abac8545ef",
            "061a3200-a224-4bd7-9a28-0da071d9479f",
            "ac16072f-41b3-4892-adab-fc8ad3ae9761",
            "45a9b8e1-966c-441a-aa0b-39fae3d847f8",
            "5dae323f-6dba-446e-9302-d0486ae0ccb0",
            "9c130030-14d3-4cdf-b346-5ebf17a21a53",
            "e6bf94b2-7f17-4008-90d7-8f01047d3c4b",
            "1065be8f-6d58-4710-a894-2537caad77e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
          "title": "Test 10Lines game: 30, 34 -  1",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 776,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7d83db17-3a51-4c42-8f4b-8f694cf2273b",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "56ab4f7e-5aff-4ebc-9aec-6947c06035b3",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "1344ac27-b4ed-483b-b1f0-285f9799db85",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "e1cb70aa-ff06-4129-bbe8-fef7e9315479",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "d7d61738-d757-4b9b-aa61-363464166b2b",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "823238d7-064d-4aaf-8ebf-48b37dcf0d3e",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "fefba8fc-b837-45c3-a702-8fd8aad9a6e1",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "aa25c56e-d82f-4dfc-bc6e-f1de04830445",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "47c5ab58-2cb9-4b89-ba46-24815aa0fce4",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "8e3d81e0-71d7-4503-ab1a-7b9ee14e7cf3",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "572cd68f-a916-481b-9394-28aefb1fefdc",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c15a5a3c-df3f-493d-bbec-11938f947223",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "751e1a9a-06bf-4333-9c00-28cd2c8ce497",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "611e9904-b5d2-4255-9f84-1cfab1a6b909",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "761f2ff2-a888-445d-8b3b-caec8881d925",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "06d4d220-9167-43e2-9c3b-7acff2e41d34",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0741aecc-d36b-49ce-a403-7e43bd463c68",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  1 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6e0adc38-aa0a-4059-a042-1ca230207f3f",
              "parentUUID": "1fd8f8ee-9735-4f65-9c57-c47559de90ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1344ac27-b4ed-483b-b1f0-285f9799db85",
            "e1cb70aa-ff06-4129-bbe8-fef7e9315479",
            "d7d61738-d757-4b9b-aa61-363464166b2b",
            "823238d7-064d-4aaf-8ebf-48b37dcf0d3e",
            "fefba8fc-b837-45c3-a702-8fd8aad9a6e1",
            "aa25c56e-d82f-4dfc-bc6e-f1de04830445",
            "47c5ab58-2cb9-4b89-ba46-24815aa0fce4",
            "8e3d81e0-71d7-4503-ab1a-7b9ee14e7cf3",
            "572cd68f-a916-481b-9394-28aefb1fefdc",
            "c15a5a3c-df3f-493d-bbec-11938f947223",
            "751e1a9a-06bf-4333-9c00-28cd2c8ce497",
            "611e9904-b5d2-4255-9f84-1cfab1a6b909",
            "761f2ff2-a888-445d-8b3b-caec8881d925",
            "06d4d220-9167-43e2-9c3b-7acff2e41d34",
            "0741aecc-d36b-49ce-a403-7e43bd463c68",
            "6e0adc38-aa0a-4059-a042-1ca230207f3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
          "title": "Test 10Lines game: 30, 34 -  2",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 796,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f60b8803-7608-4fe2-bfde-3a244d5f2b1c",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "dba792f7-f878-40d6-a3b4-1890391dd019",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "fd97ec94-1f31-4a67-9065-cd8f91e49c4f",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "0930cc73-fa83-4037-9769-24fce366a354",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "03f57864-dd67-4a44-86c9-29e934ed82b8",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "35dcb412-b65c-45fc-ae0d-fdfde0d80292",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "df409c8e-2b23-4d36-97df-131a6af4457e",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "e54fd1aa-55ac-45a4-81b4-6dfd9316de19",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4282d748-fee4-4a8b-b4bf-5b26e7b67d85",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "dc4d3aa6-d75d-4ce5-9e74-118f86282eb6",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "60e76b12-f366-4537-a190-6c487da9a315",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8c78a1a8-784f-4a36-a746-108accb58f67",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "b245528e-e066-4389-9060-cf932e05412b",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "4ceafc22-acd4-4c32-b7e5-a745443e1d11",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "da900afa-1ce7-446b-9e61-bc79874dde64",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "d34831a6-e0b5-4d20-a725-b4fef6b400a4",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "1a73ffb3-3933-4bdb-98c2-ba80cc4618a9",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  2 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "35450c28-4167-4557-ac6c-b91ba68b33ec",
              "parentUUID": "a3f849b2-c0b5-4ffa-85ac-f87af4f3f139",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd97ec94-1f31-4a67-9065-cd8f91e49c4f",
            "0930cc73-fa83-4037-9769-24fce366a354",
            "03f57864-dd67-4a44-86c9-29e934ed82b8",
            "35dcb412-b65c-45fc-ae0d-fdfde0d80292",
            "df409c8e-2b23-4d36-97df-131a6af4457e",
            "e54fd1aa-55ac-45a4-81b4-6dfd9316de19",
            "4282d748-fee4-4a8b-b4bf-5b26e7b67d85",
            "dc4d3aa6-d75d-4ce5-9e74-118f86282eb6",
            "60e76b12-f366-4537-a190-6c487da9a315",
            "8c78a1a8-784f-4a36-a746-108accb58f67",
            "b245528e-e066-4389-9060-cf932e05412b",
            "4ceafc22-acd4-4c32-b7e5-a745443e1d11",
            "da900afa-1ce7-446b-9e61-bc79874dde64",
            "d34831a6-e0b5-4d20-a725-b4fef6b400a4",
            "1a73ffb3-3933-4bdb-98c2-ba80cc4618a9",
            "35450c28-4167-4557-ac6c-b91ba68b33ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1c6b1522-860b-40df-b267-878628eae369",
          "title": "Test 10Lines game: 30, 34 -  3",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 505,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d93580fc-6252-4b28-9529-39be793ac0c9",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "3c02f9a3-8ba8-437c-8c87-25265c5bc748",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "1710286f-6754-469c-96fa-d3dbca05fa28",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "4c0e13ab-0988-446c-9f6b-448c81d8558c",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "05c04426-bd66-4712-a38d-f0a868478daa",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6e39ec98-be95-4394-b3d5-efd0d4d8f86d",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "7a3673e8-496b-4469-beda-3db8959ac400",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "87436256-98a2-4cd7-8c01-24ddd128f5b8",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "90d83b3f-dfe2-40e4-b660-7444c132b423",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "2a185836-d9c4-44f0-8aff-b2f7146dab68",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ef34f9d8-728e-4f05-a39c-2c1c6294a984",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "efd3971e-261a-4884-83e1-65aa627f499c",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "9b7270f2-ddf4-43b6-820b-c7cd728ce30a",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "2375c796-e3f3-45c2-9857-9e82f85d050a",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "2c3b6a90-78ab-4596-9b24-4d14d19b235a",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "4baebb61-5754-402a-97b8-4ea708c9e637",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "722618f6-5fa4-46c3-9bde-680319e50177",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  3 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "55ac1b42-0ae2-484f-ab6a-21172f6ad733",
              "parentUUID": "1c6b1522-860b-40df-b267-878628eae369",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1710286f-6754-469c-96fa-d3dbca05fa28",
            "4c0e13ab-0988-446c-9f6b-448c81d8558c",
            "05c04426-bd66-4712-a38d-f0a868478daa",
            "6e39ec98-be95-4394-b3d5-efd0d4d8f86d",
            "7a3673e8-496b-4469-beda-3db8959ac400",
            "87436256-98a2-4cd7-8c01-24ddd128f5b8",
            "90d83b3f-dfe2-40e4-b660-7444c132b423",
            "2a185836-d9c4-44f0-8aff-b2f7146dab68",
            "ef34f9d8-728e-4f05-a39c-2c1c6294a984",
            "efd3971e-261a-4884-83e1-65aa627f499c",
            "9b7270f2-ddf4-43b6-820b-c7cd728ce30a",
            "2375c796-e3f3-45c2-9857-9e82f85d050a",
            "2c3b6a90-78ab-4596-9b24-4d14d19b235a",
            "4baebb61-5754-402a-97b8-4ea708c9e637",
            "722618f6-5fa4-46c3-9bde-680319e50177",
            "55ac1b42-0ae2-484f-ab6a-21172f6ad733"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7134059e-5673-49b1-b246-7e19ce413de9",
          "title": "Test 10Lines game: 30, 34 -  4",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 604,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d1bb2228-f058-46f2-92f6-4526f2ed1db9",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "f68498a4-d416-41be-afb7-78585dc3c628",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "ccdae3b8-7cc2-44d0-b44e-66dff64a11de",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "37aaad9e-ff4c-4220-9048-3245d2b07fe1",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "0e14ff00-d068-4b12-b744-871fef9eb096",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "b7ed8d20-6489-426b-8d67-7365284d21d0",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "2cc28947-6a11-44d7-be96-39b4ba57a4bd",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a9e7c661-1538-4b7e-bfe4-5cb18807bc02",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4f5a4c54-6385-422e-8eaf-d43bcbdb7351",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "443c7b72-4a8d-4856-8edd-04e36be3ebf4",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f1305ad6-caf6-4f83-965c-869776ab95bf",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "11b350b2-513a-466c-b23e-da913a4b231f",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "b4e4f482-2fed-49fe-ac4d-26fc1887a81e",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "73b68844-02d2-49a5-8b73-014c8348bf8b",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "a76f7c4b-84b1-4e74-97c8-63a006422397",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "26f79c41-5592-4fad-8560-e638b55f91e8",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "6c1dd15a-11b1-44d7-b4d3-c37122628485",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  4 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "00fa1b8f-fcb0-4fc1-8d6c-9e6c8d4658cb",
              "parentUUID": "7134059e-5673-49b1-b246-7e19ce413de9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ccdae3b8-7cc2-44d0-b44e-66dff64a11de",
            "37aaad9e-ff4c-4220-9048-3245d2b07fe1",
            "0e14ff00-d068-4b12-b744-871fef9eb096",
            "b7ed8d20-6489-426b-8d67-7365284d21d0",
            "2cc28947-6a11-44d7-be96-39b4ba57a4bd",
            "a9e7c661-1538-4b7e-bfe4-5cb18807bc02",
            "4f5a4c54-6385-422e-8eaf-d43bcbdb7351",
            "443c7b72-4a8d-4856-8edd-04e36be3ebf4",
            "f1305ad6-caf6-4f83-965c-869776ab95bf",
            "11b350b2-513a-466c-b23e-da913a4b231f",
            "b4e4f482-2fed-49fe-ac4d-26fc1887a81e",
            "73b68844-02d2-49a5-8b73-014c8348bf8b",
            "a76f7c4b-84b1-4e74-97c8-63a006422397",
            "26f79c41-5592-4fad-8560-e638b55f91e8",
            "6c1dd15a-11b1-44d7-b4d3-c37122628485",
            "00fa1b8f-fcb0-4fc1-8d6c-9e6c8d4658cb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
          "title": "Test 10Lines game: 30, 34 -  5",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 659,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c4d44da6-46f9-40aa-8420-47ad77c19475",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "b4980174-63e4-44d4-80f2-e2960dea31ad",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "9450c737-219d-4452-880e-bed7f50e9ac7",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "41f2daa2-3ef7-42a8-be10-da09b4f45dd6",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "8d29af13-9197-45d7-8241-892d32b742fa",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "f2549793-2c5e-4682-96fc-9e5221f8c210",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "9170e011-08e3-46e1-aff6-a5d6f5bcb75b",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "90bc069e-bc45-4907-9df6-eed5f7ebd177",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ccd4879e-0d87-4805-b6bf-e1a2cad8670e",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "67d623b7-6f31-46c4-8ce6-14b70ac6edd4",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6f8c6dce-0f3a-4cb5-ae87-bd2513e8aa9c",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "21ad6939-457d-4230-8a8a-ec7befc13f87",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "ead5bab6-aa7b-4717-8a49-0fb4fd306ea0",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "e4c1213b-b218-42f0-8455-dc30a5bea30a",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "783ac8ab-6472-48eb-b96c-b0da0edd55f3",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "e10d9619-fd91-449b-ba7d-a8c57737d350",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "9728fdef-eec9-426f-994e-c85af17729f6",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  5 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "26e58e2a-aa39-4344-a46b-13f78a426e9b",
              "parentUUID": "590d5291-0d8b-4258-ad6e-0308f9e6aeae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9450c737-219d-4452-880e-bed7f50e9ac7",
            "41f2daa2-3ef7-42a8-be10-da09b4f45dd6",
            "8d29af13-9197-45d7-8241-892d32b742fa",
            "f2549793-2c5e-4682-96fc-9e5221f8c210",
            "9170e011-08e3-46e1-aff6-a5d6f5bcb75b",
            "90bc069e-bc45-4907-9df6-eed5f7ebd177",
            "ccd4879e-0d87-4805-b6bf-e1a2cad8670e",
            "67d623b7-6f31-46c4-8ce6-14b70ac6edd4",
            "6f8c6dce-0f3a-4cb5-ae87-bd2513e8aa9c",
            "21ad6939-457d-4230-8a8a-ec7befc13f87",
            "ead5bab6-aa7b-4717-8a49-0fb4fd306ea0",
            "e4c1213b-b218-42f0-8455-dc30a5bea30a",
            "783ac8ab-6472-48eb-b96c-b0da0edd55f3",
            "e10d9619-fd91-449b-ba7d-a8c57737d350",
            "9728fdef-eec9-426f-994e-c85af17729f6",
            "26e58e2a-aa39-4344-a46b-13f78a426e9b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
          "title": "Test 10Lines game: 30, 34 -  6",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 663,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4baa5949-6a4f-447d-be3f-51713b7d3357",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "2a8a53b1-02d3-45e8-9db3-5328d0b68d12",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "1ef94617-db16-47e8-9cc8-53f0b5c3f771",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "4397f89c-a758-4692-a29d-6d373c4cce60",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "cfabad8d-4b5e-4736-91a7-df8cb337f0f8",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "5486f82e-5f16-4200-9586-e72c56b11ab5",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "0b4adf62-b431-4667-bf9c-06b63342c92e",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "6e1245a6-e9d7-4b92-a9fa-2575c67c9fa6",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "624fa277-679d-40a4-aa9a-60bd3d5f0eed",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "300c49ef-c8f5-4e08-9ebf-3f2f42efa4b9",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ee210895-4fa7-4bb1-9b61-4dd670726a9a",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f9d74069-7c3a-4d50-9a06-fb99afe747ff",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "3c315075-c110-4db8-8a76-9611afebe610",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "cf41aed7-1aed-47a2-adcd-7c217f39f276",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "679cd1d2-8f98-41da-ac5f-2f916a75bb2c",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "c542fd0b-8b7b-4f88-9081-e6e4f6b53273",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "35721af9-65df-4389-af59-a45faa730129",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  6 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "fbf1c74f-46c2-4fe5-a00e-f3d3eb6d78d2",
              "parentUUID": "52f3c86c-2fbc-4238-aa27-c1ebbb78fe63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ef94617-db16-47e8-9cc8-53f0b5c3f771",
            "4397f89c-a758-4692-a29d-6d373c4cce60",
            "cfabad8d-4b5e-4736-91a7-df8cb337f0f8",
            "5486f82e-5f16-4200-9586-e72c56b11ab5",
            "0b4adf62-b431-4667-bf9c-06b63342c92e",
            "6e1245a6-e9d7-4b92-a9fa-2575c67c9fa6",
            "624fa277-679d-40a4-aa9a-60bd3d5f0eed",
            "300c49ef-c8f5-4e08-9ebf-3f2f42efa4b9",
            "ee210895-4fa7-4bb1-9b61-4dd670726a9a",
            "f9d74069-7c3a-4d50-9a06-fb99afe747ff",
            "3c315075-c110-4db8-8a76-9611afebe610",
            "cf41aed7-1aed-47a2-adcd-7c217f39f276",
            "679cd1d2-8f98-41da-ac5f-2f916a75bb2c",
            "c542fd0b-8b7b-4f88-9081-e6e4f6b53273",
            "35721af9-65df-4389-af59-a45faa730129",
            "fbf1c74f-46c2-4fe5-a00e-f3d3eb6d78d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
          "title": "Test 10Lines game: 30, 34 -  7",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 499,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f2654089-b26a-4a08-8589-d1daa7c19519",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "f2b29eff-8ffd-4ae5-8803-c2fda6f6be56",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "358a6883-9861-42b8-96b5-bcd5c1fb9809",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "004d5386-aef8-4594-a262-a7f6d91e9fe8",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "cf4956f7-d711-4a90-8da0-b952b9e70863",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d45c2d80-03fe-4597-95d6-277915f97152",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "f99da20a-2eb8-48d8-96d8-673c50947f9a",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "93a4a574-abe6-4e9d-ad66-bf37e5a991a3",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "05b6cab2-15f0-44f4-8d55-1b56dd38180c",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "5e7b0acb-9b83-4c07-b5a4-15b8bba1da1d",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "51d45408-d098-48b1-8526-fbe0e9f036c6",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bb4df795-34be-4e85-b351-d4824af179ea",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "4f1c350a-6462-4d6c-bbd7-765f98a1a650",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "3e38a5e6-b0f5-4eda-86ec-09a681987097",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "abe468ed-b1f6-408f-a0b1-574b1d8453d4",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "4df5a8cc-db3f-459e-b697-1ee4b909ceab",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "dd83cbc3-278c-4513-9388-32ac9d91aaf2",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  7 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ccbffca2-3365-41e9-83ce-2e27adde5d63",
              "parentUUID": "b81fc661-6ef0-4b2b-8ea7-cd5f9d66fc53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "358a6883-9861-42b8-96b5-bcd5c1fb9809",
            "004d5386-aef8-4594-a262-a7f6d91e9fe8",
            "cf4956f7-d711-4a90-8da0-b952b9e70863",
            "d45c2d80-03fe-4597-95d6-277915f97152",
            "f99da20a-2eb8-48d8-96d8-673c50947f9a",
            "93a4a574-abe6-4e9d-ad66-bf37e5a991a3",
            "05b6cab2-15f0-44f4-8d55-1b56dd38180c",
            "5e7b0acb-9b83-4c07-b5a4-15b8bba1da1d",
            "51d45408-d098-48b1-8526-fbe0e9f036c6",
            "bb4df795-34be-4e85-b351-d4824af179ea",
            "4f1c350a-6462-4d6c-bbd7-765f98a1a650",
            "3e38a5e6-b0f5-4eda-86ec-09a681987097",
            "abe468ed-b1f6-408f-a0b1-574b1d8453d4",
            "4df5a8cc-db3f-459e-b697-1ee4b909ceab",
            "dd83cbc3-278c-4513-9388-32ac9d91aaf2",
            "ccbffca2-3365-41e9-83ce-2e27adde5d63"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
          "title": "Test 10Lines game: 30, 34 -  8",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 719,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ccbf85e2-67cf-4fdf-989f-df3aadc580d2",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "2096278a-6d33-45f1-a690-90edd2ea1f92",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "8b825b71-b732-4ee3-8ebf-364867ebd4ec",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "41def01d-56e4-4ac7-955f-699f00174bcf",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 check correct position Scatter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "4d2219a0-a795-4dfe-826b-8284957bdf35",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d5af65fb-6d6d-4900-af66-d62cb4497586",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "4474c90c-ceda-4615-8669-2fc4a33949b0",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "31bc3c76-ba71-48f9-9517-38a810b5823c",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6af8c2ba-d4fb-47e1-8f49-3f4a656e8704",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "2852baa6-1b35-4eee-a856-f574832b73a8",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "019aa20a-5664-45b5-a721-00a801b4943d",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9351826a-188a-4f07-8ade-59582bb552cf",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "9d684b21-4354-48d6-b82d-2115c51ca314",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "6a779f00-fe0a-430a-be49-62670a0cff0a",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "2f6b369b-6967-4e92-ac31-5fed66b73f0c",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "02550334-2212-498d-8077-fb083651e807",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "6c53870b-7641-4560-a3ef-2c3fa5563ea4",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  8 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3822cf34-ed07-414b-bb84-e29a23414a55",
              "parentUUID": "b1f61e98-1a6b-49b9-bec6-ecef2a5a06ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b825b71-b732-4ee3-8ebf-364867ebd4ec",
            "41def01d-56e4-4ac7-955f-699f00174bcf",
            "4d2219a0-a795-4dfe-826b-8284957bdf35",
            "d5af65fb-6d6d-4900-af66-d62cb4497586",
            "4474c90c-ceda-4615-8669-2fc4a33949b0",
            "31bc3c76-ba71-48f9-9517-38a810b5823c",
            "6af8c2ba-d4fb-47e1-8f49-3f4a656e8704",
            "2852baa6-1b35-4eee-a856-f574832b73a8",
            "019aa20a-5664-45b5-a721-00a801b4943d",
            "9351826a-188a-4f07-8ade-59582bb552cf",
            "9d684b21-4354-48d6-b82d-2115c51ca314",
            "6a779f00-fe0a-430a-be49-62670a0cff0a",
            "2f6b369b-6967-4e92-ac31-5fed66b73f0c",
            "02550334-2212-498d-8077-fb083651e807",
            "6c53870b-7641-4560-a3ef-2c3fa5563ea4",
            "3822cf34-ed07-414b-bb84-e29a23414a55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
          "title": "Test 10Lines game: 30, 34 -  9",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 612,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c3a723a3-7a8b-472d-907c-7942524be337",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "f375b506-d4c0-4a0d-ab12-ded8917ae88f",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "542c0536-0d95-4c70-bd41-5865c8188eb2",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "08b0d7fa-0126-4bc9-bc4e-f2fe8437398f",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "605f2a6b-8011-4208-a89b-437410170f81",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "000feedd-9118-47fb-a476-8630e2683c78",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "d807728b-fedc-4462-a5cf-03048f3059d1",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f21075ef-6d2e-47b2-97a8-5951a169b801",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e4b47320-cb17-4188-b555-c38020cd8641",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "15483bf0-593f-4cb8-bddd-81aa52a47083",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c1e9cddd-2625-4d91-ad02-1078689cc73f",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "caf9ca8e-aeb4-48bc-8703-f5f9bbc60659",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "babf845b-a58c-45f7-87f9-1f33df80ac2c",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "01fbdec9-85e7-4969-a0eb-3dadd1cf7433",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "00f660e2-b0c2-40d8-9cb2-791117bbeac3",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "a0aa73b4-354e-4d39-b920-0279a0d4aa0e",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "031a5039-72f1-4ff7-abdf-64f6bcced42f",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  9 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e74ff965-cfc6-49ce-a91f-1777e7316860",
              "parentUUID": "43e09dd2-9f9c-480b-81c2-b056fc48ec6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "542c0536-0d95-4c70-bd41-5865c8188eb2",
            "08b0d7fa-0126-4bc9-bc4e-f2fe8437398f",
            "605f2a6b-8011-4208-a89b-437410170f81",
            "000feedd-9118-47fb-a476-8630e2683c78",
            "d807728b-fedc-4462-a5cf-03048f3059d1",
            "f21075ef-6d2e-47b2-97a8-5951a169b801",
            "e4b47320-cb17-4188-b555-c38020cd8641",
            "15483bf0-593f-4cb8-bddd-81aa52a47083",
            "c1e9cddd-2625-4d91-ad02-1078689cc73f",
            "caf9ca8e-aeb4-48bc-8703-f5f9bbc60659",
            "babf845b-a58c-45f7-87f9-1f33df80ac2c",
            "01fbdec9-85e7-4969-a0eb-3dadd1cf7433",
            "00f660e2-b0c2-40d8-9cb2-791117bbeac3",
            "a0aa73b4-354e-4d39-b920-0279a0d4aa0e",
            "031a5039-72f1-4ff7-abdf-64f6bcced42f",
            "e74ff965-cfc6-49ce-a91f-1777e7316860"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
          "title": "Test 10Lines game: 30, 34 -  10",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 824,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b7cf0a41-3e55-44b0-a0a1-0dd5e09de87a",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "c5433181-ef8b-436b-94d9-8e77a07d7db0",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e9e2dbaa-20ad-4df8-b893-62132c308664",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "9e095ffe-1c72-41b2-bd5c-54a52a03fa6a",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "c4a05d7f-92bc-49f2-8218-78672eebe316",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "8d5c58df-a206-4971-bdc6-767e324caad4",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "9036a9b0-56ad-43fe-872e-30ee0280deb2",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "2edbfaf1-9f21-49d2-ad62-eda663b9cd8b",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "fd8da60b-2ad0-4257-b07b-46acf700317f",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "82527e9b-d6d6-441d-a671-90a59c4d2316",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "95c5415f-fbee-491e-991e-31c087994a6c",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "595a8567-c376-48ab-834f-86f2ec635fb7",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "4302378c-a92f-4c0f-900a-6dc749736cec",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "15d17077-8201-4318-aa2e-d460396fc49a",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "5ad9fd31-671e-443a-9642-c9149cd6994d",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "d0bd13dd-648f-4858-af5e-a5bfdca16f79",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "308948f8-984e-4f19-97e5-2badf874d1e8",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  10 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "d16ab2c4-6f35-47ac-bb9f-f54fc55fa79e",
              "parentUUID": "feff6ab8-16df-4799-9099-2ed25f1a7fd3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9e2dbaa-20ad-4df8-b893-62132c308664",
            "9e095ffe-1c72-41b2-bd5c-54a52a03fa6a",
            "c4a05d7f-92bc-49f2-8218-78672eebe316",
            "8d5c58df-a206-4971-bdc6-767e324caad4",
            "9036a9b0-56ad-43fe-872e-30ee0280deb2",
            "2edbfaf1-9f21-49d2-ad62-eda663b9cd8b",
            "fd8da60b-2ad0-4257-b07b-46acf700317f",
            "82527e9b-d6d6-441d-a671-90a59c4d2316",
            "95c5415f-fbee-491e-991e-31c087994a6c",
            "595a8567-c376-48ab-834f-86f2ec635fb7",
            "4302378c-a92f-4c0f-900a-6dc749736cec",
            "15d17077-8201-4318-aa2e-d460396fc49a",
            "5ad9fd31-671e-443a-9642-c9149cd6994d",
            "d0bd13dd-648f-4858-af5e-a5bfdca16f79",
            "308948f8-984e-4f19-97e5-2badf874d1e8",
            "d16ab2c4-6f35-47ac-bb9f-f54fc55fa79e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
          "title": "Test 10Lines game: 30, 34 -  11",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 710,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9170627b-e8c1-44f4-809e-180d757cf630",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "9936a77e-bc73-4504-97c5-996ed17c424b",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e83c46a2-4d72-4fb2-a425-e517831f2847",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "90a78521-071c-4a58-830c-6cb93ced9241",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "a8a142ba-e63b-4798-8755-71099ba36de2",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "e0a090f9-dbc9-4618-b0ad-607df1f68812",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "819556fc-12da-4a6c-83e1-2251e83e3498",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "7f34005f-f25c-4ed9-a0c4-13c076b5fbe8",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "60a572a6-2177-4791-a1ad-ce193daf4e17",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "d86b9e65-8dc2-4267-b8e4-8b98c1e5cba0",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b6593244-5dbe-435c-8040-0e85dda094b6",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d6fc63b5-a0e8-4c78-9321-40bed5367c1a",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "f8d98c3d-9b94-4fad-a9b9-c7d7cea01865",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5a965c48-6bc7-4686-b879-0e79a68eee22",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "a3ee6293-af5c-4c8c-adb9-d7a901ce29f4",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "f15237eb-08c7-4778-835c-8d1bbceb1e9b",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "67ae94b9-77f3-436b-9fe4-6535d2ea1aa5",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  11 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "50a8e3e9-3cda-483e-a8ad-c80121b0b3cc",
              "parentUUID": "1d10e8b0-7d4f-4457-b9c3-f14875f90d30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e83c46a2-4d72-4fb2-a425-e517831f2847",
            "90a78521-071c-4a58-830c-6cb93ced9241",
            "a8a142ba-e63b-4798-8755-71099ba36de2",
            "e0a090f9-dbc9-4618-b0ad-607df1f68812",
            "819556fc-12da-4a6c-83e1-2251e83e3498",
            "7f34005f-f25c-4ed9-a0c4-13c076b5fbe8",
            "60a572a6-2177-4791-a1ad-ce193daf4e17",
            "d86b9e65-8dc2-4267-b8e4-8b98c1e5cba0",
            "b6593244-5dbe-435c-8040-0e85dda094b6",
            "d6fc63b5-a0e8-4c78-9321-40bed5367c1a",
            "f8d98c3d-9b94-4fad-a9b9-c7d7cea01865",
            "5a965c48-6bc7-4686-b879-0e79a68eee22",
            "a3ee6293-af5c-4c8c-adb9-d7a901ce29f4",
            "f15237eb-08c7-4778-835c-8d1bbceb1e9b",
            "67ae94b9-77f3-436b-9fe4-6535d2ea1aa5",
            "50a8e3e9-3cda-483e-a8ad-c80121b0b3cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
          "title": "Test 10Lines game: 30, 34 -  12",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 803,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c77f399c-0932-4d8d-b5ed-9d02e6d3805b",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "9b168eff-d5f3-4c7b-833b-9d2ec40b30e4",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "010d01f3-8e95-4c44-bd45-4a9d564bba62",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "b083b0c9-cbc8-4740-9c68-e8cc2badcd4d",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "daaa31b0-7456-44de-9c33-a6fec50c0236",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "e8bb496d-287e-4f8f-a7bd-6d5f2d644a3f",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "ce565afe-3714-400a-956b-af65f2d218a4",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "6abccfa2-d039-4ae3-917e-fb970699ad4a",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c2e90dd8-c997-44f8-a376-e5dab1ed11ff",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "429b8294-c11b-44b1-8f75-522dfdfabc49",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4067c7d1-2980-4176-94fb-af92cd194952",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "523fc14b-db4c-4b57-9e1e-b03a4d0c3076",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "bd434d19-6858-4089-97da-f0fcae970f19",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "d3e72d73-ed0a-4596-9b81-09fe298a5bd3",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "6b621601-27d4-4183-8b30-234000725d3a",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "66d66368-ebe7-4c3e-b184-fd2af9ae027a",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "a20f3bbd-ed03-4cd5-bad2-acc2b6121aba",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  12 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "bb01543b-32e4-446f-b8a5-5bec6cbcd41f",
              "parentUUID": "2c0ba188-0cdf-4399-a671-90f8447bc7c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "010d01f3-8e95-4c44-bd45-4a9d564bba62",
            "b083b0c9-cbc8-4740-9c68-e8cc2badcd4d",
            "daaa31b0-7456-44de-9c33-a6fec50c0236",
            "e8bb496d-287e-4f8f-a7bd-6d5f2d644a3f",
            "ce565afe-3714-400a-956b-af65f2d218a4",
            "6abccfa2-d039-4ae3-917e-fb970699ad4a",
            "c2e90dd8-c997-44f8-a376-e5dab1ed11ff",
            "429b8294-c11b-44b1-8f75-522dfdfabc49",
            "4067c7d1-2980-4176-94fb-af92cd194952",
            "523fc14b-db4c-4b57-9e1e-b03a4d0c3076",
            "bd434d19-6858-4089-97da-f0fcae970f19",
            "d3e72d73-ed0a-4596-9b81-09fe298a5bd3",
            "6b621601-27d4-4183-8b30-234000725d3a",
            "66d66368-ebe7-4c3e-b184-fd2af9ae027a",
            "a20f3bbd-ed03-4cd5-bad2-acc2b6121aba",
            "bb01543b-32e4-446f-b8a5-5bec6cbcd41f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
          "title": "Test 10Lines game: 30, 34 -  13",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1555,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7b091a15-034d-43ab-86f3-35535f16ca9a",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "8985a6a0-31d1-47e4-b578-560b71348c4d",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "7e239c50-c407-49c5-9359-78b5d69657f2",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "83ced0a6-0f9a-4dd4-9137-534145631b2d",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "578a64b4-c3f4-4972-a0c7-015dad88cad8",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "0422ec29-f06c-4be9-a4ea-5cc64306bf3a",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "a04b8e96-704e-4221-8335-5fcca96362a9",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "97baa891-0e38-481e-a01d-20995f50f3ad",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "aa51ad71-446c-43e9-ba2a-bbfd29b06e84",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "16c8368b-d20d-4f07-b20a-36c1eab6c852",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b12c3cb1-0433-4051-bb0f-539fbb94b05d",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "42209655-acdd-413f-8911-206d54bf7273",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "70ec9d56-6e9a-44a2-803c-47cb30296919",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "b8570f3c-04cd-418e-9207-5b1acf93d657",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "084ad56e-5794-4343-b656-1a67a5c06f15",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "be70df72-df0d-4274-8d63-5912ac63a6c1",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "7a9998b9-06d2-405d-abd0-0c4612e484e6",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  13 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ebcf5db5-bd8f-46ca-b2dd-2e623173df44",
              "parentUUID": "7d118c31-7efb-48f5-acc6-cc41ac7dcf70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e239c50-c407-49c5-9359-78b5d69657f2",
            "83ced0a6-0f9a-4dd4-9137-534145631b2d",
            "578a64b4-c3f4-4972-a0c7-015dad88cad8",
            "0422ec29-f06c-4be9-a4ea-5cc64306bf3a",
            "a04b8e96-704e-4221-8335-5fcca96362a9",
            "97baa891-0e38-481e-a01d-20995f50f3ad",
            "aa51ad71-446c-43e9-ba2a-bbfd29b06e84",
            "16c8368b-d20d-4f07-b20a-36c1eab6c852",
            "b12c3cb1-0433-4051-bb0f-539fbb94b05d",
            "42209655-acdd-413f-8911-206d54bf7273",
            "70ec9d56-6e9a-44a2-803c-47cb30296919",
            "b8570f3c-04cd-418e-9207-5b1acf93d657",
            "084ad56e-5794-4343-b656-1a67a5c06f15",
            "be70df72-df0d-4274-8d63-5912ac63a6c1",
            "7a9998b9-06d2-405d-abd0-0c4612e484e6",
            "ebcf5db5-bd8f-46ca-b2dd-2e623173df44"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "140b0b52-b7fd-4900-a231-479d933ce11f",
          "title": "Test 10Lines game: 30, 34 -  14",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 784,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a4123a3b-4cc3-4d0e-8464-c55a2b6cad77",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "23ca0212-c83d-485b-b489-5c5a30f8252c",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "2babb9f7-6528-466e-afab-aa8972ea1673",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "8aa2429d-2738-448c-941c-e10651494001",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "b2e91505-3cea-44d6-9e12-e80a164dbd01",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "7d7258e2-eb70-46c1-a2f3-dc1f5b6d4a61",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "59a85122-4f64-4800-a856-102e03e202c1",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "dd6272c7-6c09-4e5e-8453-7f8638ea62ef",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "73c65dad-6b2d-4eaf-a363-22f17a7c4d70",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "44e9d889-8434-409f-8e1f-820b0262db47",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "81035cf0-797c-4576-8598-c0f4197fbc09",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "879573c2-b981-4d8a-8960-9983ad6141d3",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "2f903c1e-590f-44de-94ed-2e9699865154",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "c4b8da07-6861-43fe-884c-aff4c0aa5a2d",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "974d5d9f-8085-42bc-b201-e0ea72699e3e",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "b00fa3e0-bdb7-4ba6-9c5b-fb9f3b6e3965",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "f0e58b21-bef1-4379-aaed-930e49b91a2b",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  14 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "d7bfcd28-5ef7-4659-a1eb-0bd48106f797",
              "parentUUID": "140b0b52-b7fd-4900-a231-479d933ce11f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2babb9f7-6528-466e-afab-aa8972ea1673",
            "8aa2429d-2738-448c-941c-e10651494001",
            "b2e91505-3cea-44d6-9e12-e80a164dbd01",
            "7d7258e2-eb70-46c1-a2f3-dc1f5b6d4a61",
            "59a85122-4f64-4800-a856-102e03e202c1",
            "dd6272c7-6c09-4e5e-8453-7f8638ea62ef",
            "73c65dad-6b2d-4eaf-a363-22f17a7c4d70",
            "44e9d889-8434-409f-8e1f-820b0262db47",
            "81035cf0-797c-4576-8598-c0f4197fbc09",
            "879573c2-b981-4d8a-8960-9983ad6141d3",
            "2f903c1e-590f-44de-94ed-2e9699865154",
            "c4b8da07-6861-43fe-884c-aff4c0aa5a2d",
            "974d5d9f-8085-42bc-b201-e0ea72699e3e",
            "b00fa3e0-bdb7-4ba6-9c5b-fb9f3b6e3965",
            "f0e58b21-bef1-4379-aaed-930e49b91a2b",
            "d7bfcd28-5ef7-4659-a1eb-0bd48106f797"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
          "title": "Test 10Lines game: 30, 34 -  15",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 823,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "2c15bd67-d53f-47b8-8381-04e0ac6d0115",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "f5c859d8-c5e8-4b7e-b9fd-316270cfa83c",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a636dcef-023a-4e1a-ad3a-7ccacd06a756",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "ef6d41b6-9ce8-4f65-9bb1-9f32b74a50dd",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "23daf51f-9f5b-4bfe-8384-6f7b4a8242cc",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "0e1eff0b-ceab-4ba5-b0b6-4dc537750d12",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "6b76832a-0b3e-45a5-9e50-878a603ac31a",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a40e616f-6a84-4c8e-b0fc-67fc2b823269",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "197827b1-e8a3-47b0-b8cd-fe9196fc5f39",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "1033c428-4528-40e7-b801-c7e41d8c3eb0",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c6b50fa7-3cb4-41de-b65c-79a54385e376",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e0378e9c-155e-4a80-83e3-e8362a4bf027",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "a7a1be85-a703-49c3-a7fe-9c0582ca7359",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "e42a002f-6809-4431-897d-68487336e656",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "f6f0bae6-0577-4cf1-8d97-524379ee08e4",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "c1f5472d-ae2f-4c3f-8231-b2b9397a1fdc",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "22e3d03a-36fd-4aa3-9729-1039585add06",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  15 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "fdfce8d5-87d9-4591-b59d-f5717f6e8909",
              "parentUUID": "f60d5944-711c-4f0a-9ced-d4fd823665f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a636dcef-023a-4e1a-ad3a-7ccacd06a756",
            "ef6d41b6-9ce8-4f65-9bb1-9f32b74a50dd",
            "23daf51f-9f5b-4bfe-8384-6f7b4a8242cc",
            "0e1eff0b-ceab-4ba5-b0b6-4dc537750d12",
            "6b76832a-0b3e-45a5-9e50-878a603ac31a",
            "a40e616f-6a84-4c8e-b0fc-67fc2b823269",
            "197827b1-e8a3-47b0-b8cd-fe9196fc5f39",
            "1033c428-4528-40e7-b801-c7e41d8c3eb0",
            "c6b50fa7-3cb4-41de-b65c-79a54385e376",
            "e0378e9c-155e-4a80-83e3-e8362a4bf027",
            "a7a1be85-a703-49c3-a7fe-9c0582ca7359",
            "e42a002f-6809-4431-897d-68487336e656",
            "f6f0bae6-0577-4cf1-8d97-524379ee08e4",
            "c1f5472d-ae2f-4c3f-8231-b2b9397a1fdc",
            "22e3d03a-36fd-4aa3-9729-1039585add06",
            "fdfce8d5-87d9-4591-b59d-f5717f6e8909"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9301efec-fa53-4d6c-b499-3af76b7a1369",
          "title": "Test 10Lines game: 30, 34 -  16",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1363,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c7ade052-1653-4ccf-b71c-c07159c06762",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "d4268559-67a4-4cbb-81ef-60bbcc3b5f7e",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "7e50fcd9-27a9-467c-bdc2-be516b314821",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "ce75a9a4-9e65-46f5-968c-8f9b972e7657",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "7bb96761-9f42-47eb-a486-69e870fd4a67",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "9a7774af-013b-4b72-b020-781c60c755e9",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "e71b0d7d-2022-41da-be17-038809199799",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "81c19c77-d8fe-47b0-8f4a-d5d69a826862",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a6ab4652-1e51-4e05-8c73-15e8abca7960",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "deefd5c9-4844-40ba-81fe-d5a043c6bffb",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9b54e538-2350-4283-9cf6-5b93e33d8388",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "95dc44e0-2761-4d3d-9379-cc2ff2b13c54",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "77436d48-b51b-44a6-8078-faf0f8b4fafb",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "2130cb58-6e86-4525-98db-8151622850b1",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "0407c2c2-c0fa-499c-903d-940d6b771fdf",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "62203724-2684-4c28-83bf-19a6d5a681c3",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "41c41674-6f0a-4d48-9984-6344f3dd94ed",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  16 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "53c717de-cc30-4933-bfad-3f6d0c60ca75",
              "parentUUID": "9301efec-fa53-4d6c-b499-3af76b7a1369",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e50fcd9-27a9-467c-bdc2-be516b314821",
            "ce75a9a4-9e65-46f5-968c-8f9b972e7657",
            "7bb96761-9f42-47eb-a486-69e870fd4a67",
            "9a7774af-013b-4b72-b020-781c60c755e9",
            "e71b0d7d-2022-41da-be17-038809199799",
            "81c19c77-d8fe-47b0-8f4a-d5d69a826862",
            "a6ab4652-1e51-4e05-8c73-15e8abca7960",
            "deefd5c9-4844-40ba-81fe-d5a043c6bffb",
            "9b54e538-2350-4283-9cf6-5b93e33d8388",
            "95dc44e0-2761-4d3d-9379-cc2ff2b13c54",
            "77436d48-b51b-44a6-8078-faf0f8b4fafb",
            "2130cb58-6e86-4525-98db-8151622850b1",
            "0407c2c2-c0fa-499c-903d-940d6b771fdf",
            "62203724-2684-4c28-83bf-19a6d5a681c3",
            "41c41674-6f0a-4d48-9984-6344f3dd94ed",
            "53c717de-cc30-4933-bfad-3f6d0c60ca75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
          "title": "Test 10Lines game: 30, 34 -  17",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 625,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6a7206bb-0645-4689-bb59-8cdf9e21c9bd",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "d02a4f3f-423c-4d60-a1ac-58e2742dc2e9",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "66c61bd6-b26e-43e4-820a-0b377cc036d3",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "75c4381d-0f78-436f-bcfe-3b0fe995bf26",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "0e8cd36c-624a-4d30-83e0-8a3df96ae37e",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "8e1b7e5c-b72c-4800-bc28-8cbb156f0386",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "3efb9eb9-0150-4814-a04f-4ad8abbe248a",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "c30031d9-76ab-41f4-b2a5-162c65471c03",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d399b041-a92c-488b-8e63-fc84b33dfc84",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "4da1d814-9845-42a8-91a9-29f252f2e812",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "01922625-7825-4f8c-bfaf-a08a159db9d2",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b38098ec-af13-4ba1-9cca-8394b8dac076",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "0bdf05b4-b397-435a-9b09-863b7c7983f0",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "e444f1d0-cda7-487c-a76f-82561db56f84",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "9a08844d-1ddd-432f-86f7-f1764e80b1a6",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "364ee3dc-d348-4a9e-bf76-5d72161524eb",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "f16ce4bb-e8a4-4b91-afd9-d203a22339ea",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  17 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "9ef39e25-01c4-40b1-b0a8-ffd7879eda09",
              "parentUUID": "06c267c2-7d9b-4c47-ae89-106fe2d3c6fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66c61bd6-b26e-43e4-820a-0b377cc036d3",
            "75c4381d-0f78-436f-bcfe-3b0fe995bf26",
            "0e8cd36c-624a-4d30-83e0-8a3df96ae37e",
            "8e1b7e5c-b72c-4800-bc28-8cbb156f0386",
            "3efb9eb9-0150-4814-a04f-4ad8abbe248a",
            "c30031d9-76ab-41f4-b2a5-162c65471c03",
            "d399b041-a92c-488b-8e63-fc84b33dfc84",
            "4da1d814-9845-42a8-91a9-29f252f2e812",
            "01922625-7825-4f8c-bfaf-a08a159db9d2",
            "b38098ec-af13-4ba1-9cca-8394b8dac076",
            "0bdf05b4-b397-435a-9b09-863b7c7983f0",
            "e444f1d0-cda7-487c-a76f-82561db56f84",
            "9a08844d-1ddd-432f-86f7-f1764e80b1a6",
            "364ee3dc-d348-4a9e-bf76-5d72161524eb",
            "f16ce4bb-e8a4-4b91-afd9-d203a22339ea",
            "9ef39e25-01c4-40b1-b0a8-ffd7879eda09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
          "title": "Test 10Lines game: 30, 34 -  18",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 583,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "53127728-e799-48a1-a97d-71c1b08519a6",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "f15f7bd8-b68c-4e6c-8a05-0c7527dd20fe",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "68ffa8e1-d17e-4fe2-917b-2ae984939af8",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "17639c76-0e3b-4616-829a-f047a737c301",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "5c000e46-4484-4389-b68e-da3e41300b39",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "30c5f891-8545-41e5-94e3-be35453b700c",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "faa6f0f5-708e-45a2-a1f8-63bceb6ed41e",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "543fa46e-06cc-4a7d-a23c-4e676652bcb0",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bc7f452c-aa92-4e45-8826-12eaaa0749c9",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "30737457-fe1a-4199-aac5-0037ba066c94",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f56bd974-d719-4956-83da-58283900d927",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "32b3f57c-b246-4296-89ab-3d13ab2b36f4",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "4dfe028a-9614-40ca-93b3-28792fc89239",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "b345d5d8-3fda-49a7-af68-032f68e69d68",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "ec89d312-955d-481f-82eb-3d47c094fc70",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "6de00aa4-0e25-4e22-9380-610a4f3a0db1",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "d347056c-c081-4af8-b970-9aaf3ee991da",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  18 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "320a4200-4872-4f16-b9ae-dc0159838e29",
              "parentUUID": "6459e0c4-0392-4612-8d73-2e315bd60ca2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "68ffa8e1-d17e-4fe2-917b-2ae984939af8",
            "17639c76-0e3b-4616-829a-f047a737c301",
            "5c000e46-4484-4389-b68e-da3e41300b39",
            "30c5f891-8545-41e5-94e3-be35453b700c",
            "faa6f0f5-708e-45a2-a1f8-63bceb6ed41e",
            "543fa46e-06cc-4a7d-a23c-4e676652bcb0",
            "bc7f452c-aa92-4e45-8826-12eaaa0749c9",
            "30737457-fe1a-4199-aac5-0037ba066c94",
            "f56bd974-d719-4956-83da-58283900d927",
            "32b3f57c-b246-4296-89ab-3d13ab2b36f4",
            "4dfe028a-9614-40ca-93b3-28792fc89239",
            "b345d5d8-3fda-49a7-af68-032f68e69d68",
            "ec89d312-955d-481f-82eb-3d47c094fc70",
            "6de00aa4-0e25-4e22-9380-610a4f3a0db1",
            "d347056c-c081-4af8-b970-9aaf3ee991da",
            "320a4200-4872-4f16-b9ae-dc0159838e29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "01f539e2-d813-4f51-8605-3dfdb619c615",
          "title": "Test 10Lines game: 30, 34 -  19",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 768,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a672f57a-f689-4eaf-ad9c-f28a3e06d0b2",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "e8d6f43b-b74b-4192-b31d-ce4a072f04bd",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d6227aca-202d-4fb6-a2b9-1d690c035188",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "7df1c9c7-497a-4e8c-a200-da6b9ca8f246",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "77a7cf4d-b5d2-4002-870b-f960a4c9fea3",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 check correct position of winning symbol",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "fd2fe013-115d-4a74-b05f-433bb3d743e7",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "87b54800-a77c-4682-9a7d-44d26bc41d11",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "fec222c9-988d-4c7a-bada-7652f9995a2e",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5dca79d6-7fdf-424b-96a4-36c7290e2762",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "261076b3-83b6-4193-a4d9-69fc5852d6b7",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "acb7d9a6-f007-4466-a915-6a9ff102e4cd",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "97a27010-b538-48a2-b0cd-0ebb8225110f",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "941d1d06-50ca-4835-84cc-22533aac0c9c",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "e57eecca-5379-46f0-a400-c3fda9cdb694",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "10b32289-e284-40ac-82c7-bb5f9e5265df",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "158892d1-aae8-4d53-9935-9d1e321407e0",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "9ba648ab-a4a2-46d2-b2cf-f627afc14360",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  19 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a3b72d5f-5403-46c5-89e5-9091daf154f8",
              "parentUUID": "01f539e2-d813-4f51-8605-3dfdb619c615",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6227aca-202d-4fb6-a2b9-1d690c035188",
            "7df1c9c7-497a-4e8c-a200-da6b9ca8f246",
            "77a7cf4d-b5d2-4002-870b-f960a4c9fea3",
            "fd2fe013-115d-4a74-b05f-433bb3d743e7",
            "87b54800-a77c-4682-9a7d-44d26bc41d11",
            "fec222c9-988d-4c7a-bada-7652f9995a2e",
            "5dca79d6-7fdf-424b-96a4-36c7290e2762",
            "261076b3-83b6-4193-a4d9-69fc5852d6b7",
            "acb7d9a6-f007-4466-a915-6a9ff102e4cd",
            "97a27010-b538-48a2-b0cd-0ebb8225110f",
            "941d1d06-50ca-4835-84cc-22533aac0c9c",
            "e57eecca-5379-46f0-a400-c3fda9cdb694",
            "10b32289-e284-40ac-82c7-bb5f9e5265df",
            "158892d1-aae8-4d53-9935-9d1e321407e0",
            "9ba648ab-a4a2-46d2-b2cf-f627afc14360",
            "a3b72d5f-5403-46c5-89e5-9091daf154f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
          "title": "Test 10Lines game: 30, 34 -  20",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 708,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d02d50e2-699e-4d32-8f05-a5b1f5af70ea",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "560539de-c369-4858-9dc6-a4242f9ba0b9",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "c607225b-ffb4-46d7-846c-364756ff29a9",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "f2befae4-c63e-41af-9dff-7c9ebc4b918d",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "6ae44c15-7a62-483f-8eab-865a0ce9ef3d",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "40d235c4-e801-41db-b452-eda970e8bcd5",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "ff4e20a8-1722-4660-ad3f-37ddf915a03b",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "0a34209c-4bfe-4441-b73d-5fc87c19948b",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c3d5199e-5acd-4bf8-8678-1f91433280be",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "e511c2b1-4a14-4418-a191-c53a903c422d",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7f987d66-b1d9-4485-a629-044a1155385e",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "86cab877-2cea-4ffa-af22-e8ea604cea8e",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "c2243e12-2618-4556-add5-1714129c73db",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "1813bfd9-26d6-4c84-9cb0-c96ac2fd056a",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "70554c4b-7188-4160-b204-56f766dde280",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "70857e96-7b32-4466-9310-d6d367644fd5",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "00a0ef9d-2666-465c-954d-58b40c8416a3",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  20 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ef3cca08-24d2-48b1-88ed-50c737cc0665",
              "parentUUID": "7b85dc85-2868-4fd0-86f7-4c09edb0db36",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c607225b-ffb4-46d7-846c-364756ff29a9",
            "f2befae4-c63e-41af-9dff-7c9ebc4b918d",
            "6ae44c15-7a62-483f-8eab-865a0ce9ef3d",
            "40d235c4-e801-41db-b452-eda970e8bcd5",
            "ff4e20a8-1722-4660-ad3f-37ddf915a03b",
            "0a34209c-4bfe-4441-b73d-5fc87c19948b",
            "c3d5199e-5acd-4bf8-8678-1f91433280be",
            "e511c2b1-4a14-4418-a191-c53a903c422d",
            "7f987d66-b1d9-4485-a629-044a1155385e",
            "86cab877-2cea-4ffa-af22-e8ea604cea8e",
            "c2243e12-2618-4556-add5-1714129c73db",
            "1813bfd9-26d6-4c84-9cb0-c96ac2fd056a",
            "70554c4b-7188-4160-b204-56f766dde280",
            "70857e96-7b32-4466-9310-d6d367644fd5",
            "00a0ef9d-2666-465c-954d-58b40c8416a3",
            "ef3cca08-24d2-48b1-88ed-50c737cc0665"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "6dcd9496-003b-4ff4-8c17-1336542fda82",
          "title": "Test 10Lines game: 30, 34 -  21",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 616,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9e3e4a4b-8c0f-4e00-a088-76bcc0360195",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "19169e76-0791-4c5c-afb4-4eddcf679e81",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "9086da05-30cc-4212-b4e8-c035614fe2d1",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "64866344-e0a9-4261-a7c4-ff82102e556f",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "a77ad1ce-ea2d-40da-b5d0-5947eac480af",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "fe3bbe91-9491-49bf-8dcd-8ac072c3ac7a",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "d48377ae-362f-45d5-bc71-83cc13624ff9",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "858aa461-5343-490d-8521-e1f299d8cc63",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e65b6c87-8534-4d7d-981e-c9243cc3e448",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "37e49acd-0225-4ab3-b855-b25b58c6b827",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c9c19850-3ef9-4d1c-a16e-8fb9c010d0cb",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1875849c-31ef-4750-868e-8c731e6ea56b",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "3ba41f6c-922e-43d2-ab36-835696dec81c",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "44416360-6b8a-4a80-868b-b4c299972f1d",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "177e06ce-9084-4d07-8e4d-ff5f64cd1ccc",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "d6ca611a-9648-4aa7-b646-145afe9e586f",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "eafa3e80-6094-4e7b-a79e-516f04f18145",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  21 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "817f65c8-c5b8-4053-b10e-80c1088ae301",
              "parentUUID": "6dcd9496-003b-4ff4-8c17-1336542fda82",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9086da05-30cc-4212-b4e8-c035614fe2d1",
            "64866344-e0a9-4261-a7c4-ff82102e556f",
            "a77ad1ce-ea2d-40da-b5d0-5947eac480af",
            "fe3bbe91-9491-49bf-8dcd-8ac072c3ac7a",
            "d48377ae-362f-45d5-bc71-83cc13624ff9",
            "858aa461-5343-490d-8521-e1f299d8cc63",
            "e65b6c87-8534-4d7d-981e-c9243cc3e448",
            "37e49acd-0225-4ab3-b855-b25b58c6b827",
            "c9c19850-3ef9-4d1c-a16e-8fb9c010d0cb",
            "1875849c-31ef-4750-868e-8c731e6ea56b",
            "3ba41f6c-922e-43d2-ab36-835696dec81c",
            "44416360-6b8a-4a80-868b-b4c299972f1d",
            "177e06ce-9084-4d07-8e4d-ff5f64cd1ccc",
            "d6ca611a-9648-4aa7-b646-145afe9e586f",
            "eafa3e80-6094-4e7b-a79e-516f04f18145",
            "817f65c8-c5b8-4053-b10e-80c1088ae301"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
          "title": "Test 10Lines game: 30, 34 -  22",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 470,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7affb201-45c1-4097-a0b9-5920e453587f",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "b654efe1-4137-4e7e-ace2-8c94ff707180",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "3b1a9039-f5c8-4e66-baba-93827446ac0f",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "1807ecbe-2bc9-401c-b040-9df91c748b35",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "be83ccca-80c8-40f1-bc9c-3ee3dc400eb0",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "6277cdb9-d210-422e-949f-5607ee61ffb7",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "11b56f8e-3dae-479e-ba42-2df8eaecf4d5",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "759ef4e3-4fe3-4cf3-b2d8-9e6c79db6834",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ead74e09-6f22-4fed-adba-f0a3402dfdb7",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "742761b2-041a-4016-87d4-950d82ec7626",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6a2d217c-9235-4e00-9646-8cff31407aaf",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8ce26faf-bf99-4d05-95f3-7242dabbad90",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "d8ec3ca5-727e-411d-ba91-303ef0f72814",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "0f9390ef-6f3f-4479-9a8a-6625d6a41549",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "386a76f0-86c4-4adb-b383-af50df81e11b",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "17304e9c-36e3-4016-a775-f3acd077f4fc",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "71077710-0673-41a8-a672-ec5a2d829cd5",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  22 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "7d55fd9b-c5ea-457d-ba20-99091cd04a6c",
              "parentUUID": "b36fe9c5-b626-4e51-b5d1-984dbb1db577",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b1a9039-f5c8-4e66-baba-93827446ac0f",
            "1807ecbe-2bc9-401c-b040-9df91c748b35",
            "be83ccca-80c8-40f1-bc9c-3ee3dc400eb0",
            "6277cdb9-d210-422e-949f-5607ee61ffb7",
            "11b56f8e-3dae-479e-ba42-2df8eaecf4d5",
            "759ef4e3-4fe3-4cf3-b2d8-9e6c79db6834",
            "ead74e09-6f22-4fed-adba-f0a3402dfdb7",
            "742761b2-041a-4016-87d4-950d82ec7626",
            "6a2d217c-9235-4e00-9646-8cff31407aaf",
            "8ce26faf-bf99-4d05-95f3-7242dabbad90",
            "d8ec3ca5-727e-411d-ba91-303ef0f72814",
            "0f9390ef-6f3f-4479-9a8a-6625d6a41549",
            "386a76f0-86c4-4adb-b383-af50df81e11b",
            "17304e9c-36e3-4016-a775-f3acd077f4fc",
            "71077710-0673-41a8-a672-ec5a2d829cd5",
            "7d55fd9b-c5ea-457d-ba20-99091cd04a6c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
          "title": "Test 10Lines game: 30, 34 -  23",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 485,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "21e87ff1-77b9-4d79-a6cf-1d8b272d864a",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "b09e0117-d924-48fe-967e-c3afc3214660",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "c3314da1-a743-4adb-b3b6-94494992fd2b",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "72b03edf-df34-490c-8ac7-36f79934cc1a",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "41b1a5f2-65db-4e22-bef1-a9942f066340",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "ba660e31-cca3-4d22-88db-210559290bff",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "657b753d-e5e9-4036-a8d3-efaf34583536",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f87888e9-922f-498e-93be-172f453cf540",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "101440b3-dc03-42ae-a6ad-5d6c4b02a610",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "5c78aa9e-cd48-4889-952c-404d6cc01a7a",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "df1bb9a5-8325-4209-9d48-de25bce72238",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b22c1869-3b81-4c4b-99fc-58a93f5b05e8",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "eec42fb0-27e9-43af-9386-d220c272ff87",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5a500fba-1b0d-430a-a4d6-631ff51c5e3e",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "6ec1109f-1465-45ad-9e0b-658bf9b2b6b8",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "31a0f54c-00a9-4385-8b88-10b3690eb171",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "5ea31fa0-8597-49e7-b636-b8a6b7ca09f1",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  23 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "50c2d072-7c7f-48c2-9634-04286a3c15f7",
              "parentUUID": "4a9d07b3-d19b-4814-99c5-e48dfa12f756",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3314da1-a743-4adb-b3b6-94494992fd2b",
            "72b03edf-df34-490c-8ac7-36f79934cc1a",
            "41b1a5f2-65db-4e22-bef1-a9942f066340",
            "ba660e31-cca3-4d22-88db-210559290bff",
            "657b753d-e5e9-4036-a8d3-efaf34583536",
            "f87888e9-922f-498e-93be-172f453cf540",
            "101440b3-dc03-42ae-a6ad-5d6c4b02a610",
            "5c78aa9e-cd48-4889-952c-404d6cc01a7a",
            "df1bb9a5-8325-4209-9d48-de25bce72238",
            "b22c1869-3b81-4c4b-99fc-58a93f5b05e8",
            "eec42fb0-27e9-43af-9386-d220c272ff87",
            "5a500fba-1b0d-430a-a4d6-631ff51c5e3e",
            "6ec1109f-1465-45ad-9e0b-658bf9b2b6b8",
            "31a0f54c-00a9-4385-8b88-10b3690eb171",
            "5ea31fa0-8597-49e7-b636-b8a6b7ca09f1",
            "50c2d072-7c7f-48c2-9634-04286a3c15f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
          "title": "Test 10Lines game: 30, 34 -  24",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 531,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "013360fd-9a04-40e9-8136-a48f7507b4c2",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "b358f622-02a2-419b-90fa-9c15a19959f6",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "075baf98-6249-4c3c-ba2d-d9f856499056",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "ff36eb36-b968-4a33-9212-260e1a7c16d8",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "a7eb44fe-3ae4-4551-b7a8-38d9073b893c",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "1abe8106-1656-4432-9c33-a82fb1003c10",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "f071caf2-6052-4206-b767-f0b8a882a5ce",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "6961a0ec-e964-40a7-9d41-2a5dce76348c",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2c005d46-b9f9-4803-8ae3-26ddf17b0968",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "a7d718bf-74e1-41ca-bab7-72063700d725",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3c64f00b-389b-4c16-bc37-9ecfcb1d692a",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "89707f41-9e24-4b11-89e3-76407a64bb3f",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "56837dc7-ebce-475b-9c9a-8218531b6d32",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "aa628e68-b9fc-4365-9c4a-f8bf8b9b6b3a",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "97d68ad4-c3cb-4e54-aff4-8f46990d413f",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "be15996c-5c8f-4135-ac95-c89aeccf8aaa",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "03cb04a2-ca3a-493b-b601-adff11153f35",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  24 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "057a700a-38e6-4779-b268-1f667d26bd09",
              "parentUUID": "d0fdf1a7-1081-4617-a75f-b1201a2d5043",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "075baf98-6249-4c3c-ba2d-d9f856499056",
            "ff36eb36-b968-4a33-9212-260e1a7c16d8",
            "a7eb44fe-3ae4-4551-b7a8-38d9073b893c",
            "1abe8106-1656-4432-9c33-a82fb1003c10",
            "f071caf2-6052-4206-b767-f0b8a882a5ce",
            "6961a0ec-e964-40a7-9d41-2a5dce76348c",
            "2c005d46-b9f9-4803-8ae3-26ddf17b0968",
            "a7d718bf-74e1-41ca-bab7-72063700d725",
            "3c64f00b-389b-4c16-bc37-9ecfcb1d692a",
            "89707f41-9e24-4b11-89e3-76407a64bb3f",
            "56837dc7-ebce-475b-9c9a-8218531b6d32",
            "aa628e68-b9fc-4365-9c4a-f8bf8b9b6b3a",
            "97d68ad4-c3cb-4e54-aff4-8f46990d413f",
            "be15996c-5c8f-4135-ac95-c89aeccf8aaa",
            "03cb04a2-ca3a-493b-b601-adff11153f35",
            "057a700a-38e6-4779-b268-1f667d26bd09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
          "title": "Test 10Lines game: 30, 34 -  25",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 718,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "664d090a-343a-43be-887d-e78939df963d",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "e35a5952-863e-4a0a-ad70-4fcaa63dd8dc",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "4d0b9ef8-3d73-4958-a57e-b6e70e654508",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "1e993179-5e54-4199-8a14-a69e1ec59f1a",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "c16469df-5d0c-4e58-81cf-72a3a58e2c17",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "1a67cfcb-458b-4d19-9081-0d1c9c40230d",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "6f97e5d7-b755-4584-8785-a45761b7503b",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "f05eacbe-e56e-4091-b4a9-1bf04232c3b7",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a422796c-078c-4c92-9f29-db6e1fc6171e",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "94840cc4-7d05-4566-bc2b-6764319bc2d3",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "df8505a7-73a8-4450-b82e-c876db16bc64",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9915072d-378f-42ac-a8bc-964e2fad39b8",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "7ac2323b-5b3a-4b39-93c9-45029f4f1b57",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "2f92d304-b5b1-4e4a-bbef-8fe1c14e5c48",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "a4a3a8a4-02a5-4721-b70d-50093162705a",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "8ff73285-9699-48e0-8986-ec28ee467cc1",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "f574a04e-dbca-445c-bcd0-3c989fc9dea5",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  25 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "8212f518-cbca-4a14-8802-784662c69c23",
              "parentUUID": "744ef126-9828-44ce-9d3b-a7f56ec901d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d0b9ef8-3d73-4958-a57e-b6e70e654508",
            "1e993179-5e54-4199-8a14-a69e1ec59f1a",
            "c16469df-5d0c-4e58-81cf-72a3a58e2c17",
            "1a67cfcb-458b-4d19-9081-0d1c9c40230d",
            "6f97e5d7-b755-4584-8785-a45761b7503b",
            "f05eacbe-e56e-4091-b4a9-1bf04232c3b7",
            "a422796c-078c-4c92-9f29-db6e1fc6171e",
            "94840cc4-7d05-4566-bc2b-6764319bc2d3",
            "df8505a7-73a8-4450-b82e-c876db16bc64",
            "9915072d-378f-42ac-a8bc-964e2fad39b8",
            "7ac2323b-5b3a-4b39-93c9-45029f4f1b57",
            "2f92d304-b5b1-4e4a-bbef-8fe1c14e5c48",
            "a4a3a8a4-02a5-4721-b70d-50093162705a",
            "8ff73285-9699-48e0-8986-ec28ee467cc1",
            "f574a04e-dbca-445c-bcd0-3c989fc9dea5",
            "8212f518-cbca-4a14-8802-784662c69c23"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5e421232-d81e-4cc9-8370-9af922a08123",
          "title": "Test 10Lines game: 30, 34 -  26",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 809,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1e714d79-9cc4-4175-a53d-0c41d542cb04",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "98582074-a77a-4f4c-b08f-a79dd37e17de",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d845aa5a-ad85-4ba5-8e64-485276d15c76",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "7edd26be-7f66-440a-a3d2-d473702af70e",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "536ab10c-00b1-4b5d-9f60-9924d61427c0",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 check correct position of winning symbol",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "cddf3236-bc05-4d6c-a375-f737282ca278",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 check correct accrual of winnings",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "779507d3-0ffb-4618-bec1-c2d0042a6cea",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a65dbb12-26d1-43e4-9a7a-a1e7c85028dc",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "945653bb-d655-4924-b8e2-b6bbf92d26ca",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "a0263927-5111-4a3c-b59e-1d0f0a6cab66",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d9480c25-7635-4013-a129-c26c67903608",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "acd5cf37-5582-42ff-96db-e59802cdc8ce",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "44b279e9-18b7-4984-beb6-f7e623d1f3fb",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "f3487a9f-afb1-43c4-a969-777cc688476d",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "37476f74-a528-4b69-a808-4c7d4cc72018",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "820a5eaf-de5e-44da-99d9-18bc135dc23b",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "4effa5d3-8d6c-437e-a8e9-6a9dac2294b5",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  26 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "729d7606-ac3a-4901-aa18-22e5c6326b4a",
              "parentUUID": "5e421232-d81e-4cc9-8370-9af922a08123",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d845aa5a-ad85-4ba5-8e64-485276d15c76",
            "7edd26be-7f66-440a-a3d2-d473702af70e",
            "536ab10c-00b1-4b5d-9f60-9924d61427c0",
            "cddf3236-bc05-4d6c-a375-f737282ca278",
            "779507d3-0ffb-4618-bec1-c2d0042a6cea",
            "a65dbb12-26d1-43e4-9a7a-a1e7c85028dc",
            "945653bb-d655-4924-b8e2-b6bbf92d26ca",
            "a0263927-5111-4a3c-b59e-1d0f0a6cab66",
            "d9480c25-7635-4013-a129-c26c67903608",
            "acd5cf37-5582-42ff-96db-e59802cdc8ce",
            "44b279e9-18b7-4984-beb6-f7e623d1f3fb",
            "f3487a9f-afb1-43c4-a969-777cc688476d",
            "37476f74-a528-4b69-a808-4c7d4cc72018",
            "820a5eaf-de5e-44da-99d9-18bc135dc23b",
            "4effa5d3-8d6c-437e-a8e9-6a9dac2294b5",
            "729d7606-ac3a-4901-aa18-22e5c6326b4a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8c36d1f3-962a-4185-9f98-fdce262d360e",
          "title": "Test 10Lines game: 30, 34 -  27",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 866,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f89b5ee6-82fb-4a16-bfcf-a2a2d0ca4c98",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "199850f9-d272-4945-af7a-3c0b0a5830e8",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e9e787da-e2c9-46a9-9524-b15770922418",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "61bc4f9e-bb7b-41e2-a50f-864ea47f8803",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "c8490773-8c62-43c7-9292-0f6e26eb7343",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 check correct position of winning symbol",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "0dbb8aa9-8daf-40b5-bf6c-2e3ce40323e8",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 check correct accrual of winnings",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "04644ff4-ff63-478b-b06c-1dc788205b8a",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "ea46cde2-96fd-4f77-a661-30590dd69afe",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c43b780a-54af-4596-993d-383df23b76aa",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "69e59a7b-88b4-4b04-bba9-05d032f57b7b",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bcd3beef-fa5f-47c1-9df2-80c671cfb247",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bed10593-efdc-4914-acaa-36580ce1044c",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "c1aff303-c5fc-437b-b0eb-677f9108c5fb",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "f12154d6-c4cc-4858-ac31-72c7cbd84df4",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "7cb73a1b-b94a-4d8e-9dec-24109095306b",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "dbbc1aa9-ef55-4bc5-80d3-ca8ec94210e0",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "b7a1d853-696f-429a-98ec-dd173bf2666e",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  27 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "31f0ae1e-9c28-4c91-ae62-87fb9c070822",
              "parentUUID": "8c36d1f3-962a-4185-9f98-fdce262d360e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9e787da-e2c9-46a9-9524-b15770922418",
            "61bc4f9e-bb7b-41e2-a50f-864ea47f8803",
            "c8490773-8c62-43c7-9292-0f6e26eb7343",
            "0dbb8aa9-8daf-40b5-bf6c-2e3ce40323e8",
            "04644ff4-ff63-478b-b06c-1dc788205b8a",
            "ea46cde2-96fd-4f77-a661-30590dd69afe",
            "c43b780a-54af-4596-993d-383df23b76aa",
            "69e59a7b-88b4-4b04-bba9-05d032f57b7b",
            "bcd3beef-fa5f-47c1-9df2-80c671cfb247",
            "bed10593-efdc-4914-acaa-36580ce1044c",
            "c1aff303-c5fc-437b-b0eb-677f9108c5fb",
            "f12154d6-c4cc-4858-ac31-72c7cbd84df4",
            "7cb73a1b-b94a-4d8e-9dec-24109095306b",
            "dbbc1aa9-ef55-4bc5-80d3-ca8ec94210e0",
            "b7a1d853-696f-429a-98ec-dd173bf2666e",
            "31f0ae1e-9c28-4c91-ae62-87fb9c070822"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9ca88f45-6830-48ed-9ebb-a50990448f52",
          "title": "Test 10Lines game: 30, 34 -  28",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 661,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "2ef66b6d-3eea-4831-b642-440bfd346497",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "e3d80e7d-84d4-4cf6-8ecb-ff959b4e649a",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "20e3c6fb-713e-4742-a785-73a710ac53c4",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "cb54029c-eced-4342-accc-bcea2edab074",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "5afd4e01-b010-415e-84a5-a415b4863582",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "2292b096-4744-4c17-b135-c908b9666e43",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "7253d0d9-81bf-47e2-87db-81ab037d4e82",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "7190a124-7daf-43de-80d5-29acc11512ae",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cceca663-a283-4b09-953e-4c3300e3abf3",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "96da0a31-05e4-491e-ae3f-a0e1725287d6",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e2bb8b39-4803-4d88-b1e4-5e93e56ed845",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "59fbe94c-c622-43a9-967f-1e84bb4d013a",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "7eb368f5-d867-435e-9797-525bed74c1fa",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "2ea1d7ef-71fe-4a89-9162-6ef2f7daaed7",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "6afa1aff-7037-4f62-9d7d-307d665a624f",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "b758cf44-dd31-4bc8-90b8-855d1d76b542",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "5d198f93-8cd5-4f7e-9db5-b2caa1a41cee",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  28 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "755fdeca-7c3a-4a46-83e0-dc8d3c15d806",
              "parentUUID": "9ca88f45-6830-48ed-9ebb-a50990448f52",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20e3c6fb-713e-4742-a785-73a710ac53c4",
            "cb54029c-eced-4342-accc-bcea2edab074",
            "5afd4e01-b010-415e-84a5-a415b4863582",
            "2292b096-4744-4c17-b135-c908b9666e43",
            "7253d0d9-81bf-47e2-87db-81ab037d4e82",
            "7190a124-7daf-43de-80d5-29acc11512ae",
            "cceca663-a283-4b09-953e-4c3300e3abf3",
            "96da0a31-05e4-491e-ae3f-a0e1725287d6",
            "e2bb8b39-4803-4d88-b1e4-5e93e56ed845",
            "59fbe94c-c622-43a9-967f-1e84bb4d013a",
            "7eb368f5-d867-435e-9797-525bed74c1fa",
            "2ea1d7ef-71fe-4a89-9162-6ef2f7daaed7",
            "6afa1aff-7037-4f62-9d7d-307d665a624f",
            "b758cf44-dd31-4bc8-90b8-855d1d76b542",
            "5d198f93-8cd5-4f7e-9db5-b2caa1a41cee",
            "755fdeca-7c3a-4a46-83e0-dc8d3c15d806"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
          "title": "Test 10Lines game: 30, 34 -  29",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 861,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "33a0536f-0e07-4132-960a-dd87bc795725",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "56b73b43-179c-4f93-93af-c442a24803e8",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "bf3b6745-acad-4be9-88a5-073eb3113526",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "7dc08b6d-92c8-46e6-9f73-8a636056b8d6",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "5baf81a8-5549-4365-9a98-3ad21ba54e4d",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "a0ed1961-d3cb-44cc-a81e-7452dfb1496e",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "5e261eb5-ba73-4c6d-9d13-87905568d681",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "7fc07d02-d425-488c-a859-8c60895ffdf0",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7f4d545f-19f0-4386-884b-6ed0f31bf8a0",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "5ff3769d-a97e-44e8-a23d-b2c54f7e19ba",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b492c1e5-9c73-43b7-913c-566eb85d49d1",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "94893aaf-b43f-45e1-aaca-0a959c4be104",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "17cdec08-affb-42c6-8148-3ae68c1546d9",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "ad0769ce-2588-45ea-a154-9d0e808cdb8e",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "e70d80bf-83ac-45da-a2b9-cdb812958c9f",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "a9568254-68a1-4cf5-b591-6c44ed13e3ae",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "56601be6-197b-45f7-9fba-2524f754cd8d",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  29 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "a52ea3ba-b591-4e32-ae84-77ec6fb7299b",
              "parentUUID": "797f997b-97d7-4ebf-a571-91eb63f6d3e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf3b6745-acad-4be9-88a5-073eb3113526",
            "7dc08b6d-92c8-46e6-9f73-8a636056b8d6",
            "5baf81a8-5549-4365-9a98-3ad21ba54e4d",
            "a0ed1961-d3cb-44cc-a81e-7452dfb1496e",
            "5e261eb5-ba73-4c6d-9d13-87905568d681",
            "7fc07d02-d425-488c-a859-8c60895ffdf0",
            "7f4d545f-19f0-4386-884b-6ed0f31bf8a0",
            "5ff3769d-a97e-44e8-a23d-b2c54f7e19ba",
            "b492c1e5-9c73-43b7-913c-566eb85d49d1",
            "94893aaf-b43f-45e1-aaca-0a959c4be104",
            "17cdec08-affb-42c6-8148-3ae68c1546d9",
            "ad0769ce-2588-45ea-a154-9d0e808cdb8e",
            "e70d80bf-83ac-45da-a2b9-cdb812958c9f",
            "a9568254-68a1-4cf5-b591-6c44ed13e3ae",
            "56601be6-197b-45f7-9fba-2524f754cd8d",
            "a52ea3ba-b591-4e32-ae84-77ec6fb7299b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
          "title": "Test 10Lines game: 30, 34 -  30",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 607,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8136ae1c-39ab-41a1-9f18-16d0e185eef1",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "8b8ff9e0-5dec-4ab3-b24d-8efb384879f6",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "ae2dd849-0fdb-4e01-9b21-0dd19bd64b08",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "d7f8b03d-a1c6-4fa9-920a-de5d85e7f800",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "c3aac3d7-dd2f-4350-86e0-73496b941276",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "0f969b30-0e9a-427b-9374-8524a7e74c5f",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "15e638e7-4d70-4dd5-8861-3fd0f854e8ed",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "533590fe-2a56-44fe-84d8-922eb946364d",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "cdbe9184-5eec-4513-af8c-74117a0416b3",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "97d8418b-10cb-4e5e-8f7d-101be6ea1373",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a8ea7484-a2e2-4861-a450-30cf971be280",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "379e1dcc-ef36-4e6b-b898-98d46dc2d935",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "8c30cfd8-c36a-4d76-b749-d9a28e92ad36",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "eae72570-e9b5-40d9-8e7d-98965e174d00",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "577c85db-c93c-424b-ba91-ff55f7dcf41a",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "3ef2a4a8-4e01-448c-946a-dd88034ff279",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "1e873c15-e27c-452b-b9bd-172f965d0938",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  30 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "55d130ec-2e25-4978-a880-c73497e8dc90",
              "parentUUID": "3f5b8113-a05a-4645-a24e-71d2f64af1a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ae2dd849-0fdb-4e01-9b21-0dd19bd64b08",
            "d7f8b03d-a1c6-4fa9-920a-de5d85e7f800",
            "c3aac3d7-dd2f-4350-86e0-73496b941276",
            "0f969b30-0e9a-427b-9374-8524a7e74c5f",
            "15e638e7-4d70-4dd5-8861-3fd0f854e8ed",
            "533590fe-2a56-44fe-84d8-922eb946364d",
            "cdbe9184-5eec-4513-af8c-74117a0416b3",
            "97d8418b-10cb-4e5e-8f7d-101be6ea1373",
            "a8ea7484-a2e2-4861-a450-30cf971be280",
            "379e1dcc-ef36-4e6b-b898-98d46dc2d935",
            "8c30cfd8-c36a-4d76-b749-d9a28e92ad36",
            "eae72570-e9b5-40d9-8e7d-98965e174d00",
            "577c85db-c93c-424b-ba91-ff55f7dcf41a",
            "3ef2a4a8-4e01-448c-946a-dd88034ff279",
            "1e873c15-e27c-452b-b9bd-172f965d0938",
            "55d130ec-2e25-4978-a880-c73497e8dc90"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "39138061-e5a3-4049-9b10-59bd81210841",
          "title": "Test 10Lines game: 30, 34 -  31",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 817,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a29ff945-32d5-445d-a478-1d72f904fa9e",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "4754cb04-c3cc-4f34-9064-adaed9750a65",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "0899d127-c8f4-4b0d-89a1-f43f1f723169",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "2cd39cf9-a2b1-41c7-a539-274eef6cdb0e",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "9bd90b8d-8881-4c2d-b64b-0e9e91caa32c",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "fa848809-f7a3-4f76-89dc-9da4bda8b1f0",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "df7c6a22-0f5c-4fdc-b63a-fab0b05ae554",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "e3548f6b-e995-40b0-94f6-2d63a682804c",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "3ae40e9c-d35d-48d8-b63f-d3702740afbd",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "b7594b48-8b1c-4ff7-a46c-71dde4703fce",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ed3fd1da-24ef-4a3e-ab2a-10eaa0a46ea0",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f58e008f-43fa-4813-a6f9-f38e2691dc44",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "16bb4d4a-e56e-40d7-99b8-25f46cd2d4ea",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "03a5bf8d-4e5d-4a4d-8cf6-45dd38ad9276",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "7f794d36-223d-43d0-8978-96a6b1b13dba",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "da8313ca-ea8d-4bea-a137-f1c0f87a9e64",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0f887148-47dd-448b-9245-776b1d5c1f81",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  31 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "dec966b8-df38-47bb-8226-092e5b95534f",
              "parentUUID": "39138061-e5a3-4049-9b10-59bd81210841",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0899d127-c8f4-4b0d-89a1-f43f1f723169",
            "2cd39cf9-a2b1-41c7-a539-274eef6cdb0e",
            "9bd90b8d-8881-4c2d-b64b-0e9e91caa32c",
            "fa848809-f7a3-4f76-89dc-9da4bda8b1f0",
            "df7c6a22-0f5c-4fdc-b63a-fab0b05ae554",
            "e3548f6b-e995-40b0-94f6-2d63a682804c",
            "3ae40e9c-d35d-48d8-b63f-d3702740afbd",
            "b7594b48-8b1c-4ff7-a46c-71dde4703fce",
            "ed3fd1da-24ef-4a3e-ab2a-10eaa0a46ea0",
            "f58e008f-43fa-4813-a6f9-f38e2691dc44",
            "16bb4d4a-e56e-40d7-99b8-25f46cd2d4ea",
            "03a5bf8d-4e5d-4a4d-8cf6-45dd38ad9276",
            "7f794d36-223d-43d0-8978-96a6b1b13dba",
            "da8313ca-ea8d-4bea-a137-f1c0f87a9e64",
            "0f887148-47dd-448b-9245-776b1d5c1f81",
            "dec966b8-df38-47bb-8226-092e5b95534f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "8dd76252-4042-40fd-a52b-589a7e3d928f",
          "title": "Test 10Lines game: 30, 34 -  32",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1628,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7f16dda2-3655-4cce-88b3-4f150b44d270",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "be7bb608-bf5a-4478-9596-a079d52e72ec",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "ba9ce1dc-443f-4e7f-821e-366b50753343",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "07a8d839-d579-4fa5-80ac-80c3a90c1b1d",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "48263709-aea5-4f56-8a24-de213e7b62c8",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "58f2b3d9-0643-4498-bbaf-b6e2c7d68c0b",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "4b2952c7-9a72-4e62-90cd-e5b9dc21993f",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "4d0ae5a7-b58c-42c1-9750-4983d73ce867",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9cf6f329-9b2e-4eeb-867c-d30d6a02b78e",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "2572346e-5ee8-4d7e-aff7-50403370ff77",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2182f49c-125f-495c-87a7-83049676895b",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "82e22419-52a0-480c-a128-ebeb2af35825",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "9dec1dd6-d990-4e89-b43f-1a2197aa1b99",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a5a372fd-2b17-4ef1-8c60-e8ae5b21dc19",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "4eb10afd-1188-4a6c-864a-529d6f947d10",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "c85f0deb-40ca-40b5-a2cb-dc5da49a4303",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "9fa75428-cf59-4275-b775-8a7d2b889b44",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  32 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "5b18e80b-107c-4bb2-8f24-987717558300",
              "parentUUID": "8dd76252-4042-40fd-a52b-589a7e3d928f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba9ce1dc-443f-4e7f-821e-366b50753343",
            "07a8d839-d579-4fa5-80ac-80c3a90c1b1d",
            "48263709-aea5-4f56-8a24-de213e7b62c8",
            "58f2b3d9-0643-4498-bbaf-b6e2c7d68c0b",
            "4b2952c7-9a72-4e62-90cd-e5b9dc21993f",
            "4d0ae5a7-b58c-42c1-9750-4983d73ce867",
            "9cf6f329-9b2e-4eeb-867c-d30d6a02b78e",
            "2572346e-5ee8-4d7e-aff7-50403370ff77",
            "2182f49c-125f-495c-87a7-83049676895b",
            "82e22419-52a0-480c-a128-ebeb2af35825",
            "9dec1dd6-d990-4e89-b43f-1a2197aa1b99",
            "a5a372fd-2b17-4ef1-8c60-e8ae5b21dc19",
            "4eb10afd-1188-4a6c-864a-529d6f947d10",
            "c85f0deb-40ca-40b5-a2cb-dc5da49a4303",
            "9fa75428-cf59-4275-b775-8a7d2b889b44",
            "5b18e80b-107c-4bb2-8f24-987717558300"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
          "title": "Test 10Lines game: 30, 34 -  33",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 707,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7bf70188-57c1-429a-a7cf-85a5af5caa5d",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "a10b9042-28f8-4a18-8e78-684e2e34d666",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "9d1db738-a22c-4cfd-a0e3-6d3f35e905d3",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "1ce7ab1b-8751-44bf-9c25-8e88b1db0a40",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "dd635e82-1a6f-4413-9139-57b729f05f9e",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "c6b92730-babe-4da9-a5d1-929719ea5f9d",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "5e9eb617-520d-4878-8648-2a9a4b8c98ca",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "6ae808ff-0a0a-4460-94fa-652099293919",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "139b90b3-f39b-4378-acf0-b34ed98e6f21",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "2884b6fa-a9ae-48ab-9e03-4478d5db7cd1",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1f177813-8f39-4cd3-8829-6a0f007edaa5",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "aab2df49-3249-45bc-adb1-e701be8821d6",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "8e34431e-00f0-474a-b9f1-9fa0668cddd5",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "8d00dcd5-7512-48ca-8e8d-32d4d3fe9f17",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "642a2ebc-e0ef-4200-94dc-0440475d7739",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "f3f8ace9-8c84-4eaf-9b87-a72394045094",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "8cf546b5-726f-4914-860c-03dc6bc2c486",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  33 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "6e36ba2b-3504-4c0c-94f1-722ef52f16ed",
              "parentUUID": "440482a5-e2aa-4b03-9527-d15aa389ec5c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d1db738-a22c-4cfd-a0e3-6d3f35e905d3",
            "1ce7ab1b-8751-44bf-9c25-8e88b1db0a40",
            "dd635e82-1a6f-4413-9139-57b729f05f9e",
            "c6b92730-babe-4da9-a5d1-929719ea5f9d",
            "5e9eb617-520d-4878-8648-2a9a4b8c98ca",
            "6ae808ff-0a0a-4460-94fa-652099293919",
            "139b90b3-f39b-4378-acf0-b34ed98e6f21",
            "2884b6fa-a9ae-48ab-9e03-4478d5db7cd1",
            "1f177813-8f39-4cd3-8829-6a0f007edaa5",
            "aab2df49-3249-45bc-adb1-e701be8821d6",
            "8e34431e-00f0-474a-b9f1-9fa0668cddd5",
            "8d00dcd5-7512-48ca-8e8d-32d4d3fe9f17",
            "642a2ebc-e0ef-4200-94dc-0440475d7739",
            "f3f8ace9-8c84-4eaf-9b87-a72394045094",
            "8cf546b5-726f-4914-860c-03dc6bc2c486",
            "6e36ba2b-3504-4c0c-94f1-722ef52f16ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
          "title": "Test 10Lines game: 30, 34 -  34",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 812,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "03327ec8-bb69-456a-ba69-d5ff5f48a830",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "047768ee-0ecb-4781-aa64-6ad6cc204593",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "21b2cb79-90a5-438d-86f8-9f5bfab9cde8",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "0f4fc327-17ee-41ac-9815-0e1ad7b7e047",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "6a224ce5-64c6-4091-be11-442f46458bd9",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "0b8003f0-324b-4987-b317-3b918ef95fe6",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "1a437d47-5f16-4f22-8ec5-59222566e61f",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "ec23bb2a-6907-4ac2-b079-cad414b4daae",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "5d35c471-28ef-4d5d-a3b9-51028551d05b",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "e6929f4c-0faf-4451-8352-60a45f3e1f26",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "1cb8a583-d1f2-48ac-a582-a666aed68b29",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e2b4775e-4f53-4be6-a8e6-d9b95b24a76f",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "319bebf4-0a77-42cb-9de3-c44544294efd",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "49dac49f-7d4f-48b8-aec1-ca7bc32f5b65",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "4614d564-da21-4a82-87f4-fe04bacddd0d",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "4c4ae191-da15-4be5-a8ca-aaa3f292ba65",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "0c0e3846-70b7-4a9e-a78d-e289de60c8b5",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  34 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "50d6d321-4efc-40e6-b0c4-e3db87da6cb5",
              "parentUUID": "a3a95478-109e-46e7-bc67-5ff6a1c7d42d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21b2cb79-90a5-438d-86f8-9f5bfab9cde8",
            "0f4fc327-17ee-41ac-9815-0e1ad7b7e047",
            "6a224ce5-64c6-4091-be11-442f46458bd9",
            "0b8003f0-324b-4987-b317-3b918ef95fe6",
            "1a437d47-5f16-4f22-8ec5-59222566e61f",
            "ec23bb2a-6907-4ac2-b079-cad414b4daae",
            "5d35c471-28ef-4d5d-a3b9-51028551d05b",
            "e6929f4c-0faf-4451-8352-60a45f3e1f26",
            "1cb8a583-d1f2-48ac-a582-a666aed68b29",
            "e2b4775e-4f53-4be6-a8e6-d9b95b24a76f",
            "319bebf4-0a77-42cb-9de3-c44544294efd",
            "49dac49f-7d4f-48b8-aec1-ca7bc32f5b65",
            "4614d564-da21-4a82-87f4-fe04bacddd0d",
            "4c4ae191-da15-4be5-a8ca-aaa3f292ba65",
            "0c0e3846-70b7-4a9e-a78d-e289de60c8b5",
            "50d6d321-4efc-40e6-b0c4-e3db87da6cb5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
          "title": "Test 10Lines game: 30, 34 -  35",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 723,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "59802d08-fe1e-475f-a307-8b0a0074948b",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "9008b697-aa5c-42e9-84d0-976586a1a815",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "513bb26b-0ba9-4625-94c8-025546c408c9",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "10662bc7-e168-4c0c-956e-eeb07af05c3c",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "e6c22406-ed42-405b-8c47-7ac343f373dd",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 check correct position of winning symbol",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "814ff3f5-a073-4fd9-bf67-d21a7d92c840",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 check correct accrual of winnings",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "5c3d85e0-af6b-4297-a9e9-c8ff6a700005",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "b502394a-0e32-423a-b853-6d02f27c4532",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "501c5fcc-6bd1-43f4-8b49-fb76e8bb90ac",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "3b1d1984-56b2-4b83-a85b-1716d8fee99e",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "2a4a8a0e-35d4-464b-b5d2-b9cfb5a6d20e",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "88fcd10b-a599-4542-a1dc-89ce4463092b",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "05b49f9b-b9c8-4f58-8e05-06ad960659c5",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "4141701d-36e6-4320-92f9-0a68e6879bfe",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "5b7fa833-f272-485b-bec2-a355c455636f",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "038772de-a4c0-4b24-bc7a-cdbc0f06eab0",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "ab4fa9e2-cb74-46e0-90a8-379d8ca96d67",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  35 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "35648872-a11b-4ccb-ad62-f4a9c2957e61",
              "parentUUID": "31d71647-cfad-444a-ad5e-ecfa6b0392ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "513bb26b-0ba9-4625-94c8-025546c408c9",
            "10662bc7-e168-4c0c-956e-eeb07af05c3c",
            "e6c22406-ed42-405b-8c47-7ac343f373dd",
            "814ff3f5-a073-4fd9-bf67-d21a7d92c840",
            "5c3d85e0-af6b-4297-a9e9-c8ff6a700005",
            "b502394a-0e32-423a-b853-6d02f27c4532",
            "501c5fcc-6bd1-43f4-8b49-fb76e8bb90ac",
            "3b1d1984-56b2-4b83-a85b-1716d8fee99e",
            "2a4a8a0e-35d4-464b-b5d2-b9cfb5a6d20e",
            "88fcd10b-a599-4542-a1dc-89ce4463092b",
            "05b49f9b-b9c8-4f58-8e05-06ad960659c5",
            "4141701d-36e6-4320-92f9-0a68e6879bfe",
            "5b7fa833-f272-485b-bec2-a355c455636f",
            "038772de-a4c0-4b24-bc7a-cdbc0f06eab0",
            "ab4fa9e2-cb74-46e0-90a8-379d8ca96d67",
            "35648872-a11b-4ccb-ad62-f4a9c2957e61"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "5ce28451-a535-4369-8d65-a6c660cca49b",
          "title": "Test 10Lines game: 30, 34 -  36",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 894,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7dce26f2-cc20-4107-927e-08b852c5da51",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "e7c9cecd-f18d-44bc-925b-07edca8b0f7f",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e3cb565c-2f9f-41d7-bce4-c3731b2d531d",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "a2d65f53-f99a-4ac0-bfdc-83d9a6d18775",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "bd9ac743-c53f-47d5-bc89-3bd33d8c142d",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "935a6fc6-4e44-4ab9-9ce3-8d29a0f85959",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "71e247bf-adf9-489f-9f68-c73315d145d5",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "33b00021-7d72-4892-826e-fbeddbb078ba",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b5544f81-2b32-4a1c-8494-6eb18867538b",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "5ee1d3ba-86c8-43f3-92da-5797dfe44eb0",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "027fdff8-611c-446e-a7f3-3f43b18d6948",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "140814dc-526a-492b-9819-2ae5381d2f42",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "43f01edd-2ab3-4320-8b5b-057b9c8b560d",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "a5e71aa0-ae0a-4e59-9290-998bbd862887",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "92d84a32-bfc0-487b-b8a4-2525defbc559",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "32218455-1a17-411d-ba38-0b310cd68dd8",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "f6d8f723-292c-4f3d-ae98-82097db9b175",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  36 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "c460737d-570e-4cef-9b46-db2889029205",
              "parentUUID": "5ce28451-a535-4369-8d65-a6c660cca49b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3cb565c-2f9f-41d7-bce4-c3731b2d531d",
            "a2d65f53-f99a-4ac0-bfdc-83d9a6d18775",
            "bd9ac743-c53f-47d5-bc89-3bd33d8c142d",
            "935a6fc6-4e44-4ab9-9ce3-8d29a0f85959",
            "71e247bf-adf9-489f-9f68-c73315d145d5",
            "33b00021-7d72-4892-826e-fbeddbb078ba",
            "b5544f81-2b32-4a1c-8494-6eb18867538b",
            "5ee1d3ba-86c8-43f3-92da-5797dfe44eb0",
            "027fdff8-611c-446e-a7f3-3f43b18d6948",
            "140814dc-526a-492b-9819-2ae5381d2f42",
            "43f01edd-2ab3-4320-8b5b-057b9c8b560d",
            "a5e71aa0-ae0a-4e59-9290-998bbd862887",
            "92d84a32-bfc0-487b-b8a4-2525defbc559",
            "32218455-1a17-411d-ba38-0b310cd68dd8",
            "f6d8f723-292c-4f3d-ae98-82097db9b175",
            "c460737d-570e-4cef-9b46-db2889029205"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
          "title": "Test 10Lines game: 30, 34 -  37",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 839,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "219daabf-13fd-4646-8777-69970a94ce43",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "2c0cec8d-4da1-451b-80dd-4367ae47b276",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "d2080bd3-f789-40b7-8292-818ef88f0b63",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "79db8b48-6663-4f66-bc63-8899ac97bc07",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "3894fc91-3af0-4be3-a402-116b07fc5898",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "f51ddfe8-1f33-43d2-bb40-1658e16639e5",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "5efd8085-2da6-4664-8c89-b45626676493",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "7c988d34-c880-4042-88d6-f4feb7e09fa0",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "177ae15f-6aa4-4948-a407-65dc0ca40373",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "809ea67c-829e-42b8-9180-14cdbbdc35d6",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c9b1f888-2cc5-43ea-adde-9fcb79591499",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c59f5724-8ca4-4d1c-99c2-9a862c03e172",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "8ac3a274-917e-4cc2-be63-6a5c1fe5de35",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "9779eb51-ee6a-4060-942f-c490b7793548",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "c3ce425c-9468-4800-b56a-c77f03f6494e",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "501086a7-be0b-46c2-bf57-367b57c83a98",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "7bc32eb6-ce84-4c19-8485-6a636339ad89",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  37 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "d8a418b5-87a2-4b0e-83a3-0bfb15f0d104",
              "parentUUID": "13cda32e-7864-4cb8-ad60-5ffb9f333e75",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2080bd3-f789-40b7-8292-818ef88f0b63",
            "79db8b48-6663-4f66-bc63-8899ac97bc07",
            "3894fc91-3af0-4be3-a402-116b07fc5898",
            "f51ddfe8-1f33-43d2-bb40-1658e16639e5",
            "5efd8085-2da6-4664-8c89-b45626676493",
            "7c988d34-c880-4042-88d6-f4feb7e09fa0",
            "177ae15f-6aa4-4948-a407-65dc0ca40373",
            "809ea67c-829e-42b8-9180-14cdbbdc35d6",
            "c9b1f888-2cc5-43ea-adde-9fcb79591499",
            "c59f5724-8ca4-4d1c-99c2-9a862c03e172",
            "8ac3a274-917e-4cc2-be63-6a5c1fe5de35",
            "9779eb51-ee6a-4060-942f-c490b7793548",
            "c3ce425c-9468-4800-b56a-c77f03f6494e",
            "501086a7-be0b-46c2-bf57-367b57c83a98",
            "7bc32eb6-ce84-4c19-8485-6a636339ad89",
            "d8a418b5-87a2-4b0e-83a3-0bfb15f0d104"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "0c026969-15b0-4acd-9b42-f791090f57be",
          "title": "Test 10Lines game: 30, 34 -  38",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 973,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5b528173-c1f4-435f-a5fb-005b9a24f635",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "0fd72893-dc26-42d5-a9ac-82d8767cd665",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "2959f106-ea90-4108-b30e-0221aa2a134c",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "af741840-d7fe-4b00-9887-88f37adaa900",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "75198ac9-c121-4d63-be8f-e99450eb4da5",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "5ae9f703-747b-4c1a-bef4-fe266cc8a687",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "01f0c7c1-ad20-44d7-9aaa-f02e5152046d",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "411b0294-1fd9-40a5-9007-ebc8e29e8c7b",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "f5baddb5-7a2f-4ff3-af18-533c66a331a6",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "28a3772f-69a9-4269-88e3-4d3ad66b4e73",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e657c45d-7c74-4d1b-bc6d-5054d836c5d8",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "618c1a92-2417-4ac3-bc79-6f64e5b1116a",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "3f0b3751-682b-4f26-9edf-5363295a0420",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "8e6d8344-3f8c-40ab-bbe9-975b72e2961f",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "f7b241e5-2e4e-4481-a069-d9c62b6ce6d2",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "a0eb344d-8039-426a-8d28-9cb36baa0d7b",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "add5afb4-43e5-4f16-867c-bdcba5c09ea1",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  38 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e2bbe16d-8a54-4342-a4bc-a05cf38c8953",
              "parentUUID": "0c026969-15b0-4acd-9b42-f791090f57be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2959f106-ea90-4108-b30e-0221aa2a134c",
            "af741840-d7fe-4b00-9887-88f37adaa900",
            "75198ac9-c121-4d63-be8f-e99450eb4da5",
            "5ae9f703-747b-4c1a-bef4-fe266cc8a687",
            "01f0c7c1-ad20-44d7-9aaa-f02e5152046d",
            "411b0294-1fd9-40a5-9007-ebc8e29e8c7b",
            "f5baddb5-7a2f-4ff3-af18-533c66a331a6",
            "28a3772f-69a9-4269-88e3-4d3ad66b4e73",
            "e657c45d-7c74-4d1b-bc6d-5054d836c5d8",
            "618c1a92-2417-4ac3-bc79-6f64e5b1116a",
            "3f0b3751-682b-4f26-9edf-5363295a0420",
            "8e6d8344-3f8c-40ab-bbe9-975b72e2961f",
            "f7b241e5-2e4e-4481-a069-d9c62b6ce6d2",
            "a0eb344d-8039-426a-8d28-9cb36baa0d7b",
            "add5afb4-43e5-4f16-867c-bdcba5c09ea1",
            "e2bbe16d-8a54-4342-a4bc-a05cf38c8953"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
          "title": "Test 10Lines game: 30, 34 -  39",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 591,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e27522b1-d419-489a-96dd-be2fbce7c1a4",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "dc263c02-ad32-4f1b-9018-d68632f72393",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "7eac3a9c-4754-4954-9d3f-804179e9f995",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "e9a230de-0f3c-4c47-8da2-04c52526411e",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "ed0a5d71-b024-4e22-8336-8abc6206cae0",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "fb9c0083-a963-4e56-b34a-27153434f3c7",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "91f1bc86-7774-4317-955c-e3ba6867cf97",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "101bd7c0-0a80-47e4-9344-e4d6841ce826",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7f41be39-17aa-4775-b9e3-1a0588d12c3b",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "1d163cd6-92aa-43c9-9081-e923a325bcca",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a1ce84d4-41d6-4c5e-9ea6-1c28919eed35",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "af32df78-3e8e-4fff-bced-9ea67d182623",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "5acce45e-6858-4f97-bff0-c76defe4da38",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "6ea7a2b6-09e5-4630-a2a3-b8f6d8e1369a",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "1b744e05-dab1-438f-993a-8d0bd015bf84",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "5103b9b7-7655-45fb-9917-0ba4b52dd8da",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "9147f5a9-ffc1-4f77-b8a9-8c693fd6601d",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  39 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "3e52972e-79b6-4caa-83fe-d70f12395322",
              "parentUUID": "b0d6ab46-3931-4c3a-a2c2-d7d4f2074884",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7eac3a9c-4754-4954-9d3f-804179e9f995",
            "e9a230de-0f3c-4c47-8da2-04c52526411e",
            "ed0a5d71-b024-4e22-8336-8abc6206cae0",
            "fb9c0083-a963-4e56-b34a-27153434f3c7",
            "91f1bc86-7774-4317-955c-e3ba6867cf97",
            "101bd7c0-0a80-47e4-9344-e4d6841ce826",
            "7f41be39-17aa-4775-b9e3-1a0588d12c3b",
            "1d163cd6-92aa-43c9-9081-e923a325bcca",
            "a1ce84d4-41d6-4c5e-9ea6-1c28919eed35",
            "af32df78-3e8e-4fff-bced-9ea67d182623",
            "5acce45e-6858-4f97-bff0-c76defe4da38",
            "6ea7a2b6-09e5-4630-a2a3-b8f6d8e1369a",
            "1b744e05-dab1-438f-993a-8d0bd015bf84",
            "5103b9b7-7655-45fb-9917-0ba4b52dd8da",
            "9147f5a9-ffc1-4f77-b8a9-8c693fd6601d",
            "3e52972e-79b6-4caa-83fe-d70f12395322"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
          "title": "Test 10Lines game: 30, 34 -  40",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 809,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d2353724-0ce5-4531-80f2-e0e2838510c7",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "c7049b96-f917-4d45-8bc4-0c632946627e",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "b8bcfdfe-bc0b-43df-9560-722112eb91cc",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "59fef259-b374-4fb0-bd79-e0d8e8559e49",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "4927785f-f4e7-4e97-9bfc-8926abcd85a4",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "d6e9ae53-0751-4150-a296-9f38baa2da3b",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "3ac8e714-9db8-419e-8d70-8e0f53446c62",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "49d6fc25-a42a-4ad1-884c-b1bed4e2e49b",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "e6f96ed6-d145-46a7-b30c-7f09399e7ad3",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "3257efd6-dcc8-482c-bc83-eb043c89e492",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "27d41cb6-43f9-4761-a16b-711025c5dcfc",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ae525fd5-0d1d-4ba2-a737-09eae2489862",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "1ad5c861-cc84-4be8-aef1-47832333a76e",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "40dce120-d4f8-445f-8484-7ced3a587b3f",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "48f634a7-45be-4a72-a888-f09325eec279",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "176f4ba6-4c57-44fa-833a-458c95d2c9f5",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "cfb3ad94-5ebd-440f-aa1e-e71a60f4c583",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  40 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "24885e1c-3564-47c8-beb8-d6d918962a3a",
              "parentUUID": "9f7f07c2-e85b-45d3-afb4-2868fe6c85e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8bcfdfe-bc0b-43df-9560-722112eb91cc",
            "59fef259-b374-4fb0-bd79-e0d8e8559e49",
            "4927785f-f4e7-4e97-9bfc-8926abcd85a4",
            "d6e9ae53-0751-4150-a296-9f38baa2da3b",
            "3ac8e714-9db8-419e-8d70-8e0f53446c62",
            "49d6fc25-a42a-4ad1-884c-b1bed4e2e49b",
            "e6f96ed6-d145-46a7-b30c-7f09399e7ad3",
            "3257efd6-dcc8-482c-bc83-eb043c89e492",
            "27d41cb6-43f9-4761-a16b-711025c5dcfc",
            "ae525fd5-0d1d-4ba2-a737-09eae2489862",
            "1ad5c861-cc84-4be8-aef1-47832333a76e",
            "40dce120-d4f8-445f-8484-7ced3a587b3f",
            "48f634a7-45be-4a72-a888-f09325eec279",
            "176f4ba6-4c57-44fa-833a-458c95d2c9f5",
            "cfb3ad94-5ebd-440f-aa1e-e71a60f4c583",
            "24885e1c-3564-47c8-beb8-d6d918962a3a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d20507f7-5492-48de-a64a-6e60591188f5",
          "title": "Test 10Lines game: 30, 34 -  41",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1632,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7f36db58-b03f-48d7-a3b9-f7c6eaf2f651",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "a94ddee0-50d0-4115-9690-055ee19f0e0b",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "7818e636-9f68-4708-909b-45e722d1503d",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "36649054-36e7-4c84-b331-511ebf1f87fd",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "e13a5146-0047-489b-8a65-8de465817ed4",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 check correct position of winning symbol",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "ebd22bac-70ba-4e49-a562-e11db745bcd3",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 check correct accrual of winnings",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "29b9bdf2-8c02-4fc2-99db-ba91b252bcea",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "d2c989ef-4d27-4e7c-af03-eb9a575de43c",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "0bcdf3f2-059d-49cb-8a9a-dbbdcae7d508",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "e83fa250-05f4-4757-a78b-4382a64cd5b4",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "07a8cee2-67a0-4b49-aa6c-e5131c9e2216",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "05222dd5-b274-4402-803f-2f9b246bd579",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "881320d1-4853-4285-a765-e66375b90a2e",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5aa66817-38d2-4ca3-b060-a4442b6bd985",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "21a1792f-b414-4ae7-9dba-b89b7bf15be6",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "d2cd9dc8-909d-44c5-acc4-2d8d3788a4ea",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "7cb2398f-12a3-4a57-92a5-bb0d04fa4aa3",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  41 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "936514cd-806b-445e-89b5-e6cc98a0c7c0",
              "parentUUID": "d20507f7-5492-48de-a64a-6e60591188f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7818e636-9f68-4708-909b-45e722d1503d",
            "36649054-36e7-4c84-b331-511ebf1f87fd",
            "e13a5146-0047-489b-8a65-8de465817ed4",
            "ebd22bac-70ba-4e49-a562-e11db745bcd3",
            "29b9bdf2-8c02-4fc2-99db-ba91b252bcea",
            "d2c989ef-4d27-4e7c-af03-eb9a575de43c",
            "0bcdf3f2-059d-49cb-8a9a-dbbdcae7d508",
            "e83fa250-05f4-4757-a78b-4382a64cd5b4",
            "07a8cee2-67a0-4b49-aa6c-e5131c9e2216",
            "05222dd5-b274-4402-803f-2f9b246bd579",
            "881320d1-4853-4285-a765-e66375b90a2e",
            "5aa66817-38d2-4ca3-b060-a4442b6bd985",
            "21a1792f-b414-4ae7-9dba-b89b7bf15be6",
            "d2cd9dc8-909d-44c5-acc4-2d8d3788a4ea",
            "7cb2398f-12a3-4a57-92a5-bb0d04fa4aa3",
            "936514cd-806b-445e-89b5-e6cc98a0c7c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
          "title": "Test 10Lines game: 30, 34 -  42",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 693,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6555e41b-7862-4af0-8131-6cbe810adc51",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "77b002af-b0c9-4671-9733-56bded72c09e",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "f3ba5244-fa0a-43cd-b76e-a492f17c52b1",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "64f9ec1c-492b-4afc-9163-974f6697428f",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "db4edfb8-38ff-489b-b03c-3ee162cb30df",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "c6c071ed-00b9-474a-b7dd-7e83908cf675",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "9aec2c00-00eb-4064-97a5-0410227f0563",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "0098759a-2955-4d03-b49e-5a266b0b99e6",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "182b3f1f-2332-46b2-b3c9-42bacbbf9cd9",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "29241660-eeb4-4c22-90b2-f5560133158b",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "bbc7240d-a774-4b86-b90a-bffd921fc5fd",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "40ec7fb1-244f-40bc-ba2c-a5d8cd5dbb9f",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "7ba96f5a-56ec-46a9-b3c2-8101af9ce953",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "5c1340da-7662-4747-9bb2-2c20d3750a0c",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "47a10c00-1e14-4aba-b361-63b9261a2bcd",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "0741eb45-eb22-4b7a-8950-eabeb006ef36",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "e06bb5cc-0f90-4e00-a14f-4ce34a9ee8a6",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  42 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "89dde3ed-8f74-4f8f-aa5d-a7d5576683ed",
              "parentUUID": "d63289bf-71c2-4e7c-9532-fdf3440f1b98",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3ba5244-fa0a-43cd-b76e-a492f17c52b1",
            "64f9ec1c-492b-4afc-9163-974f6697428f",
            "db4edfb8-38ff-489b-b03c-3ee162cb30df",
            "c6c071ed-00b9-474a-b7dd-7e83908cf675",
            "9aec2c00-00eb-4064-97a5-0410227f0563",
            "0098759a-2955-4d03-b49e-5a266b0b99e6",
            "182b3f1f-2332-46b2-b3c9-42bacbbf9cd9",
            "29241660-eeb4-4c22-90b2-f5560133158b",
            "bbc7240d-a774-4b86-b90a-bffd921fc5fd",
            "40ec7fb1-244f-40bc-ba2c-a5d8cd5dbb9f",
            "7ba96f5a-56ec-46a9-b3c2-8101af9ce953",
            "5c1340da-7662-4747-9bb2-2c20d3750a0c",
            "47a10c00-1e14-4aba-b361-63b9261a2bcd",
            "0741eb45-eb22-4b7a-8950-eabeb006ef36",
            "e06bb5cc-0f90-4e00-a14f-4ce34a9ee8a6",
            "89dde3ed-8f74-4f8f-aa5d-a7d5576683ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
          "title": "Test 10Lines game: 30, 34 -  43",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 700,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "98e8572e-b809-4ae1-b8b1-a434852ec46a",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "d49c47b3-b714-468b-919f-e366f1ee993d",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a11c98b7-79df-41dd-8cf7-9a87099b087c",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "c0f6a329-5a59-4f35-9701-6be8cd9adbe2",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "90820fde-e5af-47bb-b5d3-6b495c41c638",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 check correct position of winning symbol",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "7f151911-1269-4db8-b712-dd49515b88df",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "9aec5c5e-6b72-4a60-95cb-27506c873e4e",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 check total amount is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "732dfc0e-755c-4266-bbd0-7b1401346262",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d4853f3d-f742-437a-ae38-1ae6364e3209",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "cbf986e0-988f-4832-a81f-cdb6778c349f",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "ea347f76-2e97-404e-b008-0ffb5662195c",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "874ba6bf-a460-4a48-a745-cdf754dc301e",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "3c871604-303b-450c-974f-a59a00d982bf",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "079d662a-872b-444a-be23-c147f0a3be32",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "13cf33da-25f9-416a-9ea3-762f5c6e0cfa",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "8d513350-f619-4991-bda4-282a20504fe2",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "571d835e-30af-4c08-8ab3-f5b8521fedfa",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  43 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "2416e618-1702-4584-828f-6845e0bd0438",
              "parentUUID": "b7532b55-dc04-4801-af64-fa635aa6b8b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a11c98b7-79df-41dd-8cf7-9a87099b087c",
            "c0f6a329-5a59-4f35-9701-6be8cd9adbe2",
            "90820fde-e5af-47bb-b5d3-6b495c41c638",
            "7f151911-1269-4db8-b712-dd49515b88df",
            "9aec5c5e-6b72-4a60-95cb-27506c873e4e",
            "732dfc0e-755c-4266-bbd0-7b1401346262",
            "d4853f3d-f742-437a-ae38-1ae6364e3209",
            "cbf986e0-988f-4832-a81f-cdb6778c349f",
            "ea347f76-2e97-404e-b008-0ffb5662195c",
            "874ba6bf-a460-4a48-a745-cdf754dc301e",
            "3c871604-303b-450c-974f-a59a00d982bf",
            "079d662a-872b-444a-be23-c147f0a3be32",
            "13cf33da-25f9-416a-9ea3-762f5c6e0cfa",
            "8d513350-f619-4991-bda4-282a20504fe2",
            "571d835e-30af-4c08-8ab3-f5b8521fedfa",
            "2416e618-1702-4584-828f-6845e0bd0438"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2558ca7a-4787-4726-be77-c742c5edb241",
          "title": "Test 10Lines game: 30, 34 -  44",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 668,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "37c9a392-422c-430b-b6a2-fee9f21f9648",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "6561cea8-e82e-43ea-9a2b-b02fe074c7ca",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "e5264da4-c3c0-4309-ad52-fa4b46bcf834",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "6a2e5ae4-72d6-4e00-bac4-2b32783947e2",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "873903ae-c032-4c5e-af9b-8259aa3751d8",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 check correct position of winning symbol",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "4a78b1e7-9c10-4ddf-80de-2fe245d5528a",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 check correct accrual of winnings",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "3ac29b4d-1ab8-4ae3-af60-04fa3ab59046",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "fe7e2013-6fb3-4105-a1f1-85aaea389f32",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "523e6806-3849-4040-a897-e5af59dd854f",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "40f31df7-5a78-4179-9ef9-df628de34d89",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "d368dbad-74bb-4ec8-bf9d-7ed7c9fad1a0",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "b5081da8-46ae-4fa7-ab5c-61b25652f495",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "7039d33d-ae5a-43a9-8336-808243d692b3",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "3257f8ac-bb4f-4c35-b9f8-68ae101a2db4",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "146345ac-d9af-4b36-a92d-90ff1f99f8fd",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "ecde5a0f-49b5-48bb-b98b-820c02c11475",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "f069d249-54de-40cc-83b7-0ad437d617db",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  44 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "e26b8127-a6ea-40c3-a3ca-d999be30c01f",
              "parentUUID": "2558ca7a-4787-4726-be77-c742c5edb241",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5264da4-c3c0-4309-ad52-fa4b46bcf834",
            "6a2e5ae4-72d6-4e00-bac4-2b32783947e2",
            "873903ae-c032-4c5e-af9b-8259aa3751d8",
            "4a78b1e7-9c10-4ddf-80de-2fe245d5528a",
            "3ac29b4d-1ab8-4ae3-af60-04fa3ab59046",
            "fe7e2013-6fb3-4105-a1f1-85aaea389f32",
            "523e6806-3849-4040-a897-e5af59dd854f",
            "40f31df7-5a78-4179-9ef9-df628de34d89",
            "d368dbad-74bb-4ec8-bf9d-7ed7c9fad1a0",
            "b5081da8-46ae-4fa7-ab5c-61b25652f495",
            "7039d33d-ae5a-43a9-8336-808243d692b3",
            "3257f8ac-bb4f-4c35-b9f8-68ae101a2db4",
            "146345ac-d9af-4b36-a92d-90ff1f99f8fd",
            "ecde5a0f-49b5-48bb-b98b-820c02c11475",
            "f069d249-54de-40cc-83b7-0ad437d617db",
            "e26b8127-a6ea-40c3-a3ca-d999be30c01f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
          "title": "Test 10Lines game: 30, 34 -  45",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 848,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c87745a6-8858-424b-b075-d7079579ed5f",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "6ec47a68-568f-44ff-ae2b-bf3b0f3e3915",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "f51304ab-1e22-44ea-91db-d206edb14c99",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "b12d1bfa-b5a0-4ea0-8545-3bedf3d4a65e",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "0d4085ea-800d-4dbc-b003-12a5aef5ff13",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "3801f464-f9d0-4538-bbf3-27ed5beb28df",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "ccae2fa6-5268-4b0f-9360-e8dd0d96c50f",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "98705493-3842-4c97-bc46-c4a86ea2d390",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7ee08035-a493-4f7e-a086-c9eee6baea11",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "ce22a897-5a15-4e70-be37-eeecfcfc3d81",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "796f306d-0ced-49bd-9a39-230657e9b406",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "28ff7e87-6f91-48b8-91ea-a228e3b1e1bf",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "df5e83f7-172c-4b5f-bdc0-5ab1e2e7a23e",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "c421def7-6fb8-4d5d-a8ce-75002019b098",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "635d5cef-e776-443b-bfa0-768e8ff1ec5b",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "bacee06c-7541-49dd-8272-2aaff9332b27",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "7725256b-1fd7-414b-b6a8-507e1b2dec2c",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  45 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "fe0d3d17-4c74-4e4d-84fd-a8e6d675ec82",
              "parentUUID": "2c25c3d6-02f3-4dce-94de-abc7e4e988c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f51304ab-1e22-44ea-91db-d206edb14c99",
            "b12d1bfa-b5a0-4ea0-8545-3bedf3d4a65e",
            "0d4085ea-800d-4dbc-b003-12a5aef5ff13",
            "3801f464-f9d0-4538-bbf3-27ed5beb28df",
            "ccae2fa6-5268-4b0f-9360-e8dd0d96c50f",
            "98705493-3842-4c97-bc46-c4a86ea2d390",
            "7ee08035-a493-4f7e-a086-c9eee6baea11",
            "ce22a897-5a15-4e70-be37-eeecfcfc3d81",
            "796f306d-0ced-49bd-9a39-230657e9b406",
            "28ff7e87-6f91-48b8-91ea-a228e3b1e1bf",
            "df5e83f7-172c-4b5f-bdc0-5ab1e2e7a23e",
            "c421def7-6fb8-4d5d-a8ce-75002019b098",
            "635d5cef-e776-443b-bfa0-768e8ff1ec5b",
            "bacee06c-7541-49dd-8272-2aaff9332b27",
            "7725256b-1fd7-414b-b6a8-507e1b2dec2c",
            "fe0d3d17-4c74-4e4d-84fd-a8e6d675ec82"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "512da613-2c84-420c-add6-9c23eecce001",
          "title": "Test 10Lines game: 30, 34 -  46",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 919,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1e59f568-31f6-476c-80cd-6da6bf3eb5fd",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "592081ac-4fbb-4a0f-819a-3733d18e9a82",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "42ec9b86-dd45-4360-937a-a580a4bfb64e",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "dc5cde4b-627c-4951-b7c5-d9194ae445b6",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "f073fc7b-9114-4274-ac2c-094887ad12cf",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 check correct position of winning symbol",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "2c12730a-0baa-48b8-9d8d-32b81d64e097",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 check correct accrual of winnings",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "851fd7ed-b6f1-4b70-8dfa-23f6cc7cfdcc",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "bf6d76d9-a48c-4ff0-8f1a-c47be08ca40f",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "14f56159-3e35-4780-b3d2-c3834226a0c6",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "f9add353-faed-40ab-94c2-ac55d607d202",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "73b6155e-c522-4359-bc92-f92e3cd4f534",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "39deca2f-da6e-4438-9369-830d8895fa5d",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "d5216eaa-4d81-47d7-95af-c3714518832c",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "91708ce0-7f4b-4148-ae45-d9c18a5bb373",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "1be1d4d6-e5d0-4700-b6db-e3fc5c31e160",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "9ef471a8-e826-49c4-8568-ec42f035eea8",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "4ff0124a-4cc4-4a01-93c9-92032090c352",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  46 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "75157676-b146-4f83-ac4a-9d2de30a7eb2",
              "parentUUID": "512da613-2c84-420c-add6-9c23eecce001",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42ec9b86-dd45-4360-937a-a580a4bfb64e",
            "dc5cde4b-627c-4951-b7c5-d9194ae445b6",
            "f073fc7b-9114-4274-ac2c-094887ad12cf",
            "2c12730a-0baa-48b8-9d8d-32b81d64e097",
            "851fd7ed-b6f1-4b70-8dfa-23f6cc7cfdcc",
            "bf6d76d9-a48c-4ff0-8f1a-c47be08ca40f",
            "14f56159-3e35-4780-b3d2-c3834226a0c6",
            "f9add353-faed-40ab-94c2-ac55d607d202",
            "73b6155e-c522-4359-bc92-f92e3cd4f534",
            "39deca2f-da6e-4438-9369-830d8895fa5d",
            "d5216eaa-4d81-47d7-95af-c3714518832c",
            "91708ce0-7f4b-4148-ae45-d9c18a5bb373",
            "1be1d4d6-e5d0-4700-b6db-e3fc5c31e160",
            "9ef471a8-e826-49c4-8568-ec42f035eea8",
            "4ff0124a-4cc4-4a01-93c9-92032090c352",
            "75157676-b146-4f83-ac4a-9d2de30a7eb2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
          "title": "Test 10Lines game: 30, 34 -  47",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 591,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4a6969d6-c0b4-4c11-96a1-d9b066968351",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "cba712a8-2762-4cc1-ac13-12e1d0786c4b",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "38eb5b8c-6717-46e8-81e8-b1855994a2f5",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "58c4b411-6daf-400f-ba55-122794e473c2",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "28b43243-1eec-42b6-8595-455f04e771aa",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "37e5e169-6697-44fb-9728-2a63b25a409f",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "2044b255-db46-4c3e-817a-b274ca608970",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "87e91fb2-34ca-41d8-b13c-e0cd7d925806",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "562d27b9-73e9-4da0-b023-1ebecb73c0bf",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "9772d78e-431e-4986-9ef1-823d986ac81f",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "a7e8cc32-12fc-4c03-978d-305e7dc80ea7",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "6d08335a-4971-4b68-8b88-adfaaae8f318",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "a004a487-ee7d-429a-a458-498a3d84540c",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "955829d0-0cc7-4e31-870a-fbc991365e6e",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "0f29ad4d-e265-453a-bcf7-667287207bde",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "72a2971c-dcb4-4147-904b-981ab095a8a7",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "221e2579-e01d-4a75-88e0-922ef73e15cf",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  47 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "dbbde3c0-ee83-4b54-88c3-24c5f88646e0",
              "parentUUID": "b5fc0e48-85b8-4500-9080-dd6c935a4a1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38eb5b8c-6717-46e8-81e8-b1855994a2f5",
            "58c4b411-6daf-400f-ba55-122794e473c2",
            "28b43243-1eec-42b6-8595-455f04e771aa",
            "37e5e169-6697-44fb-9728-2a63b25a409f",
            "2044b255-db46-4c3e-817a-b274ca608970",
            "87e91fb2-34ca-41d8-b13c-e0cd7d925806",
            "562d27b9-73e9-4da0-b023-1ebecb73c0bf",
            "9772d78e-431e-4986-9ef1-823d986ac81f",
            "a7e8cc32-12fc-4c03-978d-305e7dc80ea7",
            "6d08335a-4971-4b68-8b88-adfaaae8f318",
            "a004a487-ee7d-429a-a458-498a3d84540c",
            "955829d0-0cc7-4e31-870a-fbc991365e6e",
            "0f29ad4d-e265-453a-bcf7-667287207bde",
            "72a2971c-dcb4-4147-904b-981ab095a8a7",
            "221e2579-e01d-4a75-88e0-922ef73e15cf",
            "dbbde3c0-ee83-4b54-88c3-24c5f88646e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "885609dd-8227-423e-a1d8-c09ed2116f60",
          "title": "Test 10Lines game: 30, 34 -  48",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 912,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4b687e82-1b12-46aa-b520-9584c13a3c81",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "88340a0a-862d-4ce2-a231-9cb7f361d6cd",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "a60032f0-c787-4db0-886c-c952cfc36d72",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "1a38f324-1104-4b3e-9c91-91e19649632b",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "d510ef55-5eda-4138-8549-e6c4705e1fbc",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 check correct position of winning symbol",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "f4a9f210-6368-4a59-8378-f8586cb53e48",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 check correct accrual of winnings",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "f73ab35d-98aa-4655-bd71-b9c3cf4f01bb",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "245f57ea-1b47-4836-8136-d9ef68a0f365",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "4952c0c1-2dec-4b2b-89ab-b9b86022a7b5",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "e713ccd6-a2a9-4a7c-9bca-3b8bbff0185a",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "9d7b0602-b83e-4f55-9468-2e128f2e7858",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "c8a07633-a7ce-446e-982e-c6b2a4f8ebfa",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "bc9b3777-ae14-40bc-98eb-e356b5b61165",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "7f38b431-725c-409d-8868-da8e1dc9dfd7",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "472afc73-80dc-4b79-9390-114f3ef121d1",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 check type of win Lines",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "791b4257-e356-4e45-b431-550a41289660",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "33e65c11-6240-4af0-9b4c-18b04b92bf14",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  48 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "ea3b372b-d007-447e-bca9-285ae5b6bb2c",
              "parentUUID": "885609dd-8227-423e-a1d8-c09ed2116f60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a60032f0-c787-4db0-886c-c952cfc36d72",
            "1a38f324-1104-4b3e-9c91-91e19649632b",
            "d510ef55-5eda-4138-8549-e6c4705e1fbc",
            "f4a9f210-6368-4a59-8378-f8586cb53e48",
            "f73ab35d-98aa-4655-bd71-b9c3cf4f01bb",
            "245f57ea-1b47-4836-8136-d9ef68a0f365",
            "4952c0c1-2dec-4b2b-89ab-b9b86022a7b5",
            "e713ccd6-a2a9-4a7c-9bca-3b8bbff0185a",
            "9d7b0602-b83e-4f55-9468-2e128f2e7858",
            "c8a07633-a7ce-446e-982e-c6b2a4f8ebfa",
            "bc9b3777-ae14-40bc-98eb-e356b5b61165",
            "7f38b431-725c-409d-8868-da8e1dc9dfd7",
            "472afc73-80dc-4b79-9390-114f3ef121d1",
            "791b4257-e356-4e45-b431-550a41289660",
            "33e65c11-6240-4af0-9b4c-18b04b92bf14",
            "ea3b372b-d007-447e-bca9-285ae5b6bb2c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        },
        {
          "uuid": "48734985-d40c-4063-b488-2280e74559e3",
          "title": "Test 10Lines game: 30, 34 -  49",
          "fullFile": "/Users/marinaratova/Desktop/JS/test-server/test/test_10Lines.js",
          "file": "/test/test_10Lines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 797,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    let token = await readToken(Useplatform.nameToken);\n    const response = await spin(Useplatform.getUrlSpin(), token, Usegame.getId(), Usegame.getBet(Useplatform), Usegame.getLines());\n    let { nextActionsSpin, res } = response;\n    getLog(res, Usegame.name, Usegame.getId(), i);\n    let actionsSpin = res.context.current;\n    const winLines = checkWin1(res);\n    const winningResult = getWinningResult(winLines);\n    const FSResult = await getFSResult(nextActionsSpin, actionsSpin, res);\n    let funcResultExpW = chekExpendingWild(UseMathModele, res);\n    const funcResultESymbol = getNewMatrixESymbol(UseMathModele, res, actionsSpin, Usepaytable);\n    const featureEW = CheckFeatureEW(res);\n    const FSChangeMultipl = CheckMultipFS(UseMathModele, actionsSpin, res, FSResult);\n\n    data = { res, nextActionsSpin, actionsSpin, winLines, funcResultExpW, funcResultESymbol, featureEW, FSChangeMultipl, ...winningResult, ...FSResult };\n} catch (error) {\n    // numberErrors += 1;\n    // if (numberErrors > 5) {\n    //     break;\n    // };\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n    logger.error('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8bc7131c-c050-460b-ba36-13dd80973f5c",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook: wright",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 \"after all\" hook: wright",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { FSCount, res, nextActionsSpin, FSChangeMultipl, funcResultRSpin } = data;\nwrightData(nextActionsSpin, FSCount, res, UseMathModele, funcResultRSpin, FSChangeMultipl);",
              "err": {},
              "uuid": "8fd4c0b9-fa85-4c21-a1f8-20566c51e2fc",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Winning Line coordinates from response is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 Winning Line coordinates from response is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesWithoutScatter } = data;\nCheckWinningLineCoordinates(winLinesWithoutScatter, UseLines);",
              "err": {},
              "uuid": "de8813cc-bd6f-405e-af29-a06f291ad3f5",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 check correct accrual Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, actionsSpin, res, FSChangeMultipl } = data;\nCheckCorrectAccrualScatter(winLinesScatter, actionsSpin, res, Usepaytable, UseMathModele.FSMultipl, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "f075805b-0d8a-4187-9247-2c6569541e51",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position Scatter",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 check correct position Scatter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLinesScatter, res } = data;\nCheckCorrectPositionScatter(winLinesScatter, res);",
              "err": {},
              "uuid": "a1109889-98a2-444c-a1ff-3f3e8af7f1b5",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct position of winning symbol",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 check correct position of winning symbol",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { res, funcResultExpW, winLinesWithoutScatter } = data;\nCheckCorrectPositionOfWinningSymbol(UseMathModele, res, funcResultExpW, winLinesWithoutScatter);",
              "err": {},
              "uuid": "294bcef1-bdb3-4a2e-a840-c8104e5f41ac",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual of winnings",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 check correct accrual of winnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, winLinesWithoutScatter, FSChangeMultipl } = data;\nCheckCorrectAccrualOfWinnings(actionsSpin, res, winLinesWithoutScatter, UseMathModele.FSMultipl, UseMathModele.WildMultip, Usepaytable, UseMathModele, FSChangeMultipl);",
              "err": {},
              "uuid": "f735142a-f2a0-49b7-b8ca-24164e93af27",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check total amount is correct",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 check total amount is correct",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { winLines, res } = data;\nCheckTotalAmountIsCorrect(winLines, res);",
              "err": {},
              "uuid": "a06d1cb0-81f7-4018-ad8d-216197f3fd6a",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add count of FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 check correct add count of FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, res, FSCount } = data;\nCheckCorrectAddCountOfFS(actionsSpin, res, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "7ffdf90c-fd25-4475-9eb4-1960cb0656cd",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct total FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 check correct total FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckCorrectTotalFS(actionsSpin, globalDate, FSCount);",
              "err": {},
              "uuid": "c730dfc6-1688-4cbf-92e9-a70dc0666883",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check the number of free spins",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 Check the number of free spins",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, nextActionsSpin, FSCount } = data;\nCheckNumberFS(actionsSpin, nextActionsSpin, FSCount, UseMathModele.numberFS);",
              "err": {},
              "uuid": "60fa3515-53d5-4aa7-a23a-00e1ce1f8dcd",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check rest FS",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 check rest FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, globalDate } = data;\nCheckRestFS(actionsSpin, FSCount, globalDate, UseMathModele.numberFS);",
              "err": {},
              "uuid": "8ded7d70-ba20-4a80-853e-04e09da65dcf",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "balance is not change",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 balance is not change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, FSCount, res, globalDate, nextActionsSpin } = data;\nBalanceIsNotChange(actionsSpin, FSCount, res, globalDate, nextActionsSpin);",
              "err": {},
              "uuid": "a2c03e33-e8bd-4b5e-81ef-3bbf25aa87cd",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct accrual FSWin",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 check correct accrual FSWin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { actionsSpin, winLines, res, globalDate } = data;\nCheckCorrectAccrualFSWin(actionsSpin, UseMathModele, winLines, res, globalDate);",
              "err": {},
              "uuid": "b2ef9e00-58da-4d56-befa-4f87d5ee04ed",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check correct add FSWin to balance",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 check correct add FSWin to balance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const { nextActionsSpin, FSCount, globalDate, res } = data;\nCheckCorrectAddFSWinToBalance(nextActionsSpin, FSCount, globalDate, res);",
              "err": {},
              "uuid": "448591db-41a0-4494-982a-91dea435564f",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "check type of win Lines",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 check type of win Lines",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res } = data;\nCheckTypeOfWin(res);",
              "err": {},
              "uuid": "5614c357-871f-454c-bd11-8ad36fa1f675",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "EWModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 EWModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "EWModule(UseMathModele, data);",
              "err": {},
              "uuid": "4922a1a5-69ef-4bb5-ac35-8186ea5ee2be",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "BookModule",
              "fullTitle": "Test 10Lines game: 30, 34 -  49 BookModule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "BookModule(UseMathModele, data, Usepaytable);",
              "err": {},
              "uuid": "cd1ab936-780c-44c3-ab93-c7a66e2d20b3",
              "parentUUID": "48734985-d40c-4063-b488-2280e74559e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de8813cc-bd6f-405e-af29-a06f291ad3f5",
            "f075805b-0d8a-4187-9247-2c6569541e51",
            "a1109889-98a2-444c-a1ff-3f3e8af7f1b5",
            "294bcef1-bdb3-4a2e-a840-c8104e5f41ac",
            "f735142a-f2a0-49b7-b8ca-24164e93af27",
            "a06d1cb0-81f7-4018-ad8d-216197f3fd6a",
            "7ffdf90c-fd25-4475-9eb4-1960cb0656cd",
            "c730dfc6-1688-4cbf-92e9-a70dc0666883",
            "60fa3515-53d5-4aa7-a23a-00e1ce1f8dcd",
            "8ded7d70-ba20-4a80-853e-04e09da65dcf",
            "a2c03e33-e8bd-4b5e-81ef-3bbf25aa87cd",
            "b2ef9e00-58da-4d56-befa-4f87d5ee04ed",
            "448591db-41a0-4494-982a-91dea435564f",
            "5614c357-871f-454c-bd11-8ad36fa1f675",
            "4922a1a5-69ef-4bb5-ac35-8186ea5ee2be",
            "cd1ab936-780c-44c3-ab93-c7a66e2d20b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 300000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 300000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}