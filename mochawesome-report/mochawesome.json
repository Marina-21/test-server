{
  "stats": {
    "suites": 100,
    "tests": 100,
    "passes": 100,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-25T19:36:00.178Z",
    "end": "2020-05-25T19:37:20.190Z",
    "duration": 80012,
    "testsRegistered": 100,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2616b866-0323-4ff3-a3f9-a86969fcddab",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dd232a79-45fa-40a6-aab0-30f9f5d43750",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 862,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "ad163e1b-f8a3-4418-8ab6-a5b46ecc7dc4",
              "parentUUID": "dd232a79-45fa-40a6-aab0-30f9f5d43750",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad163e1b-f8a3-4418-8ab6-a5b46ecc7dc4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 862,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "2ae52796-fb3e-476f-b3c3-2f3ee8c3f141",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 1114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "a8ee6dc6-27f5-487d-ae2a-cc42a8cd68ba",
              "parentUUID": "2ae52796-fb3e-476f-b3c3-2f3ee8c3f141",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8ee6dc6-27f5-487d-ae2a-cc42a8cd68ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1114,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "3df7b99f-f1ac-4c90-a750-521b9d3167fe",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "ee5190c5-54a8-4f8d-b085-a974cfb1d8f1",
              "parentUUID": "3df7b99f-f1ac-4c90-a750-521b9d3167fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ee5190c5-54a8-4f8d-b085-a974cfb1d8f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 715,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "4cf42d7c-77dd-48ae-9030-1ea802647685",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 663,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "061bc1e1-680d-423f-838e-f344d1ce9b1b",
              "parentUUID": "4cf42d7c-77dd-48ae-9030-1ea802647685",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "061bc1e1-680d-423f-838e-f344d1ce9b1b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 663,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ba246646-6cf8-4b63-8abb-6f19e38d565a",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 870,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "f37df777-a96c-4e18-ba06-c540e506d225",
              "parentUUID": "ba246646-6cf8-4b63-8abb-6f19e38d565a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f37df777-a96c-4e18-ba06-c540e506d225"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 870,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "8e4bc93b-059e-4358-aa5c-9e4a8f7ed14e",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 956,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "13cd8003-6673-4297-ae5e-559ec41204b6",
              "parentUUID": "8e4bc93b-059e-4358-aa5c-9e4a8f7ed14e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13cd8003-6673-4297-ae5e-559ec41204b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 956,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "9910a771-425e-47e6-a540-a65740c9db26",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 885,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "7723c871-e9b9-4283-8144-e2001b5bf226",
              "parentUUID": "9910a771-425e-47e6-a540-a65740c9db26",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7723c871-e9b9-4283-8144-e2001b5bf226"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 885,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c8dcf257-4482-4fe7-a987-d3517c8bd163",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 723,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "7423894c-5809-4b06-8977-6b2c35ee9748",
              "parentUUID": "c8dcf257-4482-4fe7-a987-d3517c8bd163",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7423894c-5809-4b06-8977-6b2c35ee9748"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 723,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ab38ae61-183f-44e6-a1e9-7fb3ab8f35cd",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 708,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "ebe9c7ef-c049-4a69-a964-2a20101506a9",
              "parentUUID": "ab38ae61-183f-44e6-a1e9-7fb3ab8f35cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ebe9c7ef-c049-4a69-a964-2a20101506a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 708,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "a71646b7-7818-4a21-9cbb-8cc6ddf93b97",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "f914a7f2-439d-477c-8392-72ba1c42c76b",
              "parentUUID": "a71646b7-7818-4a21-9cbb-8cc6ddf93b97",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f914a7f2-439d-477c-8392-72ba1c42c76b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 817,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ac79382f-0e98-4630-9b14-b6950f299154",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 820,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "a1abcfc9-1051-438d-850b-5205144a32fe",
              "parentUUID": "ac79382f-0e98-4630-9b14-b6950f299154",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a1abcfc9-1051-438d-850b-5205144a32fe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 820,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e791c6a3-648c-40cd-b9f2-1cc819a9bf6c",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "6da999de-e2d1-4d1a-aa46-a0c6cb3f7d4f",
              "parentUUID": "e791c6a3-648c-40cd-b9f2-1cc819a9bf6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6da999de-e2d1-4d1a-aa46-a0c6cb3f7d4f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "fa9e3eed-77fa-4d34-9575-a501939fe20c",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "2b674719-9526-428c-b0b6-dd0ce9c08f91",
              "parentUUID": "fa9e3eed-77fa-4d34-9575-a501939fe20c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b674719-9526-428c-b0b6-dd0ce9c08f91"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 817,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "0e11b849-4cd2-4e9f-8a40-22c2b43a6e01",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 745,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "705a3764-785a-43eb-8911-d6d49540c89e",
              "parentUUID": "0e11b849-4cd2-4e9f-8a40-22c2b43a6e01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "705a3764-785a-43eb-8911-d6d49540c89e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 745,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "52e50909-9904-4a88-8988-080310059304",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 790,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "2c7e420f-0254-4238-85a4-abfb9e9416a9",
              "parentUUID": "52e50909-9904-4a88-8988-080310059304",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c7e420f-0254-4238-85a4-abfb9e9416a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 790,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "78b806ab-7aac-4091-bcbf-9fb44e4f063b",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 921,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "5c454e94-76f8-48ce-8e69-2588be56ae16",
              "parentUUID": "78b806ab-7aac-4091-bcbf-9fb44e4f063b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c454e94-76f8-48ce-8e69-2588be56ae16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 921,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "0fd5825a-f612-412c-a585-3596704376e8",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 714,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "e2c72ec3-79cb-4b63-974b-2dfa8814ab27",
              "parentUUID": "0fd5825a-f612-412c-a585-3596704376e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2c72ec3-79cb-4b63-974b-2dfa8814ab27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 714,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "3c6b1ecd-fc05-4bad-bdb1-8efc7291e002",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 1032,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "0e06739e-8753-4986-973b-72fd84b1780a",
              "parentUUID": "3c6b1ecd-fc05-4bad-bdb1-8efc7291e002",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e06739e-8753-4986-973b-72fd84b1780a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1032,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "84e01f97-e89b-4ed3-9a90-fae56a44ef99",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "adc2c347-b285-4225-acb0-98290dea0683",
              "parentUUID": "84e01f97-e89b-4ed3-9a90-fae56a44ef99",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "adc2c347-b285-4225-acb0-98290dea0683"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 808,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "082f3441-4b6a-403a-a44c-7e84e8eef80d",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 822,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "c0624f98-71bd-4f56-a267-c65af9d77153",
              "parentUUID": "082f3441-4b6a-403a-a44c-7e84e8eef80d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0624f98-71bd-4f56-a267-c65af9d77153"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 822,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d76ad2ff-17b6-457b-bd4c-34ac2069e807",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "10b075b7-6c83-4caf-a41c-40309e0cf738",
              "parentUUID": "d76ad2ff-17b6-457b-bd4c-34ac2069e807",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10b075b7-6c83-4caf-a41c-40309e0cf738"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 715,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c2fda0c1-fd99-41bb-98b0-2c221c5c100e",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "f1a0cb32-9b2d-4838-89c9-b2a83447fa05",
              "parentUUID": "c2fda0c1-fd99-41bb-98b0-2c221c5c100e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1a0cb32-9b2d-4838-89c9-b2a83447fa05"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 817,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "6ce36fa6-356a-45bf-bdd1-190d341fa6a7",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "9cf40717-d198-43b4-bc34-7e0291d9d020",
              "parentUUID": "6ce36fa6-356a-45bf-bdd1-190d341fa6a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9cf40717-d198-43b4-bc34-7e0291d9d020"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d4b93829-f883-49ed-a732-a4ecd306e4f5",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "218523cd-8ccb-48a2-b355-8d7a2f73c9b9",
              "parentUUID": "d4b93829-f883-49ed-a732-a4ecd306e4f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "218523cd-8ccb-48a2-b355-8d7a2f73c9b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d566e75b-c4f5-4cb1-bf0b-ec412418fce2",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 850,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "064dafc4-ff87-4faf-b4f0-f8976ac723f6",
              "parentUUID": "d566e75b-c4f5-4cb1-bf0b-ec412418fce2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "064dafc4-ff87-4faf-b4f0-f8976ac723f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 850,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "27be2326-fefb-4953-880d-5d7e6440cab8",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 787,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "cccffe9c-6649-43b7-bd63-4822a8bd26a4",
              "parentUUID": "27be2326-fefb-4953-880d-5d7e6440cab8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cccffe9c-6649-43b7-bd63-4822a8bd26a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 787,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "cc29e47d-4d3c-48f7-b1ef-35b2fa12a92e",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 920,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "811c3bd9-03c3-44ff-8d9c-6532fa2b10f0",
              "parentUUID": "cc29e47d-4d3c-48f7-b1ef-35b2fa12a92e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "811c3bd9-03c3-44ff-8d9c-6532fa2b10f0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 920,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "1d8d71bd-3926-4557-96bd-8ef9233731af",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 926,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "85177b4e-6258-4892-983a-d031a060b194",
              "parentUUID": "1d8d71bd-3926-4557-96bd-8ef9233731af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85177b4e-6258-4892-983a-d031a060b194"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 926,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b77183e5-e849-490e-8421-9a0cd03de6b3",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 809,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "71e16e19-e8df-40aa-8f47-9fbe8e6d7a6f",
              "parentUUID": "b77183e5-e849-490e-8421-9a0cd03de6b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71e16e19-e8df-40aa-8f47-9fbe8e6d7a6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 809,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "32ff7d37-b5b1-4c11-ad76-36f3cf3b6604",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "d961f452-55d5-463e-b926-fdc562e55de6",
              "parentUUID": "32ff7d37-b5b1-4c11-ad76-36f3cf3b6604",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d961f452-55d5-463e-b926-fdc562e55de6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 819,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e2747452-990b-4720-80c4-f8479d760cca",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 921,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "685f11e4-d247-4c9a-b370-f28eea501d3c",
              "parentUUID": "e2747452-990b-4720-80c4-f8479d760cca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "685f11e4-d247-4c9a-b370-f28eea501d3c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 921,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "05a52ad4-46d9-496d-ba17-98f8e46e3f02",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "8de2297f-d171-4572-9b22-7278e7b963ac",
              "parentUUID": "05a52ad4-46d9-496d-ba17-98f8e46e3f02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8de2297f-d171-4572-9b22-7278e7b963ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "16227c2f-3394-4f82-bef4-576f1de9181d",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "1f29325d-dccc-403d-a791-cfb7f4a46969",
              "parentUUID": "16227c2f-3394-4f82-bef4-576f1de9181d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f29325d-dccc-403d-a791-cfb7f4a46969"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b3c3c2e4-c72b-460e-bf57-4ab6dea8d23b",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "b1626bf6-e0c3-4036-9323-6d2dff087cb1",
              "parentUUID": "b3c3c2e4-c72b-460e-bf57-4ab6dea8d23b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1626bf6-e0c3-4036-9323-6d2dff087cb1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 715,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d219a0b0-cd74-423f-8553-123b2520bb00",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "634a5715-052c-43df-8a92-0a8303a8a03c",
              "parentUUID": "d219a0b0-cd74-423f-8553-123b2520bb00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "634a5715-052c-43df-8a92-0a8303a8a03c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 817,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "9fddc9a7-ecd9-41cb-862d-1f3f25fe71be",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 763,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "a83162d6-2e44-4d67-b8bf-db60b099487d",
              "parentUUID": "9fddc9a7-ecd9-41cb-862d-1f3f25fe71be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a83162d6-2e44-4d67-b8bf-db60b099487d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 763,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "cf6a6cf1-ab05-42c0-abe3-8d0145bdba91",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 772,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "a7ae61b0-caf9-4275-8cbc-ec825b99cd1c",
              "parentUUID": "cf6a6cf1-ab05-42c0-abe3-8d0145bdba91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7ae61b0-caf9-4275-8cbc-ec825b99cd1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 772,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d93bc27f-9130-4769-a206-c920aaadf0b5",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "b191ea27-9fa2-4e7f-a2b4-452bd23402da",
              "parentUUID": "d93bc27f-9130-4769-a206-c920aaadf0b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b191ea27-9fa2-4e7f-a2b4-452bd23402da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 715,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "a33ca96b-dd4e-4454-bb63-dfd4fcd6ac2e",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "3b2f5718-8bc3-40b4-b474-cc29ad8df4df",
              "parentUUID": "a33ca96b-dd4e-4454-bb63-dfd4fcd6ac2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b2f5718-8bc3-40b4-b474-cc29ad8df4df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "99c9536c-0ce6-41e7-8297-fa31d067a28c",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "00bb9997-f84c-4717-bf70-10bf75383d27",
              "parentUUID": "99c9536c-0ce6-41e7-8297-fa31d067a28c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00bb9997-f84c-4717-bf70-10bf75383d27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f199cb36-78c2-4b09-9356-9f6df260ab64",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 922,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "d9482647-7f8b-4595-a04f-abaea5cab95f",
              "parentUUID": "f199cb36-78c2-4b09-9356-9f6df260ab64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9482647-7f8b-4595-a04f-abaea5cab95f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 922,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "8ac6a824-736c-43d0-8fd3-89409e62fbe0",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "c01069b9-a86e-4082-9ed8-f088e552174b",
              "parentUUID": "8ac6a824-736c-43d0-8fd3-89409e62fbe0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c01069b9-a86e-4082-9ed8-f088e552174b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 817,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "15894e4d-dc5c-4505-92a3-39b17f3de534",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "01368698-761a-4374-b7bf-331be15bd005",
              "parentUUID": "15894e4d-dc5c-4505-92a3-39b17f3de534",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01368698-761a-4374-b7bf-331be15bd005"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d5cdccfe-33a9-4829-af42-da58fe0f3133",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "04cef4c5-ccbb-42d8-a734-c86ae6b5796b",
              "parentUUID": "d5cdccfe-33a9-4829-af42-da58fe0f3133",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04cef4c5-ccbb-42d8-a734-c86ae6b5796b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 715,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "12b4cec7-3e8a-47e1-b56b-62d361ba5e86",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "122cb896-2917-47d8-834a-9194145a7fb4",
              "parentUUID": "12b4cec7-3e8a-47e1-b56b-62d361ba5e86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "122cb896-2917-47d8-834a-9194145a7fb4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 819,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "2fe01858-0ce3-48c1-b633-e6c7cf9f0bf7",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 664,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "a0ac9d1f-0106-4553-b45a-5cd3e8518749",
              "parentUUID": "2fe01858-0ce3-48c1-b633-e6c7cf9f0bf7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0ac9d1f-0106-4553-b45a-5cd3e8518749"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 664,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f75441f3-bfc7-4100-862b-d96f7ae43307",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 679,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "2eae7162-3646-4680-a373-f6d6834fa560",
              "parentUUID": "f75441f3-bfc7-4100-862b-d96f7ae43307",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2eae7162-3646-4680-a373-f6d6834fa560"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 679,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c00222af-6f58-4b8c-9407-ef49cd74273a",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 798,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "4c7d8449-873f-47aa-80aa-c9c2bdcdb7c6",
              "parentUUID": "c00222af-6f58-4b8c-9407-ef49cd74273a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c7d8449-873f-47aa-80aa-c9c2bdcdb7c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 798,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "42fc2a56-ffa4-446e-baf1-868a56fcfd1a",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "59d77d16-d587-4091-9fb6-fdc391b8c959",
              "parentUUID": "42fc2a56-ffa4-446e-baf1-868a56fcfd1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "59d77d16-d587-4091-9fb6-fdc391b8c959"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 721,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b58079cc-2349-412c-93cf-288e0d4ae971",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 1025,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "be6fad07-5738-4ff1-9cd7-7f8889f1b9de",
              "parentUUID": "b58079cc-2349-412c-93cf-288e0d4ae971",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be6fad07-5738-4ff1-9cd7-7f8889f1b9de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1025,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "25036375-df46-4ece-a3ef-bacf0359763e",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 726,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "34baf90f-7710-42a0-b65b-243391c76eb1",
              "parentUUID": "25036375-df46-4ece-a3ef-bacf0359763e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34baf90f-7710-42a0-b65b-243391c76eb1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 726,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "3261c606-1817-409c-a99d-34b965bc2753",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 799,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "a9763409-7d5e-4688-8dcf-3ec2bf9e5dc3",
              "parentUUID": "3261c606-1817-409c-a99d-34b965bc2753",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9763409-7d5e-4688-8dcf-3ec2bf9e5dc3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 799,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d355b4d4-2b68-4baa-98eb-c02c805e2872",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 724,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "dcf30568-c00f-4cbd-bd62-3053266b01e1",
              "parentUUID": "d355b4d4-2b68-4baa-98eb-c02c805e2872",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcf30568-c00f-4cbd-bd62-3053266b01e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 724,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "288afd6d-df72-4c4e-b26c-ccec94d30316",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "d8ca8697-b3ca-4ea6-8cfd-9695d5495537",
              "parentUUID": "288afd6d-df72-4c4e-b26c-ccec94d30316",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8ca8697-b3ca-4ea6-8cfd-9695d5495537"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c0534ab5-6e2f-47d7-aa11-14843d64fdc2",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "8260803e-2cb7-4e7e-8fd5-f3c91949c385",
              "parentUUID": "c0534ab5-6e2f-47d7-aa11-14843d64fdc2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8260803e-2cb7-4e7e-8fd5-f3c91949c385"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "77ae9ee7-8478-4635-82b3-84c926b7cbb1",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "116a3336-ead5-4e0c-9744-71e5f95a9452",
              "parentUUID": "77ae9ee7-8478-4635-82b3-84c926b7cbb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "116a3336-ead5-4e0c-9744-71e5f95a9452"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 819,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "496be90f-e053-4af6-91b9-ca8bab35c3a0",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "35f72362-dca5-4d99-b622-917323212f01",
              "parentUUID": "496be90f-e053-4af6-91b9-ca8bab35c3a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35f72362-dca5-4d99-b622-917323212f01"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e761111a-b9f5-4960-8a63-eeafe1e774b0",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 817,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "ae452beb-56ee-4fa3-be22-b7c88fa40685",
              "parentUUID": "e761111a-b9f5-4960-8a63-eeafe1e774b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ae452beb-56ee-4fa3-be22-b7c88fa40685"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 817,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "8470139e-8e1d-490e-bc95-7a960c0c6aac",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 717,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "579da243-5cc4-4d27-b870-c169755fffd0",
              "parentUUID": "8470139e-8e1d-490e-bc95-7a960c0c6aac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "579da243-5cc4-4d27-b870-c169755fffd0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 717,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "0f9bd0eb-4b2a-401f-b4a8-fc04d91a9509",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 765,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "42b422e3-dadb-4aef-870a-62dfea9a3777",
              "parentUUID": "0f9bd0eb-4b2a-401f-b4a8-fc04d91a9509",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42b422e3-dadb-4aef-870a-62dfea9a3777"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 765,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ca021d28-a638-4335-bd1d-3e0b566b3b4f",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 770,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "45d1aa44-d3ed-4a45-a6f6-648f5aee278a",
              "parentUUID": "ca021d28-a638-4335-bd1d-3e0b566b3b4f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "45d1aa44-d3ed-4a45-a6f6-648f5aee278a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 770,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e9581219-a1d6-44b2-ba5b-cfd9d37c6282",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 816,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "29a59a43-7944-41e4-956d-1be416f38cbb",
              "parentUUID": "e9581219-a1d6-44b2-ba5b-cfd9d37c6282",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "29a59a43-7944-41e4-956d-1be416f38cbb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 816,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "2aab5ac4-07f3-4845-9511-f48bef6f9c59",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "a8256ed1-11b5-4671-99ad-915dd85bbf8c",
              "parentUUID": "2aab5ac4-07f3-4845-9511-f48bef6f9c59",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8256ed1-11b5-4671-99ad-915dd85bbf8c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "2b66346d-57b9-4b2f-9790-2ec7d922b7c6",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "9fca41be-bb99-4028-b5cd-90290ef67192",
              "parentUUID": "2b66346d-57b9-4b2f-9790-2ec7d922b7c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9fca41be-bb99-4028-b5cd-90290ef67192"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "609a061a-3b80-4b46-bbe5-e79a3b35efb8",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "1cd4409a-bd35-4662-b577-9cfcefc06aa8",
              "parentUUID": "609a061a-3b80-4b46-bbe5-e79a3b35efb8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1cd4409a-bd35-4662-b577-9cfcefc06aa8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "574eadc8-9d8a-4003-9c53-1d0f8cbded77",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "f08d6daf-e39a-4db9-b779-b0f38b3f5137",
              "parentUUID": "574eadc8-9d8a-4003-9c53-1d0f8cbded77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f08d6daf-e39a-4db9-b779-b0f38b3f5137"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "35fb682e-f47e-4781-9478-0a9979992107",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "2cc3f630-0913-47d9-a8de-7cf8272b0b32",
              "parentUUID": "35fb682e-f47e-4781-9478-0a9979992107",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2cc3f630-0913-47d9-a8de-7cf8272b0b32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "2de8c95d-d77a-469c-87d7-f022526b6410",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 920,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "7702124d-8b91-4c35-8b98-513a009e6157",
              "parentUUID": "2de8c95d-d77a-469c-87d7-f022526b6410",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7702124d-8b91-4c35-8b98-513a009e6157"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 920,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "185a3b61-5e05-4d7e-a86d-519390cdd1b4",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 921,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "d5a76324-0b23-49b3-964d-614e42201ac7",
              "parentUUID": "185a3b61-5e05-4d7e-a86d-519390cdd1b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5a76324-0b23-49b3-964d-614e42201ac7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 921,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "65c94216-9bf7-4584-83e6-082fa01fd4f6",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "39a00838-48b2-4413-804c-d61a10f8c9c2",
              "parentUUID": "65c94216-9bf7-4584-83e6-082fa01fd4f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39a00838-48b2-4413-804c-d61a10f8c9c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "37507909-752b-4bf4-a785-8e05f055b0cd",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 694,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "b2ca6a5f-1047-4f1e-a572-eeca5835c735",
              "parentUUID": "37507909-752b-4bf4-a785-8e05f055b0cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b2ca6a5f-1047-4f1e-a572-eeca5835c735"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 694,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "1054c7f5-7c78-43f7-9e02-a6a5737ccaab",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 838,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "8e4102bd-611b-468d-86aa-ffddcab12298",
              "parentUUID": "1054c7f5-7c78-43f7-9e02-a6a5737ccaab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e4102bd-611b-468d-86aa-ffddcab12298"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 838,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "138448ec-32c8-4a5b-a418-a30d02272d87",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 825,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "09b1c512-a9fc-4acc-abb3-03324d5a69b4",
              "parentUUID": "138448ec-32c8-4a5b-a418-a30d02272d87",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "09b1c512-a9fc-4acc-abb3-03324d5a69b4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 825,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "616abad3-7dac-4350-8691-2f99b68c3fa6",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 915,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "f0f1cc18-7f16-4d7a-9ed3-a515b1f416de",
              "parentUUID": "616abad3-7dac-4350-8691-2f99b68c3fa6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f0f1cc18-7f16-4d7a-9ed3-a515b1f416de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 915,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c27fdfca-782f-4e52-98b3-c11832e9e5b1",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "edcca7fe-325d-4390-83fa-48fcd1e209e6",
              "parentUUID": "c27fdfca-782f-4e52-98b3-c11832e9e5b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "edcca7fe-325d-4390-83fa-48fcd1e209e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f33fa6ad-2456-4eb3-922f-4401b26965e8",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "078c236f-8ed0-43a2-9b94-8fe16cb59e14",
              "parentUUID": "f33fa6ad-2456-4eb3-922f-4401b26965e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "078c236f-8ed0-43a2-9b94-8fe16cb59e14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 715,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "9070c43f-7bad-4d1c-a1ba-26ec1cfe61c6",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 920,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "7cff160f-4769-432a-997a-bb8d0b6ef632",
              "parentUUID": "9070c43f-7bad-4d1c-a1ba-26ec1cfe61c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7cff160f-4769-432a-997a-bb8d0b6ef632"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 920,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "553ca718-eae0-48f1-b948-13e0f6fbfb27",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "f4e2d38d-8664-419e-b565-a776ca2a15e2",
              "parentUUID": "553ca718-eae0-48f1-b948-13e0f6fbfb27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4e2d38d-8664-419e-b565-a776ca2a15e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 819,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "5cfb862b-623e-434c-848a-c980a241b3a8",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "23f8cf94-9e8e-44fc-9632-503c6ee49ea8",
              "parentUUID": "5cfb862b-623e-434c-848a-c980a241b3a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23f8cf94-9e8e-44fc-9632-503c6ee49ea8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 715,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "2ed34e6a-6c1a-437f-bc20-9516d3bc0e1c",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 818,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "5008d698-10d6-4153-b257-f788f3ed644b",
              "parentUUID": "2ed34e6a-6c1a-437f-bc20-9516d3bc0e1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5008d698-10d6-4153-b257-f788f3ed644b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 818,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "781b2fd7-0375-4e0b-8e9c-7383ad6838ce",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 819,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "dc88300a-9892-4d1e-bdd4-52f2f110785d",
              "parentUUID": "781b2fd7-0375-4e0b-8e9c-7383ad6838ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc88300a-9892-4d1e-bdd4-52f2f110785d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 819,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "41980f22-229f-4ec3-a056-32007386440a",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 921,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "e1d105a0-fc87-465f-a51e-b704c6242784",
              "parentUUID": "41980f22-229f-4ec3-a056-32007386440a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1d105a0-fc87-465f-a51e-b704c6242784"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 921,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b6a589b7-4abe-49fb-b949-c13fa8dc0be2",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 823,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "79ff9b0a-e12a-490f-88c6-7fecacd44f0d",
              "parentUUID": "b6a589b7-4abe-49fb-b949-c13fa8dc0be2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79ff9b0a-e12a-490f-88c6-7fecacd44f0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 823,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "2a8cafd2-9141-4d24-8079-56ee056dbf9b",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 710,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "d0c67e5d-e2b2-4446-85d6-6cf6dff8df7c",
              "parentUUID": "2a8cafd2-9141-4d24-8079-56ee056dbf9b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0c67e5d-e2b2-4446-85d6-6cf6dff8df7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 710,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "81e62953-073a-44ac-8cf8-faada9068ad3",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 653,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "4b3d78db-1d8e-4540-a11b-5d97ebaecb0f",
              "parentUUID": "81e62953-073a-44ac-8cf8-faada9068ad3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b3d78db-1d8e-4540-a11b-5d97ebaecb0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 653,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "204ae80d-8890-44bb-b138-bdeffdeafa5e",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 883,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "1889b722-2be0-400c-b733-fb9c7e94b32d",
              "parentUUID": "204ae80d-8890-44bb-b138-bdeffdeafa5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1889b722-2be0-400c-b733-fb9c7e94b32d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 883,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "35e49df9-27f9-4d98-88e1-3433fe5cc47f",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 714,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "9fa31711-ba38-447e-9c79-693855943609",
              "parentUUID": "35e49df9-27f9-4d98-88e1-3433fe5cc47f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9fa31711-ba38-447e-9c79-693855943609"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 714,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "8b332708-89ea-49b5-8470-d033bbc75132",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 820,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "082aba56-f963-4347-a831-434d301cfdf1",
              "parentUUID": "8b332708-89ea-49b5-8470-d033bbc75132",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "082aba56-f963-4347-a831-434d301cfdf1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 820,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "091ebde5-3ae2-468c-8612-8012200f4b17",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 816,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "b288cc57-a33d-437a-9f0a-bcd40d20c264",
              "parentUUID": "091ebde5-3ae2-468c-8612-8012200f4b17",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b288cc57-a33d-437a-9f0a-bcd40d20c264"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 816,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "8276b0e8-69c7-4a3c-961f-f97fb3fc225d",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 800,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "6f2f4843-7299-4a3a-8c3e-3ba84b7f05e1",
              "parentUUID": "8276b0e8-69c7-4a3c-961f-f97fb3fc225d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f2f4843-7299-4a3a-8c3e-3ba84b7f05e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 800,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "43a8a3f3-727d-410b-a101-aeeba1c8ae69",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 667,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "ca401c45-a139-4ad7-982f-941bb336ca3e",
              "parentUUID": "43a8a3f3-727d-410b-a101-aeeba1c8ae69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca401c45-a139-4ad7-982f-941bb336ca3e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 667,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "43d8a208-a6d4-49a3-991d-da8a08b6ad29",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 746,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "771994b2-0ab5-4627-abcd-c61036fb5ddb",
              "parentUUID": "43d8a208-a6d4-49a3-991d-da8a08b6ad29",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "771994b2-0ab5-4627-abcd-c61036fb5ddb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 746,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "130a9fa5-a225-495a-b540-3e5d3312f262",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 851,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "a14b8865-c279-4a61-b5e9-68dba169e541",
              "parentUUID": "130a9fa5-a225-495a-b540-3e5d3312f262",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a14b8865-c279-4a61-b5e9-68dba169e541"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 851,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b90265bb-a5b7-4d13-975c-932f3f168d7b",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 722,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "826f863e-0cc6-49a2-8792-31f6c822bc53",
              "parentUUID": "b90265bb-a5b7-4d13-975c-932f3f168d7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "826f863e-0cc6-49a2-8792-31f6c822bc53"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 722,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "3716c191-921f-4c84-8220-db7180acd7ff",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 775,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "e1c9936e-b10d-49c6-bae0-df8347a29a5f",
              "parentUUID": "3716c191-921f-4c84-8220-db7180acd7ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1c9936e-b10d-49c6-bae0-df8347a29a5f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 775,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e8758f04-518c-4d83-b60e-e4a8ef72ac95",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 759,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "ee0e1296-1763-45a0-afef-f7b3d45b8eba",
              "parentUUID": "e8758f04-518c-4d83-b60e-e4a8ef72ac95",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ee0e1296-1763-45a0-afef-f7b3d45b8eba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 759,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "7fcbb77d-67ce-4b10-ad42-c0a5dfbc2c2a",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 730,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "2f0ed1e5-fd19-4a12-b252-050ffdb5853c",
              "parentUUID": "7fcbb77d-67ce-4b10-ad42-c0a5dfbc2c2a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f0ed1e5-fd19-4a12-b252-050ffdb5853c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 730,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "21892362-6f7a-4575-8202-893c7fb7a268",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 907,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "dfb0934c-b449-4733-bed6-2b4ab535f408",
              "parentUUID": "21892362-6f7a-4575-8202-893c7fb7a268",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfb0934c-b449-4733-bed6-2b4ab535f408"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 907,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "46cd7c50-01ce-4ec1-8ff9-a65ad68aaf89",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 715,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "097f3e25-4c08-4e05-b74f-f79b169a5fe5",
              "parentUUID": "46cd7c50-01ce-4ec1-8ff9-a65ad68aaf89",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "097f3e25-4c08-4e05-b74f-f79b169a5fe5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 715,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "8adf7a1d-bce8-4976-a6cd-c1dded853afb",
          "title": "Test type of win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/TypeOfWin5Lines.js",
          "file": "/test/TypeOfWin5Lines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "spintype of win is tru",
              "fullTitle": "Test type of win spintype of win is tru",
              "timedOut": false,
              "duration": 921,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responce = await spin(urlSpin, token, id, elbet, lines);\nlet { res } = responce;\nconsole.log(res);\n\nfunction typeofwin() {\n    const totalWin = res.context.win.total;\n    const matrix = res.context.matrix;\n    console.log(matrix);\n    const bet = betLines(res);\n    const typeCoef = totalWin / bet;\n    console.log((typeCoef) + \" - typeCoef\");\n    if (typeCoef < 10) {\n        return \"regular\";\n    } else if (typeCoef >= 10 && typeCoef < 100) {\n        return \"big\";\n    } else if (typeCoef >= 100 && typeCoef < 500) {\n        return \"ultra\";\n    } else if (typeCoef >= 500 && typeCoef <= 1500) {\n        return \"mega\";\n    }\n}\nif (res.context.hasOwnProperty('win')) {\n    const gameTypeWin = res.context.win.type;\n    console.log((gameTypeWin) + '  - gameTypeWin');\n\n    expect(gameTypeWin).to.eql(typeofwin());\n    // console.log(\"Type of win is correct\");\n    logger.info(\"Type of win is correct\");\n} else {\n    console.log(\"spin without wining\");\n}",
              "err": {},
              "uuid": "416980b4-a99d-4a5a-9a00-5c029ed5fc55",
              "parentUUID": "8adf7a1d-bce8-4976-a6cd-c1dded853afb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "416980b4-a99d-4a5a-9a00-5c029ed5fc55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 921,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}