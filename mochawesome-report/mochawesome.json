{
  "stats": {
    "suites": 200,
    "tests": 800,
    "passes": 800,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-15T08:14:10.361Z",
    "end": "2020-05-15T08:17:02.245Z",
    "duration": 171884,
    "testsRegistered": 800,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "536c6a31-5983-4cec-a332-1b3145e7c30f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4166f2e0-c94b-42fa-8553-ae6d41ab4492",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 969,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ba3a6cfa-72ab-4985-9cb9-4f8c2e500154",
              "parentUUID": "4166f2e0-c94b-42fa-8553-ae6d41ab4492",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "c254ecb9-3b58-4124-aecc-9c0ff21663d1",
              "parentUUID": "4166f2e0-c94b-42fa-8553-ae6d41ab4492",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "49c06a58-7ca8-4a35-b3d4-bc50888f91fb",
              "parentUUID": "4166f2e0-c94b-42fa-8553-ae6d41ab4492",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "886f7fb8-82ad-460e-b29d-4a758f8ea504",
              "parentUUID": "4166f2e0-c94b-42fa-8553-ae6d41ab4492",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "16c410fe-7a37-4ba7-9602-31ca0d77e3b8",
              "parentUUID": "4166f2e0-c94b-42fa-8553-ae6d41ab4492",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c254ecb9-3b58-4124-aecc-9c0ff21663d1",
            "49c06a58-7ca8-4a35-b3d4-bc50888f91fb",
            "886f7fb8-82ad-460e-b29d-4a758f8ea504",
            "16c410fe-7a37-4ba7-9602-31ca0d77e3b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "531d3e78-6fdf-47b9-93fe-810f18fcd241",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 803,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d42bfeaf-7eed-4508-a4ea-2ab0995f0937",
              "parentUUID": "531d3e78-6fdf-47b9-93fe-810f18fcd241",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "57f3f27f-31dc-4b3e-9ab8-870535e6cc5a",
              "parentUUID": "531d3e78-6fdf-47b9-93fe-810f18fcd241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ec62ff38-1b46-4edd-9a73-e474acb72192",
              "parentUUID": "531d3e78-6fdf-47b9-93fe-810f18fcd241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "6ab1b9f9-0503-4ceb-83b7-8b0cceb37994",
              "parentUUID": "531d3e78-6fdf-47b9-93fe-810f18fcd241",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "58eae0bf-7f47-48bf-860b-4f957cc5e97b",
              "parentUUID": "531d3e78-6fdf-47b9-93fe-810f18fcd241",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57f3f27f-31dc-4b3e-9ab8-870535e6cc5a",
            "ec62ff38-1b46-4edd-9a73-e474acb72192",
            "6ab1b9f9-0503-4ceb-83b7-8b0cceb37994",
            "58eae0bf-7f47-48bf-860b-4f957cc5e97b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "9f6313ce-f29e-4034-bab7-682318d57a4f",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 713,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9d6dc5dd-33c2-4787-9bdb-993e9a9a8f08",
              "parentUUID": "9f6313ce-f29e-4034-bab7-682318d57a4f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "34abd2b7-253d-4a61-974c-1ec95b4c21ac",
              "parentUUID": "9f6313ce-f29e-4034-bab7-682318d57a4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "dcbe4700-7236-48cb-9ff5-d43979c390e0",
              "parentUUID": "9f6313ce-f29e-4034-bab7-682318d57a4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "6bdac4c8-0e8b-43cf-9d72-d13373cac8b5",
              "parentUUID": "9f6313ce-f29e-4034-bab7-682318d57a4f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "9f7684ba-8199-4585-8a82-7cc4916ec348",
              "parentUUID": "9f6313ce-f29e-4034-bab7-682318d57a4f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34abd2b7-253d-4a61-974c-1ec95b4c21ac",
            "dcbe4700-7236-48cb-9ff5-d43979c390e0",
            "6bdac4c8-0e8b-43cf-9d72-d13373cac8b5",
            "9f7684ba-8199-4585-8a82-7cc4916ec348"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "dad95afe-1bf9-4bcd-bea1-433300fe385b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 916,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "cadfed72-28eb-4a0c-aab9-446babc8940f",
              "parentUUID": "dad95afe-1bf9-4bcd-bea1-433300fe385b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "4da37c7a-3d6d-44ce-84ec-2001f77a1de4",
              "parentUUID": "dad95afe-1bf9-4bcd-bea1-433300fe385b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "75cf2ed5-07a3-4d88-96a1-078bdca9f5b2",
              "parentUUID": "dad95afe-1bf9-4bcd-bea1-433300fe385b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "f780d090-64cd-4d8f-ba0f-de8500887965",
              "parentUUID": "dad95afe-1bf9-4bcd-bea1-433300fe385b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8a448f40-d386-437c-97fd-f0eb1269215e",
              "parentUUID": "dad95afe-1bf9-4bcd-bea1-433300fe385b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4da37c7a-3d6d-44ce-84ec-2001f77a1de4",
            "75cf2ed5-07a3-4d88-96a1-078bdca9f5b2",
            "f780d090-64cd-4d8f-ba0f-de8500887965",
            "8a448f40-d386-437c-97fd-f0eb1269215e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "7a9f0db1-64b4-483c-8790-6906e52a0099",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1020,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "22525859-ffa6-45e4-bb9c-2d99af3841c8",
              "parentUUID": "7a9f0db1-64b4-483c-8790-6906e52a0099",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "785ea6a2-81c7-492d-98c7-142429a6d202",
              "parentUUID": "7a9f0db1-64b4-483c-8790-6906e52a0099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "4ef87e73-6793-4f65-8585-51bcee15cd0e",
              "parentUUID": "7a9f0db1-64b4-483c-8790-6906e52a0099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "07ad001c-3f2d-46f1-ae6b-f3d801aa2c2f",
              "parentUUID": "7a9f0db1-64b4-483c-8790-6906e52a0099",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "68aedbbe-559e-46e0-9f38-cb8538d97f7c",
              "parentUUID": "7a9f0db1-64b4-483c-8790-6906e52a0099",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "785ea6a2-81c7-492d-98c7-142429a6d202",
            "4ef87e73-6793-4f65-8585-51bcee15cd0e",
            "07ad001c-3f2d-46f1-ae6b-f3d801aa2c2f",
            "68aedbbe-559e-46e0-9f38-cb8538d97f7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "67a6bcfb-aa33-41c5-8de1-def56fba35a4",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 919,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f9d17943-f9d6-4924-8068-eac748f682b3",
              "parentUUID": "67a6bcfb-aa33-41c5-8de1-def56fba35a4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "2acb06fd-d731-42ae-9b11-e9274e8490fd",
              "parentUUID": "67a6bcfb-aa33-41c5-8de1-def56fba35a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "576a5db0-97eb-4823-ad16-76d0c370105f",
              "parentUUID": "67a6bcfb-aa33-41c5-8de1-def56fba35a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "52cb33d7-4ba8-4e8f-8ea7-6282f93efbf3",
              "parentUUID": "67a6bcfb-aa33-41c5-8de1-def56fba35a4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "01caa510-ecd5-485d-9eb6-01c07a5a1d59",
              "parentUUID": "67a6bcfb-aa33-41c5-8de1-def56fba35a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2acb06fd-d731-42ae-9b11-e9274e8490fd",
            "576a5db0-97eb-4823-ad16-76d0c370105f",
            "52cb33d7-4ba8-4e8f-8ea7-6282f93efbf3",
            "01caa510-ecd5-485d-9eb6-01c07a5a1d59"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b4dc552b-543a-4f64-b6a1-fdbe55a8365a",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 765,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "805a7750-ac06-4883-9979-541121fb91d7",
              "parentUUID": "b4dc552b-543a-4f64-b6a1-fdbe55a8365a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "d4f0b8b9-4a6c-4415-b1f5-3a72f5bf2866",
              "parentUUID": "b4dc552b-543a-4f64-b6a1-fdbe55a8365a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "051492cf-2f70-4e09-b318-86a7f14ad661",
              "parentUUID": "b4dc552b-543a-4f64-b6a1-fdbe55a8365a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "f5b6efc9-438d-463d-802c-cb5c4e9feaba",
              "parentUUID": "b4dc552b-543a-4f64-b6a1-fdbe55a8365a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "970a02e6-efc5-47e2-9411-d89b6da7013f",
              "parentUUID": "b4dc552b-543a-4f64-b6a1-fdbe55a8365a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4f0b8b9-4a6c-4415-b1f5-3a72f5bf2866",
            "051492cf-2f70-4e09-b318-86a7f14ad661",
            "f5b6efc9-438d-463d-802c-cb5c4e9feaba",
            "970a02e6-efc5-47e2-9411-d89b6da7013f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e2f3797d-fedb-4725-a33b-c7c7747df805",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 864,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a94fea4c-7c46-40e0-bbbc-1fba8f40e56e",
              "parentUUID": "e2f3797d-fedb-4725-a33b-c7c7747df805",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "50c5908a-751d-450a-96c4-46c164c64e98",
              "parentUUID": "e2f3797d-fedb-4725-a33b-c7c7747df805",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "c2d834f6-9351-43e4-a193-b024d44fc22a",
              "parentUUID": "e2f3797d-fedb-4725-a33b-c7c7747df805",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "75cbf7a2-8a13-4c32-94d4-5a0601c75b9e",
              "parentUUID": "e2f3797d-fedb-4725-a33b-c7c7747df805",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "7829e221-7ed3-45b0-b14d-98434d2bcc28",
              "parentUUID": "e2f3797d-fedb-4725-a33b-c7c7747df805",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50c5908a-751d-450a-96c4-46c164c64e98",
            "c2d834f6-9351-43e4-a193-b024d44fc22a",
            "75cbf7a2-8a13-4c32-94d4-5a0601c75b9e",
            "7829e221-7ed3-45b0-b14d-98434d2bcc28"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "37765177-5e59-4426-8fcb-9b283fb40028",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 921,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b318496a-9048-4566-9a95-bdc2eb7ec1c3",
              "parentUUID": "37765177-5e59-4426-8fcb-9b283fb40028",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "54fe7762-748f-4b83-95b3-940ab7017668",
              "parentUUID": "37765177-5e59-4426-8fcb-9b283fb40028",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ee5016c4-aa62-495f-a0b4-d0d5c779c963",
              "parentUUID": "37765177-5e59-4426-8fcb-9b283fb40028",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "28ddfc3e-1da8-4d65-a6d4-fbcb7871dbec",
              "parentUUID": "37765177-5e59-4426-8fcb-9b283fb40028",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "61169959-ff62-4a42-820a-02db49b04609",
              "parentUUID": "37765177-5e59-4426-8fcb-9b283fb40028",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54fe7762-748f-4b83-95b3-940ab7017668",
            "ee5016c4-aa62-495f-a0b4-d0d5c779c963",
            "28ddfc3e-1da8-4d65-a6d4-fbcb7871dbec",
            "61169959-ff62-4a42-820a-02db49b04609"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "7a66caa2-47f2-4f78-abc8-f40d44a7fff2",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1022,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b3044341-b4c3-460e-8d49-7096ca975332",
              "parentUUID": "7a66caa2-47f2-4f78-abc8-f40d44a7fff2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "758637c4-558a-4589-a518-4bb06b513baa",
              "parentUUID": "7a66caa2-47f2-4f78-abc8-f40d44a7fff2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "363fcb96-8d61-483c-848d-05532978ea43",
              "parentUUID": "7a66caa2-47f2-4f78-abc8-f40d44a7fff2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4aa4c7bd-1beb-4baa-936e-313b5ac4f512",
              "parentUUID": "7a66caa2-47f2-4f78-abc8-f40d44a7fff2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "fc71ed43-e091-48ed-81f3-3c363341c674",
              "parentUUID": "7a66caa2-47f2-4f78-abc8-f40d44a7fff2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "758637c4-558a-4589-a518-4bb06b513baa",
            "363fcb96-8d61-483c-848d-05532978ea43",
            "4aa4c7bd-1beb-4baa-936e-313b5ac4f512",
            "fc71ed43-e091-48ed-81f3-3c363341c674"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "439535b6-2174-459e-96d5-acc58b7b0da5",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 814,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9f1030e6-f659-4a73-971c-2e72ed60f78f",
              "parentUUID": "439535b6-2174-459e-96d5-acc58b7b0da5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "a3a3ce55-3b36-4d79-80f1-e08c31dfb5b0",
              "parentUUID": "439535b6-2174-459e-96d5-acc58b7b0da5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "8c295144-9584-4587-ba6c-63ff321c8156",
              "parentUUID": "439535b6-2174-459e-96d5-acc58b7b0da5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4ae2a4fa-4390-4286-a0a2-ecf396a5b8a5",
              "parentUUID": "439535b6-2174-459e-96d5-acc58b7b0da5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "942df10b-8fb0-4b9d-8440-e8d765e719e2",
              "parentUUID": "439535b6-2174-459e-96d5-acc58b7b0da5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3a3ce55-3b36-4d79-80f1-e08c31dfb5b0",
            "8c295144-9584-4587-ba6c-63ff321c8156",
            "4ae2a4fa-4390-4286-a0a2-ecf396a5b8a5",
            "942df10b-8fb0-4b9d-8440-e8d765e719e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "79801e8e-88ba-479e-b2ea-d4930ce7b9ac",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 916,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7f5e92bd-d015-4a83-a3c1-5e83877b1856",
              "parentUUID": "79801e8e-88ba-479e-b2ea-d4930ce7b9ac",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "1575519b-3758-4135-ae5a-8791b0b921f9",
              "parentUUID": "79801e8e-88ba-479e-b2ea-d4930ce7b9ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "791b4ee3-cef2-4569-82d1-7483dcd67208",
              "parentUUID": "79801e8e-88ba-479e-b2ea-d4930ce7b9ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "af8096ef-a654-4413-a6b5-1ace99b4b64f",
              "parentUUID": "79801e8e-88ba-479e-b2ea-d4930ce7b9ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "d702623f-39a0-447c-92b5-f88075eb6900",
              "parentUUID": "79801e8e-88ba-479e-b2ea-d4930ce7b9ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1575519b-3758-4135-ae5a-8791b0b921f9",
            "791b4ee3-cef2-4569-82d1-7483dcd67208",
            "af8096ef-a654-4413-a6b5-1ace99b4b64f",
            "d702623f-39a0-447c-92b5-f88075eb6900"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "92d9dac0-5cfd-42cd-813c-bca626ab2aaa",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1122,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4c9c67c1-2d63-4b7d-a12e-2659e2a1dc18",
              "parentUUID": "92d9dac0-5cfd-42cd-813c-bca626ab2aaa",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "2881d81e-4029-49c2-a2e5-8f00b121bd97",
              "parentUUID": "92d9dac0-5cfd-42cd-813c-bca626ab2aaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "15f3c183-0934-40c9-b21c-ef42ab25d5bd",
              "parentUUID": "92d9dac0-5cfd-42cd-813c-bca626ab2aaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "6bb378ca-3fa4-4a83-9f7f-5b64134831d8",
              "parentUUID": "92d9dac0-5cfd-42cd-813c-bca626ab2aaa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "043a2b7d-b939-4611-938e-dc12eb8cee5f",
              "parentUUID": "92d9dac0-5cfd-42cd-813c-bca626ab2aaa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2881d81e-4029-49c2-a2e5-8f00b121bd97",
            "15f3c183-0934-40c9-b21c-ef42ab25d5bd",
            "6bb378ca-3fa4-4a83-9f7f-5b64134831d8",
            "043a2b7d-b939-4611-938e-dc12eb8cee5f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "026eb8a1-00cb-40da-81c4-f345308db4c0",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 713,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5c3815c4-16b8-4317-9efc-29456d0b7e62",
              "parentUUID": "026eb8a1-00cb-40da-81c4-f345308db4c0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "e527293b-85d8-4cb9-be6c-ef1314f84957",
              "parentUUID": "026eb8a1-00cb-40da-81c4-f345308db4c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "686dc116-a5e6-475b-a56d-bc9de1da9670",
              "parentUUID": "026eb8a1-00cb-40da-81c4-f345308db4c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "01674389-8bdb-4052-b82d-886228c5509d",
              "parentUUID": "026eb8a1-00cb-40da-81c4-f345308db4c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "07292c9f-3b52-4804-bac9-1bba6eb37247",
              "parentUUID": "026eb8a1-00cb-40da-81c4-f345308db4c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e527293b-85d8-4cb9-be6c-ef1314f84957",
            "686dc116-a5e6-475b-a56d-bc9de1da9670",
            "01674389-8bdb-4052-b82d-886228c5509d",
            "07292c9f-3b52-4804-bac9-1bba6eb37247"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ca2c8041-53ad-451b-bc5c-c18f53320469",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 814,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1a8476ae-3499-4fd4-85f5-8758ea39349f",
              "parentUUID": "ca2c8041-53ad-451b-bc5c-c18f53320469",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "6d34a650-fcdc-4660-acfb-197befbefd25",
              "parentUUID": "ca2c8041-53ad-451b-bc5c-c18f53320469",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "68729dec-e7c2-421a-b380-e475e30d9dd5",
              "parentUUID": "ca2c8041-53ad-451b-bc5c-c18f53320469",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "44d7a1dc-cc73-4068-8232-8354fd6d139b",
              "parentUUID": "ca2c8041-53ad-451b-bc5c-c18f53320469",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "37d337df-b37c-4610-80f1-7b05a729924e",
              "parentUUID": "ca2c8041-53ad-451b-bc5c-c18f53320469",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d34a650-fcdc-4660-acfb-197befbefd25",
            "68729dec-e7c2-421a-b380-e475e30d9dd5",
            "44d7a1dc-cc73-4068-8232-8354fd6d139b",
            "37d337df-b37c-4610-80f1-7b05a729924e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "18e46cc9-4d88-4b9e-8bd6-9814f5184178",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 916,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ddc82d54-cd1e-4ede-ba80-e57200b12fb3",
              "parentUUID": "18e46cc9-4d88-4b9e-8bd6-9814f5184178",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "9893b290-9d90-4d4a-beef-8ad4297714cc",
              "parentUUID": "18e46cc9-4d88-4b9e-8bd6-9814f5184178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "34c42ff9-b0ad-4ee9-af04-5487bdce5143",
              "parentUUID": "18e46cc9-4d88-4b9e-8bd6-9814f5184178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ed29910d-06c8-4e58-907e-1ca78f9d2bd9",
              "parentUUID": "18e46cc9-4d88-4b9e-8bd6-9814f5184178",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "7d268b0c-4efe-4f24-abc2-d35ddcd554d8",
              "parentUUID": "18e46cc9-4d88-4b9e-8bd6-9814f5184178",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9893b290-9d90-4d4a-beef-8ad4297714cc",
            "34c42ff9-b0ad-4ee9-af04-5487bdce5143",
            "ed29910d-06c8-4e58-907e-1ca78f9d2bd9",
            "7d268b0c-4efe-4f24-abc2-d35ddcd554d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "82e91f37-5e18-4b3c-8c92-8819e1f67fe3",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 815,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0b1740b3-9930-49b2-a4cb-ebaced2a138e",
              "parentUUID": "82e91f37-5e18-4b3c-8c92-8819e1f67fe3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "b5a08226-c630-4636-a5c1-02ea5836b63e",
              "parentUUID": "82e91f37-5e18-4b3c-8c92-8819e1f67fe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "fb4fde85-72d2-41e1-ba4e-a997f145ec20",
              "parentUUID": "82e91f37-5e18-4b3c-8c92-8819e1f67fe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "b5493251-0a61-47e7-af9a-6fef174c62c9",
              "parentUUID": "82e91f37-5e18-4b3c-8c92-8819e1f67fe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "28ee6122-41c5-4fb1-96a8-5009c8dabec0",
              "parentUUID": "82e91f37-5e18-4b3c-8c92-8819e1f67fe3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5a08226-c630-4636-a5c1-02ea5836b63e",
            "fb4fde85-72d2-41e1-ba4e-a997f145ec20",
            "b5493251-0a61-47e7-af9a-6fef174c62c9",
            "28ee6122-41c5-4fb1-96a8-5009c8dabec0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "8d8528d3-2921-4b1e-a545-5d2510cc3672",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 820,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8bda6cd8-53a6-4349-aecd-356480cdaefc",
              "parentUUID": "8d8528d3-2921-4b1e-a545-5d2510cc3672",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "3b38fb69-9885-41e1-951e-81bcfc8dfe59",
              "parentUUID": "8d8528d3-2921-4b1e-a545-5d2510cc3672",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "31fa6feb-d106-4b90-9fb1-1843b50617ea",
              "parentUUID": "8d8528d3-2921-4b1e-a545-5d2510cc3672",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "1c20197a-8c1c-4efb-8686-2b28effaedd7",
              "parentUUID": "8d8528d3-2921-4b1e-a545-5d2510cc3672",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "213dc3f6-23f2-4ad1-8cc1-327134a48e0f",
              "parentUUID": "8d8528d3-2921-4b1e-a545-5d2510cc3672",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b38fb69-9885-41e1-951e-81bcfc8dfe59",
            "31fa6feb-d106-4b90-9fb1-1843b50617ea",
            "1c20197a-8c1c-4efb-8686-2b28effaedd7",
            "213dc3f6-23f2-4ad1-8cc1-327134a48e0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "03cf0973-790b-4dfd-882d-67e55ea9bd70",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 697,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8a5622ee-2d63-4331-9907-8f396bbfe7c3",
              "parentUUID": "03cf0973-790b-4dfd-882d-67e55ea9bd70",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "4782c002-f920-4af5-9a8c-64f08402f875",
              "parentUUID": "03cf0973-790b-4dfd-882d-67e55ea9bd70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "4890a597-b18d-463b-b2f1-52e6e850b7b7",
              "parentUUID": "03cf0973-790b-4dfd-882d-67e55ea9bd70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a22933ae-6d99-4625-936c-00db74d3c46d",
              "parentUUID": "03cf0973-790b-4dfd-882d-67e55ea9bd70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "103c1ba1-108f-4dd1-820c-d9936d6bade8",
              "parentUUID": "03cf0973-790b-4dfd-882d-67e55ea9bd70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4782c002-f920-4af5-9a8c-64f08402f875",
            "4890a597-b18d-463b-b2f1-52e6e850b7b7",
            "a22933ae-6d99-4625-936c-00db74d3c46d",
            "103c1ba1-108f-4dd1-820c-d9936d6bade8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "a3ce540a-9ed7-4b9b-b9e0-1fab72841ee3",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 931,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "bf7c932f-cc9b-4323-9ee1-b6720d044555",
              "parentUUID": "a3ce540a-9ed7-4b9b-b9e0-1fab72841ee3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "adb7f115-9ebf-40d2-a04e-3b682db20f77",
              "parentUUID": "a3ce540a-9ed7-4b9b-b9e0-1fab72841ee3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "43e8b196-2b6a-48a8-9495-788093b11484",
              "parentUUID": "a3ce540a-9ed7-4b9b-b9e0-1fab72841ee3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "9f370975-b0aa-4f3a-b9f5-75b1d1fc8c63",
              "parentUUID": "a3ce540a-9ed7-4b9b-b9e0-1fab72841ee3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "98be94c8-0f5c-410b-9520-ddf36819f98b",
              "parentUUID": "a3ce540a-9ed7-4b9b-b9e0-1fab72841ee3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "adb7f115-9ebf-40d2-a04e-3b682db20f77",
            "43e8b196-2b6a-48a8-9495-788093b11484",
            "9f370975-b0aa-4f3a-b9f5-75b1d1fc8c63",
            "98be94c8-0f5c-410b-9520-ddf36819f98b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b09dfa47-a2dc-45a1-b3b6-a4e48834e4bb",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 814,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "be8ad1c2-c975-4993-b764-53c8e7d69287",
              "parentUUID": "b09dfa47-a2dc-45a1-b3b6-a4e48834e4bb",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "25343a95-4cb8-4baf-b86a-6dfb2811a1ad",
              "parentUUID": "b09dfa47-a2dc-45a1-b3b6-a4e48834e4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "7b5e4043-1e5e-4ff2-b3b5-78c1c5136239",
              "parentUUID": "b09dfa47-a2dc-45a1-b3b6-a4e48834e4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "5d3076cf-7b6c-4226-8b14-f1a524e5ed18",
              "parentUUID": "b09dfa47-a2dc-45a1-b3b6-a4e48834e4bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e0fd7bd5-2425-42e3-8120-cab2932831b0",
              "parentUUID": "b09dfa47-a2dc-45a1-b3b6-a4e48834e4bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "25343a95-4cb8-4baf-b86a-6dfb2811a1ad",
            "7b5e4043-1e5e-4ff2-b3b5-78c1c5136239",
            "5d3076cf-7b6c-4226-8b14-f1a524e5ed18",
            "e0fd7bd5-2425-42e3-8120-cab2932831b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "5214ad30-b70e-456b-b411-0ff81749902d",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 712,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "fc03baa5-1280-4b93-b42d-f7d53de927d2",
              "parentUUID": "5214ad30-b70e-456b-b411-0ff81749902d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "dbac2159-5a76-4d03-8ad7-7f3f794ddbc7",
              "parentUUID": "5214ad30-b70e-456b-b411-0ff81749902d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "3430db67-b1af-4137-81c9-102f9cff406d",
              "parentUUID": "5214ad30-b70e-456b-b411-0ff81749902d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "1f953a2d-729d-41e8-972f-288b5d4b6382",
              "parentUUID": "5214ad30-b70e-456b-b411-0ff81749902d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "683b212b-1eeb-4371-887e-f4f9c35837ea",
              "parentUUID": "5214ad30-b70e-456b-b411-0ff81749902d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dbac2159-5a76-4d03-8ad7-7f3f794ddbc7",
            "3430db67-b1af-4137-81c9-102f9cff406d",
            "1f953a2d-729d-41e8-972f-288b5d4b6382",
            "683b212b-1eeb-4371-887e-f4f9c35837ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "a0600b00-ad91-4273-8527-999576374dc9",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 916,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d7beadd7-a2c0-4d96-b924-d3dc1e3193a4",
              "parentUUID": "a0600b00-ad91-4273-8527-999576374dc9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "a3f95a61-4c09-421a-b46d-efe580c1bc9c",
              "parentUUID": "a0600b00-ad91-4273-8527-999576374dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "4bffcd08-0fd5-4d97-8742-c64f8e652cce",
              "parentUUID": "a0600b00-ad91-4273-8527-999576374dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "6fea12d6-06e5-415f-b6d6-e969491cff58",
              "parentUUID": "a0600b00-ad91-4273-8527-999576374dc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "860b9e8a-1932-4c4d-9484-5661d24aad36",
              "parentUUID": "a0600b00-ad91-4273-8527-999576374dc9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3f95a61-4c09-421a-b46d-efe580c1bc9c",
            "4bffcd08-0fd5-4d97-8742-c64f8e652cce",
            "6fea12d6-06e5-415f-b6d6-e969491cff58",
            "860b9e8a-1932-4c4d-9484-5661d24aad36"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "52da5f18-a5bd-4574-bdd5-4198e095f880",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 922,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c86f0dd8-929e-4cbf-9672-ecfbeabe3757",
              "parentUUID": "52da5f18-a5bd-4574-bdd5-4198e095f880",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "a2f51c7f-9b86-4fb3-bc73-ee0c3c19c78e",
              "parentUUID": "52da5f18-a5bd-4574-bdd5-4198e095f880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "3288f21f-076a-4cc3-9e29-7d086c9a81b3",
              "parentUUID": "52da5f18-a5bd-4574-bdd5-4198e095f880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "f947a4e0-41a2-4f6e-917a-568dcaa7ddb5",
              "parentUUID": "52da5f18-a5bd-4574-bdd5-4198e095f880",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0e79be96-9fca-4722-b9d2-05f9f96ee12f",
              "parentUUID": "52da5f18-a5bd-4574-bdd5-4198e095f880",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2f51c7f-9b86-4fb3-bc73-ee0c3c19c78e",
            "3288f21f-076a-4cc3-9e29-7d086c9a81b3",
            "f947a4e0-41a2-4f6e-917a-568dcaa7ddb5",
            "0e79be96-9fca-4722-b9d2-05f9f96ee12f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "bf415ab4-91fd-44f1-bfc2-0d579da6bf25",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 838,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d960e1ec-c7ce-4d5f-add9-40d9a101254e",
              "parentUUID": "bf415ab4-91fd-44f1-bfc2-0d579da6bf25",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "9c793c42-a1e8-47c2-bd53-8f44fcb0effa",
              "parentUUID": "bf415ab4-91fd-44f1-bfc2-0d579da6bf25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "f18acaf3-611a-4dc3-a65c-1bef51b71282",
              "parentUUID": "bf415ab4-91fd-44f1-bfc2-0d579da6bf25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "36a3fe27-cc86-45f1-8fdd-84862e5d9808",
              "parentUUID": "bf415ab4-91fd-44f1-bfc2-0d579da6bf25",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "7412b0a1-485e-4acf-a20a-d34bd935867b",
              "parentUUID": "bf415ab4-91fd-44f1-bfc2-0d579da6bf25",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c793c42-a1e8-47c2-bd53-8f44fcb0effa",
            "f18acaf3-611a-4dc3-a65c-1bef51b71282",
            "36a3fe27-cc86-45f1-8fdd-84862e5d9808",
            "7412b0a1-485e-4acf-a20a-d34bd935867b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "cdd0cce6-e4d0-4209-89d0-ab15e9832e89",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1099,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9f6c4a74-4654-4815-856f-e7d2b529e658",
              "parentUUID": "cdd0cce6-e4d0-4209-89d0-ab15e9832e89",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "ae178287-f791-428a-b549-657c3c565cef",
              "parentUUID": "cdd0cce6-e4d0-4209-89d0-ab15e9832e89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "c9ffa355-ae4f-43d5-9684-c5b9aa4433d8",
              "parentUUID": "cdd0cce6-e4d0-4209-89d0-ab15e9832e89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0c5a9e87-5ba9-4aca-8150-6261d32400a7",
              "parentUUID": "cdd0cce6-e4d0-4209-89d0-ab15e9832e89",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "322ce02a-ef67-442b-845b-ff15707b0c06",
              "parentUUID": "cdd0cce6-e4d0-4209-89d0-ab15e9832e89",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ae178287-f791-428a-b549-657c3c565cef",
            "c9ffa355-ae4f-43d5-9684-c5b9aa4433d8",
            "0c5a9e87-5ba9-4aca-8150-6261d32400a7",
            "322ce02a-ef67-442b-845b-ff15707b0c06"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "87283e4d-d19e-496c-bbb4-147774abe08f",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 920,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "41c08454-c0fc-4b2f-a050-fae0fb7f7ba2",
              "parentUUID": "87283e4d-d19e-496c-bbb4-147774abe08f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "4e67e23c-328a-4bbf-b99a-b0115a1060e0",
              "parentUUID": "87283e4d-d19e-496c-bbb4-147774abe08f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "5dbb8999-1b8e-46da-8d9e-3e6cea79efd4",
              "parentUUID": "87283e4d-d19e-496c-bbb4-147774abe08f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4ada2b27-791f-4d29-b34a-30a5c6ee54d1",
              "parentUUID": "87283e4d-d19e-496c-bbb4-147774abe08f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2e48a3d4-413d-4c75-97e1-85b1de1c616e",
              "parentUUID": "87283e4d-d19e-496c-bbb4-147774abe08f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e67e23c-328a-4bbf-b99a-b0115a1060e0",
            "5dbb8999-1b8e-46da-8d9e-3e6cea79efd4",
            "4ada2b27-791f-4d29-b34a-30a5c6ee54d1",
            "2e48a3d4-413d-4c75-97e1-85b1de1c616e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "88eca2e5-d46d-4dac-ad5d-146f62d8cecc",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 917,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1bcf8644-b4de-4da1-939e-97cfcb9c21a8",
              "parentUUID": "88eca2e5-d46d-4dac-ad5d-146f62d8cecc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "a091ee54-8dd5-4674-adf2-95c0067a2bd3",
              "parentUUID": "88eca2e5-d46d-4dac-ad5d-146f62d8cecc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "109263f3-2835-46df-8bdd-c52f4d995c2f",
              "parentUUID": "88eca2e5-d46d-4dac-ad5d-146f62d8cecc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "1dc9496d-3036-4d00-b086-a4eaa9152e4e",
              "parentUUID": "88eca2e5-d46d-4dac-ad5d-146f62d8cecc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "96340671-ea1c-424f-92d3-d58e21c794e6",
              "parentUUID": "88eca2e5-d46d-4dac-ad5d-146f62d8cecc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a091ee54-8dd5-4674-adf2-95c0067a2bd3",
            "109263f3-2835-46df-8bdd-c52f4d995c2f",
            "1dc9496d-3036-4d00-b086-a4eaa9152e4e",
            "96340671-ea1c-424f-92d3-d58e21c794e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "acb01925-f902-4616-b730-03b20c65e370",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 919,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0d71cbed-b248-4b75-ac7d-d17de96db542",
              "parentUUID": "acb01925-f902-4616-b730-03b20c65e370",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "2f776c09-7e1b-4ce2-b52c-7091877214b7",
              "parentUUID": "acb01925-f902-4616-b730-03b20c65e370",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "be92703d-bd7b-44cd-9d09-e42b7e98934c",
              "parentUUID": "acb01925-f902-4616-b730-03b20c65e370",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0292a594-2b50-4304-b4b9-cd0d8f227f50",
              "parentUUID": "acb01925-f902-4616-b730-03b20c65e370",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "d29876b2-1fa6-4cc8-9b30-508ac06c7395",
              "parentUUID": "acb01925-f902-4616-b730-03b20c65e370",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f776c09-7e1b-4ce2-b52c-7091877214b7",
            "be92703d-bd7b-44cd-9d09-e42b7e98934c",
            "0292a594-2b50-4304-b4b9-cd0d8f227f50",
            "d29876b2-1fa6-4cc8-9b30-508ac06c7395"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b21e3754-a70d-4df3-bdbb-da9d22de180c",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 815,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7f7d7eda-1385-4af5-9485-e7cc835dee04",
              "parentUUID": "b21e3754-a70d-4df3-bdbb-da9d22de180c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "73caa6af-ede1-4e40-9d0e-49263684c68f",
              "parentUUID": "b21e3754-a70d-4df3-bdbb-da9d22de180c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "e5c801f1-e493-4cff-9a3d-a4be56f4d9f2",
              "parentUUID": "b21e3754-a70d-4df3-bdbb-da9d22de180c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "3a9ad88e-70b9-44b6-bdf9-55b99506f18f",
              "parentUUID": "b21e3754-a70d-4df3-bdbb-da9d22de180c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "34a28305-77e5-4dcb-bdf8-64c161a64d7b",
              "parentUUID": "b21e3754-a70d-4df3-bdbb-da9d22de180c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73caa6af-ede1-4e40-9d0e-49263684c68f",
            "e5c801f1-e493-4cff-9a3d-a4be56f4d9f2",
            "3a9ad88e-70b9-44b6-bdf9-55b99506f18f",
            "34a28305-77e5-4dcb-bdf8-64c161a64d7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ba21c2d2-e55c-4969-ba28-acace8b1487a",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 916,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "27ae5281-27b2-4518-a6a4-2290c0ea0178",
              "parentUUID": "ba21c2d2-e55c-4969-ba28-acace8b1487a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "56a71f07-1689-4cf4-baf1-4aa34387377c",
              "parentUUID": "ba21c2d2-e55c-4969-ba28-acace8b1487a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "27807e40-d3c2-4c7b-bd3e-e0ea97b8f860",
              "parentUUID": "ba21c2d2-e55c-4969-ba28-acace8b1487a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "95d42f9d-db9e-485a-9cd0-be68d883b160",
              "parentUUID": "ba21c2d2-e55c-4969-ba28-acace8b1487a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c2a86439-7e0a-453f-abf3-38269294d384",
              "parentUUID": "ba21c2d2-e55c-4969-ba28-acace8b1487a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56a71f07-1689-4cf4-baf1-4aa34387377c",
            "27807e40-d3c2-4c7b-bd3e-e0ea97b8f860",
            "95d42f9d-db9e-485a-9cd0-be68d883b160",
            "c2a86439-7e0a-453f-abf3-38269294d384"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d2a4c23a-885a-4c5d-912f-ec366785e3cf",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 743,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "cf52b778-c5d1-4c83-9c95-bf2fdbd3afb6",
              "parentUUID": "d2a4c23a-885a-4c5d-912f-ec366785e3cf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "89baf443-d710-4ed4-b3eb-7fbb5244df11",
              "parentUUID": "d2a4c23a-885a-4c5d-912f-ec366785e3cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "8a57e6a6-dd5c-49d7-8c4f-26623e3c40f7",
              "parentUUID": "d2a4c23a-885a-4c5d-912f-ec366785e3cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "bbd60fd8-7eb9-4e46-820b-cca5bef0818a",
              "parentUUID": "d2a4c23a-885a-4c5d-912f-ec366785e3cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "773dc675-40bf-42da-a9e8-d1347d4676c9",
              "parentUUID": "d2a4c23a-885a-4c5d-912f-ec366785e3cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89baf443-d710-4ed4-b3eb-7fbb5244df11",
            "8a57e6a6-dd5c-49d7-8c4f-26623e3c40f7",
            "bbd60fd8-7eb9-4e46-820b-cca5bef0818a",
            "773dc675-40bf-42da-a9e8-d1347d4676c9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "18bf43b9-8ca1-4566-802c-64cc32ed81ff",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 787,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "bc64ede3-35b6-4d10-930a-ea51f0a2e606",
              "parentUUID": "18bf43b9-8ca1-4566-802c-64cc32ed81ff",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "cc47f856-08a0-4c8b-bdd3-c0c62a7fa734",
              "parentUUID": "18bf43b9-8ca1-4566-802c-64cc32ed81ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "0afc80fc-a619-4e6c-9289-c1ca5a116936",
              "parentUUID": "18bf43b9-8ca1-4566-802c-64cc32ed81ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "7400d460-be35-4539-91de-6089d05ac004",
              "parentUUID": "18bf43b9-8ca1-4566-802c-64cc32ed81ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "b28eb527-dd78-4f4e-b0de-e59d7b6fdded",
              "parentUUID": "18bf43b9-8ca1-4566-802c-64cc32ed81ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc47f856-08a0-4c8b-bdd3-c0c62a7fa734",
            "0afc80fc-a619-4e6c-9289-c1ca5a116936",
            "7400d460-be35-4539-91de-6089d05ac004",
            "b28eb527-dd78-4f4e-b0de-e59d7b6fdded"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "eff1f376-8bc1-4986-8c7f-12cab484a6ba",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 815,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0466dfd5-5eaf-403e-86dd-f4b4dbc36936",
              "parentUUID": "eff1f376-8bc1-4986-8c7f-12cab484a6ba",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "41f9c07f-1633-4655-8dfb-6eb0afbcdb92",
              "parentUUID": "eff1f376-8bc1-4986-8c7f-12cab484a6ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "0fdf53bf-b8bb-41b7-a32c-6669417a0644",
              "parentUUID": "eff1f376-8bc1-4986-8c7f-12cab484a6ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "b9863932-9b4e-4298-aa5a-8f696fd771d8",
              "parentUUID": "eff1f376-8bc1-4986-8c7f-12cab484a6ba",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c2e4cd58-c985-42ef-80e2-b3ee3511e6a7",
              "parentUUID": "eff1f376-8bc1-4986-8c7f-12cab484a6ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41f9c07f-1633-4655-8dfb-6eb0afbcdb92",
            "0fdf53bf-b8bb-41b7-a32c-6669417a0644",
            "b9863932-9b4e-4298-aa5a-8f696fd771d8",
            "c2e4cd58-c985-42ef-80e2-b3ee3511e6a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "03fef220-fdd5-4061-8f81-50f33af47f69",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 711,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "904ead13-a3c8-44a0-b37d-3bd65aec96bb",
              "parentUUID": "03fef220-fdd5-4061-8f81-50f33af47f69",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "44013584-a1a4-45e1-b1c9-19e2b6a663b6",
              "parentUUID": "03fef220-fdd5-4061-8f81-50f33af47f69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "df6f8937-98de-406d-b43b-26f0d045ce02",
              "parentUUID": "03fef220-fdd5-4061-8f81-50f33af47f69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "f1737b2b-b859-4545-affb-d8dd766f5b5d",
              "parentUUID": "03fef220-fdd5-4061-8f81-50f33af47f69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4da32fff-eaff-4a3f-9e7c-9051f887ef25",
              "parentUUID": "03fef220-fdd5-4061-8f81-50f33af47f69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44013584-a1a4-45e1-b1c9-19e2b6a663b6",
            "df6f8937-98de-406d-b43b-26f0d045ce02",
            "f1737b2b-b859-4545-affb-d8dd766f5b5d",
            "4da32fff-eaff-4a3f-9e7c-9051f887ef25"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "9668139f-c1a4-49eb-9022-fe9b7fba603d",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 712,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "92f7dc68-afa6-405a-902f-790dea161936",
              "parentUUID": "9668139f-c1a4-49eb-9022-fe9b7fba603d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "6c35d334-2fa3-440f-aff9-547f7a5950f3",
              "parentUUID": "9668139f-c1a4-49eb-9022-fe9b7fba603d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "b95ab588-24d3-4ad1-b94e-baa43cc0058a",
              "parentUUID": "9668139f-c1a4-49eb-9022-fe9b7fba603d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "cb432c9f-d444-4110-90a3-ac29fded1fbf",
              "parentUUID": "9668139f-c1a4-49eb-9022-fe9b7fba603d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "1e9547b4-18df-447d-90a9-c624bc74f170",
              "parentUUID": "9668139f-c1a4-49eb-9022-fe9b7fba603d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c35d334-2fa3-440f-aff9-547f7a5950f3",
            "b95ab588-24d3-4ad1-b94e-baa43cc0058a",
            "cb432c9f-d444-4110-90a3-ac29fded1fbf",
            "1e9547b4-18df-447d-90a9-c624bc74f170"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "26a2d3f9-38b6-4a89-975f-9f90cd934029",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 823,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "214416bf-7fb4-47ef-ad1a-55371a3e9cce",
              "parentUUID": "26a2d3f9-38b6-4a89-975f-9f90cd934029",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "7f0dbc5d-90f6-4640-8f78-56964b7f6d34",
              "parentUUID": "26a2d3f9-38b6-4a89-975f-9f90cd934029",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "6750712b-273d-4bb0-b3a3-841af15fd1d9",
              "parentUUID": "26a2d3f9-38b6-4a89-975f-9f90cd934029",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "69768e94-eaba-4a46-9e3e-a2ffecfe1cb3",
              "parentUUID": "26a2d3f9-38b6-4a89-975f-9f90cd934029",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "87156573-aa95-49e3-ba05-d860c1103460",
              "parentUUID": "26a2d3f9-38b6-4a89-975f-9f90cd934029",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f0dbc5d-90f6-4640-8f78-56964b7f6d34",
            "6750712b-273d-4bb0-b3a3-841af15fd1d9",
            "69768e94-eaba-4a46-9e3e-a2ffecfe1cb3",
            "87156573-aa95-49e3-ba05-d860c1103460"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "3aaf3e81-b4d6-4c96-bb80-93921f5803bf",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 809,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "17794ebb-b817-4f90-90b8-7d8791c5633b",
              "parentUUID": "3aaf3e81-b4d6-4c96-bb80-93921f5803bf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "c09104e9-c7d0-44ab-948e-3e247af7c30b",
              "parentUUID": "3aaf3e81-b4d6-4c96-bb80-93921f5803bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "1574b7ae-5199-4bc4-9b31-d4dca9bff51c",
              "parentUUID": "3aaf3e81-b4d6-4c96-bb80-93921f5803bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "26bfa5b8-7a78-4805-af6b-ecee6e552361",
              "parentUUID": "3aaf3e81-b4d6-4c96-bb80-93921f5803bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "974a1e28-3cb4-4dda-a91b-d1fa8e93795b",
              "parentUUID": "3aaf3e81-b4d6-4c96-bb80-93921f5803bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c09104e9-c7d0-44ab-948e-3e247af7c30b",
            "1574b7ae-5199-4bc4-9b31-d4dca9bff51c",
            "26bfa5b8-7a78-4805-af6b-ecee6e552361",
            "974a1e28-3cb4-4dda-a91b-d1fa8e93795b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f5ae31a8-7769-4997-a7b1-0c71004e496f",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 815,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ce0fe252-ff0c-4b81-b3e5-eb853ccc7ca8",
              "parentUUID": "f5ae31a8-7769-4997-a7b1-0c71004e496f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "534cc6a3-6eea-46f1-88d0-b03a4ec6aeeb",
              "parentUUID": "f5ae31a8-7769-4997-a7b1-0c71004e496f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "58b297b7-a756-4dd2-96db-4a3d3b773611",
              "parentUUID": "f5ae31a8-7769-4997-a7b1-0c71004e496f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "388683a8-5fd4-4274-b3ce-094d6bc5a269",
              "parentUUID": "f5ae31a8-7769-4997-a7b1-0c71004e496f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a8c2f990-6c65-4e8b-b532-c25baedd655c",
              "parentUUID": "f5ae31a8-7769-4997-a7b1-0c71004e496f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "534cc6a3-6eea-46f1-88d0-b03a4ec6aeeb",
            "58b297b7-a756-4dd2-96db-4a3d3b773611",
            "388683a8-5fd4-4274-b3ce-094d6bc5a269",
            "a8c2f990-6c65-4e8b-b532-c25baedd655c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "67559c04-b750-461e-a2e6-0be1991e3912",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 918,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "38716e81-c831-4834-b999-ae6119e3f5b6",
              "parentUUID": "67559c04-b750-461e-a2e6-0be1991e3912",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "f6a2096b-33be-41c0-af74-a8f899485172",
              "parentUUID": "67559c04-b750-461e-a2e6-0be1991e3912",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "96368eb4-8920-4289-b8d6-024473bd1a6c",
              "parentUUID": "67559c04-b750-461e-a2e6-0be1991e3912",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "5bec7110-f8d0-4e8f-ad73-76828c24500e",
              "parentUUID": "67559c04-b750-461e-a2e6-0be1991e3912",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e7eaccb5-3da0-4879-9efd-898fab9c3900",
              "parentUUID": "67559c04-b750-461e-a2e6-0be1991e3912",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f6a2096b-33be-41c0-af74-a8f899485172",
            "96368eb4-8920-4289-b8d6-024473bd1a6c",
            "5bec7110-f8d0-4e8f-ad73-76828c24500e",
            "e7eaccb5-3da0-4879-9efd-898fab9c3900"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "aba62c02-d88f-42cd-80e5-8c406764377e",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 813,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7f533d49-47ce-4b62-8a2f-13a30d7a06df",
              "parentUUID": "aba62c02-d88f-42cd-80e5-8c406764377e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "510e7a57-6e9f-4896-b628-e93f49864fdf",
              "parentUUID": "aba62c02-d88f-42cd-80e5-8c406764377e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "cbf4128f-ee5e-41de-99fd-e4f1276969d9",
              "parentUUID": "aba62c02-d88f-42cd-80e5-8c406764377e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4fbd90b9-cfa6-4f01-a58d-b8e91280a709",
              "parentUUID": "aba62c02-d88f-42cd-80e5-8c406764377e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "fd885ae5-fb65-49f1-87e1-5ceecffcc868",
              "parentUUID": "aba62c02-d88f-42cd-80e5-8c406764377e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "510e7a57-6e9f-4896-b628-e93f49864fdf",
            "cbf4128f-ee5e-41de-99fd-e4f1276969d9",
            "4fbd90b9-cfa6-4f01-a58d-b8e91280a709",
            "fd885ae5-fb65-49f1-87e1-5ceecffcc868"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "9a235db6-4c64-4a30-859f-ed7a0392fdbb",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 822,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0b4b7a79-62da-4814-9688-cbaa30620def",
              "parentUUID": "9a235db6-4c64-4a30-859f-ed7a0392fdbb",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "973f990b-a6d9-499d-811d-3990a84bfc00",
              "parentUUID": "9a235db6-4c64-4a30-859f-ed7a0392fdbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "f52d36c1-42b8-47a2-ac16-584b10a5f9f3",
              "parentUUID": "9a235db6-4c64-4a30-859f-ed7a0392fdbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "1019ca5b-f48c-47ac-8702-d5b6ef1de5b1",
              "parentUUID": "9a235db6-4c64-4a30-859f-ed7a0392fdbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "5d8369c9-055e-421b-af32-b66d1968cb4e",
              "parentUUID": "9a235db6-4c64-4a30-859f-ed7a0392fdbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "973f990b-a6d9-499d-811d-3990a84bfc00",
            "f52d36c1-42b8-47a2-ac16-584b10a5f9f3",
            "1019ca5b-f48c-47ac-8702-d5b6ef1de5b1",
            "5d8369c9-055e-421b-af32-b66d1968cb4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "6f18f5c7-a743-41a6-b467-85b9327d075c",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 813,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "cfe42328-ec2f-438d-8102-eca432ebdaec",
              "parentUUID": "6f18f5c7-a743-41a6-b467-85b9327d075c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "ecfc3733-6003-4267-9a21-229be680db5f",
              "parentUUID": "6f18f5c7-a743-41a6-b467-85b9327d075c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "bf4991ae-55bd-46cb-ac6e-7ec38f79b30d",
              "parentUUID": "6f18f5c7-a743-41a6-b467-85b9327d075c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ff4a2b44-64e3-4f58-9824-5ce7148a59b6",
              "parentUUID": "6f18f5c7-a743-41a6-b467-85b9327d075c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "cab6ba82-dbcf-4d5f-bb29-dcff6244774c",
              "parentUUID": "6f18f5c7-a743-41a6-b467-85b9327d075c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ecfc3733-6003-4267-9a21-229be680db5f",
            "bf4991ae-55bd-46cb-ac6e-7ec38f79b30d",
            "ff4a2b44-64e3-4f58-9824-5ce7148a59b6",
            "cab6ba82-dbcf-4d5f-bb29-dcff6244774c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f1843bad-4843-4241-bd75-e42dc7908358",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 816,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4abbd548-ec5d-4462-a918-13a433b0f2ed",
              "parentUUID": "f1843bad-4843-4241-bd75-e42dc7908358",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "5d83b110-a42b-4116-87d0-6f1e8ee514c9",
              "parentUUID": "f1843bad-4843-4241-bd75-e42dc7908358",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "be0b6759-cb83-4e69-bbf5-f6c609dc1142",
              "parentUUID": "f1843bad-4843-4241-bd75-e42dc7908358",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "31c4b777-b3d5-44f2-94a9-0967a980c6ed",
              "parentUUID": "f1843bad-4843-4241-bd75-e42dc7908358",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "de7043d1-da95-4799-86f2-12176feaf3eb",
              "parentUUID": "f1843bad-4843-4241-bd75-e42dc7908358",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d83b110-a42b-4116-87d0-6f1e8ee514c9",
            "be0b6759-cb83-4e69-bbf5-f6c609dc1142",
            "31c4b777-b3d5-44f2-94a9-0967a980c6ed",
            "de7043d1-da95-4799-86f2-12176feaf3eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "df9a0dc3-d86b-4000-b638-f3c6508b5e56",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1021,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6c201d4f-ef58-401a-bbd4-56240d9d55d1",
              "parentUUID": "df9a0dc3-d86b-4000-b638-f3c6508b5e56",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "81642abb-7d69-4fa8-92aa-15c1bc2bf0a2",
              "parentUUID": "df9a0dc3-d86b-4000-b638-f3c6508b5e56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "eca766f8-2e48-4674-9152-50f0fc42a27d",
              "parentUUID": "df9a0dc3-d86b-4000-b638-f3c6508b5e56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "b0b2ae1c-1cb5-4a89-8b8c-34f48fea60ff",
              "parentUUID": "df9a0dc3-d86b-4000-b638-f3c6508b5e56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "41b707ea-d46e-4f7f-85bf-1d0773b9519c",
              "parentUUID": "df9a0dc3-d86b-4000-b638-f3c6508b5e56",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "81642abb-7d69-4fa8-92aa-15c1bc2bf0a2",
            "eca766f8-2e48-4674-9152-50f0fc42a27d",
            "b0b2ae1c-1cb5-4a89-8b8c-34f48fea60ff",
            "41b707ea-d46e-4f7f-85bf-1d0773b9519c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "22c0a2e8-6833-4cf4-b6ce-f1a57282fd14",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 918,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "bd38727c-69d8-4b27-adb4-8030b4446f21",
              "parentUUID": "22c0a2e8-6833-4cf4-b6ce-f1a57282fd14",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "0b252206-15ec-42f4-9941-62bb762e0825",
              "parentUUID": "22c0a2e8-6833-4cf4-b6ce-f1a57282fd14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "182136a1-95bc-45b2-8d28-0c281978bd5a",
              "parentUUID": "22c0a2e8-6833-4cf4-b6ce-f1a57282fd14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "abf28fe1-189d-4e1d-9c1e-ca342ba6df40",
              "parentUUID": "22c0a2e8-6833-4cf4-b6ce-f1a57282fd14",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8b8425c2-3a91-4e00-a938-e031df955b16",
              "parentUUID": "22c0a2e8-6833-4cf4-b6ce-f1a57282fd14",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b252206-15ec-42f4-9941-62bb762e0825",
            "182136a1-95bc-45b2-8d28-0c281978bd5a",
            "abf28fe1-189d-4e1d-9c1e-ca342ba6df40",
            "8b8425c2-3a91-4e00-a938-e031df955b16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d245b7be-a129-46e8-aa95-3686a43912ca",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1122,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1193a9b8-4ccb-45b7-98f2-25802bb0a803",
              "parentUUID": "d245b7be-a129-46e8-aa95-3686a43912ca",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "1132c4cc-4628-4f04-b420-26e67c7f01dc",
              "parentUUID": "d245b7be-a129-46e8-aa95-3686a43912ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ec935e3a-bcca-49dc-9cd8-a6750d2749ee",
              "parentUUID": "d245b7be-a129-46e8-aa95-3686a43912ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "9cb7193c-951e-4b4b-b472-bd988064b37a",
              "parentUUID": "d245b7be-a129-46e8-aa95-3686a43912ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "df867ca5-0130-4aaf-85c3-dc6c184b832a",
              "parentUUID": "d245b7be-a129-46e8-aa95-3686a43912ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1132c4cc-4628-4f04-b420-26e67c7f01dc",
            "ec935e3a-bcca-49dc-9cd8-a6750d2749ee",
            "9cb7193c-951e-4b4b-b472-bd988064b37a",
            "df867ca5-0130-4aaf-85c3-dc6c184b832a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f6e92f31-714f-4128-8a47-80121bcfede3",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 713,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c4d27efb-1014-4c98-9608-b9c184e6e1df",
              "parentUUID": "f6e92f31-714f-4128-8a47-80121bcfede3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "4cc8d3f9-ec5f-4647-aeb8-07c8bf082d86",
              "parentUUID": "f6e92f31-714f-4128-8a47-80121bcfede3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "8797e81b-f30a-4f72-ad77-53724dd9e092",
              "parentUUID": "f6e92f31-714f-4128-8a47-80121bcfede3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "14ffdf30-d2ae-4e99-8a0e-dfedf2b2c62b",
              "parentUUID": "f6e92f31-714f-4128-8a47-80121bcfede3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2473a89e-46aa-4223-80cb-e956178640b7",
              "parentUUID": "f6e92f31-714f-4128-8a47-80121bcfede3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4cc8d3f9-ec5f-4647-aeb8-07c8bf082d86",
            "8797e81b-f30a-4f72-ad77-53724dd9e092",
            "14ffdf30-d2ae-4e99-8a0e-dfedf2b2c62b",
            "2473a89e-46aa-4223-80cb-e956178640b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "18665eae-4603-403c-a486-80377c458569",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 815,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "86cf00db-507a-4264-9262-808fe2fdb24c",
              "parentUUID": "18665eae-4603-403c-a486-80377c458569",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "5053f71a-6904-405b-aadd-effeb793427d",
              "parentUUID": "18665eae-4603-403c-a486-80377c458569",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "cccf0607-2ef0-4db1-894e-ff5a9f21bf48",
              "parentUUID": "18665eae-4603-403c-a486-80377c458569",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "282f9be0-3930-4071-a1df-b2303ab6031c",
              "parentUUID": "18665eae-4603-403c-a486-80377c458569",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "d6e05f80-058e-42e5-ae87-05984587c713",
              "parentUUID": "18665eae-4603-403c-a486-80377c458569",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5053f71a-6904-405b-aadd-effeb793427d",
            "cccf0607-2ef0-4db1-894e-ff5a9f21bf48",
            "282f9be0-3930-4071-a1df-b2303ab6031c",
            "d6e05f80-058e-42e5-ae87-05984587c713"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c3e63cc1-6f97-45b0-b4d0-59e805e44e1b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 817,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "be58df49-8121-4457-b6ac-1189511fc723",
              "parentUUID": "c3e63cc1-6f97-45b0-b4d0-59e805e44e1b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "4427f208-94e4-4e47-b4ee-b8da33cb19d7",
              "parentUUID": "c3e63cc1-6f97-45b0-b4d0-59e805e44e1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "7f2c4b20-c7cf-47e5-a2cf-efb787272eaf",
              "parentUUID": "c3e63cc1-6f97-45b0-b4d0-59e805e44e1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "32dae0a0-10cc-4c18-a557-f833a4d73b5e",
              "parentUUID": "c3e63cc1-6f97-45b0-b4d0-59e805e44e1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "b2113a1a-d9d7-4d1a-8820-e00457a98f1d",
              "parentUUID": "c3e63cc1-6f97-45b0-b4d0-59e805e44e1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4427f208-94e4-4e47-b4ee-b8da33cb19d7",
            "7f2c4b20-c7cf-47e5-a2cf-efb787272eaf",
            "32dae0a0-10cc-4c18-a557-f833a4d73b5e",
            "b2113a1a-d9d7-4d1a-8820-e00457a98f1d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e68fbdd0-d2c9-4609-872f-235c276c988d",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 812,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4488f0c8-b5ac-4c06-8a2b-7850d77d35d2",
              "parentUUID": "e68fbdd0-d2c9-4609-872f-235c276c988d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "6b5a5331-4e85-46b9-bc0d-bb4f8f4e0119",
              "parentUUID": "e68fbdd0-d2c9-4609-872f-235c276c988d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "83e3f081-265f-4ecb-8c83-86f65d2e39d9",
              "parentUUID": "e68fbdd0-d2c9-4609-872f-235c276c988d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "020a044c-fc63-4871-8190-c08f5e8b4a6a",
              "parentUUID": "e68fbdd0-d2c9-4609-872f-235c276c988d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "caa856ac-25ac-4a8c-8041-03dcc922c143",
              "parentUUID": "e68fbdd0-d2c9-4609-872f-235c276c988d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b5a5331-4e85-46b9-bc0d-bb4f8f4e0119",
            "83e3f081-265f-4ecb-8c83-86f65d2e39d9",
            "020a044c-fc63-4871-8190-c08f5e8b4a6a",
            "caa856ac-25ac-4a8c-8041-03dcc922c143"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "503cda27-3934-49b8-ad3d-4b945f1f8c68",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 921,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "fb6a1d1e-de6f-4fcd-8468-12498d7e0211",
              "parentUUID": "503cda27-3934-49b8-ad3d-4b945f1f8c68",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "86c29ae2-5312-4d6c-8119-31cb05ee173a",
              "parentUUID": "503cda27-3934-49b8-ad3d-4b945f1f8c68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "4bb9133c-1a4b-44fc-9cde-48607082962a",
              "parentUUID": "503cda27-3934-49b8-ad3d-4b945f1f8c68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4e9b4550-affa-40d6-b2e0-517f7a78fe47",
              "parentUUID": "503cda27-3934-49b8-ad3d-4b945f1f8c68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4e9d69df-6f92-421e-a2d2-688029d9ac7f",
              "parentUUID": "503cda27-3934-49b8-ad3d-4b945f1f8c68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86c29ae2-5312-4d6c-8119-31cb05ee173a",
            "4bb9133c-1a4b-44fc-9cde-48607082962a",
            "4e9b4550-affa-40d6-b2e0-517f7a78fe47",
            "4e9d69df-6f92-421e-a2d2-688029d9ac7f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e9f81e62-5319-4745-8f55-07f2e3248d74",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 918,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "657bb3e9-e0b1-41a1-8c3b-f4804d6ca291",
              "parentUUID": "e9f81e62-5319-4745-8f55-07f2e3248d74",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "46757e18-d7f7-4625-9227-c021d5b3e686",
              "parentUUID": "e9f81e62-5319-4745-8f55-07f2e3248d74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "a85e7505-51ee-4d28-9b9e-42718d2bc7a7",
              "parentUUID": "e9f81e62-5319-4745-8f55-07f2e3248d74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "5cb71d10-6e1d-4ea6-b1fb-0588eb05d4d7",
              "parentUUID": "e9f81e62-5319-4745-8f55-07f2e3248d74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e5812164-bc9b-441b-acf0-999079093e5a",
              "parentUUID": "e9f81e62-5319-4745-8f55-07f2e3248d74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46757e18-d7f7-4625-9227-c021d5b3e686",
            "a85e7505-51ee-4d28-9b9e-42718d2bc7a7",
            "5cb71d10-6e1d-4ea6-b1fb-0588eb05d4d7",
            "e5812164-bc9b-441b-acf0-999079093e5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "cc520fb9-e687-4fad-aee2-fdead1d894f7",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 817,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b18b3494-c3a7-480c-8dc3-3448ff3bde01",
              "parentUUID": "cc520fb9-e687-4fad-aee2-fdead1d894f7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "f7b5f198-0b40-4221-96b7-921f005b30cd",
              "parentUUID": "cc520fb9-e687-4fad-aee2-fdead1d894f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "881f6a2b-f02f-4e04-8741-7205c112da1d",
              "parentUUID": "cc520fb9-e687-4fad-aee2-fdead1d894f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0d5ee343-d1f5-4070-9c64-bfbaf24dd872",
              "parentUUID": "cc520fb9-e687-4fad-aee2-fdead1d894f7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "1bb119e0-dfe9-47db-a5aa-73aa7d2eac09",
              "parentUUID": "cc520fb9-e687-4fad-aee2-fdead1d894f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7b5f198-0b40-4221-96b7-921f005b30cd",
            "881f6a2b-f02f-4e04-8741-7205c112da1d",
            "0d5ee343-d1f5-4070-9c64-bfbaf24dd872",
            "1bb119e0-dfe9-47db-a5aa-73aa7d2eac09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "5a1be55a-42b4-4f05-9a21-a6ca9b7ae33b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 781,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "17d735b8-1cdc-43c3-8e81-72b7d28226c9",
              "parentUUID": "5a1be55a-42b4-4f05-9a21-a6ca9b7ae33b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "d2155ea1-78ec-4b4d-adf6-75cf351671f5",
              "parentUUID": "5a1be55a-42b4-4f05-9a21-a6ca9b7ae33b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "de315867-46b5-4641-95b5-ed174fdb1655",
              "parentUUID": "5a1be55a-42b4-4f05-9a21-a6ca9b7ae33b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8c6ef887-a7e1-4173-a2fb-d7025c261c32",
              "parentUUID": "5a1be55a-42b4-4f05-9a21-a6ca9b7ae33b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "76343edc-0c0c-427d-8682-d4b35111c212",
              "parentUUID": "5a1be55a-42b4-4f05-9a21-a6ca9b7ae33b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2155ea1-78ec-4b4d-adf6-75cf351671f5",
            "de315867-46b5-4641-95b5-ed174fdb1655",
            "8c6ef887-a7e1-4173-a2fb-d7025c261c32",
            "76343edc-0c0c-427d-8682-d4b35111c212"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "eae7229d-e8cf-47e3-a24a-afb2d8360ef7",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 950,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1e7eb14e-47a3-4e5b-9d67-7aba24cc2fc1",
              "parentUUID": "eae7229d-e8cf-47e3-a24a-afb2d8360ef7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "19561419-9304-4c29-87f4-42b71da6b191",
              "parentUUID": "eae7229d-e8cf-47e3-a24a-afb2d8360ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "82b2885c-eb8c-4c3f-9792-7e84a4dab5a3",
              "parentUUID": "eae7229d-e8cf-47e3-a24a-afb2d8360ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "7eca1423-79fb-4380-b6a0-1499d6c63b66",
              "parentUUID": "eae7229d-e8cf-47e3-a24a-afb2d8360ef7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "92a5821b-cdda-4caa-8ae5-bf0def3b2503",
              "parentUUID": "eae7229d-e8cf-47e3-a24a-afb2d8360ef7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19561419-9304-4c29-87f4-42b71da6b191",
            "82b2885c-eb8c-4c3f-9792-7e84a4dab5a3",
            "7eca1423-79fb-4380-b6a0-1499d6c63b66",
            "92a5821b-cdda-4caa-8ae5-bf0def3b2503"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "3feab5b9-e3e0-4b27-98ba-0a33021c1f33",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 994,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5cd27fe3-87b4-4b73-8670-d6d39e16c7e7",
              "parentUUID": "3feab5b9-e3e0-4b27-98ba-0a33021c1f33",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "3b9f6787-ab60-450a-8118-70e095adff5a",
              "parentUUID": "3feab5b9-e3e0-4b27-98ba-0a33021c1f33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "dec39f20-86a3-4616-90e4-4f27484d7323",
              "parentUUID": "3feab5b9-e3e0-4b27-98ba-0a33021c1f33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8b2258b8-b82b-4488-a214-33db991f7ff1",
              "parentUUID": "3feab5b9-e3e0-4b27-98ba-0a33021c1f33",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "46068b73-074a-4d7e-aa6a-260b76494346",
              "parentUUID": "3feab5b9-e3e0-4b27-98ba-0a33021c1f33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b9f6787-ab60-450a-8118-70e095adff5a",
            "dec39f20-86a3-4616-90e4-4f27484d7323",
            "8b2258b8-b82b-4488-a214-33db991f7ff1",
            "46068b73-074a-4d7e-aa6a-260b76494346"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "6d7cbc42-f9b9-4d70-81e7-481be1428bd7",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 743,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8d7e9501-8c76-4eca-887c-aa8f94eaf3d1",
              "parentUUID": "6d7cbc42-f9b9-4d70-81e7-481be1428bd7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "ad1da871-1973-4cd2-819e-470ab3743b5c",
              "parentUUID": "6d7cbc42-f9b9-4d70-81e7-481be1428bd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "bc1c6f1e-0595-4a8d-9d71-663f25cc348e",
              "parentUUID": "6d7cbc42-f9b9-4d70-81e7-481be1428bd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e5c0a320-8aec-4fbf-be15-241c4e7c590b",
              "parentUUID": "6d7cbc42-f9b9-4d70-81e7-481be1428bd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "cd4519f3-7052-46dd-bd2f-521ff9e255ad",
              "parentUUID": "6d7cbc42-f9b9-4d70-81e7-481be1428bd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad1da871-1973-4cd2-819e-470ab3743b5c",
            "bc1c6f1e-0595-4a8d-9d71-663f25cc348e",
            "e5c0a320-8aec-4fbf-be15-241c4e7c590b",
            "cd4519f3-7052-46dd-bd2f-521ff9e255ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "a531de08-6799-4f9b-b95c-49bf8e9324f6",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 812,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e1f360a8-9f99-4fc3-9e27-e6a1e9b66b4d",
              "parentUUID": "a531de08-6799-4f9b-b95c-49bf8e9324f6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "af60b9d7-eca3-4d60-839f-a3f6de59b297",
              "parentUUID": "a531de08-6799-4f9b-b95c-49bf8e9324f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "dded97fd-5c48-4449-85af-4e61d0deb31b",
              "parentUUID": "a531de08-6799-4f9b-b95c-49bf8e9324f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8461ec66-1aa4-4be6-8e34-dff4c8982f6a",
              "parentUUID": "a531de08-6799-4f9b-b95c-49bf8e9324f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "dbe6f3f2-7023-4f9c-b051-2fcdb94756be",
              "parentUUID": "a531de08-6799-4f9b-b95c-49bf8e9324f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af60b9d7-eca3-4d60-839f-a3f6de59b297",
            "dded97fd-5c48-4449-85af-4e61d0deb31b",
            "8461ec66-1aa4-4be6-8e34-dff4c8982f6a",
            "dbe6f3f2-7023-4f9c-b051-2fcdb94756be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "bf648b95-41b4-4ba6-9a5f-6a15faf4f2de",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1021,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "99fa1ed9-58c8-4c7f-a78f-7d88cff28747",
              "parentUUID": "bf648b95-41b4-4ba6-9a5f-6a15faf4f2de",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "69a2d615-1930-440e-bcab-9f4d5656e81a",
              "parentUUID": "bf648b95-41b4-4ba6-9a5f-6a15faf4f2de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "66d5f26b-eee0-4b8b-b803-8f84dd623989",
              "parentUUID": "bf648b95-41b4-4ba6-9a5f-6a15faf4f2de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e0bdb964-e0b6-4bde-a160-f93472249ac0",
              "parentUUID": "bf648b95-41b4-4ba6-9a5f-6a15faf4f2de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8bf72dd4-75b7-4f69-b869-b24de2c13579",
              "parentUUID": "bf648b95-41b4-4ba6-9a5f-6a15faf4f2de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "69a2d615-1930-440e-bcab-9f4d5656e81a",
            "66d5f26b-eee0-4b8b-b803-8f84dd623989",
            "e0bdb964-e0b6-4bde-a160-f93472249ac0",
            "8bf72dd4-75b7-4f69-b869-b24de2c13579"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "85f48c35-9ff4-42f2-bd9e-4f0a2012665b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 816,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4ee16740-53af-4db7-87b7-43da26a14bb4",
              "parentUUID": "85f48c35-9ff4-42f2-bd9e-4f0a2012665b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "94b5f7e9-5325-430a-8fa3-99b18f55ef5f",
              "parentUUID": "85f48c35-9ff4-42f2-bd9e-4f0a2012665b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "dfb33ed9-8053-4662-82ac-ec4841e2af55",
              "parentUUID": "85f48c35-9ff4-42f2-bd9e-4f0a2012665b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "cd5fc71e-9779-43d7-b3a9-2b77e08631e8",
              "parentUUID": "85f48c35-9ff4-42f2-bd9e-4f0a2012665b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "dfd14a28-cd09-4e24-b8fb-841e09600809",
              "parentUUID": "85f48c35-9ff4-42f2-bd9e-4f0a2012665b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94b5f7e9-5325-430a-8fa3-99b18f55ef5f",
            "dfb33ed9-8053-4662-82ac-ec4841e2af55",
            "cd5fc71e-9779-43d7-b3a9-2b77e08631e8",
            "dfd14a28-cd09-4e24-b8fb-841e09600809"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "07360385-0e4b-43be-a024-15328fa6bf36",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 973,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b3fb1666-d186-41ae-af14-b1453b0dbf1e",
              "parentUUID": "07360385-0e4b-43be-a024-15328fa6bf36",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "0fb48a3a-f47c-47f7-a213-59b003d087f8",
              "parentUUID": "07360385-0e4b-43be-a024-15328fa6bf36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "c31bf4be-f4fa-4a1d-90de-cfa1a52a45b9",
              "parentUUID": "07360385-0e4b-43be-a024-15328fa6bf36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "fab8f54f-8605-4dda-baf3-1e45fbb48562",
              "parentUUID": "07360385-0e4b-43be-a024-15328fa6bf36",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "13144b56-f57b-4dca-a3e4-9ef7af6c946b",
              "parentUUID": "07360385-0e4b-43be-a024-15328fa6bf36",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0fb48a3a-f47c-47f7-a213-59b003d087f8",
            "c31bf4be-f4fa-4a1d-90de-cfa1a52a45b9",
            "fab8f54f-8605-4dda-baf3-1e45fbb48562",
            "13144b56-f57b-4dca-a3e4-9ef7af6c946b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "200bd854-761c-4e2e-b248-a481b52590ef",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1203,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "bc19c4c0-a47a-4358-8e72-890dcf166f8e",
              "parentUUID": "200bd854-761c-4e2e-b248-a481b52590ef",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "7f4383c6-240c-4382-af34-fe34d4b1f3ed",
              "parentUUID": "200bd854-761c-4e2e-b248-a481b52590ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "d36b746b-6ef2-46d4-af3d-d4646b3f06d6",
              "parentUUID": "200bd854-761c-4e2e-b248-a481b52590ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "06b850bb-0c92-48fe-821c-1cb32880e05e",
              "parentUUID": "200bd854-761c-4e2e-b248-a481b52590ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "27c49eed-b94c-4640-8d38-203db5e95499",
              "parentUUID": "200bd854-761c-4e2e-b248-a481b52590ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f4383c6-240c-4382-af34-fe34d4b1f3ed",
            "d36b746b-6ef2-46d4-af3d-d4646b3f06d6",
            "06b850bb-0c92-48fe-821c-1cb32880e05e",
            "27c49eed-b94c-4640-8d38-203db5e95499"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "eaa26243-0c5f-49fc-ba66-5282ecf9cb3d",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 966,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f5210975-66da-45d0-b670-64e501a17024",
              "parentUUID": "eaa26243-0c5f-49fc-ba66-5282ecf9cb3d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "125602e3-3d41-4751-b60c-d7953b62c6cd",
              "parentUUID": "eaa26243-0c5f-49fc-ba66-5282ecf9cb3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "bf63decd-e9a7-42ee-b437-34397a4b4ad1",
              "parentUUID": "eaa26243-0c5f-49fc-ba66-5282ecf9cb3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "30fd0cbc-4102-468d-8e35-43fd39bac646",
              "parentUUID": "eaa26243-0c5f-49fc-ba66-5282ecf9cb3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "77f27632-5412-4e70-a6aa-46c7ffb4d297",
              "parentUUID": "eaa26243-0c5f-49fc-ba66-5282ecf9cb3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "125602e3-3d41-4751-b60c-d7953b62c6cd",
            "bf63decd-e9a7-42ee-b437-34397a4b4ad1",
            "30fd0cbc-4102-468d-8e35-43fd39bac646",
            "77f27632-5412-4e70-a6aa-46c7ffb4d297"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c57048be-095d-4ccb-a32a-a2a3c34754c3",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 734,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "68475891-0ff9-44b5-a195-8922fdae4948",
              "parentUUID": "c57048be-095d-4ccb-a32a-a2a3c34754c3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "f0ab2ed9-b615-468a-bf05-2cdaa9e64b8a",
              "parentUUID": "c57048be-095d-4ccb-a32a-a2a3c34754c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "4601c728-5682-498b-9629-7ce46c713b88",
              "parentUUID": "c57048be-095d-4ccb-a32a-a2a3c34754c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ca13848b-83f4-440a-a6e9-9789e09a85f5",
              "parentUUID": "c57048be-095d-4ccb-a32a-a2a3c34754c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "bce0d653-427b-472e-a4ef-d779c3e4a777",
              "parentUUID": "c57048be-095d-4ccb-a32a-a2a3c34754c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f0ab2ed9-b615-468a-bf05-2cdaa9e64b8a",
            "4601c728-5682-498b-9629-7ce46c713b88",
            "ca13848b-83f4-440a-a6e9-9789e09a85f5",
            "bce0d653-427b-472e-a4ef-d779c3e4a777"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e138a6f2-ce84-420b-aa4f-0ac51924dbf7",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 927,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4dc72f7f-1cc3-4944-9e7b-d0397fbc9483",
              "parentUUID": "e138a6f2-ce84-420b-aa4f-0ac51924dbf7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "a349a2d9-da09-4cdf-898d-f6ae26afe877",
              "parentUUID": "e138a6f2-ce84-420b-aa4f-0ac51924dbf7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "8689a9b4-3711-4528-b548-8ea27553dbf2",
              "parentUUID": "e138a6f2-ce84-420b-aa4f-0ac51924dbf7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "619cec10-a32f-4c4f-b164-a9c2ba6b4d03",
              "parentUUID": "e138a6f2-ce84-420b-aa4f-0ac51924dbf7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4c465995-eb19-46c3-8df0-47029d1cff04",
              "parentUUID": "e138a6f2-ce84-420b-aa4f-0ac51924dbf7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a349a2d9-da09-4cdf-898d-f6ae26afe877",
            "8689a9b4-3711-4528-b548-8ea27553dbf2",
            "619cec10-a32f-4c4f-b164-a9c2ba6b4d03",
            "4c465995-eb19-46c3-8df0-47029d1cff04"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b339e43b-a7ce-4d12-8887-277219f0a47f",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 910,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "465f8729-b248-461c-939d-a9a7d7f252ed",
              "parentUUID": "b339e43b-a7ce-4d12-8887-277219f0a47f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "0c0cd42e-0363-408a-a7ce-fe06d81c895b",
              "parentUUID": "b339e43b-a7ce-4d12-8887-277219f0a47f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "f9584451-e2e3-446a-8dda-e4885f5b0ca3",
              "parentUUID": "b339e43b-a7ce-4d12-8887-277219f0a47f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8827c161-9163-4a39-8e5c-5f042f5236e5",
              "parentUUID": "b339e43b-a7ce-4d12-8887-277219f0a47f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "326b40c9-c756-4626-8cde-ff1d6865252d",
              "parentUUID": "b339e43b-a7ce-4d12-8887-277219f0a47f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c0cd42e-0363-408a-a7ce-fe06d81c895b",
            "f9584451-e2e3-446a-8dda-e4885f5b0ca3",
            "8827c161-9163-4a39-8e5c-5f042f5236e5",
            "326b40c9-c756-4626-8cde-ff1d6865252d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "7ad2e17f-b078-48bd-a1fe-ca1d892acde2",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 891,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b0618254-71fe-4d2d-a907-5ac536939be6",
              "parentUUID": "7ad2e17f-b078-48bd-a1fe-ca1d892acde2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "bdeaf177-b8f6-48a5-8c6d-12bf212a60c1",
              "parentUUID": "7ad2e17f-b078-48bd-a1fe-ca1d892acde2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "1b904f38-b5d2-400c-ae55-251c72716b69",
              "parentUUID": "7ad2e17f-b078-48bd-a1fe-ca1d892acde2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "397aca2a-3b2e-434b-bfb7-023833eccfbb",
              "parentUUID": "7ad2e17f-b078-48bd-a1fe-ca1d892acde2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "fac1c6f9-63eb-40cc-9d36-65ee39df5e00",
              "parentUUID": "7ad2e17f-b078-48bd-a1fe-ca1d892acde2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bdeaf177-b8f6-48a5-8c6d-12bf212a60c1",
            "1b904f38-b5d2-400c-ae55-251c72716b69",
            "397aca2a-3b2e-434b-bfb7-023833eccfbb",
            "fac1c6f9-63eb-40cc-9d36-65ee39df5e00"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d3746df3-8965-4d46-84b7-c98223a60585",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 942,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a8a25267-a350-4dcb-92dc-217e24f7a972",
              "parentUUID": "d3746df3-8965-4d46-84b7-c98223a60585",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "fc18a0ff-3599-47c3-ac27-586eda5f0d33",
              "parentUUID": "d3746df3-8965-4d46-84b7-c98223a60585",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "7584753b-8344-4dde-a71c-95127775be0a",
              "parentUUID": "d3746df3-8965-4d46-84b7-c98223a60585",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4da04b14-b169-4479-be6d-5ba84d333448",
              "parentUUID": "d3746df3-8965-4d46-84b7-c98223a60585",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "938cf662-e932-4bf1-9d0f-842fad3a5261",
              "parentUUID": "d3746df3-8965-4d46-84b7-c98223a60585",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc18a0ff-3599-47c3-ac27-586eda5f0d33",
            "7584753b-8344-4dde-a71c-95127775be0a",
            "4da04b14-b169-4479-be6d-5ba84d333448",
            "938cf662-e932-4bf1-9d0f-842fad3a5261"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "0ca3db06-a92d-41f4-bdb1-fe5dc2a7d25c",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 920,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "38cfb0b4-25cf-4400-9ad6-10f81fc30872",
              "parentUUID": "0ca3db06-a92d-41f4-bdb1-fe5dc2a7d25c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "91cc4700-2269-4843-81d8-9643a0e89762",
              "parentUUID": "0ca3db06-a92d-41f4-bdb1-fe5dc2a7d25c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "1f5ed0b8-a072-424f-9825-08f82b4cab43",
              "parentUUID": "0ca3db06-a92d-41f4-bdb1-fe5dc2a7d25c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "3887ca1b-9715-43b1-abbc-ecdacb3112cd",
              "parentUUID": "0ca3db06-a92d-41f4-bdb1-fe5dc2a7d25c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "36a9760b-3252-4897-9c63-a69329d34b3c",
              "parentUUID": "0ca3db06-a92d-41f4-bdb1-fe5dc2a7d25c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91cc4700-2269-4843-81d8-9643a0e89762",
            "1f5ed0b8-a072-424f-9825-08f82b4cab43",
            "3887ca1b-9715-43b1-abbc-ecdacb3112cd",
            "36a9760b-3252-4897-9c63-a69329d34b3c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f918b4c7-01f6-449c-83c3-da6a252440a0",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 917,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8d2e1b56-33bc-402c-9c88-30ffb37b913d",
              "parentUUID": "f918b4c7-01f6-449c-83c3-da6a252440a0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "04ce6bf0-151a-4784-8b1b-d9967bdf29ae",
              "parentUUID": "f918b4c7-01f6-449c-83c3-da6a252440a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ad80b3eb-6933-41ae-a2ad-3986ea2e6475",
              "parentUUID": "f918b4c7-01f6-449c-83c3-da6a252440a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c4bb39b1-5e4e-48ff-abfe-9b0580b25350",
              "parentUUID": "f918b4c7-01f6-449c-83c3-da6a252440a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "93918b26-0f38-4074-9fca-c270c1d74829",
              "parentUUID": "f918b4c7-01f6-449c-83c3-da6a252440a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04ce6bf0-151a-4784-8b1b-d9967bdf29ae",
            "ad80b3eb-6933-41ae-a2ad-3986ea2e6475",
            "c4bb39b1-5e4e-48ff-abfe-9b0580b25350",
            "93918b26-0f38-4074-9fca-c270c1d74829"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "97336bda-8792-4d05-901f-78e63e3e0bc3",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 773,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "2c8f9515-efc1-4b51-ae83-cfcf7d75e4a2",
              "parentUUID": "97336bda-8792-4d05-901f-78e63e3e0bc3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "b1fa6944-bf9c-45af-bb53-69d0be01b1b2",
              "parentUUID": "97336bda-8792-4d05-901f-78e63e3e0bc3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "1c287e14-e106-4f7d-904b-5c89fa1a95f5",
              "parentUUID": "97336bda-8792-4d05-901f-78e63e3e0bc3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "9d95da3e-3c7c-47ac-bed6-2df523bad2dc",
              "parentUUID": "97336bda-8792-4d05-901f-78e63e3e0bc3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "654692d5-a850-4677-b236-c9ecb97648d1",
              "parentUUID": "97336bda-8792-4d05-901f-78e63e3e0bc3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1fa6944-bf9c-45af-bb53-69d0be01b1b2",
            "1c287e14-e106-4f7d-904b-5c89fa1a95f5",
            "9d95da3e-3c7c-47ac-bed6-2df523bad2dc",
            "654692d5-a850-4677-b236-c9ecb97648d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "76c03c2b-9851-474a-a11e-9b89a396d520",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 857,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "153df152-c6ec-4c67-b646-3afd58365581",
              "parentUUID": "76c03c2b-9851-474a-a11e-9b89a396d520",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "806d4eed-1ed4-4c2c-8914-d26338a5f214",
              "parentUUID": "76c03c2b-9851-474a-a11e-9b89a396d520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "9c635cfe-b7e0-4a99-88ee-c2e566ceccbd",
              "parentUUID": "76c03c2b-9851-474a-a11e-9b89a396d520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2d59e74b-c758-4069-ba6d-78f9e709d646",
              "parentUUID": "76c03c2b-9851-474a-a11e-9b89a396d520",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "15c352d5-68a2-4883-9eec-d561f756441f",
              "parentUUID": "76c03c2b-9851-474a-a11e-9b89a396d520",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "806d4eed-1ed4-4c2c-8914-d26338a5f214",
            "9c635cfe-b7e0-4a99-88ee-c2e566ceccbd",
            "2d59e74b-c758-4069-ba6d-78f9e709d646",
            "15c352d5-68a2-4883-9eec-d561f756441f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ee7d768b-68d7-42cb-ac5d-5a4af558955a",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 902,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "14689f01-3efd-4686-920a-925ff976d2ac",
              "parentUUID": "ee7d768b-68d7-42cb-ac5d-5a4af558955a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "5134c84f-205f-4e94-a31a-f5342b9a478f",
              "parentUUID": "ee7d768b-68d7-42cb-ac5d-5a4af558955a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "2f900ca0-3b4a-49c1-9f5e-dc8af12aa4a3",
              "parentUUID": "ee7d768b-68d7-42cb-ac5d-5a4af558955a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "721ac84a-d25a-4aa7-a943-f913a0b23a91",
              "parentUUID": "ee7d768b-68d7-42cb-ac5d-5a4af558955a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ae208e4c-9ecb-45ca-b789-ead88edd17f7",
              "parentUUID": "ee7d768b-68d7-42cb-ac5d-5a4af558955a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5134c84f-205f-4e94-a31a-f5342b9a478f",
            "2f900ca0-3b4a-49c1-9f5e-dc8af12aa4a3",
            "721ac84a-d25a-4aa7-a943-f913a0b23a91",
            "ae208e4c-9ecb-45ca-b789-ead88edd17f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c782be28-8e14-4717-9f82-671118efb27f",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 714,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c3e33f0b-7580-4f79-be3f-7f46f417ea34",
              "parentUUID": "c782be28-8e14-4717-9f82-671118efb27f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "4f760dd7-8f86-412c-ac55-671a83d6a91e",
              "parentUUID": "c782be28-8e14-4717-9f82-671118efb27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "567a8674-1e5a-4cd3-ab79-b4edc4650c7d",
              "parentUUID": "c782be28-8e14-4717-9f82-671118efb27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "9eaa939b-d3d7-4b18-8779-f4c33afad6ed",
              "parentUUID": "c782be28-8e14-4717-9f82-671118efb27f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ab2b68a3-d464-4367-bf1f-93bd0d8409da",
              "parentUUID": "c782be28-8e14-4717-9f82-671118efb27f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f760dd7-8f86-412c-ac55-671a83d6a91e",
            "567a8674-1e5a-4cd3-ab79-b4edc4650c7d",
            "9eaa939b-d3d7-4b18-8779-f4c33afad6ed",
            "ab2b68a3-d464-4367-bf1f-93bd0d8409da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "35f1b68e-598d-4191-9069-13b37da4bd16",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 696,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "3815f153-9899-4882-9f8a-b4ed1b731539",
              "parentUUID": "35f1b68e-598d-4191-9069-13b37da4bd16",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "49adb255-5f5f-4cfb-9dfe-0106c6b86387",
              "parentUUID": "35f1b68e-598d-4191-9069-13b37da4bd16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "25dbf461-cb98-4656-bab0-4823554bd36c",
              "parentUUID": "35f1b68e-598d-4191-9069-13b37da4bd16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "935ceaa9-a0eb-450e-a130-50f9cb82bc31",
              "parentUUID": "35f1b68e-598d-4191-9069-13b37da4bd16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a9ad52fa-deeb-4280-8fb5-cbefd35a1560",
              "parentUUID": "35f1b68e-598d-4191-9069-13b37da4bd16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49adb255-5f5f-4cfb-9dfe-0106c6b86387",
            "25dbf461-cb98-4656-bab0-4823554bd36c",
            "935ceaa9-a0eb-450e-a130-50f9cb82bc31",
            "a9ad52fa-deeb-4280-8fb5-cbefd35a1560"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d7df81f1-dc8c-49d9-af6e-634d69a902f2",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 850,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "446e01eb-3ee4-41f1-956e-9007305d6a35",
              "parentUUID": "d7df81f1-dc8c-49d9-af6e-634d69a902f2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "2f993f91-6983-466b-b79a-6f65d42df804",
              "parentUUID": "d7df81f1-dc8c-49d9-af6e-634d69a902f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "a664dbac-659c-429a-803c-3f002a9366c2",
              "parentUUID": "d7df81f1-dc8c-49d9-af6e-634d69a902f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "94ef0bfa-0465-427c-919f-9fbe73a0632d",
              "parentUUID": "d7df81f1-dc8c-49d9-af6e-634d69a902f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2ed15597-58e0-4476-8540-6ac4c1f39366",
              "parentUUID": "d7df81f1-dc8c-49d9-af6e-634d69a902f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f993f91-6983-466b-b79a-6f65d42df804",
            "a664dbac-659c-429a-803c-3f002a9366c2",
            "94ef0bfa-0465-427c-919f-9fbe73a0632d",
            "2ed15597-58e0-4476-8540-6ac4c1f39366"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "bafd0421-f01c-4c52-9ded-c2b96d13859a",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 945,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8e01373a-86a6-4280-ab70-b2da78599c81",
              "parentUUID": "bafd0421-f01c-4c52-9ded-c2b96d13859a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "4ef51024-3a76-4a1a-9cbf-78a12cf10de7",
              "parentUUID": "bafd0421-f01c-4c52-9ded-c2b96d13859a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "09154b53-2b4b-4501-968a-775e8f9884bc",
              "parentUUID": "bafd0421-f01c-4c52-9ded-c2b96d13859a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "059f6c48-0d9a-4133-adfb-909d410026e0",
              "parentUUID": "bafd0421-f01c-4c52-9ded-c2b96d13859a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "53f1630c-4002-4a89-944a-16d05f9823a3",
              "parentUUID": "bafd0421-f01c-4c52-9ded-c2b96d13859a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ef51024-3a76-4a1a-9cbf-78a12cf10de7",
            "09154b53-2b4b-4501-968a-775e8f9884bc",
            "059f6c48-0d9a-4133-adfb-909d410026e0",
            "53f1630c-4002-4a89-944a-16d05f9823a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "50aec96a-da7d-4274-85f9-0f4529d7a537",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 888,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e8d66bc9-67e0-4606-942f-e9b9ee9bfb5e",
              "parentUUID": "50aec96a-da7d-4274-85f9-0f4529d7a537",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "e72b2b7e-714d-41f2-94b9-6ac4598a2769",
              "parentUUID": "50aec96a-da7d-4274-85f9-0f4529d7a537",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "f2e091e8-58f0-4a73-99eb-22695a279fbb",
              "parentUUID": "50aec96a-da7d-4274-85f9-0f4529d7a537",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "38a3b018-c622-43cf-8850-510e5ec1dceb",
              "parentUUID": "50aec96a-da7d-4274-85f9-0f4529d7a537",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4b0afc3c-6083-469c-86af-f3d52b9165d6",
              "parentUUID": "50aec96a-da7d-4274-85f9-0f4529d7a537",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e72b2b7e-714d-41f2-94b9-6ac4598a2769",
            "f2e091e8-58f0-4a73-99eb-22695a279fbb",
            "38a3b018-c622-43cf-8850-510e5ec1dceb",
            "4b0afc3c-6083-469c-86af-f3d52b9165d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "5ac63f25-7b9e-4827-a609-e7a7ceffa6bf",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 920,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "dd2a0a31-352e-4d7a-9441-aa6350c7b0fd",
              "parentUUID": "5ac63f25-7b9e-4827-a609-e7a7ceffa6bf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "10d094ac-8adc-492a-8a55-918665df73d8",
              "parentUUID": "5ac63f25-7b9e-4827-a609-e7a7ceffa6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "709bbf19-4f50-421e-975e-c5ccddfc4e06",
              "parentUUID": "5ac63f25-7b9e-4827-a609-e7a7ceffa6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ad1236e5-f554-439f-9783-60b652a94cdb",
              "parentUUID": "5ac63f25-7b9e-4827-a609-e7a7ceffa6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "74547fb0-3d2a-4642-8bc1-b02c8e6acd7b",
              "parentUUID": "5ac63f25-7b9e-4827-a609-e7a7ceffa6bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10d094ac-8adc-492a-8a55-918665df73d8",
            "709bbf19-4f50-421e-975e-c5ccddfc4e06",
            "ad1236e5-f554-439f-9783-60b652a94cdb",
            "74547fb0-3d2a-4642-8bc1-b02c8e6acd7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "7b14f200-2b7b-4384-ba43-6e5252091a47",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 712,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "491854b7-7a12-4360-8d69-bab1790a4094",
              "parentUUID": "7b14f200-2b7b-4384-ba43-6e5252091a47",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "e2878ad7-9fb0-4e70-93ae-cfee2c1f1639",
              "parentUUID": "7b14f200-2b7b-4384-ba43-6e5252091a47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ce8faba3-b8c8-44d5-af6e-9092a51dc9bf",
              "parentUUID": "7b14f200-2b7b-4384-ba43-6e5252091a47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a6d1c88b-9107-43b8-9632-8d6369fb5290",
              "parentUUID": "7b14f200-2b7b-4384-ba43-6e5252091a47",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "df8c8e73-e507-4c40-b5d0-e32a2788ba6a",
              "parentUUID": "7b14f200-2b7b-4384-ba43-6e5252091a47",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2878ad7-9fb0-4e70-93ae-cfee2c1f1639",
            "ce8faba3-b8c8-44d5-af6e-9092a51dc9bf",
            "a6d1c88b-9107-43b8-9632-8d6369fb5290",
            "df8c8e73-e507-4c40-b5d0-e32a2788ba6a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "0069cb16-fdc7-4071-82c8-a62396145617",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 814,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "bce3b50c-366a-4597-9c2a-d995429523d0",
              "parentUUID": "0069cb16-fdc7-4071-82c8-a62396145617",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "d2b72f41-a71a-49c2-a0ac-57f488082806",
              "parentUUID": "0069cb16-fdc7-4071-82c8-a62396145617",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "a77aa865-b302-4379-8547-efc74b187a52",
              "parentUUID": "0069cb16-fdc7-4071-82c8-a62396145617",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "6a87c96e-e463-450e-b1a7-922d872f915a",
              "parentUUID": "0069cb16-fdc7-4071-82c8-a62396145617",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0dd753b1-ffea-4a86-b062-8b1b2ad5015b",
              "parentUUID": "0069cb16-fdc7-4071-82c8-a62396145617",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2b72f41-a71a-49c2-a0ac-57f488082806",
            "a77aa865-b302-4379-8547-efc74b187a52",
            "6a87c96e-e463-450e-b1a7-922d872f915a",
            "0dd753b1-ffea-4a86-b062-8b1b2ad5015b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "a082ba1f-1f07-48f6-9751-bcc24abe14a9",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 815,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8ee63147-cdd4-485c-8c10-f43a7554c7b5",
              "parentUUID": "a082ba1f-1f07-48f6-9751-bcc24abe14a9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "46556b0e-7bee-4057-af8b-cb87dbbb4f0c",
              "parentUUID": "a082ba1f-1f07-48f6-9751-bcc24abe14a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "62e927df-cc4d-4734-b689-3c99eb04f8be",
              "parentUUID": "a082ba1f-1f07-48f6-9751-bcc24abe14a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0d287529-0d86-4a39-a9e6-a03e71fd367f",
              "parentUUID": "a082ba1f-1f07-48f6-9751-bcc24abe14a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "1a61aad3-6241-42da-8a46-d960f7a464ce",
              "parentUUID": "a082ba1f-1f07-48f6-9751-bcc24abe14a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46556b0e-7bee-4057-af8b-cb87dbbb4f0c",
            "62e927df-cc4d-4734-b689-3c99eb04f8be",
            "0d287529-0d86-4a39-a9e6-a03e71fd367f",
            "1a61aad3-6241-42da-8a46-d960f7a464ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "6164f9c0-865f-4d4a-8958-b0125bdfc92d",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 917,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "baec44fc-e534-4f15-9da9-3cb10d18d8f3",
              "parentUUID": "6164f9c0-865f-4d4a-8958-b0125bdfc92d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "96818da6-3096-4a8a-b856-16ff21753ec2",
              "parentUUID": "6164f9c0-865f-4d4a-8958-b0125bdfc92d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "2aa11a6f-5017-49f2-8860-d8e7b2af3696",
              "parentUUID": "6164f9c0-865f-4d4a-8958-b0125bdfc92d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "eb38945c-51a2-431b-b7ca-05bbb43d78ee",
              "parentUUID": "6164f9c0-865f-4d4a-8958-b0125bdfc92d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "fa5ec757-abfd-4654-a708-ee44299ed617",
              "parentUUID": "6164f9c0-865f-4d4a-8958-b0125bdfc92d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96818da6-3096-4a8a-b856-16ff21753ec2",
            "2aa11a6f-5017-49f2-8860-d8e7b2af3696",
            "eb38945c-51a2-431b-b7ca-05bbb43d78ee",
            "fa5ec757-abfd-4654-a708-ee44299ed617"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "259b3c71-d1c9-4540-821b-2e514d194508",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 713,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f263282c-3d29-47f5-b065-711cae99d449",
              "parentUUID": "259b3c71-d1c9-4540-821b-2e514d194508",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "e9a04e5e-4d90-4883-8e57-941b87993114",
              "parentUUID": "259b3c71-d1c9-4540-821b-2e514d194508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "a74b3390-0bc9-4a79-9b39-7ccf64dc31d6",
              "parentUUID": "259b3c71-d1c9-4540-821b-2e514d194508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "829bf6d9-f505-4b7f-8ed0-8a23e2861fe6",
              "parentUUID": "259b3c71-d1c9-4540-821b-2e514d194508",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "d6de6c8d-d2d4-4315-ac3b-5653ce7a990d",
              "parentUUID": "259b3c71-d1c9-4540-821b-2e514d194508",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9a04e5e-4d90-4883-8e57-941b87993114",
            "a74b3390-0bc9-4a79-9b39-7ccf64dc31d6",
            "829bf6d9-f505-4b7f-8ed0-8a23e2861fe6",
            "d6de6c8d-d2d4-4315-ac3b-5653ce7a990d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "a88e0f3e-b714-4b34-a85d-3bf9d6de994b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 831,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e3d9b1ee-ea67-4cb3-909f-814bbbf58880",
              "parentUUID": "a88e0f3e-b714-4b34-a85d-3bf9d6de994b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "913eb5ed-d4fc-4ebb-90b7-706c39efaddc",
              "parentUUID": "a88e0f3e-b714-4b34-a85d-3bf9d6de994b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "9b5934c5-de89-4e26-9a76-2cebff44eeb2",
              "parentUUID": "a88e0f3e-b714-4b34-a85d-3bf9d6de994b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "444bc559-260d-4680-88e4-404c255b60de",
              "parentUUID": "a88e0f3e-b714-4b34-a85d-3bf9d6de994b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "6cd528fb-2fc7-4bab-8b75-a206f763574f",
              "parentUUID": "a88e0f3e-b714-4b34-a85d-3bf9d6de994b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "913eb5ed-d4fc-4ebb-90b7-706c39efaddc",
            "9b5934c5-de89-4e26-9a76-2cebff44eeb2",
            "444bc559-260d-4680-88e4-404c255b60de",
            "6cd528fb-2fc7-4bab-8b75-a206f763574f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b30936be-1a8f-44ca-8e48-0ad4d4d10042",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 801,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "fe8eecfe-78dd-487c-a80d-6cde6306295d",
              "parentUUID": "b30936be-1a8f-44ca-8e48-0ad4d4d10042",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "e877c446-e99f-4284-bef7-054bec67fc78",
              "parentUUID": "b30936be-1a8f-44ca-8e48-0ad4d4d10042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ee5ee79c-921d-4d6a-92a3-21d37d39cc29",
              "parentUUID": "b30936be-1a8f-44ca-8e48-0ad4d4d10042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "bb1deb39-b76a-42ed-8845-30bdd5712bd5",
              "parentUUID": "b30936be-1a8f-44ca-8e48-0ad4d4d10042",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "6458cc81-ed58-40b5-8288-51d41d21f86f",
              "parentUUID": "b30936be-1a8f-44ca-8e48-0ad4d4d10042",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e877c446-e99f-4284-bef7-054bec67fc78",
            "ee5ee79c-921d-4d6a-92a3-21d37d39cc29",
            "bb1deb39-b76a-42ed-8845-30bdd5712bd5",
            "6458cc81-ed58-40b5-8288-51d41d21f86f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "eeac339d-777a-4826-991e-2734c9b8acbf",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 814,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7c188ed3-85c9-4088-a3ff-bd7827332636",
              "parentUUID": "eeac339d-777a-4826-991e-2734c9b8acbf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "4a1ce34f-4a7c-483a-b15a-2fee4f5a5a5f",
              "parentUUID": "eeac339d-777a-4826-991e-2734c9b8acbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "e730fde3-1bcb-43d8-9885-bdbe8fc48b17",
              "parentUUID": "eeac339d-777a-4826-991e-2734c9b8acbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "fca2ce4d-7430-46de-8bda-9c4c2748b0e8",
              "parentUUID": "eeac339d-777a-4826-991e-2734c9b8acbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "86338981-b0aa-4069-aa80-e1a30195e54e",
              "parentUUID": "eeac339d-777a-4826-991e-2734c9b8acbf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a1ce34f-4a7c-483a-b15a-2fee4f5a5a5f",
            "e730fde3-1bcb-43d8-9885-bdbe8fc48b17",
            "fca2ce4d-7430-46de-8bda-9c4c2748b0e8",
            "86338981-b0aa-4069-aa80-e1a30195e54e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b5685574-41dd-46f1-b345-a5836bfd861e",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 814,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "59ca034f-d8a7-4dd4-bc4a-f1d92b0abd1f",
              "parentUUID": "b5685574-41dd-46f1-b345-a5836bfd861e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "42405271-359e-488b-aa5f-3010df28facf",
              "parentUUID": "b5685574-41dd-46f1-b345-a5836bfd861e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "9a7bcffe-6559-4423-b701-03565cffc3c1",
              "parentUUID": "b5685574-41dd-46f1-b345-a5836bfd861e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "13c37706-779d-44b8-8f40-306d2062fc60",
              "parentUUID": "b5685574-41dd-46f1-b345-a5836bfd861e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8b01e99b-885c-46d1-b34c-a415012cd674",
              "parentUUID": "b5685574-41dd-46f1-b345-a5836bfd861e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42405271-359e-488b-aa5f-3010df28facf",
            "9a7bcffe-6559-4423-b701-03565cffc3c1",
            "13c37706-779d-44b8-8f40-306d2062fc60",
            "8b01e99b-885c-46d1-b34c-a415012cd674"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "bc1ec0e3-2f5a-4494-bc2e-8a0df6b48e34",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 714,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6e9265c7-516f-4ab6-b744-d67ebed520df",
              "parentUUID": "bc1ec0e3-2f5a-4494-bc2e-8a0df6b48e34",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "97fc8e5f-0b2f-457b-92e0-a37428c625c1",
              "parentUUID": "bc1ec0e3-2f5a-4494-bc2e-8a0df6b48e34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "38edcd81-f1e8-4b3e-bd01-5dde1c86213c",
              "parentUUID": "bc1ec0e3-2f5a-4494-bc2e-8a0df6b48e34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "9c46d856-7ef3-4e55-b9be-0699c7c4d7bc",
              "parentUUID": "bc1ec0e3-2f5a-4494-bc2e-8a0df6b48e34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "6584bb53-dd34-4f0d-8e59-8383fd36c8ad",
              "parentUUID": "bc1ec0e3-2f5a-4494-bc2e-8a0df6b48e34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "97fc8e5f-0b2f-457b-92e0-a37428c625c1",
            "38edcd81-f1e8-4b3e-bd01-5dde1c86213c",
            "9c46d856-7ef3-4e55-b9be-0699c7c4d7bc",
            "6584bb53-dd34-4f0d-8e59-8383fd36c8ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d6617ad8-573a-4ec4-a340-be108d429f1b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 861,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "32b724ed-5881-46f6-97d1-96876a555f9f",
              "parentUUID": "d6617ad8-573a-4ec4-a340-be108d429f1b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "79ad8be5-1959-4596-a617-06aa05cbced9",
              "parentUUID": "d6617ad8-573a-4ec4-a340-be108d429f1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "b5319459-23e3-444d-bd44-5163c66fbe4e",
              "parentUUID": "d6617ad8-573a-4ec4-a340-be108d429f1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c85c94d5-cb2f-48c4-b97b-c398edc28533",
              "parentUUID": "d6617ad8-573a-4ec4-a340-be108d429f1b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8777797f-6f3e-4aaf-ab39-9defad0d8c5b",
              "parentUUID": "d6617ad8-573a-4ec4-a340-be108d429f1b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79ad8be5-1959-4596-a617-06aa05cbced9",
            "b5319459-23e3-444d-bd44-5163c66fbe4e",
            "c85c94d5-cb2f-48c4-b97b-c398edc28533",
            "8777797f-6f3e-4aaf-ab39-9defad0d8c5b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "6735aea0-cd19-4297-a803-1db304ae1293",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 872,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "cd148d04-b09c-4f7b-a412-81f59f04acc6",
              "parentUUID": "6735aea0-cd19-4297-a803-1db304ae1293",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "dffedc85-d41e-46be-8e54-15a6b6dd8e3d",
              "parentUUID": "6735aea0-cd19-4297-a803-1db304ae1293",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "87446695-df66-4742-89be-bbd8f82f9612",
              "parentUUID": "6735aea0-cd19-4297-a803-1db304ae1293",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "12acb5ae-4f0d-4e16-9ef8-083a16e935bd",
              "parentUUID": "6735aea0-cd19-4297-a803-1db304ae1293",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "afc16d12-8567-4f81-b4e1-055e4a735026",
              "parentUUID": "6735aea0-cd19-4297-a803-1db304ae1293",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dffedc85-d41e-46be-8e54-15a6b6dd8e3d",
            "87446695-df66-4742-89be-bbd8f82f9612",
            "12acb5ae-4f0d-4e16-9ef8-083a16e935bd",
            "afc16d12-8567-4f81-b4e1-055e4a735026"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "66f8e697-c12b-4bd5-9552-fab96214e264",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 918,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9f450de9-eff1-42ff-9f59-da7e8fb96a22",
              "parentUUID": "66f8e697-c12b-4bd5-9552-fab96214e264",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "6531c993-05f3-4355-a40b-ab0e206d1428",
              "parentUUID": "66f8e697-c12b-4bd5-9552-fab96214e264",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "876479ca-75ad-49f7-83d6-acf895a1caff",
              "parentUUID": "66f8e697-c12b-4bd5-9552-fab96214e264",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "37967a0b-cf09-4d1f-8f8e-2591371e594a",
              "parentUUID": "66f8e697-c12b-4bd5-9552-fab96214e264",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "16c9e292-b908-4aa7-8e6e-6351faffdadb",
              "parentUUID": "66f8e697-c12b-4bd5-9552-fab96214e264",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6531c993-05f3-4355-a40b-ab0e206d1428",
            "876479ca-75ad-49f7-83d6-acf895a1caff",
            "37967a0b-cf09-4d1f-8f8e-2591371e594a",
            "16c9e292-b908-4aa7-8e6e-6351faffdadb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "3cb1be47-3dbb-4ab2-a5f5-3d81e826f4d4",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 918,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "64c8eafb-4499-41da-a6cc-916b82b51381",
              "parentUUID": "3cb1be47-3dbb-4ab2-a5f5-3d81e826f4d4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "40da4bed-5673-44c2-a894-38c9a76a898a",
              "parentUUID": "3cb1be47-3dbb-4ab2-a5f5-3d81e826f4d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "17894271-0efe-4506-a1ed-ffbc214be959",
              "parentUUID": "3cb1be47-3dbb-4ab2-a5f5-3d81e826f4d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "5d1c0b2e-d353-4dfc-bafd-77ae9058dc20",
              "parentUUID": "3cb1be47-3dbb-4ab2-a5f5-3d81e826f4d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e97c35c0-da96-4a1d-8044-f4738c44bf08",
              "parentUUID": "3cb1be47-3dbb-4ab2-a5f5-3d81e826f4d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40da4bed-5673-44c2-a894-38c9a76a898a",
            "17894271-0efe-4506-a1ed-ffbc214be959",
            "5d1c0b2e-d353-4dfc-bafd-77ae9058dc20",
            "e97c35c0-da96-4a1d-8044-f4738c44bf08"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "df350906-40c6-48f0-acdd-a5b08b5dc416",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 919,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0afced8d-c7ff-4ebb-9d31-1cb484402e27",
              "parentUUID": "df350906-40c6-48f0-acdd-a5b08b5dc416",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "1f3bbf2b-8e35-4644-a870-d99432552b79",
              "parentUUID": "df350906-40c6-48f0-acdd-a5b08b5dc416",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "576cee50-be0c-426b-a803-4f4bd26bc771",
              "parentUUID": "df350906-40c6-48f0-acdd-a5b08b5dc416",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "d6f25d64-9a20-4419-8094-5920621f8cb3",
              "parentUUID": "df350906-40c6-48f0-acdd-a5b08b5dc416",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a2294671-1c74-47e6-ae38-d34867082645",
              "parentUUID": "df350906-40c6-48f0-acdd-a5b08b5dc416",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f3bbf2b-8e35-4644-a870-d99432552b79",
            "576cee50-be0c-426b-a803-4f4bd26bc771",
            "d6f25d64-9a20-4419-8094-5920621f8cb3",
            "a2294671-1c74-47e6-ae38-d34867082645"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "dacefd78-29ed-47f7-8d29-fad4385cedea",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 816,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "3745f108-a9c4-4d88-ae6c-7596c552d649",
              "parentUUID": "dacefd78-29ed-47f7-8d29-fad4385cedea",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "37485f3e-417c-42c6-b2cd-7413f79a2fc0",
              "parentUUID": "dacefd78-29ed-47f7-8d29-fad4385cedea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "a2af0d45-5f5d-45f0-8970-0f9a53947334",
              "parentUUID": "dacefd78-29ed-47f7-8d29-fad4385cedea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "3e79878b-b9ab-4619-b871-ca65ab57b2fb",
              "parentUUID": "dacefd78-29ed-47f7-8d29-fad4385cedea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0e804fd4-aea2-4b2d-9f1c-b0486747ed58",
              "parentUUID": "dacefd78-29ed-47f7-8d29-fad4385cedea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37485f3e-417c-42c6-b2cd-7413f79a2fc0",
            "a2af0d45-5f5d-45f0-8970-0f9a53947334",
            "3e79878b-b9ab-4619-b871-ca65ab57b2fb",
            "0e804fd4-aea2-4b2d-9f1c-b0486747ed58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c7888bca-baf3-4f0d-9fb2-2bd182b74179",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 916,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ce919dcb-2752-4e21-b66a-f5f65a48aa35",
              "parentUUID": "c7888bca-baf3-4f0d-9fb2-2bd182b74179",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "8165883d-791d-4d70-978b-98efa81c5bd8",
              "parentUUID": "c7888bca-baf3-4f0d-9fb2-2bd182b74179",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "3d2ac6f1-3f9f-4604-83c2-e4ccdfa62451",
              "parentUUID": "c7888bca-baf3-4f0d-9fb2-2bd182b74179",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "915647d7-245c-450c-a82b-60d60704139f",
              "parentUUID": "c7888bca-baf3-4f0d-9fb2-2bd182b74179",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "466eea96-4fdf-42ed-bf72-a6272b4b82c2",
              "parentUUID": "c7888bca-baf3-4f0d-9fb2-2bd182b74179",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8165883d-791d-4d70-978b-98efa81c5bd8",
            "3d2ac6f1-3f9f-4604-83c2-e4ccdfa62451",
            "915647d7-245c-450c-a82b-60d60704139f",
            "466eea96-4fdf-42ed-bf72-a6272b4b82c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "fa94fd2b-a680-4229-9474-44bc742a6f63",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 714,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6c288eb6-124a-4ed1-9e80-9c281d805980",
              "parentUUID": "fa94fd2b-a680-4229-9474-44bc742a6f63",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "6aac6e18-6322-4310-b85d-13e3a16d3bb4",
              "parentUUID": "fa94fd2b-a680-4229-9474-44bc742a6f63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ff8fc8db-2898-44ed-baf9-7eee75c3ed27",
              "parentUUID": "fa94fd2b-a680-4229-9474-44bc742a6f63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "f27d4f57-605b-4d87-a0ee-a7b9b4da2a89",
              "parentUUID": "fa94fd2b-a680-4229-9474-44bc742a6f63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "566e9291-84df-4e6d-b91d-19cbb94211f5",
              "parentUUID": "fa94fd2b-a680-4229-9474-44bc742a6f63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6aac6e18-6322-4310-b85d-13e3a16d3bb4",
            "ff8fc8db-2898-44ed-baf9-7eee75c3ed27",
            "f27d4f57-605b-4d87-a0ee-a7b9b4da2a89",
            "566e9291-84df-4e6d-b91d-19cbb94211f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "8f41f8dd-5f9c-4ab3-b55c-050c165ea071",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 289,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "fd9799e8-bac9-43ce-9049-9b942bd115cb",
              "parentUUID": "8f41f8dd-5f9c-4ab3-b55c-050c165ea071",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "92550ced-e192-42be-86c2-4ffea6824335",
              "parentUUID": "8f41f8dd-5f9c-4ab3-b55c-050c165ea071",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "dcc0a71a-7df6-40d1-b237-7269dfbab277",
              "parentUUID": "8f41f8dd-5f9c-4ab3-b55c-050c165ea071",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "892a88f5-3add-4ec9-93f6-78e25a87c107",
              "parentUUID": "8f41f8dd-5f9c-4ab3-b55c-050c165ea071",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "9a6ed37f-9506-4202-834c-adcddffdd09d",
              "parentUUID": "8f41f8dd-5f9c-4ab3-b55c-050c165ea071",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92550ced-e192-42be-86c2-4ffea6824335",
            "dcc0a71a-7df6-40d1-b237-7269dfbab277",
            "892a88f5-3add-4ec9-93f6-78e25a87c107",
            "9a6ed37f-9506-4202-834c-adcddffdd09d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "651e31d9-a425-446e-94eb-c93bd44fe399",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 282,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "417901f4-f759-42a7-b74b-3acf4eac5a77",
              "parentUUID": "651e31d9-a425-446e-94eb-c93bd44fe399",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "5a6816f8-818c-4319-9d93-0bda9510d44c",
              "parentUUID": "651e31d9-a425-446e-94eb-c93bd44fe399",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "779f5cf0-1bf5-4dad-a463-c7d80ddb9ffc",
              "parentUUID": "651e31d9-a425-446e-94eb-c93bd44fe399",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0e4ff220-7944-4cdc-9c94-f45b4aa65eb9",
              "parentUUID": "651e31d9-a425-446e-94eb-c93bd44fe399",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "f013552d-93d8-4f70-9e63-8eb7426008d3",
              "parentUUID": "651e31d9-a425-446e-94eb-c93bd44fe399",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a6816f8-818c-4319-9d93-0bda9510d44c",
            "779f5cf0-1bf5-4dad-a463-c7d80ddb9ffc",
            "0e4ff220-7944-4cdc-9c94-f45b4aa65eb9",
            "f013552d-93d8-4f70-9e63-8eb7426008d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "3af02422-13f1-4ff4-a936-5063600fd30c",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 295,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "34fb56e9-13f2-4e10-9352-bd00a2fc4b09",
              "parentUUID": "3af02422-13f1-4ff4-a936-5063600fd30c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "f5b0a0ef-8f95-41f2-b0de-cd79348feb43",
              "parentUUID": "3af02422-13f1-4ff4-a936-5063600fd30c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "6b6d07d1-c10c-4af7-83d5-75c1d060fe43",
              "parentUUID": "3af02422-13f1-4ff4-a936-5063600fd30c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8378b95f-2d78-47e8-a6f0-81443cbbeb6e",
              "parentUUID": "3af02422-13f1-4ff4-a936-5063600fd30c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8eea92e4-97be-44a0-adbd-11a191f58e81",
              "parentUUID": "3af02422-13f1-4ff4-a936-5063600fd30c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5b0a0ef-8f95-41f2-b0de-cd79348feb43",
            "6b6d07d1-c10c-4af7-83d5-75c1d060fe43",
            "8378b95f-2d78-47e8-a6f0-81443cbbeb6e",
            "8eea92e4-97be-44a0-adbd-11a191f58e81"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "18d20a97-8010-4f95-b05c-35125597daac",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 302,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0ab1358e-bbb6-44fd-b3f1-790d68380309",
              "parentUUID": "18d20a97-8010-4f95-b05c-35125597daac",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "7b93bae2-f4e4-44e1-8d34-cd14d4a30e6e",
              "parentUUID": "18d20a97-8010-4f95-b05c-35125597daac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "22bcd344-7e67-4fd2-936d-e54cb2c8e722",
              "parentUUID": "18d20a97-8010-4f95-b05c-35125597daac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "38eca925-7146-46f0-ba6e-e70e76f0ff4f",
              "parentUUID": "18d20a97-8010-4f95-b05c-35125597daac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "79f36bf1-1558-49a4-82d6-91f6d2e43837",
              "parentUUID": "18d20a97-8010-4f95-b05c-35125597daac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b93bae2-f4e4-44e1-8d34-cd14d4a30e6e",
            "22bcd344-7e67-4fd2-936d-e54cb2c8e722",
            "38eca925-7146-46f0-ba6e-e70e76f0ff4f",
            "79f36bf1-1558-49a4-82d6-91f6d2e43837"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "87273d99-c39a-4abb-978f-40a072c3944b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 296,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6b237b17-e0c5-4039-9169-f33d7daab82e",
              "parentUUID": "87273d99-c39a-4abb-978f-40a072c3944b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "ecc039af-c5ee-4519-a8c6-eaacf2612030",
              "parentUUID": "87273d99-c39a-4abb-978f-40a072c3944b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ce6d4b32-5938-4740-b568-b214dd800a83",
              "parentUUID": "87273d99-c39a-4abb-978f-40a072c3944b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "7ba3f9fe-e7bd-4fbc-a5bb-c0f4971bd610",
              "parentUUID": "87273d99-c39a-4abb-978f-40a072c3944b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "3f15789c-f285-449a-a3c6-674f768e6f4d",
              "parentUUID": "87273d99-c39a-4abb-978f-40a072c3944b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ecc039af-c5ee-4519-a8c6-eaacf2612030",
            "ce6d4b32-5938-4740-b568-b214dd800a83",
            "7ba3f9fe-e7bd-4fbc-a5bb-c0f4971bd610",
            "3f15789c-f285-449a-a3c6-674f768e6f4d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "42ca4de0-e3f8-4d35-8a1c-87772d981668",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 286,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "fc64e46f-90c7-4527-9927-c7cda249adb6",
              "parentUUID": "42ca4de0-e3f8-4d35-8a1c-87772d981668",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "9b6d4fe7-1a57-49b0-a8a6-2bc3e405c6e4",
              "parentUUID": "42ca4de0-e3f8-4d35-8a1c-87772d981668",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "c324bf69-7f49-4782-80db-259bc6eac33c",
              "parentUUID": "42ca4de0-e3f8-4d35-8a1c-87772d981668",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a1294d9c-25ea-474f-a70b-5ab05a86938f",
              "parentUUID": "42ca4de0-e3f8-4d35-8a1c-87772d981668",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "257d4fdf-c389-44aa-a7c0-6ed37d93bf61",
              "parentUUID": "42ca4de0-e3f8-4d35-8a1c-87772d981668",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b6d4fe7-1a57-49b0-a8a6-2bc3e405c6e4",
            "c324bf69-7f49-4782-80db-259bc6eac33c",
            "a1294d9c-25ea-474f-a70b-5ab05a86938f",
            "257d4fdf-c389-44aa-a7c0-6ed37d93bf61"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "18923ae5-3dca-4fb8-bd51-536d89a9fdff",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 277,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8f68fcc4-de96-42b5-a3fc-7720ea9608b3",
              "parentUUID": "18923ae5-3dca-4fb8-bd51-536d89a9fdff",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "6f2458b3-c20c-4b3e-995c-4fc9e185a52e",
              "parentUUID": "18923ae5-3dca-4fb8-bd51-536d89a9fdff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "9239348c-867d-4b77-b0e8-cf2e21334dc9",
              "parentUUID": "18923ae5-3dca-4fb8-bd51-536d89a9fdff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "91ddea4a-87f7-4df1-b419-494db475df52",
              "parentUUID": "18923ae5-3dca-4fb8-bd51-536d89a9fdff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "f2458624-402b-4a1e-9af1-3653ae6202a2",
              "parentUUID": "18923ae5-3dca-4fb8-bd51-536d89a9fdff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f2458b3-c20c-4b3e-995c-4fc9e185a52e",
            "9239348c-867d-4b77-b0e8-cf2e21334dc9",
            "91ddea4a-87f7-4df1-b419-494db475df52",
            "f2458624-402b-4a1e-9af1-3653ae6202a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "0a29edcf-b2d0-4566-a1a2-cb62f12f8c7c",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 280,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8089f42b-2ffb-4d82-84b2-01ff142caa9d",
              "parentUUID": "0a29edcf-b2d0-4566-a1a2-cb62f12f8c7c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "d8265b2a-cf31-4f47-bac7-d3eab5a21ec7",
              "parentUUID": "0a29edcf-b2d0-4566-a1a2-cb62f12f8c7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "c5c18880-cc9e-428f-a4ed-37f5c5552aa1",
              "parentUUID": "0a29edcf-b2d0-4566-a1a2-cb62f12f8c7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "5d4d7cdb-1830-4de0-99ce-0a5102d40aab",
              "parentUUID": "0a29edcf-b2d0-4566-a1a2-cb62f12f8c7c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e7a2a2ba-93bf-464d-aff3-b42af52a6bb6",
              "parentUUID": "0a29edcf-b2d0-4566-a1a2-cb62f12f8c7c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8265b2a-cf31-4f47-bac7-d3eab5a21ec7",
            "c5c18880-cc9e-428f-a4ed-37f5c5552aa1",
            "5d4d7cdb-1830-4de0-99ce-0a5102d40aab",
            "e7a2a2ba-93bf-464d-aff3-b42af52a6bb6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "92f8eb8c-4c06-477e-a08c-5d8201cc6f8a",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 290,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b9def958-d623-4bc1-be99-e62ed4b77baa",
              "parentUUID": "92f8eb8c-4c06-477e-a08c-5d8201cc6f8a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "034d803c-d39d-4267-9ea1-df399ef7a384",
              "parentUUID": "92f8eb8c-4c06-477e-a08c-5d8201cc6f8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ef9be302-ac06-496a-a137-126f3fc9dc7d",
              "parentUUID": "92f8eb8c-4c06-477e-a08c-5d8201cc6f8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2a95e3f3-a671-4f29-ae60-43aaf3f62cb3",
              "parentUUID": "92f8eb8c-4c06-477e-a08c-5d8201cc6f8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e62b2e17-14dc-437b-bf4b-d63956974c75",
              "parentUUID": "92f8eb8c-4c06-477e-a08c-5d8201cc6f8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "034d803c-d39d-4267-9ea1-df399ef7a384",
            "ef9be302-ac06-496a-a137-126f3fc9dc7d",
            "2a95e3f3-a671-4f29-ae60-43aaf3f62cb3",
            "e62b2e17-14dc-437b-bf4b-d63956974c75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "dc960619-05fe-4ad1-ad50-8c17fccd8ae7",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 286,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0581f3c9-4e1e-43e9-a23e-c1ce95569af9",
              "parentUUID": "dc960619-05fe-4ad1-ad50-8c17fccd8ae7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "35622df3-cbf0-4103-98eb-55abf6db333a",
              "parentUUID": "dc960619-05fe-4ad1-ad50-8c17fccd8ae7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "768ab174-c256-486a-afcc-3644721f5495",
              "parentUUID": "dc960619-05fe-4ad1-ad50-8c17fccd8ae7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ab2bff63-44f9-480b-b588-1ab7e81644a9",
              "parentUUID": "dc960619-05fe-4ad1-ad50-8c17fccd8ae7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "9cdd859c-9f75-4f23-8776-a15e31840910",
              "parentUUID": "dc960619-05fe-4ad1-ad50-8c17fccd8ae7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35622df3-cbf0-4103-98eb-55abf6db333a",
            "768ab174-c256-486a-afcc-3644721f5495",
            "ab2bff63-44f9-480b-b588-1ab7e81644a9",
            "9cdd859c-9f75-4f23-8776-a15e31840910"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "384a01ce-023c-4aea-b253-4c0a0e7b189b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 279,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "02e74881-a730-4de7-b576-22c692e2c8bd",
              "parentUUID": "384a01ce-023c-4aea-b253-4c0a0e7b189b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "5dbdc87a-4de2-40c1-918a-6e11a8c32ee1",
              "parentUUID": "384a01ce-023c-4aea-b253-4c0a0e7b189b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "e991401d-51f8-4623-9539-9f93cb8b0d1a",
              "parentUUID": "384a01ce-023c-4aea-b253-4c0a0e7b189b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8187a7b6-d3f7-4c8f-92e4-82bd706e2839",
              "parentUUID": "384a01ce-023c-4aea-b253-4c0a0e7b189b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "fc87794d-290b-45c4-bcf5-c80bdc646704",
              "parentUUID": "384a01ce-023c-4aea-b253-4c0a0e7b189b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5dbdc87a-4de2-40c1-918a-6e11a8c32ee1",
            "e991401d-51f8-4623-9539-9f93cb8b0d1a",
            "8187a7b6-d3f7-4c8f-92e4-82bd706e2839",
            "fc87794d-290b-45c4-bcf5-c80bdc646704"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "0e7d24bb-7847-4695-8de5-1aa62199098d",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 284,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a951bab9-c146-49fe-93c4-ced83a71a49d",
              "parentUUID": "0e7d24bb-7847-4695-8de5-1aa62199098d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "cc6b66e8-069e-418a-a6ac-c5aedbb09f6d",
              "parentUUID": "0e7d24bb-7847-4695-8de5-1aa62199098d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "467e7a2d-6f6f-41b1-9bb4-9691bed470b0",
              "parentUUID": "0e7d24bb-7847-4695-8de5-1aa62199098d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ab2a4b34-5894-44b6-95a6-3e3478b55a47",
              "parentUUID": "0e7d24bb-7847-4695-8de5-1aa62199098d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "b616a4af-c29a-4ca0-847c-ab3bdd5fe12d",
              "parentUUID": "0e7d24bb-7847-4695-8de5-1aa62199098d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc6b66e8-069e-418a-a6ac-c5aedbb09f6d",
            "467e7a2d-6f6f-41b1-9bb4-9691bed470b0",
            "ab2a4b34-5894-44b6-95a6-3e3478b55a47",
            "b616a4af-c29a-4ca0-847c-ab3bdd5fe12d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "6afb6394-75f8-4682-92bd-9d15f4ab9afd",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 279,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "320f95c8-ecac-466c-affc-dcb0d7e1c8e4",
              "parentUUID": "6afb6394-75f8-4682-92bd-9d15f4ab9afd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "1d334df4-552a-4a90-b77b-b777e0a32524",
              "parentUUID": "6afb6394-75f8-4682-92bd-9d15f4ab9afd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "0a230e77-9aa8-4d57-ba7f-290d65a7cb99",
              "parentUUID": "6afb6394-75f8-4682-92bd-9d15f4ab9afd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "3087f2ee-ac7e-4b29-b45a-86ad2e5499d5",
              "parentUUID": "6afb6394-75f8-4682-92bd-9d15f4ab9afd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e81253ad-8474-4b8d-9735-f82ba0bba78c",
              "parentUUID": "6afb6394-75f8-4682-92bd-9d15f4ab9afd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d334df4-552a-4a90-b77b-b777e0a32524",
            "0a230e77-9aa8-4d57-ba7f-290d65a7cb99",
            "3087f2ee-ac7e-4b29-b45a-86ad2e5499d5",
            "e81253ad-8474-4b8d-9735-f82ba0bba78c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "fdb838cd-7914-46c8-99de-7bd6efc1aa04",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 292,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "fa8738a7-d7af-4112-b58c-3e3b1a96ee41",
              "parentUUID": "fdb838cd-7914-46c8-99de-7bd6efc1aa04",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "cb35118e-7039-4a4e-be83-51de62cf354f",
              "parentUUID": "fdb838cd-7914-46c8-99de-7bd6efc1aa04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "b2429e7b-16bb-444b-9aae-38458f620884",
              "parentUUID": "fdb838cd-7914-46c8-99de-7bd6efc1aa04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "15c8599e-5e4a-4d26-887a-380b4af6b02c",
              "parentUUID": "fdb838cd-7914-46c8-99de-7bd6efc1aa04",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "3231b150-b445-46f2-86c7-92ed2cba01b2",
              "parentUUID": "fdb838cd-7914-46c8-99de-7bd6efc1aa04",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb35118e-7039-4a4e-be83-51de62cf354f",
            "b2429e7b-16bb-444b-9aae-38458f620884",
            "15c8599e-5e4a-4d26-887a-380b4af6b02c",
            "3231b150-b445-46f2-86c7-92ed2cba01b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "9a1ee73c-efa9-4653-8c77-ee6bfeed2fe5",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 854,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "838b4eb8-87f0-4fcc-a0ff-d6d922035a6a",
              "parentUUID": "9a1ee73c-efa9-4653-8c77-ee6bfeed2fe5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "11bf1568-04dc-4f1c-9c4d-87126a31bead",
              "parentUUID": "9a1ee73c-efa9-4653-8c77-ee6bfeed2fe5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "fd0f8d2d-a065-4ad9-8495-1bd16cb500ad",
              "parentUUID": "9a1ee73c-efa9-4653-8c77-ee6bfeed2fe5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a6e72036-6582-4ce0-ba2c-e768e187e4bd",
              "parentUUID": "9a1ee73c-efa9-4653-8c77-ee6bfeed2fe5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2a975370-04ae-4ec9-9e0c-9903ead6718f",
              "parentUUID": "9a1ee73c-efa9-4653-8c77-ee6bfeed2fe5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11bf1568-04dc-4f1c-9c4d-87126a31bead",
            "fd0f8d2d-a065-4ad9-8495-1bd16cb500ad",
            "a6e72036-6582-4ce0-ba2c-e768e187e4bd",
            "2a975370-04ae-4ec9-9e0c-9903ead6718f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "7b2557ab-59ab-4c6e-9b0e-d876c2bad046",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 917,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ec92961b-f4b7-4392-998a-12c17364fc3c",
              "parentUUID": "7b2557ab-59ab-4c6e-9b0e-d876c2bad046",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "a3c7c958-9897-4ba7-ae17-3ca5d472c2c5",
              "parentUUID": "7b2557ab-59ab-4c6e-9b0e-d876c2bad046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "112e552b-0a99-40a1-8b9c-7cad3c9b28ea",
              "parentUUID": "7b2557ab-59ab-4c6e-9b0e-d876c2bad046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "1fa0fe9f-e5a1-4682-8024-7f0dd3b794c2",
              "parentUUID": "7b2557ab-59ab-4c6e-9b0e-d876c2bad046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "5ba963ce-e9ff-4085-84cf-7e210a8a2ea5",
              "parentUUID": "7b2557ab-59ab-4c6e-9b0e-d876c2bad046",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3c7c958-9897-4ba7-ae17-3ca5d472c2c5",
            "112e552b-0a99-40a1-8b9c-7cad3c9b28ea",
            "1fa0fe9f-e5a1-4682-8024-7f0dd3b794c2",
            "5ba963ce-e9ff-4085-84cf-7e210a8a2ea5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "4ebe3649-7eaa-409d-8520-7a39b7cf82c9",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 918,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5b649eb6-fb09-4fe6-98b7-d37520c02f15",
              "parentUUID": "4ebe3649-7eaa-409d-8520-7a39b7cf82c9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "b5e665ad-b4b1-43ed-acc7-0ea73ed71108",
              "parentUUID": "4ebe3649-7eaa-409d-8520-7a39b7cf82c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "1c05da6d-9890-4064-87a1-d41fcd4cce6c",
              "parentUUID": "4ebe3649-7eaa-409d-8520-7a39b7cf82c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2565870e-9c12-4945-b919-ce0b94c12e45",
              "parentUUID": "4ebe3649-7eaa-409d-8520-7a39b7cf82c9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8170aac0-0a76-4bc0-8436-d7750d02a5cf",
              "parentUUID": "4ebe3649-7eaa-409d-8520-7a39b7cf82c9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5e665ad-b4b1-43ed-acc7-0ea73ed71108",
            "1c05da6d-9890-4064-87a1-d41fcd4cce6c",
            "2565870e-9c12-4945-b919-ce0b94c12e45",
            "8170aac0-0a76-4bc0-8436-d7750d02a5cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "1c6c186f-4ba4-4e99-8b47-e8529754d9b5",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 916,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "47bf75b6-65d8-430e-b388-44f3d35a8685",
              "parentUUID": "1c6c186f-4ba4-4e99-8b47-e8529754d9b5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "657fc437-2e1c-4487-a2d6-08da15b4f56d",
              "parentUUID": "1c6c186f-4ba4-4e99-8b47-e8529754d9b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "09b3a748-2778-429b-89e9-cce3353a5932",
              "parentUUID": "1c6c186f-4ba4-4e99-8b47-e8529754d9b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a4e1201c-88fa-4710-a617-011c6a9f1789",
              "parentUUID": "1c6c186f-4ba4-4e99-8b47-e8529754d9b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "5e6cf349-756e-4d12-ad73-69c3f59cefb8",
              "parentUUID": "1c6c186f-4ba4-4e99-8b47-e8529754d9b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "657fc437-2e1c-4487-a2d6-08da15b4f56d",
            "09b3a748-2778-429b-89e9-cce3353a5932",
            "a4e1201c-88fa-4710-a617-011c6a9f1789",
            "5e6cf349-756e-4d12-ad73-69c3f59cefb8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "901aa108-a4a5-4673-af47-80ad4dbfd8d0",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 815,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b357ddcc-da87-43d9-ada8-a9b1f4d7158e",
              "parentUUID": "901aa108-a4a5-4673-af47-80ad4dbfd8d0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "634f081a-4a7e-44a8-bc69-bb0e1b64acfb",
              "parentUUID": "901aa108-a4a5-4673-af47-80ad4dbfd8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "cf1a414f-ec52-4a8e-8e2a-88718e73fd1d",
              "parentUUID": "901aa108-a4a5-4673-af47-80ad4dbfd8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8b2fcad6-ca68-4495-97a7-764e43de4f81",
              "parentUUID": "901aa108-a4a5-4673-af47-80ad4dbfd8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "b1ad35a8-74b9-4d0f-8172-ad2b57fc1252",
              "parentUUID": "901aa108-a4a5-4673-af47-80ad4dbfd8d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "634f081a-4a7e-44a8-bc69-bb0e1b64acfb",
            "cf1a414f-ec52-4a8e-8e2a-88718e73fd1d",
            "8b2fcad6-ca68-4495-97a7-764e43de4f81",
            "b1ad35a8-74b9-4d0f-8172-ad2b57fc1252"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "176bb0f2-946a-4d66-a75c-65bcd5914259",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 891,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "cd3f828f-321b-432f-bb0a-0f9cd541ee31",
              "parentUUID": "176bb0f2-946a-4d66-a75c-65bcd5914259",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "9578c3ac-3fe9-444e-8c3c-4fc3e64d25b1",
              "parentUUID": "176bb0f2-946a-4d66-a75c-65bcd5914259",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "90d8a249-a492-41cc-82dc-f1ad17917551",
              "parentUUID": "176bb0f2-946a-4d66-a75c-65bcd5914259",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "33bbfdeb-d53b-4f11-a297-37850610542a",
              "parentUUID": "176bb0f2-946a-4d66-a75c-65bcd5914259",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "89006e3e-e0b2-4e0c-beb4-b6b2da78fc77",
              "parentUUID": "176bb0f2-946a-4d66-a75c-65bcd5914259",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9578c3ac-3fe9-444e-8c3c-4fc3e64d25b1",
            "90d8a249-a492-41cc-82dc-f1ad17917551",
            "33bbfdeb-d53b-4f11-a297-37850610542a",
            "89006e3e-e0b2-4e0c-beb4-b6b2da78fc77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "eefda877-10c6-4c3a-bef9-a45c0e4d1bea",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1054,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f34dc18b-e2a3-4b31-98a1-4631bcb88b43",
              "parentUUID": "eefda877-10c6-4c3a-bef9-a45c0e4d1bea",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "559d5ef7-b6da-4ecc-ae89-bed88ee7dc47",
              "parentUUID": "eefda877-10c6-4c3a-bef9-a45c0e4d1bea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "20c9ed6c-53f0-4e88-b5ca-29cb6b8dea50",
              "parentUUID": "eefda877-10c6-4c3a-bef9-a45c0e4d1bea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "d93b2b78-4d30-4bc6-90b8-2d795f067098",
              "parentUUID": "eefda877-10c6-4c3a-bef9-a45c0e4d1bea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "b7799ac9-13c6-4bb7-9653-922ec07b71bc",
              "parentUUID": "eefda877-10c6-4c3a-bef9-a45c0e4d1bea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "559d5ef7-b6da-4ecc-ae89-bed88ee7dc47",
            "20c9ed6c-53f0-4e88-b5ca-29cb6b8dea50",
            "d93b2b78-4d30-4bc6-90b8-2d795f067098",
            "b7799ac9-13c6-4bb7-9653-922ec07b71bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "72bd54bd-23a3-48de-a81b-037ee2c060ec",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 710,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "da7761ad-a3bb-4174-a36a-5636aaa970f5",
              "parentUUID": "72bd54bd-23a3-48de-a81b-037ee2c060ec",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "39898f59-78d2-435f-bed2-6d5882621c33",
              "parentUUID": "72bd54bd-23a3-48de-a81b-037ee2c060ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ccbbcd24-8ed2-49d9-9a87-2e996d12228f",
              "parentUUID": "72bd54bd-23a3-48de-a81b-037ee2c060ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "55766295-95b0-4348-8c88-742c6e8ae924",
              "parentUUID": "72bd54bd-23a3-48de-a81b-037ee2c060ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a63d9866-9acf-4c2c-b799-b8fffbac0739",
              "parentUUID": "72bd54bd-23a3-48de-a81b-037ee2c060ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "39898f59-78d2-435f-bed2-6d5882621c33",
            "ccbbcd24-8ed2-49d9-9a87-2e996d12228f",
            "55766295-95b0-4348-8c88-742c6e8ae924",
            "a63d9866-9acf-4c2c-b799-b8fffbac0739"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "641ada05-26de-41cc-82b1-f17a56906680",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 919,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6be63087-7fdb-4009-a3d5-b6b669e84bea",
              "parentUUID": "641ada05-26de-41cc-82b1-f17a56906680",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "f71a8d63-aee9-4046-a822-12a5b8e3917c",
              "parentUUID": "641ada05-26de-41cc-82b1-f17a56906680",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "81ae71ed-c33f-4699-9854-c327e2bf6d50",
              "parentUUID": "641ada05-26de-41cc-82b1-f17a56906680",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0d48ebf6-e767-4e64-9e21-a8eafb6bc33c",
              "parentUUID": "641ada05-26de-41cc-82b1-f17a56906680",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "12cd95b9-4f7b-4ab2-a110-796bf6874501",
              "parentUUID": "641ada05-26de-41cc-82b1-f17a56906680",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f71a8d63-aee9-4046-a822-12a5b8e3917c",
            "81ae71ed-c33f-4699-9854-c327e2bf6d50",
            "0d48ebf6-e767-4e64-9e21-a8eafb6bc33c",
            "12cd95b9-4f7b-4ab2-a110-796bf6874501"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "bbe8e0e2-90b1-4f25-bb13-1e373cb2b4c4",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1127,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9988c3f7-9dc9-4ba6-b8e9-a897299d62ff",
              "parentUUID": "bbe8e0e2-90b1-4f25-bb13-1e373cb2b4c4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "3201ef9b-0976-4608-8905-60d82214fd8f",
              "parentUUID": "bbe8e0e2-90b1-4f25-bb13-1e373cb2b4c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "88b3c706-54a6-4db3-b521-c02eec1ddd73",
              "parentUUID": "bbe8e0e2-90b1-4f25-bb13-1e373cb2b4c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "df6572ee-9851-40c4-99a6-9fd39cbc6330",
              "parentUUID": "bbe8e0e2-90b1-4f25-bb13-1e373cb2b4c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "1b51459e-5a15-4d97-b3a6-2c0c631bbc25",
              "parentUUID": "bbe8e0e2-90b1-4f25-bb13-1e373cb2b4c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3201ef9b-0976-4608-8905-60d82214fd8f",
            "88b3c706-54a6-4db3-b521-c02eec1ddd73",
            "df6572ee-9851-40c4-99a6-9fd39cbc6330",
            "1b51459e-5a15-4d97-b3a6-2c0c631bbc25"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f13cbf22-ac38-4260-b69f-33d2f694f655",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1018,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "bbaecaae-e806-4052-812a-15bdee2a3d55",
              "parentUUID": "f13cbf22-ac38-4260-b69f-33d2f694f655",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "9afaea55-2ad5-4a15-92ef-713f41330811",
              "parentUUID": "f13cbf22-ac38-4260-b69f-33d2f694f655",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "8b29689a-de24-4f68-9845-76819a289f19",
              "parentUUID": "f13cbf22-ac38-4260-b69f-33d2f694f655",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "bcbc6be2-81b3-4f37-bdcf-c1d52c6e18cc",
              "parentUUID": "f13cbf22-ac38-4260-b69f-33d2f694f655",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "1b45cc44-a863-494c-8e6d-a6e8eee14149",
              "parentUUID": "f13cbf22-ac38-4260-b69f-33d2f694f655",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9afaea55-2ad5-4a15-92ef-713f41330811",
            "8b29689a-de24-4f68-9845-76819a289f19",
            "bcbc6be2-81b3-4f37-bdcf-c1d52c6e18cc",
            "1b45cc44-a863-494c-8e6d-a6e8eee14149"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "2ed75d1b-970c-43e2-aa8d-82d1d4cb1d09",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 817,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "2cdcb1a1-3265-4fe1-87e2-94f72d4aeca8",
              "parentUUID": "2ed75d1b-970c-43e2-aa8d-82d1d4cb1d09",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "ac52e2f7-53ad-499d-8c90-932c90fd70a5",
              "parentUUID": "2ed75d1b-970c-43e2-aa8d-82d1d4cb1d09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "342f57bd-12ab-4e5d-95fb-b5de286780c8",
              "parentUUID": "2ed75d1b-970c-43e2-aa8d-82d1d4cb1d09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c0dc9d66-adaa-45b4-87f8-6c1cd22e9e4a",
              "parentUUID": "2ed75d1b-970c-43e2-aa8d-82d1d4cb1d09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "14f23517-fad2-4ee5-9961-4107468eaab9",
              "parentUUID": "2ed75d1b-970c-43e2-aa8d-82d1d4cb1d09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ac52e2f7-53ad-499d-8c90-932c90fd70a5",
            "342f57bd-12ab-4e5d-95fb-b5de286780c8",
            "c0dc9d66-adaa-45b4-87f8-6c1cd22e9e4a",
            "14f23517-fad2-4ee5-9961-4107468eaab9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "98496e90-f1e7-4fe4-a25c-c041af2d2c96",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 917,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9e1123ac-d912-446b-a351-49dda46e1aa0",
              "parentUUID": "98496e90-f1e7-4fe4-a25c-c041af2d2c96",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "bdb42a75-d21e-451c-86f3-5feb41d4b544",
              "parentUUID": "98496e90-f1e7-4fe4-a25c-c041af2d2c96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "35e61119-0d40-4ff5-9566-e0230361256d",
              "parentUUID": "98496e90-f1e7-4fe4-a25c-c041af2d2c96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ee402a14-801a-4a6b-9f53-fea52fbf8ab1",
              "parentUUID": "98496e90-f1e7-4fe4-a25c-c041af2d2c96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "73f848d0-b85f-4d1a-a1e9-d234537eb704",
              "parentUUID": "98496e90-f1e7-4fe4-a25c-c041af2d2c96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bdb42a75-d21e-451c-86f3-5feb41d4b544",
            "35e61119-0d40-4ff5-9566-e0230361256d",
            "ee402a14-801a-4a6b-9f53-fea52fbf8ab1",
            "73f848d0-b85f-4d1a-a1e9-d234537eb704"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "652dcb6c-25c2-4c6d-a744-56dc9be29166",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1123,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9d3fa4cb-d7f5-45b7-8734-e0e2f0a12500",
              "parentUUID": "652dcb6c-25c2-4c6d-a744-56dc9be29166",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "e102fe9c-4a28-461b-972f-101a0641e8de",
              "parentUUID": "652dcb6c-25c2-4c6d-a744-56dc9be29166",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ba418041-b103-4044-8f71-49d6cd7b0a74",
              "parentUUID": "652dcb6c-25c2-4c6d-a744-56dc9be29166",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2098c1ae-1465-49d6-a78c-09c64965bb1c",
              "parentUUID": "652dcb6c-25c2-4c6d-a744-56dc9be29166",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "207b3e74-16a2-423e-a09d-20d5fec3048e",
              "parentUUID": "652dcb6c-25c2-4c6d-a744-56dc9be29166",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e102fe9c-4a28-461b-972f-101a0641e8de",
            "ba418041-b103-4044-8f71-49d6cd7b0a74",
            "2098c1ae-1465-49d6-a78c-09c64965bb1c",
            "207b3e74-16a2-423e-a09d-20d5fec3048e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "88241dcb-4238-4e23-92dc-a2441f1de0ca",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 815,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b346000e-3eae-42e6-a9aa-a9490fca80cd",
              "parentUUID": "88241dcb-4238-4e23-92dc-a2441f1de0ca",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "0383ebb7-2803-441b-839e-06b854e14d3b",
              "parentUUID": "88241dcb-4238-4e23-92dc-a2441f1de0ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "69e2e79c-494e-4b65-8780-cba295e92695",
              "parentUUID": "88241dcb-4238-4e23-92dc-a2441f1de0ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "b554a7f3-6f61-45d5-883f-dc3ca910cc27",
              "parentUUID": "88241dcb-4238-4e23-92dc-a2441f1de0ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0fec376a-08ae-40f1-bb99-9c918f3d07cd",
              "parentUUID": "88241dcb-4238-4e23-92dc-a2441f1de0ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0383ebb7-2803-441b-839e-06b854e14d3b",
            "69e2e79c-494e-4b65-8780-cba295e92695",
            "b554a7f3-6f61-45d5-883f-dc3ca910cc27",
            "0fec376a-08ae-40f1-bb99-9c918f3d07cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d2725d5d-ddc1-49e2-9fad-3958685fdf4c",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1024,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1a8dd565-3a9c-429b-99f1-1165f956349d",
              "parentUUID": "d2725d5d-ddc1-49e2-9fad-3958685fdf4c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "ec6b9af5-ddc8-4d0c-b428-813b6356fad2",
              "parentUUID": "d2725d5d-ddc1-49e2-9fad-3958685fdf4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "f8c4e899-5bfa-4bdd-9af2-a07804c792e1",
              "parentUUID": "d2725d5d-ddc1-49e2-9fad-3958685fdf4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c205bac4-9207-426b-879b-4c29633240e7",
              "parentUUID": "d2725d5d-ddc1-49e2-9fad-3958685fdf4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c52d88fa-dcc9-401e-82c5-13b32546bdc5",
              "parentUUID": "d2725d5d-ddc1-49e2-9fad-3958685fdf4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec6b9af5-ddc8-4d0c-b428-813b6356fad2",
            "f8c4e899-5bfa-4bdd-9af2-a07804c792e1",
            "c205bac4-9207-426b-879b-4c29633240e7",
            "c52d88fa-dcc9-401e-82c5-13b32546bdc5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "2448dfdb-b07d-49e4-8b7d-fd0a27567329",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 817,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a2765538-6288-4455-a2e5-a1278d6c8f81",
              "parentUUID": "2448dfdb-b07d-49e4-8b7d-fd0a27567329",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "a3591995-d235-4678-a92b-1f27f2a8dca0",
              "parentUUID": "2448dfdb-b07d-49e4-8b7d-fd0a27567329",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "c21b151d-d074-48f5-a51f-8af6bd84144e",
              "parentUUID": "2448dfdb-b07d-49e4-8b7d-fd0a27567329",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a261b74d-ebae-48fe-851c-7efc6b7c2cea",
              "parentUUID": "2448dfdb-b07d-49e4-8b7d-fd0a27567329",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "67bb3973-c9b9-4bbb-8860-ed3fb9a69a8a",
              "parentUUID": "2448dfdb-b07d-49e4-8b7d-fd0a27567329",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3591995-d235-4678-a92b-1f27f2a8dca0",
            "c21b151d-d074-48f5-a51f-8af6bd84144e",
            "a261b74d-ebae-48fe-851c-7efc6b7c2cea",
            "67bb3973-c9b9-4bbb-8860-ed3fb9a69a8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "19cea6e1-a781-480f-b591-b464bca0c644",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 673,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "2d89b3db-086c-4959-acbd-0418cf069b3a",
              "parentUUID": "19cea6e1-a781-480f-b591-b464bca0c644",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "f29cbda8-2b3f-4846-8d0d-2694384233c3",
              "parentUUID": "19cea6e1-a781-480f-b591-b464bca0c644",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "23a08f86-df0e-4157-824a-4f3eb13bfc1a",
              "parentUUID": "19cea6e1-a781-480f-b591-b464bca0c644",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "b3136598-7171-45e8-a950-967f10491495",
              "parentUUID": "19cea6e1-a781-480f-b591-b464bca0c644",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "bb1f027c-e375-43c2-aaf5-13aad987f949",
              "parentUUID": "19cea6e1-a781-480f-b591-b464bca0c644",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f29cbda8-2b3f-4846-8d0d-2694384233c3",
            "23a08f86-df0e-4157-824a-4f3eb13bfc1a",
            "b3136598-7171-45e8-a950-967f10491495",
            "bb1f027c-e375-43c2-aaf5-13aad987f949"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "456d0f5e-a56b-4ef0-8b71-279acf9fb023",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 825,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "db1f8407-301e-4706-93f6-45d598b46c98",
              "parentUUID": "456d0f5e-a56b-4ef0-8b71-279acf9fb023",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "7b5e2379-bfb7-4429-b2c9-209ab6156da4",
              "parentUUID": "456d0f5e-a56b-4ef0-8b71-279acf9fb023",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "bafd56cd-81c4-4634-9568-0c4ef00a6aff",
              "parentUUID": "456d0f5e-a56b-4ef0-8b71-279acf9fb023",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "eddb7be4-a0ca-4670-9041-b4f41b295a25",
              "parentUUID": "456d0f5e-a56b-4ef0-8b71-279acf9fb023",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "832f2987-bb10-4080-bf94-0178a5e99ef6",
              "parentUUID": "456d0f5e-a56b-4ef0-8b71-279acf9fb023",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b5e2379-bfb7-4429-b2c9-209ab6156da4",
            "bafd56cd-81c4-4634-9568-0c4ef00a6aff",
            "eddb7be4-a0ca-4670-9041-b4f41b295a25",
            "832f2987-bb10-4080-bf94-0178a5e99ef6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "67caffef-86da-4576-b2ed-72f748d66683",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 954,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0a967ad5-4a6e-4da0-bf88-e2edb1a784aa",
              "parentUUID": "67caffef-86da-4576-b2ed-72f748d66683",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "945c524f-1747-4ba0-b6a9-b618edfaa10b",
              "parentUUID": "67caffef-86da-4576-b2ed-72f748d66683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "7977f2a1-4cc0-4a32-a4fb-45a2dc9362ca",
              "parentUUID": "67caffef-86da-4576-b2ed-72f748d66683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a3ecfdd4-fd06-43e0-b460-17323427b34a",
              "parentUUID": "67caffef-86da-4576-b2ed-72f748d66683",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "49c6406f-e931-45bc-9dc2-b0b7809b0ea3",
              "parentUUID": "67caffef-86da-4576-b2ed-72f748d66683",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "945c524f-1747-4ba0-b6a9-b618edfaa10b",
            "7977f2a1-4cc0-4a32-a4fb-45a2dc9362ca",
            "a3ecfdd4-fd06-43e0-b460-17323427b34a",
            "49c6406f-e931-45bc-9dc2-b0b7809b0ea3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f8e25c5f-113e-4bcf-b73f-6ba4a8126097",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1042,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e503bdec-41c4-4c66-a862-c5f5deaa116c",
              "parentUUID": "f8e25c5f-113e-4bcf-b73f-6ba4a8126097",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "0b7fcbc9-321f-4e53-9c56-97ff62217c5b",
              "parentUUID": "f8e25c5f-113e-4bcf-b73f-6ba4a8126097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "b6047b20-32be-4a44-8afd-b3d93f44f442",
              "parentUUID": "f8e25c5f-113e-4bcf-b73f-6ba4a8126097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "063560d1-75f2-422a-920e-99a68625f1ef",
              "parentUUID": "f8e25c5f-113e-4bcf-b73f-6ba4a8126097",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "fa9a235c-ed59-416d-9f46-8e11c24b9795",
              "parentUUID": "f8e25c5f-113e-4bcf-b73f-6ba4a8126097",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b7fcbc9-321f-4e53-9c56-97ff62217c5b",
            "b6047b20-32be-4a44-8afd-b3d93f44f442",
            "063560d1-75f2-422a-920e-99a68625f1ef",
            "fa9a235c-ed59-416d-9f46-8e11c24b9795"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "bd191de2-1f28-485c-bfc1-c692178bbde9",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 786,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9d2b07ba-7e71-408b-99c4-f44c6fe649c8",
              "parentUUID": "bd191de2-1f28-485c-bfc1-c692178bbde9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "9e5f7bc5-21bb-477e-ab60-e57db768072f",
              "parentUUID": "bd191de2-1f28-485c-bfc1-c692178bbde9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "8835c5a3-a418-44f8-aa54-e492d9dd336f",
              "parentUUID": "bd191de2-1f28-485c-bfc1-c692178bbde9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e2ae7980-4217-4343-a51f-6830d0cb74f2",
              "parentUUID": "bd191de2-1f28-485c-bfc1-c692178bbde9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0d68fb68-e92e-4663-9e77-e17799869071",
              "parentUUID": "bd191de2-1f28-485c-bfc1-c692178bbde9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e5f7bc5-21bb-477e-ab60-e57db768072f",
            "8835c5a3-a418-44f8-aa54-e492d9dd336f",
            "e2ae7980-4217-4343-a51f-6830d0cb74f2",
            "0d68fb68-e92e-4663-9e77-e17799869071"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b923fa9b-aa6b-47db-a0e5-8627c3d54ba9",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 886,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0ae5e7a0-dcf7-4175-9483-f1236d7e29b4",
              "parentUUID": "b923fa9b-aa6b-47db-a0e5-8627c3d54ba9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "84f13b46-7665-4943-a797-d3f3fe03c97c",
              "parentUUID": "b923fa9b-aa6b-47db-a0e5-8627c3d54ba9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "e511b045-c148-4177-b096-857ca74123a5",
              "parentUUID": "b923fa9b-aa6b-47db-a0e5-8627c3d54ba9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "744a018c-1f92-4659-b87e-0036fd64dada",
              "parentUUID": "b923fa9b-aa6b-47db-a0e5-8627c3d54ba9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "23c6008f-a963-499b-9d0b-e4cff8c61a1b",
              "parentUUID": "b923fa9b-aa6b-47db-a0e5-8627c3d54ba9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84f13b46-7665-4943-a797-d3f3fe03c97c",
            "e511b045-c148-4177-b096-857ca74123a5",
            "744a018c-1f92-4659-b87e-0036fd64dada",
            "23c6008f-a963-499b-9d0b-e4cff8c61a1b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "27a7fc8b-5723-4173-a029-a883f6efaf38",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 740,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1d41c6b3-2e73-4276-8bb3-cf02e7429b15",
              "parentUUID": "27a7fc8b-5723-4173-a029-a883f6efaf38",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "119c6883-78a5-4e65-ac08-20774d4b4abb",
              "parentUUID": "27a7fc8b-5723-4173-a029-a883f6efaf38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "26d55a94-4451-45fd-bd19-7d49fb356912",
              "parentUUID": "27a7fc8b-5723-4173-a029-a883f6efaf38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "f2986ac1-c01d-4247-a247-a27636a2587e",
              "parentUUID": "27a7fc8b-5723-4173-a029-a883f6efaf38",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c2e3ecec-74b7-41af-a241-87e470253e34",
              "parentUUID": "27a7fc8b-5723-4173-a029-a883f6efaf38",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "119c6883-78a5-4e65-ac08-20774d4b4abb",
            "26d55a94-4451-45fd-bd19-7d49fb356912",
            "f2986ac1-c01d-4247-a247-a27636a2587e",
            "c2e3ecec-74b7-41af-a241-87e470253e34"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "695f4238-0daa-4dac-ba8a-1fb5edc55a23",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1020,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c9d53546-83f7-4205-a373-987e4577a23c",
              "parentUUID": "695f4238-0daa-4dac-ba8a-1fb5edc55a23",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "1e32a5bc-b929-4b8e-b011-0a5016dc6178",
              "parentUUID": "695f4238-0daa-4dac-ba8a-1fb5edc55a23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "0401bb62-f310-4eab-9694-572e320938ee",
              "parentUUID": "695f4238-0daa-4dac-ba8a-1fb5edc55a23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e7e7f36f-47f1-4ee9-ad87-2ac9bccc37f8",
              "parentUUID": "695f4238-0daa-4dac-ba8a-1fb5edc55a23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "7e48d659-f535-4359-a701-de74a11513fa",
              "parentUUID": "695f4238-0daa-4dac-ba8a-1fb5edc55a23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e32a5bc-b929-4b8e-b011-0a5016dc6178",
            "0401bb62-f310-4eab-9694-572e320938ee",
            "e7e7f36f-47f1-4ee9-ad87-2ac9bccc37f8",
            "7e48d659-f535-4359-a701-de74a11513fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "1554244b-4400-4891-9c12-debb5e2cf4be",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1332,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ddebe606-c80f-4d77-a3f5-a62b675cfb57",
              "parentUUID": "1554244b-4400-4891-9c12-debb5e2cf4be",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "672c7e37-4c97-4ac2-b3a5-8fa22253d857",
              "parentUUID": "1554244b-4400-4891-9c12-debb5e2cf4be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "0546f0a3-984a-4d27-b810-f36640744bca",
              "parentUUID": "1554244b-4400-4891-9c12-debb5e2cf4be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "9d8f18fe-cbe9-42e7-ab5e-d171b2e0d71b",
              "parentUUID": "1554244b-4400-4891-9c12-debb5e2cf4be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "30a76f3b-690f-431e-a495-dc725a165903",
              "parentUUID": "1554244b-4400-4891-9c12-debb5e2cf4be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "672c7e37-4c97-4ac2-b3a5-8fa22253d857",
            "0546f0a3-984a-4d27-b810-f36640744bca",
            "9d8f18fe-cbe9-42e7-ab5e-d171b2e0d71b",
            "30a76f3b-690f-431e-a495-dc725a165903"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "3e24f79a-7319-4266-8fb0-d07eab56fca1",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 694,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5dcea364-2026-43b0-a90f-9c8f9b321421",
              "parentUUID": "3e24f79a-7319-4266-8fb0-d07eab56fca1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "42eb762e-dc54-4659-bb97-83c04addf9f9",
              "parentUUID": "3e24f79a-7319-4266-8fb0-d07eab56fca1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ddd5ab54-6860-4dbd-b303-9001797bdde1",
              "parentUUID": "3e24f79a-7319-4266-8fb0-d07eab56fca1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "672c5a64-d4bc-4713-96eb-e647ce182278",
              "parentUUID": "3e24f79a-7319-4266-8fb0-d07eab56fca1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "17501f62-b565-4404-bcb0-503e357f448c",
              "parentUUID": "3e24f79a-7319-4266-8fb0-d07eab56fca1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42eb762e-dc54-4659-bb97-83c04addf9f9",
            "ddd5ab54-6860-4dbd-b303-9001797bdde1",
            "672c5a64-d4bc-4713-96eb-e647ce182278",
            "17501f62-b565-4404-bcb0-503e357f448c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b2085e94-2d84-468e-b8cf-1fbda8711ea1",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1144,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "82d3e719-9809-412a-ab43-2a8bb4c5b890",
              "parentUUID": "b2085e94-2d84-468e-b8cf-1fbda8711ea1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "17667149-0f30-4d11-8d4c-09233ba9a014",
              "parentUUID": "b2085e94-2d84-468e-b8cf-1fbda8711ea1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "7927fd21-7501-4dc8-9d63-3e3e0623288f",
              "parentUUID": "b2085e94-2d84-468e-b8cf-1fbda8711ea1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c6d8dfe3-b520-42f2-9620-c967ad762fe9",
              "parentUUID": "b2085e94-2d84-468e-b8cf-1fbda8711ea1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "23ad7aa6-05e0-4c37-9bb1-8a92ae8ae624",
              "parentUUID": "b2085e94-2d84-468e-b8cf-1fbda8711ea1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17667149-0f30-4d11-8d4c-09233ba9a014",
            "7927fd21-7501-4dc8-9d63-3e3e0623288f",
            "c6d8dfe3-b520-42f2-9620-c967ad762fe9",
            "23ad7aa6-05e0-4c37-9bb1-8a92ae8ae624"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "41e268d0-16e1-4d3e-9716-c50da65af0e7",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 881,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ff4b0293-d70e-4f09-a2f8-2ac546434b92",
              "parentUUID": "41e268d0-16e1-4d3e-9716-c50da65af0e7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "dcb3a90e-b691-4cc2-b60b-b377181483d4",
              "parentUUID": "41e268d0-16e1-4d3e-9716-c50da65af0e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "8de26777-77a9-49a3-a22c-c699bcdb124c",
              "parentUUID": "41e268d0-16e1-4d3e-9716-c50da65af0e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e6fad652-3f61-4086-906a-fffe5b306df8",
              "parentUUID": "41e268d0-16e1-4d3e-9716-c50da65af0e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e08126aa-7df0-497c-80c3-f4b7e92ec6c1",
              "parentUUID": "41e268d0-16e1-4d3e-9716-c50da65af0e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcb3a90e-b691-4cc2-b60b-b377181483d4",
            "8de26777-77a9-49a3-a22c-c699bcdb124c",
            "e6fad652-3f61-4086-906a-fffe5b306df8",
            "e08126aa-7df0-497c-80c3-f4b7e92ec6c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "a12273ea-92ee-4f8b-bf09-36d0eb66bd19",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1162,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a94796c0-4e1b-4efe-8c26-7f372afd0310",
              "parentUUID": "a12273ea-92ee-4f8b-bf09-36d0eb66bd19",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "62c3db4e-9db1-482a-92d9-df5dd42c6b7b",
              "parentUUID": "a12273ea-92ee-4f8b-bf09-36d0eb66bd19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "de7cd015-6b55-4ee9-89de-3fa8873ee1ff",
              "parentUUID": "a12273ea-92ee-4f8b-bf09-36d0eb66bd19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "989586a8-ccfc-49db-8642-1bf7040daf18",
              "parentUUID": "a12273ea-92ee-4f8b-bf09-36d0eb66bd19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "5a0ee5b5-9617-4db3-8e90-4ff35f1c2897",
              "parentUUID": "a12273ea-92ee-4f8b-bf09-36d0eb66bd19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62c3db4e-9db1-482a-92d9-df5dd42c6b7b",
            "de7cd015-6b55-4ee9-89de-3fa8873ee1ff",
            "989586a8-ccfc-49db-8642-1bf7040daf18",
            "5a0ee5b5-9617-4db3-8e90-4ff35f1c2897"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "9c4d3f49-473e-4e89-a0de-bec1149ec0a1",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 923,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "ae7295e6-0d90-48c4-8c7a-2bf84811f43c",
              "parentUUID": "9c4d3f49-473e-4e89-a0de-bec1149ec0a1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "2bb485e6-3447-4b70-9a1f-ce8fae392bc0",
              "parentUUID": "9c4d3f49-473e-4e89-a0de-bec1149ec0a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "8c0238ca-065a-4d0e-b5a8-b8e0db3c57d8",
              "parentUUID": "9c4d3f49-473e-4e89-a0de-bec1149ec0a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "1e200e3f-97f2-4ae9-a259-ff8c564dfa56",
              "parentUUID": "9c4d3f49-473e-4e89-a0de-bec1149ec0a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8249c7b3-c7fa-4ff0-96b8-217d3062f032",
              "parentUUID": "9c4d3f49-473e-4e89-a0de-bec1149ec0a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2bb485e6-3447-4b70-9a1f-ce8fae392bc0",
            "8c0238ca-065a-4d0e-b5a8-b8e0db3c57d8",
            "1e200e3f-97f2-4ae9-a259-ff8c564dfa56",
            "8249c7b3-c7fa-4ff0-96b8-217d3062f032"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "7f5487e4-14a3-494e-8ca7-baf8ee7dc4f1",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 703,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b6931c6e-f44a-4d86-83a1-0defc295b369",
              "parentUUID": "7f5487e4-14a3-494e-8ca7-baf8ee7dc4f1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "d29de07d-a8d0-4aa6-a248-b4f48da9e396",
              "parentUUID": "7f5487e4-14a3-494e-8ca7-baf8ee7dc4f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "e3a90f8d-4147-4dc0-9767-bd843d0a766b",
              "parentUUID": "7f5487e4-14a3-494e-8ca7-baf8ee7dc4f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "765d9bf0-23af-4520-a4ec-accd13934b5d",
              "parentUUID": "7f5487e4-14a3-494e-8ca7-baf8ee7dc4f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c370b24d-5531-4de9-a395-ec1506f60a91",
              "parentUUID": "7f5487e4-14a3-494e-8ca7-baf8ee7dc4f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d29de07d-a8d0-4aa6-a248-b4f48da9e396",
            "e3a90f8d-4147-4dc0-9767-bd843d0a766b",
            "765d9bf0-23af-4520-a4ec-accd13934b5d",
            "c370b24d-5531-4de9-a395-ec1506f60a91"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "94499a34-e247-434b-92b6-2f456d7da27d",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 713,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b93def7a-5524-4e75-ad35-9aaca43eb49d",
              "parentUUID": "94499a34-e247-434b-92b6-2f456d7da27d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "e881f21a-5b2f-4ad4-97b2-dfe86128e717",
              "parentUUID": "94499a34-e247-434b-92b6-2f456d7da27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "3d46a663-45ff-42f6-abed-e8149711cbf6",
              "parentUUID": "94499a34-e247-434b-92b6-2f456d7da27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "beba7026-e687-43c2-a87f-6b05c2b6e94d",
              "parentUUID": "94499a34-e247-434b-92b6-2f456d7da27d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "78d54078-5f14-4986-84ad-b10a06300042",
              "parentUUID": "94499a34-e247-434b-92b6-2f456d7da27d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e881f21a-5b2f-4ad4-97b2-dfe86128e717",
            "3d46a663-45ff-42f6-abed-e8149711cbf6",
            "beba7026-e687-43c2-a87f-6b05c2b6e94d",
            "78d54078-5f14-4986-84ad-b10a06300042"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "afd69705-9d97-4f24-bd18-972354e15e9f",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 848,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "be5a3ebd-efac-433d-879e-0773ce8310f6",
              "parentUUID": "afd69705-9d97-4f24-bd18-972354e15e9f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "6259e83f-aa3f-4092-b6c5-ea9bede24f91",
              "parentUUID": "afd69705-9d97-4f24-bd18-972354e15e9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "275f1b99-4a4c-41b4-963e-8611ac67725c",
              "parentUUID": "afd69705-9d97-4f24-bd18-972354e15e9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2900ef4a-ac8f-446b-8bd0-4760b90be808",
              "parentUUID": "afd69705-9d97-4f24-bd18-972354e15e9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "db0bc99a-807c-4ea4-865f-4bf82d56685f",
              "parentUUID": "afd69705-9d97-4f24-bd18-972354e15e9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6259e83f-aa3f-4092-b6c5-ea9bede24f91",
            "275f1b99-4a4c-41b4-963e-8611ac67725c",
            "2900ef4a-ac8f-446b-8bd0-4760b90be808",
            "db0bc99a-807c-4ea4-865f-4bf82d56685f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "2db71fab-bf7e-4c28-adf9-95982a4ad3db",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 783,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "bb55fb62-ebeb-4e6d-9742-a39ae3481125",
              "parentUUID": "2db71fab-bf7e-4c28-adf9-95982a4ad3db",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "260b8d30-6166-4874-9281-14c99154a40e",
              "parentUUID": "2db71fab-bf7e-4c28-adf9-95982a4ad3db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "40267089-402f-41f1-a2a4-890050861660",
              "parentUUID": "2db71fab-bf7e-4c28-adf9-95982a4ad3db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "42f7ebf1-3862-4e29-9576-525722eafb6f",
              "parentUUID": "2db71fab-bf7e-4c28-adf9-95982a4ad3db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2f904f6a-8934-488c-9914-574615bc60a9",
              "parentUUID": "2db71fab-bf7e-4c28-adf9-95982a4ad3db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "260b8d30-6166-4874-9281-14c99154a40e",
            "40267089-402f-41f1-a2a4-890050861660",
            "42f7ebf1-3862-4e29-9576-525722eafb6f",
            "2f904f6a-8934-488c-9914-574615bc60a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "cc52939a-63dd-4da8-a9ba-25be2f913801",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 918,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a241febb-8444-4029-819a-570fc5543248",
              "parentUUID": "cc52939a-63dd-4da8-a9ba-25be2f913801",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "82990d58-0612-47e9-b026-c7ac98613d89",
              "parentUUID": "cc52939a-63dd-4da8-a9ba-25be2f913801",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "75277419-eeb6-4bf1-b649-4ff7330d7115",
              "parentUUID": "cc52939a-63dd-4da8-a9ba-25be2f913801",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "450d31b6-3d08-49aa-ba2e-81864b36f754",
              "parentUUID": "cc52939a-63dd-4da8-a9ba-25be2f913801",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ec03071f-f014-4673-ab16-c71d98c80ad4",
              "parentUUID": "cc52939a-63dd-4da8-a9ba-25be2f913801",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82990d58-0612-47e9-b026-c7ac98613d89",
            "75277419-eeb6-4bf1-b649-4ff7330d7115",
            "450d31b6-3d08-49aa-ba2e-81864b36f754",
            "ec03071f-f014-4673-ab16-c71d98c80ad4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "169b7663-95bd-412a-a546-90263fd516a9",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 805,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "2313c0fb-f514-4617-8a87-27ea9a5ca948",
              "parentUUID": "169b7663-95bd-412a-a546-90263fd516a9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "51806435-3077-48c5-a707-280b70788ffe",
              "parentUUID": "169b7663-95bd-412a-a546-90263fd516a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "34158904-a6b5-4bb3-a6c6-e635f2e6c2b0",
              "parentUUID": "169b7663-95bd-412a-a546-90263fd516a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2e97ea93-699a-4eac-ade2-31d163ffbdfe",
              "parentUUID": "169b7663-95bd-412a-a546-90263fd516a9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "bb7fb6fb-fd96-4883-b425-6907b6b664a4",
              "parentUUID": "169b7663-95bd-412a-a546-90263fd516a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51806435-3077-48c5-a707-280b70788ffe",
            "34158904-a6b5-4bb3-a6c6-e635f2e6c2b0",
            "2e97ea93-699a-4eac-ade2-31d163ffbdfe",
            "bb7fb6fb-fd96-4883-b425-6907b6b664a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "1641db95-284f-45ba-81b8-713b26076be5",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1033,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c8f51321-d018-4166-8d9f-1d7135776418",
              "parentUUID": "1641db95-284f-45ba-81b8-713b26076be5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "32b7fe15-5b0f-411f-a17d-7b32df32fa52",
              "parentUUID": "1641db95-284f-45ba-81b8-713b26076be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "e3513ac5-3938-48f9-9053-a5eb1268c8a6",
              "parentUUID": "1641db95-284f-45ba-81b8-713b26076be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "7b55e70f-4565-487a-94a8-e2bb9ed47c83",
              "parentUUID": "1641db95-284f-45ba-81b8-713b26076be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "43759874-915a-4772-b78b-b82f9fbabcac",
              "parentUUID": "1641db95-284f-45ba-81b8-713b26076be5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32b7fe15-5b0f-411f-a17d-7b32df32fa52",
            "e3513ac5-3938-48f9-9053-a5eb1268c8a6",
            "7b55e70f-4565-487a-94a8-e2bb9ed47c83",
            "43759874-915a-4772-b78b-b82f9fbabcac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "3a4c430f-15f3-43be-b7cd-37260b5f77c2",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 814,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8a0a0e19-3be9-4797-bc33-77d1b95c091e",
              "parentUUID": "3a4c430f-15f3-43be-b7cd-37260b5f77c2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "7a637b79-dd56-43b6-87f8-847ecc5347b7",
              "parentUUID": "3a4c430f-15f3-43be-b7cd-37260b5f77c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "cd09f4a8-5c85-4ffe-9836-6e518f080d98",
              "parentUUID": "3a4c430f-15f3-43be-b7cd-37260b5f77c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "367edaf2-d033-4a79-925a-36293930038e",
              "parentUUID": "3a4c430f-15f3-43be-b7cd-37260b5f77c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "62260296-7c6f-4657-a545-e3e934c755d2",
              "parentUUID": "3a4c430f-15f3-43be-b7cd-37260b5f77c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a637b79-dd56-43b6-87f8-847ecc5347b7",
            "cd09f4a8-5c85-4ffe-9836-6e518f080d98",
            "367edaf2-d033-4a79-925a-36293930038e",
            "62260296-7c6f-4657-a545-e3e934c755d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e504989b-31d9-4ccf-9ab3-ff4ee297db75",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 701,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "10bfb4e4-4b05-43e5-89a3-31ece0777377",
              "parentUUID": "e504989b-31d9-4ccf-9ab3-ff4ee297db75",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "6a93a7d2-70f0-4bf7-8eec-b464ac5438a5",
              "parentUUID": "e504989b-31d9-4ccf-9ab3-ff4ee297db75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "0d5c71b3-6b4d-453e-bb46-f9ca66339163",
              "parentUUID": "e504989b-31d9-4ccf-9ab3-ff4ee297db75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c270c839-7652-4cb5-b5ce-cc81d589a5c3",
              "parentUUID": "e504989b-31d9-4ccf-9ab3-ff4ee297db75",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4e50493f-acb0-4e47-8d31-48b394869a36",
              "parentUUID": "e504989b-31d9-4ccf-9ab3-ff4ee297db75",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a93a7d2-70f0-4bf7-8eec-b464ac5438a5",
            "0d5c71b3-6b4d-453e-bb46-f9ca66339163",
            "c270c839-7652-4cb5-b5ce-cc81d589a5c3",
            "4e50493f-acb0-4e47-8d31-48b394869a36"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "af6e22a6-236e-4aee-821d-7dbba1a1bb79",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1037,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a46e9e70-f1bf-4187-bae5-1ef7a6676236",
              "parentUUID": "af6e22a6-236e-4aee-821d-7dbba1a1bb79",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "5e2c9aae-d90b-4171-986b-e4a2429f7aee",
              "parentUUID": "af6e22a6-236e-4aee-821d-7dbba1a1bb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "7229a7fb-8900-48a3-9063-e37fc07db57c",
              "parentUUID": "af6e22a6-236e-4aee-821d-7dbba1a1bb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "dcfb424f-c7dc-4baa-8a47-bd521d33ea46",
              "parentUUID": "af6e22a6-236e-4aee-821d-7dbba1a1bb79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2d397221-8125-4704-b5b1-eb5c8cfe6dae",
              "parentUUID": "af6e22a6-236e-4aee-821d-7dbba1a1bb79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e2c9aae-d90b-4171-986b-e4a2429f7aee",
            "7229a7fb-8900-48a3-9063-e37fc07db57c",
            "dcfb424f-c7dc-4baa-8a47-bd521d33ea46",
            "2d397221-8125-4704-b5b1-eb5c8cfe6dae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ea8e16ed-7a7f-4ee9-b350-3a7e84dedc32",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 696,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "07028939-5e08-4c72-9029-6583ad14cfad",
              "parentUUID": "ea8e16ed-7a7f-4ee9-b350-3a7e84dedc32",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "e09ee4b8-f38a-47e7-a096-02470ef4c014",
              "parentUUID": "ea8e16ed-7a7f-4ee9-b350-3a7e84dedc32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "f93b1bb9-4aa7-4075-90e1-1e94d9bf32db",
              "parentUUID": "ea8e16ed-7a7f-4ee9-b350-3a7e84dedc32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c2a43036-6107-4447-888d-a0955738db04",
              "parentUUID": "ea8e16ed-7a7f-4ee9-b350-3a7e84dedc32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "cb50a8ff-c370-4465-ae64-e8a83fc8b3c4",
              "parentUUID": "ea8e16ed-7a7f-4ee9-b350-3a7e84dedc32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e09ee4b8-f38a-47e7-a096-02470ef4c014",
            "f93b1bb9-4aa7-4075-90e1-1e94d9bf32db",
            "c2a43036-6107-4447-888d-a0955738db04",
            "cb50a8ff-c370-4465-ae64-e8a83fc8b3c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "e082ec37-513c-42c8-ba5f-09604a36e166",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 720,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "16d60205-d469-4082-82ee-a9f91933666d",
              "parentUUID": "e082ec37-513c-42c8-ba5f-09604a36e166",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "6e4e9ed4-248e-475e-89be-9ff076c7860c",
              "parentUUID": "e082ec37-513c-42c8-ba5f-09604a36e166",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "9a761ce0-65a5-4af3-8229-ef295b2f3dfa",
              "parentUUID": "e082ec37-513c-42c8-ba5f-09604a36e166",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4b8fb582-a92e-4e4b-9afb-6504cca58c29",
              "parentUUID": "e082ec37-513c-42c8-ba5f-09604a36e166",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "b42d9364-2ace-4c97-b2a0-906f37c6cd75",
              "parentUUID": "e082ec37-513c-42c8-ba5f-09604a36e166",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e4e9ed4-248e-475e-89be-9ff076c7860c",
            "9a761ce0-65a5-4af3-8229-ef295b2f3dfa",
            "4b8fb582-a92e-4e4b-9afb-6504cca58c29",
            "b42d9364-2ace-4c97-b2a0-906f37c6cd75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f6e37884-026c-4228-8d74-158d5442fcd1",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 812,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c9f0090e-e5a0-4323-bf2c-9f08514a9792",
              "parentUUID": "f6e37884-026c-4228-8d74-158d5442fcd1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "27b03b37-7faf-44e2-a01f-3576861f51bb",
              "parentUUID": "f6e37884-026c-4228-8d74-158d5442fcd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "2da553ba-c6be-43dc-8950-68467fcfdfd0",
              "parentUUID": "f6e37884-026c-4228-8d74-158d5442fcd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "f6414c3d-13d0-4fef-a663-5a6bc5245a63",
              "parentUUID": "f6e37884-026c-4228-8d74-158d5442fcd1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ef1f4590-bfde-4caa-8f16-501e67a30bb3",
              "parentUUID": "f6e37884-026c-4228-8d74-158d5442fcd1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "27b03b37-7faf-44e2-a01f-3576861f51bb",
            "2da553ba-c6be-43dc-8950-68467fcfdfd0",
            "f6414c3d-13d0-4fef-a663-5a6bc5245a63",
            "ef1f4590-bfde-4caa-8f16-501e67a30bb3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f716b771-b976-4037-a13c-10c2d463b973",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 684,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9433d79e-52a7-49a1-ba43-05218253afd2",
              "parentUUID": "f716b771-b976-4037-a13c-10c2d463b973",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "d47c0cbf-ccad-419b-863f-e2ac5655c2da",
              "parentUUID": "f716b771-b976-4037-a13c-10c2d463b973",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "6378fada-4a3a-4934-9ba7-b83bdbdbb2d2",
              "parentUUID": "f716b771-b976-4037-a13c-10c2d463b973",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "88222744-1e34-4320-be90-6d10fbedc444",
              "parentUUID": "f716b771-b976-4037-a13c-10c2d463b973",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e42f0be6-82a9-48fe-94b4-46a080cd7d2b",
              "parentUUID": "f716b771-b976-4037-a13c-10c2d463b973",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d47c0cbf-ccad-419b-863f-e2ac5655c2da",
            "6378fada-4a3a-4934-9ba7-b83bdbdbb2d2",
            "88222744-1e34-4320-be90-6d10fbedc444",
            "e42f0be6-82a9-48fe-94b4-46a080cd7d2b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "2a41173e-bfaf-4b0b-9d65-a97faf9c6d1c",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 844,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "2bdc5441-861a-4c28-ad0b-a992e9b1883d",
              "parentUUID": "2a41173e-bfaf-4b0b-9d65-a97faf9c6d1c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "c042caec-2f90-4827-9555-c3ce087a78b6",
              "parentUUID": "2a41173e-bfaf-4b0b-9d65-a97faf9c6d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "04a3c363-bcbd-48b5-9173-fac73ad06a99",
              "parentUUID": "2a41173e-bfaf-4b0b-9d65-a97faf9c6d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2d12bbe6-b32b-4fcd-8ca7-a11603a9dde8",
              "parentUUID": "2a41173e-bfaf-4b0b-9d65-a97faf9c6d1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "31083241-3901-423f-b76b-e08980485428",
              "parentUUID": "2a41173e-bfaf-4b0b-9d65-a97faf9c6d1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c042caec-2f90-4827-9555-c3ce087a78b6",
            "04a3c363-bcbd-48b5-9173-fac73ad06a99",
            "2d12bbe6-b32b-4fcd-8ca7-a11603a9dde8",
            "31083241-3901-423f-b76b-e08980485428"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c8fad99d-443d-44fa-ad0c-febd8e3a054e",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1082,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8df6eb7d-3548-4317-a418-698b22bf835c",
              "parentUUID": "c8fad99d-443d-44fa-ad0c-febd8e3a054e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "74571f89-5072-43c9-98c7-a1976bfacebc",
              "parentUUID": "c8fad99d-443d-44fa-ad0c-febd8e3a054e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "7dc814bc-dff0-46db-8e3b-0b1727846764",
              "parentUUID": "c8fad99d-443d-44fa-ad0c-febd8e3a054e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "6864cbab-f876-4bc3-8d9e-a4ab4314050a",
              "parentUUID": "c8fad99d-443d-44fa-ad0c-febd8e3a054e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "af166564-8695-461e-98e2-15b707f12d58",
              "parentUUID": "c8fad99d-443d-44fa-ad0c-febd8e3a054e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74571f89-5072-43c9-98c7-a1976bfacebc",
            "7dc814bc-dff0-46db-8e3b-0b1727846764",
            "6864cbab-f876-4bc3-8d9e-a4ab4314050a",
            "af166564-8695-461e-98e2-15b707f12d58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ef4d3a50-13d2-4084-ba65-9814120dbf3d",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1219,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "3a4c634e-cfda-4fcd-9c83-553625d473f6",
              "parentUUID": "ef4d3a50-13d2-4084-ba65-9814120dbf3d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "74ba1d25-c6ca-4915-92ca-26b1c2091d61",
              "parentUUID": "ef4d3a50-13d2-4084-ba65-9814120dbf3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "eba9d8d6-f698-4c16-991a-36422d88cb08",
              "parentUUID": "ef4d3a50-13d2-4084-ba65-9814120dbf3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "bc57bc6c-0fd2-4ddc-86e9-98de8da09d86",
              "parentUUID": "ef4d3a50-13d2-4084-ba65-9814120dbf3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2006a92e-b3f8-4d49-937c-a89f98c5fbd9",
              "parentUUID": "ef4d3a50-13d2-4084-ba65-9814120dbf3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74ba1d25-c6ca-4915-92ca-26b1c2091d61",
            "eba9d8d6-f698-4c16-991a-36422d88cb08",
            "bc57bc6c-0fd2-4ddc-86e9-98de8da09d86",
            "2006a92e-b3f8-4d49-937c-a89f98c5fbd9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "0f169ac6-d0f4-402c-9d97-17c8b7b30931",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 761,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4b3e2772-2db7-4d7e-946d-2ef294627069",
              "parentUUID": "0f169ac6-d0f4-402c-9d97-17c8b7b30931",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "28d559c0-bd05-42f7-9edc-a84f039d95ab",
              "parentUUID": "0f169ac6-d0f4-402c-9d97-17c8b7b30931",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "f39e8f9b-4fef-48b7-a545-c6eb258dd8a7",
              "parentUUID": "0f169ac6-d0f4-402c-9d97-17c8b7b30931",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0fbfdcba-58c6-4b20-910b-1c867d8ef5c5",
              "parentUUID": "0f169ac6-d0f4-402c-9d97-17c8b7b30931",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "9a4f7998-2a4b-415c-82c6-5c8dc236bf70",
              "parentUUID": "0f169ac6-d0f4-402c-9d97-17c8b7b30931",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28d559c0-bd05-42f7-9edc-a84f039d95ab",
            "f39e8f9b-4fef-48b7-a545-c6eb258dd8a7",
            "0fbfdcba-58c6-4b20-910b-1c867d8ef5c5",
            "9a4f7998-2a4b-415c-82c6-5c8dc236bf70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "6389e536-2182-45a4-91c3-10d5fe7a7a17",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 716,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "2b50ffae-68c7-49bb-90fa-7f2a07a747c6",
              "parentUUID": "6389e536-2182-45a4-91c3-10d5fe7a7a17",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "7b48bc76-8a55-4ea2-baff-be7ae65bd4af",
              "parentUUID": "6389e536-2182-45a4-91c3-10d5fe7a7a17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "c8325007-ff30-4a8c-8915-e77ffb4ba45b",
              "parentUUID": "6389e536-2182-45a4-91c3-10d5fe7a7a17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "bf48ed73-ae58-4918-b069-fd4b9e03800c",
              "parentUUID": "6389e536-2182-45a4-91c3-10d5fe7a7a17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "95904978-bb5e-416b-8a88-9c7f8fb3f77d",
              "parentUUID": "6389e536-2182-45a4-91c3-10d5fe7a7a17",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b48bc76-8a55-4ea2-baff-be7ae65bd4af",
            "c8325007-ff30-4a8c-8915-e77ffb4ba45b",
            "bf48ed73-ae58-4918-b069-fd4b9e03800c",
            "95904978-bb5e-416b-8a88-9c7f8fb3f77d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "97ae002d-0536-41d2-98c4-11df70951170",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 876,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8cb10870-6bed-4b67-a37a-849dbf738403",
              "parentUUID": "97ae002d-0536-41d2-98c4-11df70951170",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "20d51949-9cf9-42ab-a8bf-7bac113359f0",
              "parentUUID": "97ae002d-0536-41d2-98c4-11df70951170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "00c4d56b-9cc3-455a-9960-dae2004dd8b7",
              "parentUUID": "97ae002d-0536-41d2-98c4-11df70951170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a3367069-bb32-419f-ba17-4780071fed77",
              "parentUUID": "97ae002d-0536-41d2-98c4-11df70951170",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "3d1869e4-ffc1-4958-8096-26b58121e5e6",
              "parentUUID": "97ae002d-0536-41d2-98c4-11df70951170",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20d51949-9cf9-42ab-a8bf-7bac113359f0",
            "00c4d56b-9cc3-455a-9960-dae2004dd8b7",
            "a3367069-bb32-419f-ba17-4780071fed77",
            "3d1869e4-ffc1-4958-8096-26b58121e5e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "dc2a2d36-10fc-4c48-918a-5dcc02aaebe9",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 706,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4590680d-9130-4e36-9a48-5883e54549e8",
              "parentUUID": "dc2a2d36-10fc-4c48-918a-5dcc02aaebe9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "5593280a-2275-4c55-86ce-7accb8c1b008",
              "parentUUID": "dc2a2d36-10fc-4c48-918a-5dcc02aaebe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "66a82fd7-89e6-4da3-a289-254b6185350a",
              "parentUUID": "dc2a2d36-10fc-4c48-918a-5dcc02aaebe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a9f3ebd8-4c4c-40f7-99d1-b50ba6d00d10",
              "parentUUID": "dc2a2d36-10fc-4c48-918a-5dcc02aaebe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "342af290-5b5e-4e20-ba97-4e15b7dc52bd",
              "parentUUID": "dc2a2d36-10fc-4c48-918a-5dcc02aaebe9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5593280a-2275-4c55-86ce-7accb8c1b008",
            "66a82fd7-89e6-4da3-a289-254b6185350a",
            "a9f3ebd8-4c4c-40f7-99d1-b50ba6d00d10",
            "342af290-5b5e-4e20-ba97-4e15b7dc52bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b9d9c22b-b021-4e92-8f59-8e3f50335da5",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 917,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "61504ede-0dcd-4c6c-a3bc-406e9dc965d1",
              "parentUUID": "b9d9c22b-b021-4e92-8f59-8e3f50335da5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "8e613069-1d09-45df-ad3b-7bf6d9bacd32",
              "parentUUID": "b9d9c22b-b021-4e92-8f59-8e3f50335da5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "da04871d-9924-42ce-aaaa-00057c155d56",
              "parentUUID": "b9d9c22b-b021-4e92-8f59-8e3f50335da5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0b58a47d-97fe-40b3-ad19-c496a43f9006",
              "parentUUID": "b9d9c22b-b021-4e92-8f59-8e3f50335da5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "236f7139-cc2b-4548-b4dc-630be4c6a758",
              "parentUUID": "b9d9c22b-b021-4e92-8f59-8e3f50335da5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e613069-1d09-45df-ad3b-7bf6d9bacd32",
            "da04871d-9924-42ce-aaaa-00057c155d56",
            "0b58a47d-97fe-40b3-ad19-c496a43f9006",
            "236f7139-cc2b-4548-b4dc-630be4c6a758"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "eaea2cd3-b439-4a6f-be14-419b1dd45d9a",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1121,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "88e6f88f-f387-44ec-a8aa-4b535d1a4f4b",
              "parentUUID": "eaea2cd3-b439-4a6f-be14-419b1dd45d9a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "c56d2593-e27c-45e8-b5f8-a46677cf49be",
              "parentUUID": "eaea2cd3-b439-4a6f-be14-419b1dd45d9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "541cc786-a690-401c-b5dc-df61160a4418",
              "parentUUID": "eaea2cd3-b439-4a6f-be14-419b1dd45d9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8a226c3a-550e-4bc6-bf13-ba5c6970b078",
              "parentUUID": "eaea2cd3-b439-4a6f-be14-419b1dd45d9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "7bc95905-4540-460f-921b-18379a309a8f",
              "parentUUID": "eaea2cd3-b439-4a6f-be14-419b1dd45d9a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c56d2593-e27c-45e8-b5f8-a46677cf49be",
            "541cc786-a690-401c-b5dc-df61160a4418",
            "8a226c3a-550e-4bc6-bf13-ba5c6970b078",
            "7bc95905-4540-460f-921b-18379a309a8f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "306cb7c7-704e-4436-9fb5-01536c21a4f2",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1101,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "14104fe5-ade6-457b-af4d-5645105d27e0",
              "parentUUID": "306cb7c7-704e-4436-9fb5-01536c21a4f2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "c2ce69b9-fb6c-4800-a29f-4a454d6a1798",
              "parentUUID": "306cb7c7-704e-4436-9fb5-01536c21a4f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "7ae526bb-9eab-44ca-9950-dc8350101181",
              "parentUUID": "306cb7c7-704e-4436-9fb5-01536c21a4f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "e1c47c46-bfee-46f3-8df7-a8127ae5b514",
              "parentUUID": "306cb7c7-704e-4436-9fb5-01536c21a4f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2f275788-8095-4e30-ab88-94eec1b86f62",
              "parentUUID": "306cb7c7-704e-4436-9fb5-01536c21a4f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2ce69b9-fb6c-4800-a29f-4a454d6a1798",
            "7ae526bb-9eab-44ca-9950-dc8350101181",
            "e1c47c46-bfee-46f3-8df7-a8127ae5b514",
            "2f275788-8095-4e30-ab88-94eec1b86f62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "605ee717-d293-46a4-b62d-241e3db48d08",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 890,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "55df6e6f-8df5-4661-857f-a3b65e2601d7",
              "parentUUID": "605ee717-d293-46a4-b62d-241e3db48d08",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "94f36d7f-d2cb-41e0-ae10-766326f4bbfb",
              "parentUUID": "605ee717-d293-46a4-b62d-241e3db48d08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "70da0424-a778-493b-8c3d-97e58094b93e",
              "parentUUID": "605ee717-d293-46a4-b62d-241e3db48d08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "bd2ed73d-0536-447d-9e12-262ad5030043",
              "parentUUID": "605ee717-d293-46a4-b62d-241e3db48d08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "224f919d-aeef-4846-9bda-d0cfb7d54ea5",
              "parentUUID": "605ee717-d293-46a4-b62d-241e3db48d08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94f36d7f-d2cb-41e0-ae10-766326f4bbfb",
            "70da0424-a778-493b-8c3d-97e58094b93e",
            "bd2ed73d-0536-447d-9e12-262ad5030043",
            "224f919d-aeef-4846-9bda-d0cfb7d54ea5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "5789f717-64b6-452f-bc38-2febbbd20cef",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1363,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "87e9e833-ed33-4515-b5dc-031fea50b03e",
              "parentUUID": "5789f717-64b6-452f-bc38-2febbbd20cef",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "a00068be-0c3d-4346-87ed-db44f46b2e79",
              "parentUUID": "5789f717-64b6-452f-bc38-2febbbd20cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "18b63f7a-9450-4549-b1a0-4bf67b6d59b3",
              "parentUUID": "5789f717-64b6-452f-bc38-2febbbd20cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "17aebd67-a60b-4081-9d0a-0dfd5ec40544",
              "parentUUID": "5789f717-64b6-452f-bc38-2febbbd20cef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ba3f29ee-b29d-4c90-8911-7617dabe1fe4",
              "parentUUID": "5789f717-64b6-452f-bc38-2febbbd20cef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a00068be-0c3d-4346-87ed-db44f46b2e79",
            "18b63f7a-9450-4549-b1a0-4bf67b6d59b3",
            "17aebd67-a60b-4081-9d0a-0dfd5ec40544",
            "ba3f29ee-b29d-4c90-8911-7617dabe1fe4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "07671c32-1ad6-4404-b52d-3a8eb1f451bf",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 804,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a58cc9e7-02f7-4616-8b66-d147790b9a76",
              "parentUUID": "07671c32-1ad6-4404-b52d-3a8eb1f451bf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "32d2b9db-bb97-4b50-9c15-f302fc3e5093",
              "parentUUID": "07671c32-1ad6-4404-b52d-3a8eb1f451bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "41bdc631-dc1a-4ec8-bb8b-efed5be63300",
              "parentUUID": "07671c32-1ad6-4404-b52d-3a8eb1f451bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "6195a6ec-360a-4321-adc8-8d45ca7145aa",
              "parentUUID": "07671c32-1ad6-4404-b52d-3a8eb1f451bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "414e63f1-33fe-401e-82fe-f09bdeafd453",
              "parentUUID": "07671c32-1ad6-4404-b52d-3a8eb1f451bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "32d2b9db-bb97-4b50-9c15-f302fc3e5093",
            "41bdc631-dc1a-4ec8-bb8b-efed5be63300",
            "6195a6ec-360a-4321-adc8-8d45ca7145aa",
            "414e63f1-33fe-401e-82fe-f09bdeafd453"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "1c6c034b-dfc5-4be0-8517-8c572b1b829b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 793,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a46074ae-2e92-4f89-b633-bf6a6b0a3bcb",
              "parentUUID": "1c6c034b-dfc5-4be0-8517-8c572b1b829b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "6d430ef5-fa10-41d6-ae72-9150b66727ac",
              "parentUUID": "1c6c034b-dfc5-4be0-8517-8c572b1b829b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "1cf97c28-ccf7-4104-81ba-4d361b9647a6",
              "parentUUID": "1c6c034b-dfc5-4be0-8517-8c572b1b829b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "66fafad2-3122-4cf2-8ab2-9fda5924467b",
              "parentUUID": "1c6c034b-dfc5-4be0-8517-8c572b1b829b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "022156b0-3f8f-4323-b30e-a6091c597a22",
              "parentUUID": "1c6c034b-dfc5-4be0-8517-8c572b1b829b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d430ef5-fa10-41d6-ae72-9150b66727ac",
            "1cf97c28-ccf7-4104-81ba-4d361b9647a6",
            "66fafad2-3122-4cf2-8ab2-9fda5924467b",
            "022156b0-3f8f-4323-b30e-a6091c597a22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "4860ba0c-e1f1-41fe-b618-e1e0d708824c",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1273,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5e9091ba-1b0a-47fc-a717-a5e4814f0f5e",
              "parentUUID": "4860ba0c-e1f1-41fe-b618-e1e0d708824c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "b3e869ac-da53-4d73-8a16-4d6c5c6f0d9e",
              "parentUUID": "4860ba0c-e1f1-41fe-b618-e1e0d708824c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "55afe180-22db-4f17-9eb2-2d61cc405552",
              "parentUUID": "4860ba0c-e1f1-41fe-b618-e1e0d708824c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "fb264f33-036c-4510-8d1c-9ab302296831",
              "parentUUID": "4860ba0c-e1f1-41fe-b618-e1e0d708824c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c34a1a43-96e9-4052-9e64-478a872f62db",
              "parentUUID": "4860ba0c-e1f1-41fe-b618-e1e0d708824c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b3e869ac-da53-4d73-8a16-4d6c5c6f0d9e",
            "55afe180-22db-4f17-9eb2-2d61cc405552",
            "fb264f33-036c-4510-8d1c-9ab302296831",
            "c34a1a43-96e9-4052-9e64-478a872f62db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f630f469-2363-4f75-9a1e-28410397d3cd",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1371,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "3cae5ad5-1153-4d47-9375-12de8b8062f6",
              "parentUUID": "f630f469-2363-4f75-9a1e-28410397d3cd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "5c1e9aa6-62a9-4ba6-83c2-9d6179ba16e1",
              "parentUUID": "f630f469-2363-4f75-9a1e-28410397d3cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "f6c24e41-5384-4f22-a7f2-64a8c858f70f",
              "parentUUID": "f630f469-2363-4f75-9a1e-28410397d3cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "6d92b90c-483f-45bc-b7e6-2f119a73c0e2",
              "parentUUID": "f630f469-2363-4f75-9a1e-28410397d3cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "6a821d9a-2f7f-4533-a2be-616fd8648cc6",
              "parentUUID": "f630f469-2363-4f75-9a1e-28410397d3cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c1e9aa6-62a9-4ba6-83c2-9d6179ba16e1",
            "f6c24e41-5384-4f22-a7f2-64a8c858f70f",
            "6d92b90c-483f-45bc-b7e6-2f119a73c0e2",
            "6a821d9a-2f7f-4533-a2be-616fd8648cc6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "a32e8eb9-a595-49c0-8976-8d621e4ebaf0",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1255,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "df0e6a20-8055-4057-812b-a3882810284c",
              "parentUUID": "a32e8eb9-a595-49c0-8976-8d621e4ebaf0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "88b1e3c6-8dd2-4de2-b4e1-9e37a0f0829b",
              "parentUUID": "a32e8eb9-a595-49c0-8976-8d621e4ebaf0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "797629a7-d9a9-4d59-8f0f-673f1b218bc4",
              "parentUUID": "a32e8eb9-a595-49c0-8976-8d621e4ebaf0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "89001fc1-3dae-41e7-8cb5-a943a1879eb6",
              "parentUUID": "a32e8eb9-a595-49c0-8976-8d621e4ebaf0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8a827172-685e-4b85-95f3-9f1a156001b2",
              "parentUUID": "a32e8eb9-a595-49c0-8976-8d621e4ebaf0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88b1e3c6-8dd2-4de2-b4e1-9e37a0f0829b",
            "797629a7-d9a9-4d59-8f0f-673f1b218bc4",
            "89001fc1-3dae-41e7-8cb5-a943a1879eb6",
            "8a827172-685e-4b85-95f3-9f1a156001b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "2a39e68e-36b1-482e-b3a6-a3d22ca936a5",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1188,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "0d20d06d-cc6a-45ba-8372-4eb1f70677d3",
              "parentUUID": "2a39e68e-36b1-482e-b3a6-a3d22ca936a5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "567d70c4-c8c9-41ee-b62c-d319cff00180",
              "parentUUID": "2a39e68e-36b1-482e-b3a6-a3d22ca936a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ca99b715-d946-4a0d-93bf-fae55ebcb842",
              "parentUUID": "2a39e68e-36b1-482e-b3a6-a3d22ca936a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "22628f2b-cf6c-4547-8a93-9792f3d06292",
              "parentUUID": "2a39e68e-36b1-482e-b3a6-a3d22ca936a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "cbf6221f-548b-434c-855f-415980c4ef09",
              "parentUUID": "2a39e68e-36b1-482e-b3a6-a3d22ca936a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "567d70c4-c8c9-41ee-b62c-d319cff00180",
            "ca99b715-d946-4a0d-93bf-fae55ebcb842",
            "22628f2b-cf6c-4547-8a93-9792f3d06292",
            "cbf6221f-548b-434c-855f-415980c4ef09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "1c701851-adc4-4a56-b17e-1d768c44ee7e",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1071,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "fc311181-1e69-470b-a8d0-aa2f6010bca8",
              "parentUUID": "1c701851-adc4-4a56-b17e-1d768c44ee7e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "312a1ec1-8d3f-4754-b30c-e821221bdb63",
              "parentUUID": "1c701851-adc4-4a56-b17e-1d768c44ee7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "20a59ec9-47b5-46cc-91a7-d90757a657ef",
              "parentUUID": "1c701851-adc4-4a56-b17e-1d768c44ee7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "24d99d95-2e1f-446d-acfe-425e8895cbce",
              "parentUUID": "1c701851-adc4-4a56-b17e-1d768c44ee7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "942b6976-0551-4387-a6c1-6bd442f7812c",
              "parentUUID": "1c701851-adc4-4a56-b17e-1d768c44ee7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "312a1ec1-8d3f-4754-b30c-e821221bdb63",
            "20a59ec9-47b5-46cc-91a7-d90757a657ef",
            "24d99d95-2e1f-446d-acfe-425e8895cbce",
            "942b6976-0551-4387-a6c1-6bd442f7812c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "dc90c4b0-6394-4bee-87bb-d941f810ee64",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1041,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "86af1496-e22a-4721-8c65-7fa2abd4f50b",
              "parentUUID": "dc90c4b0-6394-4bee-87bb-d941f810ee64",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "9b2e433c-e389-4e57-9ee9-72449c959cea",
              "parentUUID": "dc90c4b0-6394-4bee-87bb-d941f810ee64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "7164c557-5ddd-4584-a59a-77f582eaf3bc",
              "parentUUID": "dc90c4b0-6394-4bee-87bb-d941f810ee64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "23b6a7a9-138d-49d5-8cc5-67bdbcef5144",
              "parentUUID": "dc90c4b0-6394-4bee-87bb-d941f810ee64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "bba8f686-bfb0-49a7-9935-ea45cbab2a63",
              "parentUUID": "dc90c4b0-6394-4bee-87bb-d941f810ee64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b2e433c-e389-4e57-9ee9-72449c959cea",
            "7164c557-5ddd-4584-a59a-77f582eaf3bc",
            "23b6a7a9-138d-49d5-8cc5-67bdbcef5144",
            "bba8f686-bfb0-49a7-9935-ea45cbab2a63"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "307b36ac-4ad3-4577-91c8-9cc0e4836e5f",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1213,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "df31a09f-f95e-4ab0-9ac7-8e1df3b43242",
              "parentUUID": "307b36ac-4ad3-4577-91c8-9cc0e4836e5f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "e65efe8c-1325-42d8-9069-77ab1308e87e",
              "parentUUID": "307b36ac-4ad3-4577-91c8-9cc0e4836e5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "3f64efec-17bf-4172-833f-3fdc76d8a923",
              "parentUUID": "307b36ac-4ad3-4577-91c8-9cc0e4836e5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "739adc57-1d5b-4bee-a2f1-50217151968f",
              "parentUUID": "307b36ac-4ad3-4577-91c8-9cc0e4836e5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4c017d6e-2e5b-49c0-99e5-9f99e12a08cd",
              "parentUUID": "307b36ac-4ad3-4577-91c8-9cc0e4836e5f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e65efe8c-1325-42d8-9069-77ab1308e87e",
            "3f64efec-17bf-4172-833f-3fdc76d8a923",
            "739adc57-1d5b-4bee-a2f1-50217151968f",
            "4c017d6e-2e5b-49c0-99e5-9f99e12a08cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "29ebcc34-51d5-447d-9386-55265c5b66b6",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 920,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b03d007e-a0f8-4a22-8369-2be048268b29",
              "parentUUID": "29ebcc34-51d5-447d-9386-55265c5b66b6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "2e580d93-2d1f-4067-b000-54de2a3604a6",
              "parentUUID": "29ebcc34-51d5-447d-9386-55265c5b66b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ea5b40a5-ebb9-4257-8a04-60b5c8e730fb",
              "parentUUID": "29ebcc34-51d5-447d-9386-55265c5b66b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "1574509b-e7f2-4414-ab96-545ec209e8f3",
              "parentUUID": "29ebcc34-51d5-447d-9386-55265c5b66b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "7e128cc7-c5cf-4b24-8cdd-5c7b1eabb16b",
              "parentUUID": "29ebcc34-51d5-447d-9386-55265c5b66b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2e580d93-2d1f-4067-b000-54de2a3604a6",
            "ea5b40a5-ebb9-4257-8a04-60b5c8e730fb",
            "1574509b-e7f2-4414-ab96-545ec209e8f3",
            "7e128cc7-c5cf-4b24-8cdd-5c7b1eabb16b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c9f27c9f-4c57-4b08-a554-cb9026d5bed7",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1180,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "a1b26068-27a3-4f42-9292-bfa9981e5dd2",
              "parentUUID": "c9f27c9f-4c57-4b08-a554-cb9026d5bed7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "880c96e5-d1d4-416e-a140-0ddba3a1e707",
              "parentUUID": "c9f27c9f-4c57-4b08-a554-cb9026d5bed7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "6290847b-3694-46b9-b38f-eb235d0d870f",
              "parentUUID": "c9f27c9f-4c57-4b08-a554-cb9026d5bed7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "dab900d7-01d6-425e-9d62-bca24dd3c87f",
              "parentUUID": "c9f27c9f-4c57-4b08-a554-cb9026d5bed7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "9cd54534-d517-4143-a55e-5cf776593962",
              "parentUUID": "c9f27c9f-4c57-4b08-a554-cb9026d5bed7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "880c96e5-d1d4-416e-a140-0ddba3a1e707",
            "6290847b-3694-46b9-b38f-eb235d0d870f",
            "dab900d7-01d6-425e-9d62-bca24dd3c87f",
            "9cd54534-d517-4143-a55e-5cf776593962"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "9637ce4f-8dee-4608-b33b-c2e32a6cca45",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 930,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "831b16eb-d40c-405d-ae8c-65f1fe9d2f4e",
              "parentUUID": "9637ce4f-8dee-4608-b33b-c2e32a6cca45",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "c4756f98-d359-465e-90b4-412cf23c7c6e",
              "parentUUID": "9637ce4f-8dee-4608-b33b-c2e32a6cca45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "93f9dae4-afd8-4986-b09a-eeffcca4b9bd",
              "parentUUID": "9637ce4f-8dee-4608-b33b-c2e32a6cca45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "00f0681e-7e7e-4f08-b5db-de73059135b2",
              "parentUUID": "9637ce4f-8dee-4608-b33b-c2e32a6cca45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "0e04996e-99fa-4a69-8616-8f445fdef0d8",
              "parentUUID": "9637ce4f-8dee-4608-b33b-c2e32a6cca45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c4756f98-d359-465e-90b4-412cf23c7c6e",
            "93f9dae4-afd8-4986-b09a-eeffcca4b9bd",
            "00f0681e-7e7e-4f08-b5db-de73059135b2",
            "0e04996e-99fa-4a69-8616-8f445fdef0d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "4f2a2adc-15b5-4628-8652-1ca22ec4a03a",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 942,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "1476c62f-5d2f-4e6e-8885-496f0002cf48",
              "parentUUID": "4f2a2adc-15b5-4628-8652-1ca22ec4a03a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "374e975d-de82-4b9c-8eb6-cf44a739d070",
              "parentUUID": "4f2a2adc-15b5-4628-8652-1ca22ec4a03a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "abf7d096-675c-4903-afc1-6c50e264ea75",
              "parentUUID": "4f2a2adc-15b5-4628-8652-1ca22ec4a03a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "d2169918-714e-4df3-8a0c-8550959c6e1e",
              "parentUUID": "4f2a2adc-15b5-4628-8652-1ca22ec4a03a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "be21bd33-9b98-4ad6-9ffa-7e13c5992336",
              "parentUUID": "4f2a2adc-15b5-4628-8652-1ca22ec4a03a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "374e975d-de82-4b9c-8eb6-cf44a739d070",
            "abf7d096-675c-4903-afc1-6c50e264ea75",
            "d2169918-714e-4df3-8a0c-8550959c6e1e",
            "be21bd33-9b98-4ad6-9ffa-7e13c5992336"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ea8a44b6-8fbf-402c-bdb3-d16940e78a9b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 741,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "64dc1ae1-e7f9-4f9f-a23a-836fd0ac6e9a",
              "parentUUID": "ea8a44b6-8fbf-402c-bdb3-d16940e78a9b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "691d9de4-0f74-43c7-8e09-68640f6c61c9",
              "parentUUID": "ea8a44b6-8fbf-402c-bdb3-d16940e78a9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "fa0c7625-a466-4a6c-821e-9228fef5e2fd",
              "parentUUID": "ea8a44b6-8fbf-402c-bdb3-d16940e78a9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "cad49f3b-4c11-4a43-8118-64dcfb648406",
              "parentUUID": "ea8a44b6-8fbf-402c-bdb3-d16940e78a9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "11ca5c76-7557-44f9-a39f-1664bcbf1325",
              "parentUUID": "ea8a44b6-8fbf-402c-bdb3-d16940e78a9b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "691d9de4-0f74-43c7-8e09-68640f6c61c9",
            "fa0c7625-a466-4a6c-821e-9228fef5e2fd",
            "cad49f3b-4c11-4a43-8118-64dcfb648406",
            "11ca5c76-7557-44f9-a39f-1664bcbf1325"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "c31875b6-f129-4b32-91a6-68fbe2bc491d",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 809,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "c811ba5d-0638-41d1-84ef-cfb2cca1422a",
              "parentUUID": "c31875b6-f129-4b32-91a6-68fbe2bc491d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "d7ebdbf6-c92a-403c-8c45-5277865e5067",
              "parentUUID": "c31875b6-f129-4b32-91a6-68fbe2bc491d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "009a30f6-2c0c-4923-90a9-50613d438b52",
              "parentUUID": "c31875b6-f129-4b32-91a6-68fbe2bc491d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "bcc7802c-de38-4314-9777-b06d188667cd",
              "parentUUID": "c31875b6-f129-4b32-91a6-68fbe2bc491d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2dce3c3e-51f1-4e2a-835e-13df244b0653",
              "parentUUID": "c31875b6-f129-4b32-91a6-68fbe2bc491d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7ebdbf6-c92a-403c-8c45-5277865e5067",
            "009a30f6-2c0c-4923-90a9-50613d438b52",
            "bcc7802c-de38-4314-9777-b06d188667cd",
            "2dce3c3e-51f1-4e2a-835e-13df244b0653"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "7d08e0b8-a8c3-45ac-8432-356f6f30c38b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 958,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b26a8d5b-4049-49e9-9822-33814c721fd4",
              "parentUUID": "7d08e0b8-a8c3-45ac-8432-356f6f30c38b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "62887b30-b8b9-4b1e-acb5-07712f451112",
              "parentUUID": "7d08e0b8-a8c3-45ac-8432-356f6f30c38b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "2d49e97f-4ce3-47ae-b714-54412ad3073f",
              "parentUUID": "7d08e0b8-a8c3-45ac-8432-356f6f30c38b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8071eb10-fb53-454f-b7b1-9456c4657619",
              "parentUUID": "7d08e0b8-a8c3-45ac-8432-356f6f30c38b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8ae2bfcf-5993-4fbe-ba96-4d2b1076fdab",
              "parentUUID": "7d08e0b8-a8c3-45ac-8432-356f6f30c38b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62887b30-b8b9-4b1e-acb5-07712f451112",
            "2d49e97f-4ce3-47ae-b714-54412ad3073f",
            "8071eb10-fb53-454f-b7b1-9456c4657619",
            "8ae2bfcf-5993-4fbe-ba96-4d2b1076fdab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "bc4f9b8c-3088-497a-9ca2-63669b554618",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1020,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "7bb3b00c-e1b2-48c0-ac2c-0da578d8b0de",
              "parentUUID": "bc4f9b8c-3088-497a-9ca2-63669b554618",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "3c3295f9-ffca-4a2b-877a-8d46423f8f97",
              "parentUUID": "bc4f9b8c-3088-497a-9ca2-63669b554618",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "8e32e5f1-3526-4627-99fa-b875b2297379",
              "parentUUID": "bc4f9b8c-3088-497a-9ca2-63669b554618",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "4f9a3f26-5215-46dd-a3ff-e6b3a72aa5f8",
              "parentUUID": "bc4f9b8c-3088-497a-9ca2-63669b554618",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "62ece34e-c55f-472d-a6b1-53a27e5fa448",
              "parentUUID": "bc4f9b8c-3088-497a-9ca2-63669b554618",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c3295f9-ffca-4a2b-877a-8d46423f8f97",
            "8e32e5f1-3526-4627-99fa-b875b2297379",
            "4f9a3f26-5215-46dd-a3ff-e6b3a72aa5f8",
            "62ece34e-c55f-472d-a6b1-53a27e5fa448"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "10bc5de0-3896-4691-b02f-01c445ead30e",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 813,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "2548e354-08a5-491c-b0f0-db02e34322d2",
              "parentUUID": "10bc5de0-3896-4691-b02f-01c445ead30e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "fccfb4eb-077f-4c2e-810c-c1c3b0b45068",
              "parentUUID": "10bc5de0-3896-4691-b02f-01c445ead30e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "ad292ee9-b1a4-45cd-ada5-6aa6a622c8dc",
              "parentUUID": "10bc5de0-3896-4691-b02f-01c445ead30e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ce643ccf-76f2-4d90-8934-2390a8ad5387",
              "parentUUID": "10bc5de0-3896-4691-b02f-01c445ead30e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "33cab10e-6d41-46ad-8ce4-bca46391947a",
              "parentUUID": "10bc5de0-3896-4691-b02f-01c445ead30e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fccfb4eb-077f-4c2e-810c-c1c3b0b45068",
            "ad292ee9-b1a4-45cd-ada5-6aa6a622c8dc",
            "ce643ccf-76f2-4d90-8934-2390a8ad5387",
            "33cab10e-6d41-46ad-8ce4-bca46391947a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d9bbe174-29cf-4a96-aa63-6923111eb669",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 756,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6fcadc12-2ad8-4b9e-96c8-76a21e4e24e2",
              "parentUUID": "d9bbe174-29cf-4a96-aa63-6923111eb669",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "c5d3df52-2266-4657-b4b9-59e3a6888205",
              "parentUUID": "d9bbe174-29cf-4a96-aa63-6923111eb669",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "5f07cbb1-9696-4d73-8475-68a358a4f1a1",
              "parentUUID": "d9bbe174-29cf-4a96-aa63-6923111eb669",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "10fd1e2a-b9a1-4fb0-be58-c80a91d610f5",
              "parentUUID": "d9bbe174-29cf-4a96-aa63-6923111eb669",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "142afe09-d2ca-452d-a848-e0201ec3fbd9",
              "parentUUID": "d9bbe174-29cf-4a96-aa63-6923111eb669",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5d3df52-2266-4657-b4b9-59e3a6888205",
            "5f07cbb1-9696-4d73-8475-68a358a4f1a1",
            "10fd1e2a-b9a1-4fb0-be58-c80a91d610f5",
            "142afe09-d2ca-452d-a848-e0201ec3fbd9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "12ba08e0-dbbe-42e8-be95-365b711a5d58",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 859,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "48cc642a-15ed-43e5-af23-088ae677b6bc",
              "parentUUID": "12ba08e0-dbbe-42e8-be95-365b711a5d58",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "bed86e84-d275-484b-94d9-8346253d5b3e",
              "parentUUID": "12ba08e0-dbbe-42e8-be95-365b711a5d58",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "67422adf-6e75-43ce-be09-0a1f65e4fdf4",
              "parentUUID": "12ba08e0-dbbe-42e8-be95-365b711a5d58",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a3069683-fde3-471d-8556-f5bcaacba4c4",
              "parentUUID": "12ba08e0-dbbe-42e8-be95-365b711a5d58",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "72465370-1b06-4c48-a2dc-176ffe9a7786",
              "parentUUID": "12ba08e0-dbbe-42e8-be95-365b711a5d58",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bed86e84-d275-484b-94d9-8346253d5b3e",
            "67422adf-6e75-43ce-be09-0a1f65e4fdf4",
            "a3069683-fde3-471d-8556-f5bcaacba4c4",
            "72465370-1b06-4c48-a2dc-176ffe9a7786"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "12c0b66e-f0f9-4212-b72b-e0687d3def9b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1109,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e31f461d-1b62-4c90-b212-c9d56fffac39",
              "parentUUID": "12c0b66e-f0f9-4212-b72b-e0687d3def9b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "6aa408c5-8085-4e23-a1e7-43441b7d6193",
              "parentUUID": "12c0b66e-f0f9-4212-b72b-e0687d3def9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "61ea85b5-5592-48ba-bef8-3c5944338336",
              "parentUUID": "12c0b66e-f0f9-4212-b72b-e0687d3def9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "fc0c221d-6a20-4981-acc5-7376752071f3",
              "parentUUID": "12c0b66e-f0f9-4212-b72b-e0687d3def9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "68947182-f698-4402-af78-4a5c0d59c2c8",
              "parentUUID": "12c0b66e-f0f9-4212-b72b-e0687d3def9b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6aa408c5-8085-4e23-a1e7-43441b7d6193",
            "61ea85b5-5592-48ba-bef8-3c5944338336",
            "fc0c221d-6a20-4981-acc5-7376752071f3",
            "68947182-f698-4402-af78-4a5c0d59c2c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b01d988e-da7c-4a50-8231-a222aa4a167a",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1328,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "6aff2e4e-ee59-4031-96b0-3fdb20f92e6d",
              "parentUUID": "b01d988e-da7c-4a50-8231-a222aa4a167a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "2441e5be-8d5d-4d16-8479-e936cc5d78c9",
              "parentUUID": "b01d988e-da7c-4a50-8231-a222aa4a167a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "b0610517-31fd-4f08-968b-a8a7b85ae50d",
              "parentUUID": "b01d988e-da7c-4a50-8231-a222aa4a167a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "bba0f582-ea05-46b8-9ef2-c2de50fbf002",
              "parentUUID": "b01d988e-da7c-4a50-8231-a222aa4a167a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "061f879f-3cf3-4063-856e-f1f70267b3fd",
              "parentUUID": "b01d988e-da7c-4a50-8231-a222aa4a167a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2441e5be-8d5d-4d16-8479-e936cc5d78c9",
            "b0610517-31fd-4f08-968b-a8a7b85ae50d",
            "bba0f582-ea05-46b8-9ef2-c2de50fbf002",
            "061f879f-3cf3-4063-856e-f1f70267b3fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "d3359a8a-1f96-4ef6-bcde-c6a6ac96f81b",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 726,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "4a908056-f2e2-48ae-be99-77703f3ccd0f",
              "parentUUID": "d3359a8a-1f96-4ef6-bcde-c6a6ac96f81b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "e9f73c00-17b1-420a-852b-cc2b0fd2c37f",
              "parentUUID": "d3359a8a-1f96-4ef6-bcde-c6a6ac96f81b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "dee3e577-61b2-4a94-9103-ba0c3234bd9f",
              "parentUUID": "d3359a8a-1f96-4ef6-bcde-c6a6ac96f81b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "3c52ba60-d36d-4b4a-a4f8-42bdcd2a3d29",
              "parentUUID": "d3359a8a-1f96-4ef6-bcde-c6a6ac96f81b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "83d510a2-c845-4030-ad35-5b669cdb893e",
              "parentUUID": "d3359a8a-1f96-4ef6-bcde-c6a6ac96f81b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9f73c00-17b1-420a-852b-cc2b0fd2c37f",
            "dee3e577-61b2-4a94-9103-ba0c3234bd9f",
            "3c52ba60-d36d-4b4a-a4f8-42bdcd2a3d29",
            "83d510a2-c845-4030-ad35-5b669cdb893e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "3a5192ca-d364-4b14-baa9-7a55319aa2dd",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1034,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "fa56362c-67ef-40bc-acfe-914dfc1fc233",
              "parentUUID": "3a5192ca-d364-4b14-baa9-7a55319aa2dd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "b5aa2b09-6b4b-43a8-8331-b89ce6c5d302",
              "parentUUID": "3a5192ca-d364-4b14-baa9-7a55319aa2dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "b23327bb-c4d0-44d2-a2c9-d3b5d06053f3",
              "parentUUID": "3a5192ca-d364-4b14-baa9-7a55319aa2dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "c4849166-1915-4a9b-9c1e-6fc591f2303e",
              "parentUUID": "3a5192ca-d364-4b14-baa9-7a55319aa2dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "25608e5a-71be-4b05-9b4c-22d3140b9916",
              "parentUUID": "3a5192ca-d364-4b14-baa9-7a55319aa2dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5aa2b09-6b4b-43a8-8331-b89ce6c5d302",
            "b23327bb-c4d0-44d2-a2c9-d3b5d06053f3",
            "c4849166-1915-4a9b-9c1e-6fc591f2303e",
            "25608e5a-71be-4b05-9b4c-22d3140b9916"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "f7951878-0e37-4158-a846-a2a5b59e7754",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 870,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "b352d025-77eb-4645-abcd-feafaf7f6cb1",
              "parentUUID": "f7951878-0e37-4158-a846-a2a5b59e7754",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "3e7c9f80-ba3b-4b21-a5ba-c15bb504de55",
              "parentUUID": "f7951878-0e37-4158-a846-a2a5b59e7754",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "2e6e5a31-e5b3-48fa-8099-ab1f825a54a2",
              "parentUUID": "f7951878-0e37-4158-a846-a2a5b59e7754",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8931b967-933d-4676-a028-30114aef2936",
              "parentUUID": "f7951878-0e37-4158-a846-a2a5b59e7754",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "fa9e6668-f84b-4f75-96a7-6becfc882833",
              "parentUUID": "f7951878-0e37-4158-a846-a2a5b59e7754",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e7c9f80-ba3b-4b21-a5ba-c15bb504de55",
            "2e6e5a31-e5b3-48fa-8099-ab1f825a54a2",
            "8931b967-933d-4676-a028-30114aef2936",
            "fa9e6668-f84b-4f75-96a7-6becfc882833"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "8882107d-0a41-42c4-be64-b81504c1154e",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1066,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "5f54eee0-11a4-4a46-a692-041395e137ec",
              "parentUUID": "8882107d-0a41-42c4-be64-b81504c1154e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "41e14378-ef76-490e-b6ee-bec0ab23492c",
              "parentUUID": "8882107d-0a41-42c4-be64-b81504c1154e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "362f3a6b-96a2-45d0-bd1c-370568ca9a38",
              "parentUUID": "8882107d-0a41-42c4-be64-b81504c1154e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "a63f5206-7dce-44e3-85f9-d768de78892a",
              "parentUUID": "8882107d-0a41-42c4-be64-b81504c1154e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "ab018bf9-e1a9-407e-90fb-77db365daa7c",
              "parentUUID": "8882107d-0a41-42c4-be64-b81504c1154e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41e14378-ef76-490e-b6ee-bec0ab23492c",
            "362f3a6b-96a2-45d0-bd1c-370568ca9a38",
            "a63f5206-7dce-44e3-85f9-d768de78892a",
            "ab018bf9-e1a9-407e-90fb-77db365daa7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "cf11b60c-c356-4d36-992d-33d476ba2027",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 826,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "8d3a11a4-6a50-478b-b924-d4b2b3574ccc",
              "parentUUID": "cf11b60c-c356-4d36-992d-33d476ba2027",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "ead5ded0-c0b0-4201-9ad4-bf6a65be450f",
              "parentUUID": "cf11b60c-c356-4d36-992d-33d476ba2027",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "5fd5c685-bbfb-4253-ac73-4fa797e2c99a",
              "parentUUID": "cf11b60c-c356-4d36-992d-33d476ba2027",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "2cb072bd-5009-473e-bb02-f2288d559c61",
              "parentUUID": "cf11b60c-c356-4d36-992d-33d476ba2027",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "b2fed1b6-932c-45fe-88d4-7320f17eaa9d",
              "parentUUID": "cf11b60c-c356-4d36-992d-33d476ba2027",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ead5ded0-c0b0-4201-9ad4-bf6a65be450f",
            "5fd5c685-bbfb-4253-ac73-4fa797e2c99a",
            "2cb072bd-5009-473e-bb02-f2288d559c61",
            "b2fed1b6-932c-45fe-88d4-7320f17eaa9d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b7a7fcd6-4579-4f89-9549-e8959cfd8e93",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 1599,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "d1198e44-ab40-4964-90f9-f7e2a30342c7",
              "parentUUID": "b7a7fcd6-4579-4f89-9549-e8959cfd8e93",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "3e811202-f943-45be-9f7a-ec3e6a81b26e",
              "parentUUID": "b7a7fcd6-4579-4f89-9549-e8959cfd8e93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "8dfffa16-6bad-40c1-9713-97668ce926d7",
              "parentUUID": "b7a7fcd6-4579-4f89-9549-e8959cfd8e93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "05df9f7a-f286-456c-9115-12f2a42d03a0",
              "parentUUID": "b7a7fcd6-4579-4f89-9549-e8959cfd8e93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "247d7e54-4a80-411c-8468-9644788335e3",
              "parentUUID": "b7a7fcd6-4579-4f89-9549-e8959cfd8e93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e811202-f943-45be-9f7a-ec3e6a81b26e",
            "8dfffa16-6bad-40c1-9713-97668ce926d7",
            "05df9f7a-f286-456c-9115-12f2a42d03a0",
            "247d7e54-4a80-411c-8468-9644788335e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "b90ac4b3-cd0a-4f71-a61e-0d131e253744",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 859,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "e2bcbd70-877e-42c6-9d69-ce72bdc06f3c",
              "parentUUID": "b90ac4b3-cd0a-4f71-a61e-0d131e253744",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "3f3efbce-8eb7-4452-b4e4-e065d0b0d0e4",
              "parentUUID": "b90ac4b3-cd0a-4f71-a61e-0d131e253744",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "b3d0572c-9b7d-40cc-8472-4cfa1636dba3",
              "parentUUID": "b90ac4b3-cd0a-4f71-a61e-0d131e253744",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "8217358a-384e-4a3f-9b8a-cf2ec4adedc0",
              "parentUUID": "b90ac4b3-cd0a-4f71-a61e-0d131e253744",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "818592ac-ada4-48b9-854d-a7384d894270",
              "parentUUID": "b90ac4b3-cd0a-4f71-a61e-0d131e253744",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f3efbce-8eb7-4452-b4e4-e065d0b0d0e4",
            "b3d0572c-9b7d-40cc-8472-4cfa1636dba3",
            "8217358a-384e-4a3f-9b8a-cf2ec4adedc0",
            "818592ac-ada4-48b9-854d-a7384d894270"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "ab463790-e2fe-42d8-9e28-5003e69fd9d6",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 863,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "9761ab51-0a2e-4b77-8cba-bb976055c735",
              "parentUUID": "ab463790-e2fe-42d8-9e28-5003e69fd9d6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "f9661227-1024-4302-8341-3aaf8db612c4",
              "parentUUID": "ab463790-e2fe-42d8-9e28-5003e69fd9d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "c03194d4-6e5c-46c4-9155-9d0b3dd59258",
              "parentUUID": "ab463790-e2fe-42d8-9e28-5003e69fd9d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "03844196-594e-44e9-b19b-309e4bc98397",
              "parentUUID": "ab463790-e2fe-42d8-9e28-5003e69fd9d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "7392893a-04bd-4307-8df2-742f44104f95",
              "parentUUID": "ab463790-e2fe-42d8-9e28-5003e69fd9d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9661227-1024-4302-8341-3aaf8db612c4",
            "c03194d4-6e5c-46c4-9155-9d0b3dd59258",
            "03844196-594e-44e9-b19b-309e4bc98397",
            "7392893a-04bd-4307-8df2-742f44104f95"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "009d93d1-8940-422c-aab7-9968f7a1c183",
          "title": "Test win",
          "fullFile": "/Users/marinaratova/Desktop/JS/mocha-chai-test-project/test/test add wining-withdrow bet.js",
          "file": "/test/test add wining-withdrow bet.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Spin",
              "fullTitle": "Test win \"before all\" hook: Spin",
              "timedOut": false,
              "duration": 860,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    const responce = await spin(urlSpin, token, id, elbet, lines);\n    let { res, actionSpin } = responce;\n    let actionNow = res.context.current;\n    console.log(res);\n    logger.info(`actionSpin ${actionSpin}`);\n    let newBalance = res.user.balance;\n    const funcResult = checkWin1(res);\n    let bet = res.context.bet * lines;\n    logger.info(`bet ${bet}`);\n    const file = await fs.readFile('db1.json', 'utf8');\n    const obj = JSON.parse(file);\n    date = { funcResult, res, ...obj, actionSpin, actionNow, newBalance, bet };\n} catch (error) {\n    console.log('!!!!!!ERROR in before block!!!!!! ' + error);\n}",
              "err": {},
              "uuid": "f17c4ee5-30a9-495b-8a15-b2f44a221979",
              "parentUUID": "009d93d1-8940-422c-aab7-9968f7a1c183",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": " check add winning to balance  and withdrawing bet in Spin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Spin",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, funcResult, balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionNow == \"spin\" && actionSpin == \"spin\") {\n\n    if (funcResult !== null) {\n        let win = res.context.win.total;\n        let rightBalance = balance + win - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    } else {\n        let rightBalance = balance - bet;\n        let file = { balance: newBalance };\n        await fs.writeFile('db1.json', JSON.stringify(file));\n        expect(rightBalance).to.equal(Number(newBalance));\n        console.log(`rightBalans ${rightBalance}`);\n        console.log(`newBalance ${newBalance}`);\n        logger.info(`rightBalans ${rightBalance}`);\n        logger.info(`newBalance ${newBalance}`);\n    }\n}",
              "err": {},
              "uuid": "45e0dcc6-5340-4ea3-876b-4fc179315254",
              "parentUUID": "009d93d1-8940-422c-aab7-9968f7a1c183",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in start FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in start FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance, bet } = date;\nif (actionSpin == \"freespin\" && actionNow == \"spin\") {\n    let rightBalance = balance - bet;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n}",
              "err": {},
              "uuid": "a4f26a9b-0f05-44a3-bb33-093c2e605093",
              "parentUUID": "009d93d1-8940-422c-aab7-9968f7a1c183",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in end FS",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in end FS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { res, balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"spin\" && actionNow == \"freespin\") {\n    let totalWinFS = res.context.freespins.win;\n    let rightBalance = totalWinFS + balance;\n    let file = { balance: newBalance };\n    await fs.writeFile('db1.json', JSON.stringify(file));\n    expect(newBalance).to.equal(rightBalance);\n    logger.info(`rightBalans ${rightBalance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "47628d92-4c3b-496b-b0e3-8c21cadea01b",
              "parentUUID": "009d93d1-8940-422c-aab7-9968f7a1c183",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " check add winning to balance  and withdrawing bet in Freespin",
              "fullTitle": "Test win  check add winning to balance  and withdrawing bet in Freespin",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let { balance, actionSpin, actionNow, newBalance } = date;\nif (actionSpin == \"freespin\" && actionNow == \"freespin\") {\n    expect(balance).to.equal(Number(newBalance));\n    logger.info(`rightBalans ${balance}`);\n    logger.info(`newBalance ${newBalance}`);\n}",
              "err": {},
              "uuid": "eca936df-7421-455d-81aa-ffa5ce73718c",
              "parentUUID": "009d93d1-8940-422c-aab7-9968f7a1c183",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "45e0dcc6-5340-4ea3-876b-4fc179315254",
            "a4f26a9b-0f05-44a3-bb33-093c2e605093",
            "47628d92-4c3b-496b-b0e3-8c21cadea01b",
            "eca936df-7421-455d-81aa-ffa5ce73718c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 30000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}